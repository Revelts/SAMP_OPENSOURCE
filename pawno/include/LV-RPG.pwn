																																															/*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*       SERVER NAME: Las Venturas Role Playing Game Server                                                                                  *
*                                                                                                                                           *
*       SERVER VERSION: LV : RPG v0.5.4                                                                                                     *
*                                                                                                                                           *
*       SERVER DEVELOPER: Max☆[光音]                                                                                                       *
*                                                                                                                                           *
*                                                                                                                                           *
*                                                                                                                                           *
*                                                                                                                                           *
*                                                                                                                                           *
*       INFORMATION: 모드 완성율 : 100 % [100 % 이후의 추가 내용]                                                                           *
*                    1 . 팩션 차량을 추가했습니다.                                                                                          *
*		             2 . [Admin] "/어드민차"명령어를 추가 하였습니다.                                                                       *
*					 3 . [Object] "카지노"오브젝트가 추가 되었습니다.                                                                       *
*					 4 . [User] 도박게임을 할수 있게 "특정장소[릴리 도박장]"에서 F를 누르면 카지노게임을 즐길수 있게 했습니다.              *
*					 5 . [Object] "뉴 라스벤츄라"오브젝트가 추가 되었습니다.                                                                *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *                                           */
// --------------------------------------------------------------------------Include---------------------------------------------------------------------------------------------------
#include <a_samp>
#include <Dini>
#include <gameinfo>
#include <utils>
#include <morphinc>
#include <veh>
#include <streamer>
#include <audio>

#define SCRIPT_VERSION "LV:RPG V 0.5.4"
#define PASSSERVER	""
#define PASSWORD ""
#define SERVER1	"Las Venturas Role Playing Game Server Test"
#define SERVER2	"라스 벤츄라 롤 플레잉 게임 서버 Test"
#define MAPNAME2 "Las Venturas"
#define MAPNAME1 "LV:RPG"
#define WEBSITE	""

#define Anim(%1) ApplyAnimation(%1,1)
#define HackWeapon GetPW(playerid)==9||GetPW(playerid)==26||GetPW(playerid)==33||GetPW(playerid)==37||GetPW(playerid)==38||GetPW(playerid)==42||GetPW(playerid)==35||GetPW(playerid)==36
#define GivePW GivePlayerWeapon
#define SetPW SetPlayerWeapon
#define GetPW GetPlayerWeapon
#define AP	for(new i = 0; i < M_P; i++)

#define MIN_VALVE           9
#define MAX_VALVE           700
#define DELETE_VELOCITY     1.0

#define M_P 200
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1

#define MSGBOX_NONE 1000
#define MSGBOX_Gam 7100
#define MSGBOX_SKEY 7101

#define DIALOG_EVENT	10001
#define MSGBOX_1_EVENT  10002
#define INTUT_PLAYERID  10003
#define MSGBOX_1_SEVENT 10004
#define MSGBOX_1_GIVE 	10005

#define DIALOG_1 2000
#define DIALOG_2 3000
#define DIALOG_3 4000
#define DIALOG_4 10000
#define DIALOG_5 11000
#define DIALOG_7 13000
#define DIALOG_9 15000
#define DIALOG_10 16000
#define DIALOG_11 17000
#define DIALOG_12 18000
#define DIALOG_14 22000
#define DIALOG_15 1000
#define DIALOG_16 6000
#define DIALOG_17 7000
#define DIALOG_18 8000
#define DIALOG_19 9000
#define DIALOG_25       27000
#define DIALOG_TP       11
#define DIALOG_27

#define REGMONEY 0
#define TUTM20
#define MAX_RBS 35

#define JobCool_4 30 // 트럭 쿨타임
#define JobCool_6 30 // 수금 쿨타임
#define JobCool_2 30 // 피자배달부쿨타임
#define JobCool_1 30 // 청소부 쿨타임



#define LeMem(%1,%2) if(PlayerInfo[%1][pMember]==%2||PlayerInfo[%1][pLeader]==%2)

#define PremiumMny 500// 프리미엄 돈
#define REGMONEY 0
#define TUTMONEY 20000//초기자금
#define JobMoney_5 500
#define JobMoney_1 500
#define JobMoney_2 500
#define JobMoney_4 500
#define JobMoney_6 500
#define JobMoney_7 ammount*50+random(1)
#define JobMoney_8 2

#define RESPAWN_DELAY -1

#define TEAM_HIT_COLOR 0xFFFFFF00
#define COLOR_CMD 0xDDDD2357
#define COLOR_GREEN 0x33AA33AA

#define AP	for(new i = 0; i < M_P; i++)
#define PI(%1,%2)  PlayerInfo[%1][%2]

new bool:ONOFF[MAX_PLAYERS] = false,Limit[MAX_PLAYERS];


new zstar9;//LV 꼉찰써문

new HavingBall[MAX_PLAYERS];
new Anim[MAX_PLAYERS];
new Ball;
new BallStatus;
new Baller;
new ShootingBall;
new BallBounce;
new Bstart[MAX_PLAYERS];
new bool:SaveTurnOn[MAX_PLAYERS];
new PayType[MAX_PLAYERS];
new PayPlayer[MAX_PLAYERS];
new Cost[MAX_PLAYERS];
new EML[MAX_VEHICLES]=0;

enum rInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new Roadblocks[MAX_RBS][rInfo];

new AtSetting[M_P];
new GwanggoCool;
new Speaking=0;
new Richman;
new Richman1;
new Flint;
new Flint1;
new lv;
new lv1;
new restart=false;
new Text3D:BS[MAX_VEHICLES];
new Text3D:PlayerLabel1[M_P];
new bool:PCar[M_P];
new PShotgun[M_P];
new ChurchGiveMoney[MAX_PLAYERS];
#define BLINK_RATE  	400
#define PFLASH_RATE     300
#define LIGHT_KEY		KEY_SUBMISSION
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))


#define GREEN 			0x21DD00FF
#define RED 			0xE60000FF
#define YELLOW 			0xFFFF00FF
#define ORANGE 			0xF97804FF
#define LIGHTRED 		0xFF8080FF
#define LIGHTBLUE 		0x00C2ECFF
#define PURPLE 			0xB360FDFF
#define BLUE 			0x1229FAFF
#define LIGHTGREEN 		0x38FF06FF
#define DARKPINK 		0xE100E1FF
#define DARKGREEN 		0x008040FF
#define ANNOUNCEMENT 	0x6AF7E1FF
#define GREY 			0xCECECEFF
#define PINK 			0xD52DFFFF
#define DARKGREY    	0x626262FF
#define AQUAGREEN   	0x03D687FF`
#define WHITE 			0xFFFFFFFF

new LUnFreeze;
#define PLAYERS 200

#define VehicleMaxSpeed  5000000

#define TextBox         true
#define TextTopLines    true
#define TextSideLines   false

#define BoxColor         0xffffffff
#define SideLinesColor   0xffffffff
#define TopLinesColor    0xffffffff
#define CategoriesColor  "~b~"
#define MPH_KPH_Color    "~g~"

new ToggleSetting[MAX_PLAYERS];

#define MAX_AUDIOS 40
#define MAX_AUDIOSRADI 55
#define SET_BOOMBOX 1111
#define SET_BOOMBOX2 1112


forward AudioTP(playerid,targetid,num,vol);
forward AudioTPC(playerid,targetid);
forward LoadAudios();

new Audiosee[MAX_AUDIOS][2048];
new Audiomusic[PLAYERS];
new Audioonf[PLAYERS];
new Audioofn[PLAYERS];
new Audioofnid[PLAYERS];
new Audioobj[PLAYERS];
new Audiosec[PLAYERS];
new Audiosece[PLAYERS];
new Audiogo[PLAYERS];
new Float:AudioX[PLAYERS], Float:AudioY[PLAYERS], Float:AudioZ[PLAYERS];

new lstring[256];
new lstr[256];
enum ReadPosition{Float:ReadX,Float:ReadY,Float:ReadZ
}
new LuX_ReadPlayerPosition[PLAYERS][ReadPosition];
new Float:VehPosX[MAX_VEHICLES], Float:VehPosY[MAX_VEHICLES], Float:VehPosZ[MAX_VEHICLES];
new Text:Lmph[M_P];
new Text:LFunc[M_P];
new LuX_SpeedoMeter[M_P];
forward LuX_SpeedoMeterUp();
forward LuX_UnFreezeCar(playerid);
new LVehiclesName[][] =
{
   "Landstalker",
   "Bravura",
   "Bufallo",
   "Linerunner",
   "Pereniel",
   "Sentinel",
   "Dumper",
   "Firetruck",
   "Trashmaster",
   "Stretch",
   "Manana",
   "Infernus",
   "Voodoo",
   "Pony",
   "Mule",
   "Cheetah",
   "Ambulance",
   "Leviathan",
   "Moonbeam",
   "Esperanto",
   "Taxi",
   "Washington",
   "Bobcat",
   "Mr Whoopee",
   "BF Injection",
   "Hunter",
   "Premier",
   "Enforcer",
   "Securicar",
   "Banshee",
   "Predator",
   "Bus",
   "Rhino",
   "Barracks",
   "Hotknife",
   "Trailer",
   "Previon",
   "Coach",
   "Cabbie",
   "Stallion",
   "Rumpo",
   "RC Bandit",
   "Romero",
   "Packer",
   "Monster Truck",
   "Admiral",
   "Squalo",
   "Seasparrow",
   "Pizzaboy",
   "Tram",
   "Trailer",
   "Turismo",
   "Speeder",
   "Reefer",
   "Tropic",
   "Flatbed",
   "Yankee",
   "Caddy",
   "Solair",
   "Berkley's RC Van",
   "Skimmer",
   "PCJ-600",
   "Faggio",
   "Freeway",
   "RC Baron",
   "RC Raider",
   "Glendale",
   "Oceanic",
   "Sanchez",
   "Sparrow",
   "Patriot",
   "Quad",
   "Coastguard",
   "Dinghy",
   "Hermes",
   "Sabre",
   "Rustler",
   "ZR-350",
   "Walton",
   "Regina",
   "Comet",
   "BMX",
   "Burrito",
   "Camper",
   "Marquis",
   "Baggage",
   "Dozer",
   "Maverick",
   "News Chopper",
   "Rancher",
   "FBI Rancher",
   "Virgo",
   "Greenwood",
   "Jetmax",
   "Hotring",
   "Sandking",
   "Blista Compact",
   "Police Maverick",
   "Boxville",
   "Benson",
   "Mesa",
   "RC Goblin",
   "Hotring Racer",
   "Hotring Racer",
   "Bloodring Banger",
   "Rancher",
   "Super GT",
   "Elegant",
   "Journey",
   "Bike",
   "Mountain Bike",
   "Beagle",
   "Cropdust",
   "Stunt",
   "Tanker",
   "RoadTrain",
   "Nebula",
   "Majestic",
   "Buccaneer",
   "Shamal",
   "Hydra",
   "FCR-900",
   "NRG-500",
   "HPV1000",
   "Cement Truck",
   "Tow Truck",
   "Fortune",
   "Cadrona",
   "FBI Truck",
   "Willard",
   "Forklift",
   "Tractor",
   "Combine",
   "Feltzer",
   "Remington",
   "Slamvan",
   "Blade",
   "Freight",
   "Streak",
   "Vortex",
   "Vincent",
   "Bullet",
   "Clover",
   "Sadler",
   "Firetruck",
   "Hustler",
   "Intruder",
   "Primo",
   "Cargobob",
   "Tampa",
   "Sunrise",
   "Merit",
   "Utility",
   "Nevada",
   "Yosemite",
   "Windsor",
   "Monster Truck",
   "Monster Truck",
   "Uranus",
   "Jester",
   "Sultan",
   "Stratum",
   "Elegy",
   "Raindance",
   "RC Tiger",
   "Flash",
   "Tahoma",
   "Savanna",
   "Bandito",
   "Freight",
   "Trailer",
   "Kart",
   "Mower",
   "Duneride",
   "Sweeper",
   "Broadway",
   "Tornado",
   "AT-400",
   "DFT-30",
   "Huntley",
   "Stafford",
   "BF-400",
   "Newsvan",
   "Tug",
   "Trailer",
   "Emperor",
   "Wayfarer",
   "Euros",
   "Hotdog",
   "Club",
   "Trailer",
   "Trailer",
   "Andromada",
   "Dodo",
   "RC Cam",
   "Launch",
   "Police Car (LS)",
   "Police Car (SF)",
   "Police Car (LV)",
   "Police Ranger",
   "Picador",
   "S.W.A.T. Van",
   "Alpha",
   "Phoenix",
   "Glendale",
   "Sadler",
   "Luggage Trailer",
   "Luggage Trailer",
   "Stair Trailer",
   "Boxville",
   "Farm Plow",
   "Utility Trailer"
};


#define MAX_HVCAR 8
#define MAX_TRUNKS 10
enum vinfo
{
	  vModel,
	  Float:vPark_x,
	  Float:vPark_y,
	  Float:vPark_z,
	  Float:vPark_r,
   	  Float:vHP,
	  vVir,
	  vLock,
	  vAlarm,
	  vAlarmOff,
	  vGas,
	  vColor1,
	  vColor2,
	  vFaction,
	  vPaintJob,
	  vTowed,
	  vTune[17],
	  vSign[128],
	  vOwner[24],
	  vOwnerPnumber,
	  vTrunkType[MAX_TRUNKS],
	  vTrunk[MAX_TRUNKS],
	  vTrunk2[MAX_TRUNKS],
	  vWindow,
	  vRentTime,
	  vRentAble,
	  vTrunkO,
	  vPlate[128]
}
new VehicleInfo[MAX_VEHICLES][vinfo];

new ReTurnJobCar[MAX_VEHICLES]=0;

new Upmoo[M_P];

new allowedcar[4][100];
new allowedprice[4][100];
new PVPlate[M_P][MAX_HVCAR][128];
new PVSign[M_P][MAX_HVCAR][128];
new PVTowed[M_P][MAX_HVCAR];
new PlayerVeh[M_P][MAX_HVCAR];
new UsingCP[M_P];
new CarSeller[M_P];
new CarSellerSlot[M_P];
new CarSellerPrice[M_P];

new QandATime[M_P];
new AdminTime[M_P];
new OllTime[M_P];

enum cInfo
{
	bool:cStarted,
	cGas,
	bool:cWindows,
	bool:cQhsspt,
	bool:cTrunk,
	bool:cBisang,
	bool:cLights,
}
new CarInfo[MAX_VEHICLES][cInfo];

enum hInfo
{
	hCreated,
	hNum,
	hPrice,
	hOwned,
	hName[60],
	hOwner[MAX_PLAYER_NAME],
	Float:hEnterX,
	Float:hEnterY,
	Float:hEnterZ,
	hEnterI,
	hEnterW,
	Float:hExitX,
	Float:hExitY,
	Float:hExitZ,
	hExitI,
	hExitW,
	hRent,
	hRentPrice,
	hBank,
	hLocked,
	hType,
	hPickupid,
	hNumberKey,
	hPass,
	Float:hKeyPos[3],
};
new WaittingTime[M_P];
new Mine[M_P];
new CPNT[M_P];
#define MAX_BUILDING 300 //집 최대수

new BuildingInfo[MAX_BUILDING][hInfo];
new CreatedHouse[M_P];
new Created[M_P];
new Float:HousePos[M_P][3];
new Hopping[M_P];
new HouseInt[M_P];
new keynum=0;
new Float:HouseInteriorPos[61][3] ={
	{2468.7236,-1698.1672,1013.5078},
	{2496.0806,-1692.5812,1014.7422},
	{2233.8389,-1114.9305,1050.8828},
	{2196.1648,-1204.4463,1049.0234},
	{2317.7188,-1026.3927,1050.2178},
	{2259.9954,-1135.8540,1050.632},
	{2365.2744,-1134.8790,1050.8750},
	{2282.9421,-1140.0421,1050.8984},
	{2217.6025,-1076.2218,1050.4844},
	{318.5403,1115.1105,1083.8828},
	{235.3431,1187.4790,1080.2578},
	{225.9062,1240.0421,1082.1406},
	{223.2450,1287.2437,1082.1406},
	{226.5544,1114.2938,1080.9943},
	{295.1541,1472.8845,1080.2578},
	{261.0198,1284.5210,1080.2578},
	{24.1533,1340.7000,1084.3750},
	{-260.7769,1456.7101,1084.3672},
	{22.8077,1403.7334,1084.4297},
	{140.1460,1366.8607,1083.8594},
	{234.2171,1064.3773,1084.2113},
	{-68.8021,1351.6213,1080.2109},
	{-42.5011,1412.3208,1084.4297},
	{83.0737,1322.8090,1083.8662},
	{260.7617,1237.7313,1084.2578},
	{243.9381,305.0086,999.1484},
	{346.9213,310.0163,999.1557},
	{974.7679,-8.5753,1001.1484},
	{1212.0952,-26.2112,1000.9531},
	{1204.8811,-13.4191,1000.9219},
	{493.4502,-24.3571,1000.6797},
	{459.3672,-88.5179,999.5547},
	{-2636.7754,1403.1539,906.4609},
	{-228.9654,1401.3455,27.7656},
	{322.1873,302.6596,999.1484},
	{411.5964,-23.1581,1001.8047},
	{204.0908,-168.8524,1000.5234},
	{412.0302,-54.4339,1001.8984},
	{-2026.9966,-103.6112,1035.1796},
	{965.0280,2159.8342,1011.0303},
	{-204.4996,-27.3373,1002.2734},
	{266.4994,304.8414,999.1484},
	{2807.4636,-1174.7557,1025.5703},
	{-795.0168,489.3908,1376.1953},
	{225.630997,  1022.479980, 1084.069946},
	{328.493988,  1480.589966, 1084.449951},
	{385.803986,  1471.769897, 1080.209961},
	{375.971985,  1417.269897, 1081.409912},
	{490.810974,  1401.489990, 1080.339966},
	{447.734985,  1400.439941, 1084.339966},
	{221.666992,  1143.389893, 1082.679932},
	{291.282990,  310.031982, 999.154968},
	{302.181000,  300.722992, 999.231995},
	{346.870025,  309.259033, 999.155700},
	{1263.079956,  -785.308960, 1091.959961},
	{2526.459961,  -1679.089966, 1015.500000},
	{2543.659912,  -1303.629883, 1025.069946},
	{744.542969,  1437.669922, 1102.739990},
	{964.106995,  -53.205498, 1001.179993},
	{2350.339844,  -1181.649902, 1028.000000},
	{2216.339844,  -1150.509888, 1025.799927}
};
new HouseInteriorInt[61]={
	2,	3,	5,	6,	9,	10,
	8,	11,	1,	5,	3,	2,
	1,	5,	15,	4,	10,	4,
	5,	5,	6,	6,	8,  9,
	9,	1,	6,	3,  3,	2,
	17, 4,	3,  18, 5,  2,
	14, 12, 3,  1,  16,
	2,  8,  1,  7,	15,	15,
	15,	2,  2,	4,  3,	4,
	6,	5,	1,	2,	6,	3,
	5,	15
};
enum ContractInfo
{
	ctName[MAX_PLAYER_NAME],
	ctTarget[MAX_PLAYER_NAME],
	ctPrice,
	ctReason[256],
	ctID
}
new Contract[11][ContractInfo];
new HouseNumber[M_P];
#define NUMBERKEY 8561
#define NUMBERKEY_2 8562

#define MAX_ZONE_NAME 38

enum SAZONE_MAIN
{
	SAZONE_NAME[38],
Float:SAZONE_AREA[6]
};

static const gSANZones[][SAZONE_MAIN] = {
	{"The Big Ear, Bone County",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada, Bone County",                  {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine, Whetstone",	                    {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste, Bone County",                 {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club, San Fierro",    		    {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club, San Fierro",        		{-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club, San Fierro",         	{-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club, San Fierro",         	{-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club, San Fierro",         	{-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club, San Fierro",         	{-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond, Whetstone",               		{-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point, San Fierro",               	{-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside, Tierra Robada",                     	{-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina, Tierra Robada",              	{-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill, Flint County",                 	{-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield, Las Venturas",                  	{964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield, Las Venturas",                  	{964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel, Las Venturas",           	{1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel, Las Venturas",           	{1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section, Las Venturas",          	{1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section, Las Venturas",          	{1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section, Las Venturas",          	{1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section, Las Venturas",          	{1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry, Red County",                   	{104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry, Red County",                   	{19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres, Red County",             	{-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace, Las Venturas",           	{2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace, Las Venturas",           	{2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights, San Fierro",              	{-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown, San Fierro",                   	{-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall, San Fierro",                   	{-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot, Las Venturas",                  	{2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce, Las Venturas",                    	{1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce, Las Venturas",                    	{1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce, Las Venturas",                    	{1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce, Las Venturas",                    	{1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce, Las Venturas",                    	{1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce, Las Venturas",                    	{1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center, Las Venturas",           	{1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center, Las Venturas",           	{1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station, San Fierro",           	{-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek, Las Venturas",                       	{2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore, Red County",                   	{580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty, San Fierro",                     	{-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty, San Fierro",                     	{-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown, San Fierro",                    	{-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown, San Fierro",                    	{-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown, San Fierro",                   	 	{-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown, San Fierro",                    	{-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown, San Fierro",            	        {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown, San Fierro",            	        {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown, Las Venturas",       	 				{1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown, Las Venturas",         				{1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown, Las Venturas",         				{1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown, Las Venturas",         				{1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown, Las Venturas",         				{1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown, Las Venturas",         				{1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown, Las Venturas",         				{1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown, Las Venturas",         				{1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown, Las Venturas",         				{1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach, Las Venturas",                  	{2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach, Las Venturas",                  	{2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach, Las Venturas",                  	{2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach, Las Venturas",                  	{2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Las Venturas",             				{2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Las Venturas",             				{2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Las Venturas",             				{2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Las Venturas",             				{2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Las Venturas",             				{2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Las Venturas",             				{2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Las Venturas",             				{2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin, San Fierro",                	{-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin, San Fierro",                	{-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport, San Fierro",          	{-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport, San Fierro",          	{-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical, San Fierro",         	{-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical, San Fierro",         	{-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo, Bony County",       		{-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo, Bony County",         	{-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo, Bony County",      	   	{-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona, Las Venturas",                   	{1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona, Las Venturas",                   	{1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados, Tierra Robada",               	{-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East, San Fierro",              	{-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East, San Fierro",              	{-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East, San Fierro",              	{-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North, San Fierro",             	{-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North, San Fierro",             	{-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North, San Fierro",             	{-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree, Red County",                 	{-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge, Red County",               	{434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge, Red County",                  	{508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial, San Fierro",                   	{-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon, Red County",             	{1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection, Flint County",          	{-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range, Flint County",                 	{-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson, Tierra Robada",                 	{-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley, San Fierro",               	{-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley, San Fierro",               	{-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley, San Fierro",               	{-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley, San Fierro",               	{-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge, Red County",            	{2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge, San Fierro",                 	{-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge, San Fierro",                 	{-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton, Las Venturas",                      	{2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton, Las Venturas",                      	{2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia, San Fierro",                      	{-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia, San Fierro",                      	{-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge, San Fierro",               	{-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge, San Fierro",               	{-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge, San Fierro",               	{-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park, Las Venturas",                   	{1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park, Las Venturas",                   	{1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park, Las Venturas",                   	{1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms, Bone County",                 	{176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College, Las Venturas",          	{964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College, Las Venturas",          	{964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns, Red County",               	{603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point, Red County",            	{2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway, Las Venturas",          	{1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury, San Fierro",                    	{-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm, San Fierro",                	{967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry, Las Venturas",               	{337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood, Las Venturas",                    	{1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood, Las Venturas",                    	{1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood, Las Venturas",                    	{1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood, Las Venturas",                    	{1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood, Las Venturas",                    	{2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood, Las Venturas",                    	{1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson, Las Venturas",                   	{1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson, Las Venturas",                   	{2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson, Las Venturas",                   	{2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson, Las Venturas",                   	{2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson, Las Venturas",                   	{2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson, Las Venturas",                   	{2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North, Las Venturas",        	{2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North, Las Venturas",        	{2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North, Las Venturas",        	{2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South, Las Venturas",        	{1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South, Las Venturas",        	{2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West, Las Venturas",         	{1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West, Las Venturas",         	{1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill, San Fierro",                	{-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow, San Fierro",              	{-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels, Las Venturas",         	{2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge, San Fierro",              	{-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge, San Fierro",              	{-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge, San Fierro",              	{-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's, San Fierro",                      	{-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's, San Fierro",                      	{-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's, San Fierro",                      	{-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot, Las Venturas",          	{1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot, Las Venturas",          	{1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot, Las Venturas",           	{1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot, Las Venturas",           	{1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot, Las Venturas",           	{1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas, Tierra Robada",               	{-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas, Tierra Robada",                  	{-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas, Las Venturas",                 	{1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas, Las Venturas",                 	{2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas, Las Venturas",                 	{2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas, Las Venturas",                 	{2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas, Las Venturas",                 	{2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas, Las Venturas",                 	{2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas, Las Venturas",                 	{2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas, Tierra Robada",               	{-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport, Las Venturas",        	{1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport, Las Venturas",        	{1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport, Las Venturas",        	{1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport, Las Venturas",        	{1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel, Las Venturas",             	{1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow, Las Venturas",                	{-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Mountain",                	                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn, Bone County",              	{-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side, Las Venturas",                 	{2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station, Las Venturas",              	{2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station, Las Venturas",              	{2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Litse Mexico, Las Venturas",               	{1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico, Las Venturas",               	{1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores, San Fierro",                  	{2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores, San Fierro",                  	{2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International, Las Venturas",            	{1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International, Las Venturas",            	{1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International, Las Venturas",            	{1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International, Las Venturas",            	{1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International, Las Venturas",            	{1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International, Las Venturas",            	{2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina, Las Venturas",                      	{647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina, Las Venturas",                      	{647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina, Las Venturas",                      	{807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market, Las Venturas",                      	{787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market, Las Venturas",                      	{952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market, Las Venturas",                      	{1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market, Las Venturas",                      	{926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station, Las Venturas",              	{787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge, Red County",               	{-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill, San Fierro",             	{-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery, Red County",                  	{1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery, Red County",                  	{1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section, Red County",     			{1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section, Red County",     			{1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland, Las Venturas",                  	{1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland, Las Venturas",                  	{1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland, Las Venturas",                  	{1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland, Las Venturas",                  	{1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland, Las Venturas",                  	{1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland, Las Venturas",                  	{1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland, Las Venturas",                  	{768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland, Las Venturas",                  	{687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland, Las Venturas",                  	{737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland, Las Venturas",                  	{1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland, Las Venturas",                  	{952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland, Las Venturas",                  	{911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland, Las Venturas",                  	{861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section, Las Venturas",     			{1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock, Red County",                  	{2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks, Las Venturas",                 	{2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks, Las Venturas",                 	{2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks, Las Venturas",                 	{2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks, Las Venturas",                 	{2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks, Las Venturas",                 	{2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks, Las Venturas",                 	{2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks, Las Venturas",                 	{2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats, San Fierro",                 	{-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats, San Fierro",                 	{-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats, San Fierro",                 	{-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs, Bone County",              	{338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip, Las Venturas",          	{2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades, San Fierro",                   	{-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek, Red County",              	{2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso, San Fierro",                    	{-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square, Las Venturas",             	{1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim, Las Venturas",                     	{2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim, Las Venturas",                     	{2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection, Las Venturas",         	{1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants, Las Venturas",      	{1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville, Las Venturas",           	{2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine, Las Venturas",                	{1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine, Las Venturas",                	{1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine, Las Venturas",                	{1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine, Las Venturas",                	{1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens,  San Fierro",                      	{-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens,  San Fierro",                      	{-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens,  San Fierro",                      	{-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate, Las Venturas",        	{1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East, Las Venturas",               	{1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East, Las Venturas",               	{1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East, Las Venturas",               	{1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West, Las Venturas",               	{1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West, Las Venturas",               	{1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West, Las Venturas",               	{1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West, Las Venturas",               	{1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom, Bone County",                 	{-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman, Las Venturas",                     	{647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman, Las Venturas",                     	{647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman, Las Venturas",                     	{225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman, Las Venturas",                     	{225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman, Las Venturas",                     	{72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman, Las Venturas",                     	{72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman, Las Venturas",                     	{321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman, Las Venturas",                     	{321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman, Las Venturas",                     	{321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman, Las Venturas",                     	{321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section, Tierra Robada",         		{-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante, Las Venturas",              	{2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante, Las Venturas",              	{2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East, Las Venturas",              	{2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West, Las Venturas",              	{1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West, Las Venturas",              	{2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo, Las Venturas",                       	{72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo, Las Venturas",                       	{72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo, Las Venturas",                       	{225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo, Las Venturas",                       	{225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo, Las Venturas",                       	{334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo, Las Venturas",                       	{312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo, Las Venturas",                       	{422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo, Las Venturas",                       	{558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo, Las Venturas",                       	{466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo, Las Venturas",                       	{422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo, Las Venturas",                       	{466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo, Las Venturas",                       	{334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino, Las Venturas",                	{2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           				{2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora, San Fierro",                 	{-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach, Las Venturas",           	{342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach, Las Venturas",           	{72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin, Whetstone",                 		{-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks, Whetstone",                		{-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks, Whetstone",                		{-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards, Las Venturas",           	{2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed, Las Venturas",                    	{2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino, Las Venturas",             	{2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino, Las Venturas",             	{2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino, Las Venturas",             	{2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple, Las Venturas",                      	{1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple, Las Venturas",                      	{1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple, Las Venturas",                      	{1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple, Las Venturas",                      	{952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple, Las Venturas",                      	{1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple, Las Venturas",                      	{1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe, Las Venturas",             	{2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket, Las Venturas",          	{2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle, Las Venturas",            	{2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm, Flint County",                    	{-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino, Las Venturas",         	{1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller, Las Venturas",             	{1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span, Las Venturas",               	{1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon, Whetstone",              		{-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan, Red County",               	{1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam, Las Venturas",             	{-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip, Las Venturas",                   	{2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip, Las Venturas",                   	{2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip, Las Venturas",                   	{2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip, Las Venturas",                   	{2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage, Las Venturas",                  	{1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage, Las Venturas",                  	{1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station, Las Venturas",               	{1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado, Las Venturas",              	{-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs, Las Venturas",              	{930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs, Las Venturas",              	{1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs, Las Venturas",              	{1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows, Bone County",             	{37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach, Las Venturas",                	{647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach, Las Venturas",                	{930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach, Las Venturas",                	{851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach, Las Venturas",                	{1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach, Las Venturas",                	{1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood, Las Venturas",                    	{787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood, Las Venturas",                    	{787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood, Las Venturas",                    	{647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood, Las Venturas",                    	{647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates, Las Venturas",           	{883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates, Las Venturas",           	{1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield, Las Venturas",                 	{1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield, Las Venturas",                 	{2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield, Las Venturas",                 	{2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield, Las Venturas",                 	{2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield, Las Venturas",                 	{2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield, Las Venturas",                 	{2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield, Las Venturas",                 	{2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station, Las Venturas",         	{1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},

	{"Las Venturas",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

static const gSAZones[][SAZONE_MAIN] = {

	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section",          {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section",          {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section",          {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section",          {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Las Venturas",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Las Venturas",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Las Venturas",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Las Venturas",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Las Venturas",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Las Venturas",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Las Venturas",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Las Venturas",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Las Venturas",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Las Venturas",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Las Venturas",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Las Venturas",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Las Venturas",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Las Venturas",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Las Venturas",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Las Venturas",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical",         {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical",         {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo",         {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo",         {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo",         {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels",         {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Washington",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International",            {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International",            {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International",            {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International",            {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International",            {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International",            {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate",        {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	{"Las Venturas",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
	for(new i = 0; i != sizeof(gSANZones); i++ )
	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
			return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer2DRadarZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
	for(new i = 0; i != sizeof(gSAZones); i++ )
	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
			return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetVehicle2DZone(vehicleid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetVehiclePos(vehicleid, x22, y22, z22);
	for(new i = 0; i != sizeof(gSANZones); i++ )
	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
			return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x33, Float:y33, Float:z33;
	GetPlayerPos(playerid, x33, y33, z33);
	for(new i = 0; i != sizeof(gSAZones); i++ )
	{
		if(x33 >= gSAZones[i][SANZONE_AREA][0] && x33 <= gSAZones[i][SANZONE_AREA][3] && y33 >= gSANZones[i][SAZONE_AREA][1] && y33 <= gSANZones[i][SAZONE_AREA][4] && z33 >= gSAZones[i][SANZONE_AREA][2] && z33 <= gSANZones[i][SAZONE_AREA][5])
		{
			return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock IsPlayerInZone(playerid, zone[])
{
	new TmpZone[MAX_ZONE_NAME];
	GetPlayer3DZone(playerid, TmpZone, sizeof(TmpZone));
	for(new i = 0; i != sizeof(gSANZones); i++)
	{
		if(strfind(TmpZone, zone, true) != -1)
			return 1;
	}
	return 0;
}
strtok2(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[64];
	while ((index < length) &&((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

static gTeam[M_P];
#define MAX_ENTERMESSAGE 10
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define KEY_ENTER (16)
#define SCM SendClientMessage
#define SCMToAll SendClientMessageToAll
#define MAX_STRING 255
#define CHECKPOINT_NONE 0
#define CHECKPOINT_HOME 12

#define INVALID_TOLL_ID (-1)
#define TollCost (50)
#define MAX_TOLLS (3)
#define RichmanToll (0)
#define FlintToll (1)
#define LVToll (2)

new L_a_TollPerson[MAX_PLAYERS][2];

enum E_TOLLDATA
{
	E_tLocked,
}
new aTolls[MAX_TOLLS][E_TOLLDATA];

#define C_WHITE "{FFFFFF}"
#define C_RED "{CC0033}"
#define C_LBLUE "{00C0FF}"
#define C_GREY "{C3C3C3}"
#define C_YELLOW "{FFFF33}"
#define C_SUC "{99CCFF}"
#define C_ERROR "{B4B5B7}"

#define COLOR_INFO 0xFFFFFFAA
#define COLOR_INFO1 0x9ACD32AA
#define COLOR_SERVER 0xCC6600AA
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_GOLD 0xFFFF40AA
#define COLOR_LIGHTRED 0xFF565DFF
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_WHITE2 0xFFFFFFAA
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define COLOR_ERROR 0xB4B5B7FF
#define COLOR_HINT 0xB4B5B7FF
#define COLOR_SUC 0x99CCFFAA
#define COLOR_ACT 0xC2A2DAAA
#define COLOR_ADMIN 0xF64D69AA
#define COLOR_SUN 0xF64D69AA
#define COLOR_ADMIN1 0xFF8000FF
#define COLOR_YELLOW3 0xFFFF00AA
#define COLOR_RED 0xC94445AA
#define COLOR_BLUE 0x2641FEAA
#define COLOR_NEWS 0xE3BC9EAA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_FLBLUE 0x6495EDAA
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_BROWN 0xB78020F
#define COLOR_ORED 0xFF3366FF
#define TEAM_CYAN_COLOR 0xFF8282AA
#define COLOR_ORANGE 0xF97804FF
#define COLOR_OOC 0xADFF2FAA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE2 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define COLOR_ALLDEPT 0xFF8282AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define COLOR_rhdwl 0xF0F440FF
#define COLOR_djemals 0x11EADAFF
#define COLOR_rhkdrh 0x1EE15EFF

#pragma tabsize 0
#pragma dynamic 99999
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_ORANGE 4
#define TEAM_COR 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10
#define TEAM_ADMIN 11
#define dcmd(%1,%2,%3) if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && (dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
#pragma semicolon 0
#define MAX_TRUNK_SLOTS		(5)
#define MAX_VEHICLE_MODELS	(70)
#define MAX_PLYVEH_RATIO	(20)
#define MAX_VEHICLE_PLATE	(7)
#define FightStyle 99
#define COLOR_LIGHT_BLUE 0x9FB1EEAA

new Zone1;

forward cv(model,Float:cx,Float:cy,Float:cz,Float:ca,co1,co2,string[],stco,Float:dist);
forward ChangePlayerNameTag(playerid);

forward LuX_SpeedoMeterUp();
forward LuX_UnFreezeCar(playerid);

forward PoliceObjectCorrectly(playerid, object);
forward AttachWeaponCorrectly(playerid, gun);
forward AttachObjectCorrectly(playerid, object);

forward IsCop(playerid);
forward IsCop2(playerid);
forward cpfur(playerid);
forward wleh(playerid);
forward CheckStatus();
forward diedie1(playerid);
forward beepcool(playerid);
forward cjdthdlf(playerid);
forward ckdnlcl(playerid);
forward dlqwkdxkdlajf(playerid);
forward ABroadEarCast(color,const string[],level);
forward beepbeep(playerid, Float:xxx, Float:yyy, Float:zzz, Float:qjadnl, sound, number);
forward ATimer();
forward taxiClose();
forward CheckGas();
forward SaveTrunk();
forward Unfreezed(playerid);
forward IsAArmy2(playerid);
forward wnrdma2(playerid);
forward Movingtime(playerid);
forward OpenPoliceDoor(playerid);
forward PoliceDoor(playerid);
forward OpenPoliceDoor1(playerid);
forward PoliceDoor1(playerid);
forward IsABmx(vehicleid);
forward IsAeogud(vehicleid);
forward RefreshMenuHeader(playerid,Menu:menu,text[]);
forward OnPlayerChangepassword(playerid, password[]);
forward NoticePlayer();
forward MMC1();
forward MMC2();
forward MMC3();
forward MMC4();
forward eo1(playerid);
forward eo2(playerid);
forward eo3(playerid);
forward eo4(playerid);
forward eo5(playerid);
forward eo6(playerid);
forward eogud1(playerid);
forward eogud2(playerid);
forward eogud3(playerid);
forward eogud4(playerid);
forward eogud5(playerid);
forward eogud6(playerid);
forward eogud7(playerid);
forward tlgja1(playerid);
forward tlgja2(playerid);
forward tlgja3(playerid);
forward tlgja4(playerid);
forward tlgja5(playerid);
forward tlgja6(playerid);
forward tlgja7(playerid);
forward tlgja8(playerid);
forward tlgja9(playerid);
forward tlgja10(playerid);
forward SafeGivePlayerWeapon(plyid, weaponid, ammo);
forward tnrmagkwk1(playerid);
forward tnrmagkwk2(playerid);
forward tnrmagkwk3(playerid);
forward tnrmagkwk4(playerid);
forward tnrmagkwk5(playerid);
forward tnrmagkwk6(playerid);
forward cjdtheasy1(playerid);
forward cjdtheasy2(playerid);
forward cjdtheasy3(playerid);
forward cjdtheasy4(playerid);
forward cjdtheasy5(playerid);
forward cjdtheasy6(playerid);
forward cjdtheasy7(playerid);
forward cjdtheasy8(playerid);
forward cjdthhard1(playerid);
forward cjdthhard2(playerid);
forward cjdthhard3(playerid);
forward cjdthhard4(playerid);
forward cjdthhard5(playerid);
forward cjdthhard6(playerid);
forward cjdthhard7(playerid);
forward cjdthhard8(playerid);
forward cjdthhard9(playerid);
forward cjdthhard10(playerid);
forward cjdthhard11(playerid);
forward cjdthhard12(playerid);
forward cjdthhard13(playerid);
forward CheckForWalkingTeleport(playerid);
forward ResetRoadblockTimer();
forward alftnghkrtimer(playerid);
forward RemoveRoadblock(playerid);
forward ARemoveRoadblock(playerid);
forward BackupClear(playerid, calledbytimer);
forward IsAOBike(carid);
forward IsANoWindow(carid);
forward IsANoRadio(carid);
forward GateClose(playerid);
forward Test1Close();
forward Test2Close();
forward Test3Close();
forward glxmaosClose();
forward GateClose4();
forward GateClose5();
forward GateClose6();
forward rnsdlsClose();
forward rnsdls2Close();
forward tjans3Close();
forward tjans4Close();
forward fbi1Close();
forward fbi2Close();
forward fbi3Close();
forward fbi4Close();
forward fbi5Close();
forward FBIONClose();
forward hitmanONClose();
forward Mapia1Close();
forward ryehthansekedktlqkf();
forward elevator1(playerid);
forward elevator2(playerid);
forward LoadWareHouse();
forward SaveWareHouse();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadCK();
forward SaveCK();
forward LoadFamilies();
forward SaveFamilies();
forward LoadTurfs();
forward SaveTurfs();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionSBiz(bizid, money);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtFishPlace(playerid);
forward IsAtAtm(playerid);
forward IsAtMine(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward IsAtHarvest(playerid);
forward SearchingHit(playerid);
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward NewbieTeam2(color,const string[],level);
forward emtchat(color,const string[]);
forward AdminDutyCast(color,const string[]);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward LoadMission(playerid,name[]);
forward SaveMission(playerid,name[]);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward BanLog(string[]);
forward CommandLog(string[]);
forward KickLog(string[]);
forward PayLog(string[]);
forward CKLog(string[]);
forward IsAPizzabike(carid);
forward IsATowcar(carid);
forward IsACopCar(carid);
forward IsAtDealership(playerid);
forward IsAtCarrental(playerid);
forward IsAPlane(vehicleid);
forward IsABoat(vehicleid);
forward IsAHarvest(carid);
forward IsACop(playerid);
forward IsAHit(playerid);
forward IsAPDMember(playerid);
forward IsAMember(playerid);
forward IsAMember3(playerid);
forward IsAMember2(playerid);
forward IsAnInstructor(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward Encrypt(string[]);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerCriminalEx(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward Hacking(playerid,targetid);
forward Showthwlvna(playerid,targetid);
forward ShowStats(playerid,targetid);
forward ShowStats2(playerid,targetid);
forward ShowStats3(playerid,targetid);
forward ShowStats4(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward PlayerUpdate();
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCNEW(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward Jk(playerid,giveplayerid,string[]);
forward RadioNews(color,const string[])
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendTeamMessage(team, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward AddCar(carcoords);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearCK(ck);
forward ClearFamily(family);
forward ClearMarriage(playerid);
forward ClearMarriage2(playerid);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward LockCar(carid);
forward UnLockCar(carid);
forward InitLockDoors(playerid);
forward Fillup();
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward Production();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward SetCamBack(playerid);
forward AddsOn();
forward IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy);
forward SendBusRoute(playerid, eastorwest);
forward IsInBusrouteZone(playerid);
forward CreateFoodMenus();
forward OnPlayerEnterFood(playerid, foodid);
forward OnPlayerExitFood(playerid);
forward ClearChatbox(playerid, lines);
forward Startup(playerid, vehicleid);
forward engine2(playerid);
forward skRtl(playerid);
forward xmfjrqoekf1(playerid);
forward xmfjrqoekf2(playerid);
forward FBION1(playerid);
forward hitmanON1(playerid);
forward djfflrl(playerid);
forward shrdlrl(playerid);
forward dlqwkd(playerid);
forward dlqwkd2(playerid);
forward dlqwkd3(playerid);
forward CheckCarHealth();
forward StartingTheVehicle(playerid);
forward FarmerExit(playerid);
forward DrugFarmerExit(playerid);
forward LoadDrugSystem();
forward SaveDrugSystem();
forward LoadMatsSystem();
forward SaveMatsSystem();
forward SafeResetPlayerMoney(plyid);
forward UpdateWeaponSlots(plyid);
forward BanAdd(bantype, sqlplayerid, ip[], hackamount);
forward UnsetFirstSpawn(playerid);
forward LoadHQLocks();
forward SaveHQLocks();
forward ClearKnock(playerid);
forward DrugEffectGone(playerid);
forward UsingDrugsUnset(playerid);
forward UnsetAfterTutorial(playerid);
forward UnsetCrash(playerid);
forward backtoclothes(playerid);
forward RemovePlayerWeapon(playerid, weaponid);
forward CanDriveThruAgain(playerid);
forward Float:GetDistance(playerid, Float:x, Float:y);
forward TraceLastCall();
forward ReduceTimer(playerid);
forward Countdown();
forward RemoveAD(playerid);
forward RemoveAD2(playerid);
forward RemoveAD3(playerid);
forward npchelp(playerid);
forward tlehCool(playerid);
forward UpmdelayTimer(playerid);
forward TextPickup(model, type, Float:X, Float:Y, Float:Z, Close, message[]);
forward OnPlayerLoseHealth(playerid, Float:lose);

new bool:MovingTimeCheck[M_P];
new bool:PlayerSave[M_P];
new MafiaJail1;
new MafiaJail2;
new Chijae[M_P];
new Vnote[M_P][10];
new Vnoten[M_P][10][128];
new bag_weapon = 0;
new Upmdelay[M_P];
new bool:UnknownPhoneNum[M_P];
new bool:Gongjungnum[M_P];
new bool:ComeUser[M_P];
new bool:SWAT[M_P];
new CoolT[M_P];
new jilmuncool[M_P];
new bool:milsugun=false;
new hit, milsu;
new MMC[4];
new bool:BuyItem[M_P][2];
new bool:GPackage[M_P];
new MCAR[100][2];
new JCAR[100][2];

new OCAR;
new bool:Hide[M_P];
new bool:Fishing[M_P];
new bool:Fishing2[M_P];
new bool:FishingUp[M_P];
new FishingTime[M_P];
new FishingCount[M_P];
new FishingSize[M_P];
new FishingName[M_P];
new Text:HealthBar[M_P];
new Text:ArmourBar[M_P];
new Text:VehHealthBar[M_P];
new Text:VehHealthBox1[M_P];
new Text:VehHealthBox3[M_P];
new Text:VehHealthBox2[M_P];
new Text:GamText[M_P];
new HergiTimer[M_P];
new ShotTime[M_P];
new bandage[M_P];
new Baeyong[M_P];
new Text:foresttext;
new Gamgiyong[M_P];
new Float:ShotPlace[M_P][3];
new Menu:burgermenu, Menu:chickenmenu, Menu:pizzamenu, Menu:donutshop;
new PlayerShoted[M_P];
new beepcoolt[M_P];
new eo[M_P];
new battingmoney[M_P];
new Float:Savelocation[M_P][3];
new glock[M_P];
new beretta[M_P];
new Umju[M_P];
new pTest[M_P];
new Dnumber[M_P];
new Dammo[M_P];
new wnrdma[M_P];
new taxi;
new taxi2;
new HSell[M_P];
new HSellOffer[M_P];
new BSell[M_P];
new BSellOffer[M_P];
new Truck[M_P];
new PlayerIsSending[M_P];
new PlayerIsNogada[M_P];
new PlayerIsNogada2[M_P];
new PlayerIsTruck[M_P];
new cjdtheasy[M_P];
new tnrmagkwk[M_P];
new cjdthhard[M_P];
new FindCP2[MAX_VEHICLES];
new FindCP1[MAX_VEHICLES];
new FindCP[MAX_VEHICLES];
new InviteOffer[M_P];
new InviteGroup[M_P];
new FBION[M_P];
new hitmanON[M_P];
new Float:DeathPlace[M_P][3];
new DieInterior[M_P];
new dkswjs[M_P];
new TuneVeh[M_P];
new Mapia1;
new Test1;
new Test2;
new Test3;
new glxmaos;
new DTCT[M_P];
new tlarl[M_P];
new skrtl[M_P];
new rudckf1;
new ryehans;
new rudckf2;
new rudckf3;
new rudckf4;
new Tazer[M_P];
new Tazered[M_P];
new TazerRes[M_P];
new TazerID[M_P];
new TazerAMMO[M_P];
new fbi1;
new fbi2;
new fbi3;
new fbi4;
new fbi5;
new ccc;
new ddd;
new rnsdls;
new rnsdls2;
new gSpectateType[M_P];
new gSpectateID[M_P];
new bool:Specate[M_P];
new dlqtk3;
new dlqtk4;
new dlqtk5;
new dlqtk6;
new dlqtk11;
new dlqtk12;
new dlqtk13;
new dlqtk16;
new dlqtk20;
new ghxpf;
new GangCar[M_P];
new tactical[M_P];
new newnoooc = 0;
new altusemf[M_P];
new pdgate1;
new pdgate2;
new pdgate3;
new Security = 0;
new CreatedCars[100];
new CreatedCar = 0;
new Tax = 0;
new TaxValue = 0;
new TaxValue2 =0;
new TaxValue3 =0;
new TaxValue4 =0;
new TaxValue5 =0;
new TaxValue6 =0;
new TaxValue7 =0;
new TaxValue8 =0;
new ri = 0;
new fl = 0;
new fbi = 0;
new gnu = 0;
new si = 0;
new emt = 0;
new admin = 0;
new goodnewbie = 0;
new taxxi = 0;
new bangsoso = 0;
new Jackpot = 0;
new HicarBank = 0;
new RoundStarted = 0;
new bool:WhereSpeak[MAX_PLAYERS];
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[M_P];
new Medics = 0;
new MedicCall = 999;
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[M_P];
new cnwjr[M_P];
new cnwjreotkd[M_P];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[M_P];
new TaxiAccepted[M_P];
new BusDrivers = 0;
new BusCall = 999;
new ScriptWeapons[M_P][13];
new ScriptWeaponsUpdated[M_P];
new ConsumingMoney[M_P];
new BusCallTime[M_P];
new BusAccepted[M_P];
new TransportDuty[M_P];
new TransportValue[M_P];
new TransportMoney[M_P];
new TransportTime[M_P];
new TransportCost[M_P];
new TransportDriver[M_P];
new JobDuty[M_P];
new RegistrationStep[M_P];
new MapIconsShown[M_P];
new OnCK[M_P];
new GettingCK[M_P];
new SchoolSpawn[M_P];
new TakingLesson[M_P];
new UsedFind[M_P];
new PlayerOnMission[M_P];
new MissionCheckpoint[M_P];
new WatchingTV[M_P];
new NoFuel[M_P];
new MatsHolding[M_P];
new DivorceOffer[M_P];
new MarriageCeremoney[M_P];
new ProposeOffer[M_P];
new ProposedTo[M_P];
new anwjs[M_P];
new rlqhs1[M_P];
new rlqhs2[M_P];
new rlqhs3[M_P];
new rlqhs4[M_P];
new rlqhs5[M_P];
new rlqhs6[M_P];
new rlqhs7[M_P];
new rlqhs8[M_P];
new rlqhs9[M_P];
new wkaqhr[M_P];
new Microphone[M_P];
new BackupName[M_P][MAX_PLAYER_NAME];
new alftnghkr[M_P];
new gRadio[MAX_PLAYERS];
new GotProposedBy[M_P];
new MarryWitness[M_P];
new MarryWitnessOffer[M_P];
new TicketOffer[M_P];
new TicketMoney[M_P];
new PlayerStoned[M_P];
new PlayerRunning[M_P];
new FishCount[M_P];
new SpawnChange[M_P];
new TutTime[M_P];
new NPCTutoTime[PLAYERS]
new CivilTime[M_P];
new CivilTest[M_P];
new PlayerDrunk[M_P];
new PlayerDrunkTime[M_P];
new PlayerTazeTime[M_P];
new FindTimePoints[M_P];
new FindTime[M_P];
new BoxWaitTime[M_P];
new TestFishes[M_P];
new BoxOffer[M_P];
new CarOffer[M_P];
new CarPrice[M_P];
new CarID[M_P];
new CarCalls[M_P];
new GotHit[M_P];
new GoChase[M_P];
new GetChased[M_P];
new OrderReady[M_P];
new ConnectedToPC[M_P];
new PlayerTied[M_P];
new PlayerCuffed[M_P];
new PlayerCuffedTime[M_P];
new LiveOffer[M_P];
new RadioOffer[M_P];
new TalkingLive[M_P];
new TalkingRadio[M_P];
new PlacedNews[M_P];
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
new SelectChar[M_P];
new SelectCharID[M_P];
new SelectCharPlace[M_P];
new ChosenSkin[M_P];
new GettingJob[M_P];
new GuardOffer[M_P];
new GuardPrice[M_P];
new ApprovedLawyer[M_P];
new CallLawyer[M_P];
new WantLawyer[M_P];
new KickPlayer[M_P];
new Robbed[M_P];
new RobbedTime[M_P];
new CP[M_P];
new MoneyMessage[M_P];
new Condom[M_P];
new tnflOffer[M_P];
new tnflPrice[M_P];
new tnflCar[M_P];
new RepairOffer[M_P];
new RepairPrice[M_P];
new RefillOffer[M_P];
new RefillNeon[MAX_PLAYERS];
new RefillPrice[M_P];
new RefillLiter[M_P];
new RepairCar[M_P];
new DrugOffer[M_P];
new DrugPrice[M_P];
new DrugGram[M_P];
new JailPrice[M_P];
new WantedPoints[M_P];
new WantedLevel[M_P];
new swat[M_P];
new OnDuty[M_P];
new gPlayerCheckpointStatus[M_P];
new gPlayerLogged[M_P];
new gPlayerLogTries[M_P];
new gPlayerSpawned[M_P];
new gActivePlayers[M_P];
new gLastCar[301];
new gOoc[M_P];
new gNew[M_P];
new gNews[M_P];
new gFam[M_P];
new BigEar[M_P];
new Spectate[M_P];
new CellTime[M_P];
new Gongjun[M_P];
new StartTime[M_P];
new HireCar[M_P];
new SafeTime[M_P];
new Specing[M_P];
new HidePM[M_P];
new HidePM2[M_P];
new PhoneOnline[M_P];
new gDice[M_P];
new gGas[M_P];
new gSpeedo[M_P];
new gSpentCash[M_P];
new FirstSpawn[M_P];
new SwitchKey[M_P];
new Fixr[M_P];
new Locator[M_P];
new Mobile[M_P];
new RingTone[M_P];
new CallCost[M_P];
new gPlayerAccount[M_P];
new gPlayerMission[M_P];
new InAFoodPlace[M_P];
new gLastDriver[302];
new gCarLock[265];
new noooc = 0;
new noadmin = 0;
new norhks = 0;
new carselect[15];
new objstore[128];
new cbjstore[128];
new motd[256];
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new dollah = 0;
new realtime = 1;
new wtime = 16;
new callcost = 2;
new realchat = 1;

new levelexp = 4;
new cchargetime = 60;
new txtcost = 5;
new pickups;
new PizzaBoys = 0;
new PizzaCall = 999;
new PizzaCallTime[M_P];
new bPizza[M_P];
new sPizza[M_P];
new rudrh[MAX_PLAYERS];
new SELLCAR1[] = { 100, 110, 120, 130, 110, 120, 130, 110, 120, 130, 110 };
new SELLCAR2[] = { 140, 150, 160, 140, 150, 160, 140, 150, 160, 140, 150 };
new SELLCAR3[] = { 170, 180, 190, 170, 180, 190, 170, 180, 190, 170, 180 };
new SELLCAR4[] = { 200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300 };
new Float:ChangePos[M_P][3];
new ChangeWorld[M_P];
new ChangePos2[M_P][2];
new Float:TelePos[M_P][6];
new roadblocktimer = 0;
new vehicleEntered[M_P][MAX_VEHICLES];
new FarmerVar[M_P];
new FarmerPickup[M_P][2];
new Work[M_P];
new NogadaWork[M_P];
new NogadaWork2[M_P];
new SmugglerWork[M_P];
new SmuggledDrugs[M_P];
new PayDaySecure[M_P];
new KnockedDown[M_P];
new MedicBill[M_P];
new UnidentifedCall[M_P];
new LicenseOffer[M_P];
new LicensePrice[M_P];
new LicenseType[M_P];
new DefaultWeather = 10;
new UsingDrugs[M_P];
new AfterTutorial[M_P];
new BlindFold[M_P];
new PlayerIsSweeping[M_P];
new VehicleRadio[MAX_VEHICLES] = 0;
new AdminDuty[M_P];
new wkaqhrahem[M_P];
new Trytaze[M_P];
new BurgerPickUp[9];
new ChickenPickUp[9];
new IsMenuShowed[M_P] = 0;
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new PlayerNeedsHelp[M_P];
new AdminSpec[M_P];
new UsingSmokeAnim[M_P];
new ReduceTime[M_P];
new Dmdrmqtkdxo[M_P];
new giveDmdrmqtkdxo[M_P];
new PlayerDmdrmq[M_P];
new CreatingGun[M_P];
new CreatingGunAmmo[M_P];
new CreatingGunPrice[M_P];
new IsTakingGun[M_P];

new Navigation[M_P];

new Carbuy[M_P];
new Carvalue[M_P];
new alftlarl;
new gktehrmwkdtk[M_P];
new dkdltmwkdtk[M_P];
new fkauswkdtk[M_P];
new PillOffer[M_P];
new PillPrice[M_P];
new ChangePrice[M_P];
new ChangeColor1[M_P];
new ChangeColor2[M_P];
new ChangeColorOffer[M_P];
new TunePrice[M_P];
new TuneNumber[M_P];
new TuneOffer[M_P];
new BegOffer[M_P];
new BegMoneys[M_P];
new PayOffer[M_P];
new PayMoneys[M_P];
new Text3D:ADWInstall[M_P];
new Text3D:ADWInstall12[M_P];
new Text3D:ADWInstall2[M_P];
new Text3D:ADWInstall22[M_P];
new Text3D:ADWInstall3[M_P];
new Text3D:ADWInstall23[M_P];
new ADInstall[M_P];
new ADInstall2[M_P];
new ADInstall3[M_P];
new rhkdslot1[M_P];
new rhkdslot2[M_P];
new rhkdslot3[M_P];
new rhkdrhvks[M_P];
new Float:CarHealth[M_P];
new Float:Ccndehf[M_P];
new qkfl[M_P];
new RentTimer[M_P];
new dudrnck[M_P];
new dudrnck2[M_P];
new qkdxks[M_P];
new tleh[M_P];
new rhksdjqskin[M_P];
new Float:rhksdjqheal[M_P];
new Float:rhksdjqarmour[M_P];
new oplisten[M_P];
new bool:cmdlisten[M_P];
new Freeze[M_P];
new OwnOffer[M_P];
new OwnPrice[M_P];
new xhlwkdTlqkf;
new Float:NellPos[4];
new dmdrmqid[M_P];
new Fuckingnell = 0;
new NellInte[M_P];
new nicks[M_P][256];
new Draw[M_P];
new Drop[M_P];
new DropGPlayer[M_P];
new wkaqhr_2[M_P];
new Item_wkdwkr[M_P];
new Say_Quest[M_P];
new CCTV_A[M_P];
new bool:PlayerESC[M_P];
new pizza_make[M_P];
new my_skin[M_P];
new ShutupMan[M_P];
new COunt = 0;
new RunnigHealth[M_P];
new SexHealth[M_P];
new rkdehwlf[M_P];
new rkdehwlfwlf[M_P];
new SexGage[M_P];
new SexDildo[M_P];
new HealthGage[M_P];
new NogadaHealth[M_P];
new NogadaGage[M_P];
new NogadaHealth2[M_P];
new NogadaGage2[M_P];
new RlwjfTime[M_P];
new GunTime[M_P];
new Float:Aero_LastHealth[200];
new Anim_Chat[M_P];
new Playersmoke_V[M_P];
new P_Cloth[M_P];
new Maske_A[M_P];
new TaxiCheck[M_P];
new fhem_A[M_P];
new tkdwja_A[M_P];
new PlayerGam[M_P];
new DWeapon[M_P];
new Silent[M_P];
new Desert[M_P];
new Shotgun[M_P];
new MP5[M_P];
new M16[M_P];
new AK47[M_P];
new Sniper[M_P];
new Katana[M_P];
new Knife[M_P];
new AdminName[M_P][256];

new Text:ScreenMode1,
	Text:ScreenMode2,
	Text:ScreenMode3;

new Text3D:Item1Nick[M_P];
new Text3D:Quest_Newbie[M_P];

new Text3D:playerlabel[M_P];
new Text3D:TatooLab[MAX_PLAYERS];

new EvItem1[M_P];

#define GREEN 0x21DD00FF
#define RED 0xE60000FF
#define YELLOW 0xFFFF00FF
#define DrivingTestCash 5000
#define TooSlow 120
#define TooFast 105
#define MINVEHHP 900
#define GasMax 100
#define RunOutTime 25000
#define RefuelWait 5000

#define CAR_AMOUNT 700
new Gas[CAR_AMOUNT];

new Refueling[M_P];
enum SavePlayerPosEnum
{
Float:LastX,
Float:LastY,
Float:LastZ
}
new SavePlayerPos[M_P][SavePlayerPosEnum];
new SpeedMode = 1;
new UpdateSeconds = 1;

public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

new Music[M_P];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new Text3D:GongiMS;
new ChangeMode[M_P];
new Gongji[2][256];


new Float:BurgerDriveIn[6][3] = {
	{801.5522, -1628.91, 13.3828},
	{1209.958,-896.7405, 42.9259},
	{-2341.86, 1021.184, 50.6953},
	{2485.291, 2022.611, 10.8203},
	{1859.496, 2084.797, 10.8203},
	{-2349.49, -152.182, 35.3203}
};

new Float:ChickenDriveIn[3][3] = {
	{2409.651, -1488.65, 23.8281},
	{2377.733, -1909.27, 13.3828},
	{2375.014, 2021.186, 10.8203}
};
new FishNamesNumber = 22;
new FishNames[22][20] = {
	{"재킷"},
	{"방어"},
	{"농어"},
	{"붉돔"},
	{"바지"},
	{"송어"},
	{"블루 마린"},
	{"깡통"},
	{"고등어"},
	{"농어"},
	{"신발"},
	{"창꼬치"},
	{"돛새치"},
	{"쓰레기"},
	{"참다랑어"},
	{"뱀장어"},
	{"돌고래"},
	{"상어"},
	{"거북이"},
	{"메기"},
	{"돈가방"},
	{"황새치"}
};



new Float:gCopPlayerSpawns[1][3] = {
	{2289.7771,2430.7832,10.8203}
};

new Float:gMedPlayerSpawns[2][3] = {
	{1178.1,-1321.0,14.1},
	{1177.7,-1325.0,14.0}
};


enum pBoxingStats
{
	TitelName[128],
	TitelWins,
	TitelLoses,
};
new Titel[pBoxingStats];

enum cCKInfo
{
	cSendername[20],
	cGiveplayer[20],
	cUsed,
};
new CKInfo[10][cCKInfo];

enum fInfo
{
	FamilyTaken,
	FamilyName[20],
	FamilyMOTD[128],
	FamilyColor[20],
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
	FamilyRankName1[256],
	FamilyRankName2[256],
	FamilyRankName3[256],
	FamilyRankName4[256],
	FamilyRankName5[256],
	FamilyRankName6[256]
};
new FamilyInfo[10][fInfo];

enum zInfo
{
	zOwner[64],
	zColor[20],
	Float:zMinX,
	Float:zMinY,
	Float:zMaxX,
	Float:zMaxY,
};
new TurfInfo[6][zInfo];


enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[M_P][pFishing];

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[M_P][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[M_P][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[M_P][pSpec];

enum eCars
{
	model_id,
	Float:pos_x,
	Float:pos_y,
	Float:pos_z,
	Float:z_angle,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];

new bool:Sibsaki[PLAYERS];
#define MAX_NOCMDS 10
new NoCmd[PLAYERS][MAX_NOCMDS][256];
new NoCmdCount[PLAYERS][MAX_NOCMDS];
new NoCmdTimer[PLAYERS][MAX_NOCMDS];


enum pInfo
{
      pKey[128],
	  pLevel,
	  pWanted[128],
	  noneon,
	  pNewbie,
	  pBaejin2,
	  pqntkd,
	  pLily,
	  pAdmin,
	  pDonateRank,
	  gPupgrade,
	  pConnectTime,
	  Carkey,
	  pDriv,
	  pReg,
	  pSex,
	  pAge,
	  pOrigin,
	  rmsdbr,
	  Gimbob,
	  Tatoopen,
	  pCK,
	  pMuted,
	  pExp,
	  pCash,
  	  pCard,
	  pAccount,
	  pJobTimer,
	  pCrimes,
	  pKills,
      pMeter,
      pWhyDie,
	  pDeaths,
	  pArrested,
	  pWantedDeaths,
	  pPhoneBook,
	  pabcdefg,
	  pLottoNr,
	  pFishes,
	  pBiggestFish,
	  pJob,
	  pPayCheck,
	  pPayCheck2,
	  pHeadValue,
	  pResult[128],
	  pJailed,
	  pdudwkd,
	  pdudwkdt,
	  pMaskuse,
	  pJailTime,
	  pMats,
	  peogudLic,
	  dmdrmqLic,
	  diedie,
	  pDrugs,
	  pLeader,
	  pMember,
	  pFMember,
	  pRank,
	  pArmysp,
	  pChar,
	  pBoxSkill,
      pMoneyer,
	  pJackSkill,
	  pNewsSkill,
	  pCookSkill,
      pFishSkill,
	  Float:pHealth,
	  Float:pSHealth,
      pInt,
	  pLocal,
	  pTeam,
  	  pMode,
	  pModel,
	  pPnumber,
	  pSmart, // 스마트폰
	  pPhousekey,
   	  Float:pga,
   	  Float:pga2,
   	  pGangKey,
	  pPbiskey,
	  Float:pPos_x,
	  Float:pPos_y,
	  Float:pPos_z,
	  pCarLic,
	  pBmxLic,
	  pFlyLic,
	  pBoatLic,
	  pFishLic,
	  pGunLic,
	  pCityLic,
	  Float:pAmour,
	  pGun1,
	  pGun2,
	  pGun3,
	  pGun4,
	  pAmmo1,
	  pAmmo2,
	  pAmmo3,
	  pAmmo4,
	  pCarTime,
	  pCarTime2,
	  pPayDay,
	  pPayDayHad,
	  pWatch,
	  pgktehrm,
	  pfkaus,
	  pdkdltm,
	  pCrashed,
	  pWins,
	  pLoses,
	  pAlcoholPerk,
	  pDrugPerk,
	  pMiserPerk,
	  pPainPerk,
	  pTraderPerk,
	  pTut,
	  pMissionNr,
	  pWarns,
  	  pJu,
	  pPucking,
	  pWarns2,
	  pVirWorld,
	  pFuel,
	  pMarried,
	  pMarriedTo[128],
	  pMarriedTo2[128],
	  pFishTool,
	  pNote1[128],
	  pNote1s,
	  pNote2[128],
	  pNote2s,
	  pNote3[128],
	  pNote3s,
	  pNote4[128],
	  pNote4s,
	  pNote5[128],
	  pNote5s,
	  pInvWeapon,
	  pInvAmmo,
	  pInvAmmo6,
	  pInvAmmo7,
	  pInvAmmo8,
	  pInvAmmo9,
	  pInvAmmo10,
	  pInvWeapon2,
	  pInvAmmo2,
	  pInvWeapon3,
	  pInvAmmo3,
	  pInvWeapon4,
	  pInvAmmo4,
	  pInvWeapon5,
	  pInvAmmo5,
	  pLighter,
	  pCigarettes,
	  pRequestingBackup,
	  pRoadblock,
	  pHideNumber,
	  pSpeaker,
	  pLocked,
	  pChingchan,
	  pHotel1,
	  pHotel2,
	  pGabang,
	  pSavelocations,
	  pSavelocations2,
	  pSavelocations3,
	  pSaveinterior,
	  vNeon1,
	  vNeon2,
	  vNeon3,
	  vNeon4,
	  vNeon5,
	  vNeon6,
	  vNeon7,
	  vNeon8,
	  vNeon9,
	  vNeon10,
	  vNeon11,
	  pVworld,
	  pHotel3,
	  pHotel4,
	  pHotel5,
	  pfishrod,
	  pMeal,
      phammer,
	  pHarvestMeal,
	  pRice,
	  pHarvestRice,
	  pRadio,
	  pPill,
	  pSongpun,
	  pRope,
	  pShutupMouse,
	  Float:pArmour,
	  pBadge,
	  pLine,
	  pDemerit,
	  pAD,
	  pBoxing,
	  pKungfu,
	  pTaek,
	  pTatoo[256],
	  bool:pTatooOn,
	  pGrabk,
	  pEllbow,
	  pcModel,
  	  Float:pcX,
  	  Float:pcY,
  	  Float:pcZ,
	  Float:pcAngle,
	  pcColor1,
	  pcColor2,
	  pcLocked,
	  pcOwned,
	  pcPark,
	  pcModel2,
	  Float:pcX2,
	  Float:pcY2,
	  Float:pcZ2,
	  Float:pcAngle2,
	  pcColor12,
	  pcColor22,
	  pcLocked2,
	  pcOwned2,
	  pcPark2,
	  pcSpo,
	  pcHood,
	  pcRoof,
	  pcSideS,
	  pcLamp,
	  pcNitro,
	  pcExh,
	  pcWheel,
	  pcStero,
	  pcHyd,
	  pcFBum,
	  pcRbum,
	  pcVentR,
	  pcVentL,
	  pcSpo2,
	  pcHood2,
	  pcRoof2,
	  pcSideS2,
	  pcLamp2,
	  pcNitro2,
	  pcExh2,
	  pcWheel2,
	  pcStero2,
	  RentTime,
	  pcHyd2,
	  pcFBum2,
	  pcRbum2,
	  pcVentR2,
	  pcVentL2,
	  pPhoneB1,
	  pPhoneB2,
	  pPhoneB3,
	  pPhoneB4,
	  pPhoneB5,
	  pPhoneN1[128],
	  pPhoneN2[128],
	  pPhoneN3[128],
	  pPhoneN4[128],
	  pPhoneN5[128],
	  Item1,
	  Quest,
	  TongJang,
	  pBuild,
	  pHouse,
	  pPackage,
	  pDrug,
	  pRentHouse,
	  Byeong,
	  Cloth_1,
	  Cloth_2,
	  Cloth_3,
	  premium,

	  pHAt,
	  Float:At1Pos1,
	  Float:At1Pos2,
	  Float:At1Pos3,

	  Float:At1Rot1,
	  Float:At1Rot2,
	  Float:At1Rot3,

	  Float:At1Scale1,
	  Float:At1Scale2,
	  Float:At1Scale3,


	  pLAt,
	  Float:At2Pos1,
	  Float:At2Pos2,
	  Float:At2Pos3,

	  Float:At2Rot1,
	  Float:At2Rot2,
	  Float:At2Rot3,

	  Float:At2Scale1,
	  Float:At2Scale2,
	  Float:At2Scale3,


	  pRAt,
	  Float:At3Pos1,
	  Float:At3Pos2,
	  Float:At3Pos3,

	  Float:At3Rot1,
	  Float:At3Rot2,
	  Float:At3Rot3,

	  Float:At3Scale1,
	  Float:At3Scale2,
	  Float:At3Scale3,

	  pMouth,
	  Float:At4Pos1,
	  Float:At4Pos2,
	  Float:At4Pos3,

	  Float:At4Rot1,
	  Float:At4Rot2,
	  Float:At4Rot3,

	  Float:At4Scale1,
	  Float:At4Scale2,
	  Float:At4Scale3,

	  pGPS,
	  pBandage,
	  pGido,
	  pBibun,
	  pTime,
	  pTimer[2],
};
new PlayerInfo[M_P][pInfo];

enum wInfo
{
	wMember,
	wMoney,
	wDrug,
	wMaterial
};

new WHInfo[3][wInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
};
new SBizzInfo[10][sbInfo];

enum pHaul
{
	pCapasity,
	pLoad,
};

new PlayerHaul[113][pHaul];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[M_P][pCrime];

enum mInfo
{
	mTitle[128],
	mText1[128],
	mText2[128],
	mText3[128],
	mText4[128],
	mText5[128],
	mText6[128],
	mText7[128],
	mText8[128],
	mText9[128],
	mText10[128],
	mText11[128],
	mText12[128],
	mText13[128],
	mText14[128],
	mText15[128],
	mText16[128],
	mText17[128],
	mText18[128],
	mGText1[128],
	mGText2[128],
	mGText3[128],
	mGText4[128],
	mGText5[128],
	mGText6[128],
	Float:mCP1[3],
	Float:mCP2[3],
	Float:mCP3[3],
	Float:mCP4[3],
	Float:mCP5[3],
	Float:mCP6[3],
	mReward,
	mToggle,
};
new MissionInfo[mInfo];

enum kInfo
{
	kTitle[128],
	kMaker[MAX_PLAYER_NAME],
	kText1[128],
	kText2[128],
	kText3[128],
	kText4[128],
	kText5[128],
	kText6[128],
	kText7[128],
	kText8[128],
	kText9[128],
	kText10[128],
	kText11[128],
	kText12[128],
	kText13[128],
	kText14[128],
	kText15[128],
	kText16[128],
	kText17[128],
	kText18[128],
	kGText1[128],
	kGText2[128],
	kGText3[128],
	kGText4[128],
	kGText5[128],
	kGText6[128],
	Float:kCP1[3],
	Float:kCP2[3],
	Float:kCP3[3],
	Float:kCP4[3],
	Float:kCP5[3],
	Float:kCP6[3],
	kNumber,
	kReward,
	kToggle,
};
new PlayMission[kInfo];

enum dDrug
{
	DrugAmmount,
};
new drugsys[dDrug];

enum dMats
{
	MatsAmmount,
};
new matssys[dMats];

enum hqLocks
{
	surlock,
	luclock,
	guclock,
	stlock,
	iolock,
};
new hqlock[hqLocks];

new RandCars[20][1] = {
	{496},{542},{507},{585},
	{466},{492},{579},{559},
	{400},{551},{516},{475},
	{561},{550},{566},{558},
	{562},{562},{603},{560}
};


new RandLCars[1][1] = {
	{431}
};


new CivMalePeds[205][1] = {
	{1},
	{2},
	{7},
	{14},
	{15},
	{16},
	{17},
	{18},
	{19},
	{20},
	{21},
	{22},
	{23},
	{24},
	{25},
	{26},
	{27},
	{28},
	{29},
	{30},
	{32},
	{33},
	{34},
	{35},
	{36},
	{37},
	{43},
	{44},
	{45},
	{46},
	{47},
	{48},
	{49},
	{50},
	{51},
	{52},
	{57},
	{58},
	{59},
	{60},
	{61},
	{62},
	{66},
	{67},
	{68},
	{70},
	{71},
	{72},
	{73},
	{78},
	{79},
	{80},
	{81},
	{82},
	{83},
	{84},
	{94},
	{95},
	{96},
	{97},
	{98},
	{99},
	{100},
	{101},
	{102},
	{103},
	{104},
	{105},
	{106},
	{107},
	{108},
	{109},
	{110},
	{111},
	{112},
	{113},
	{114},
	{115},
	{116},
	{117},
	{118},
	{120},
	{121},
	{122},
	{123},
	{124},
	{125},
	{126},
	{127},
	{128},
	{132},
	{133},
	{134},
	{135},
	{136},
	{137},
	{142},
	{143},
	{144},
	{146},
	{147},
	{153},
	{154},
	{155},
	{156},
	{158},
	{159},
	{160},
	{161},
	{162},
	{163},
	{164},
	{165},
	{166},
	{167},
	{168},
	{170},
	{171},
	{173},
	{174},
	{175},
	{176},
	{177},
	{179},
	{180},
	{181},
	{182},
	{183},
	{184},
	{185},
	{186},
	{187},
	{188},
	{189},
	{200},
	{202},
	{203},
	{204},
	{206},
	{209},
	{210},
	{212},
	{213},
	{217},
	{220},
	{221},
	{222},
	{223},
	{227},
	{228},
	{229},
	{230},
	{234},
	{235},
	{236},
	{239},
	{240},
	{241},
	{242},
	{247},
	{248},
	{249},
	{250},
	{252},
	{253},
	{254},
	{255},
	{258},
	{259},
	{260},
	{261},
	{262},
	{264},
	{265},
	{266},
	{267},
	{268},
	{269},
	{270},
	{271},
	{272},
	{274},
	{275},
	{276},
	{277},
	{278},
	{279},
	{280},
	{281},
	{282},
	{283},
	{284},
	{285},
	{286},
	{287},
	{288},
	{290},
	{291},
	{292},
	{293},
	{294},
	{295},
	{296},
	{297},
	{299}
};

new CivFemalePeds[81][1] = {
	{9},
	{10},
	{11},
	{12},
	{13},
	{31},
	{39},
	{40},
	{41},
	{53},
	{54},
	{55},
	{56},
	{63},
	{64},
	{69},
	{75},
	{76},
	{77},
	{85},
	{87},
	{88},
	{89},
	{90},
	{91},
	{92},
	{93},
	{129},
	{130},
	{131},
	{138},
	{139},
	{140},
	{141},
	{145},
	{148},
	{150},
	{151},
	{152},
	{157},
	{169},
	{172},
	{178},
	{190},
	{191},
	{192},
	{193},
	{194},
	{195},
	{196},
	{197},
	{198},
	{199},
	{200},
	{201},
	{205},
	{207},
	{209},
	{211},
	{214},
	{215},
	{216},
	{218},
	{219},
	{224},
	{225},
	{226},
	{231},
	{232},
	{233},
	{237},
	{238},
	{243},
	{244},
	{245},
	{246},
	{251},
	{256},
	{257},
	{263},
	{298}
};
enum W_I{
	bool:W_B[MAX_PLAYERS],
	W_A[MAX_PLAYERS]
}
new weapons[55][W_I] = {
	{true,65535},
	{true,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{true,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{true,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0},
	{false,0}
};
stock GiveWeapon(playerid,weaponid,ammo){
	weapons[weaponid][W_B][playerid] = true;

	weapons[weaponid][W_A][playerid]+=ammo;
	GivePlayerWeapon(playerid,weaponid,ammo);
}

stock bool:IsPlayerMenSon(weaponid){
	switch(weaponid){
case 0,1: return true;
	}
	return false;
}
main()
{
	print(" 구동기가 성공적으로 구동 되었습니다.");
	print(" Mode 의 제작자는 Max☆ 님 입니다.");
	print(" 저작권은 Max☆님에게 있습니다.");
	print(" 기반은 조지포먼의 조지모드 입니다.");
	print(" 광음님 네이트온 hyunil9663@nate.com");
}
public SearchingHit(playerid)
{
	new string[256];
	new giveplayer[MAX_PLAYER_NAME];
	new searchhit = 0;
	for(new i=0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(searchhit == 0)
			{
				if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 8)
				{
					GetPlayerName(i, giveplayer, sizeof(giveplayer));
					searchhit = 1;
					for(new k=0; k<M_P; k++)
					{
						if(IsPlayerConnected(k))
						{
							if(PlayerInfo[k][pMember] == 8 || PlayerInfo[k][pLeader] == 8)
							{
								SCM(k, COLOR_SUN, "━━━━━━━ Payday News ━━━━━━━");
								SCM(k, COLOR_ERROR, "INFO : "#C_YELLOW" 새로운 목표가 생겼습니다");
								format(string, sizeof(string), "INFO : "#C_YELLOW" 시민번호 - %d, 이름 - %s, 의뢰금액 - $%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
								SCM(k, COLOR_ERROR, string);
								SCM(k, COLOR_ERROR, "INFO : "#C_YELLOW" 목표를 신속하게 처리하고 목격자를 없애라.");
								SCM(k, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
							}
						}
					}
					return 0;
				}
			}
		}
	}
	if(searchhit == 0)
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 아무런 의뢰가 오지 않았습니다");
	}
	return 0;
}

	public IsCop(playerid)
	{
		if(IsPlayerConnected(playerid))
		{
			new leader = PlayerInfo[playerid][pLeader];
			new member = PlayerInfo[playerid][pMember];
			if(member==1 || member==2 || member==20)
			{
				return 1;
			}
			else if(leader==1 || leader==2 || leader==20)
			{
				return 1;
			}
		}
		return 0;
	}

    public IsCop2(playerid)
	{
		if(IsPlayerConnected(playerid))
		{
			new leader = PlayerInfo[playerid][pLeader];
			if(leader==1 || leader==2 || leader==20)
			{
				return 1;
			}
		}
		return 0;
	}

public ExtortionSBiz(bizid, money)
{
	new string[256];
	format(string, sizeof(string), "No-one");
	if(strcmp(SBizzInfo[bizid][sbExtortion],string, true ) == 0 )
	{
		return 0;
	}
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
				new value = money / 100;
				value = value * 10;
				GiveMoney(bizid, value);
				SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}
public dlqwkdxkdlajf(playerid)
{
 dlqwkd3(playerid);
 SetTimer("dlqwkdxkdlajf", 2000,true);
 return 1;
}
public eogud1(playerid)
{
		ClearChatbox(playerid, 10);
		SetPlayerFreeze(playerid, true, 1);
		TogglePlayerControllable(playerid, 0);
		Anim(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "대형면허 시험 (알리는 글)");
		Anim(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
		SCM(playerid, COLOR_ERROR, "지금부터 대형면허 시험에 앞서 설명해 드리도록 하겠습니다");
		SCM(playerid, COLOR_ERROR, "대형면허 시험은 문제를 듣고 신중히 답을 선택해 주셔야 합니다");
		SCM(playerid, COLOR_ERROR, "만약에 대형면허 시험에 한 문제라도 틀리시면 불합격입니다");
		SCM(playerid, COLOR_ERROR, "그 점유의하시고 잘 듣고 열심히 풀어주시기 바랍니다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
	public eogud2(playerid)
	{
		ClearChatbox(playerid, 10);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(보험차량의 사고처리시 유의하여야 할 사항)");
		SCM(playerid, COLOR_ERROR, "사고내용을 명확하게 한다.");
		SCM(playerid, COLOR_ERROR, "나중에 주장을 번복할 수 있으므로 상대방의 확인서나 증거 또는 증인을 확보해둔다.");
		SCM(playerid, COLOR_ERROR, "면허증이나 자동차 등록증을 함부로 주어서는 안된다.");
		SCM(playerid, COLOR_ERROR, "서둘러 합의하지 않는다.");
		SCM(playerid, COLOR_ERROR, "자신의 안전에도 주의할 것");
		SCM(playerid, COLOR_ERROR, "진행상황을 기록해 둘 것");
		SCM(playerid, COLOR_ERROR, "반드시 부상 여부를 확인하라.");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
	public eogud3(playerid)
	{
		ClearChatbox(playerid, 10);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(자동차 사고 통보 및 보험금 청구)");
		SCM(playerid, COLOR_ERROR, "사고를 낸 운전자들은 심리적으로 불안한 상태에 놓이게 되어 몹시 당황하게 되지만,");
		SCM(playerid, COLOR_ERROR, "피해자가 생긴 경우에는 먼저 가까운 병원으로 옮겨 응급치료를 받게 하고,");
		SCM(playerid, COLOR_ERROR, "인근 경찰관서에 사실을 신고하되 경찰관서 소재지나 고속도로에서는 3시간,");
		SCM(playerid, COLOR_ERROR, "기타지역은 12시간을 초과하지 않도록 주의해야 한다.");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
	public eogud4(playerid)
	{
		ClearChatbox(playerid, 10);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(테스트 문제)");
		SCM(playerid, COLOR_ERROR, "문제:언덕길을 내려가다 브레이크가 파열되었을 때 적절한 조치는?");
		SCM(playerid, COLOR_ERROR, "답:저속기어로 변속 감속한다. ");
		SCM(playerid, COLOR_ERROR, "문제:비오는 날의 수막현상에 대한 설명으로 맞은 것은?");
		SCM(playerid, COLOR_ERROR, "답:속도가 빠르면 수막현상이 잘 일어난다.");
		SCM(playerid, COLOR_ERROR, "답:타이어마모가 심할 때 수막현상이 잘 일어난다.");
		SCM(playerid, COLOR_ERROR, "답:타이어 공기압이 적을 때 수막현상이 잘 일어난다.");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
	public eogud5(playerid)
	{
		ClearChatbox(playerid, 10);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(테스트 문제)");
		SCM(playerid, COLOR_ERROR, "문제:야간운전의 위험성으로 옳은 것은?");
		SCM(playerid, COLOR_ERROR, "답:시야가 좁다.");
		SCM(playerid, COLOR_ERROR, "문제:하이드로플레닝(Hydroplaning)을 설명한 것은?");
		SCM(playerid, COLOR_ERROR, "답:교통을 무시하고 지나가는 행위.");
		SCM(playerid, COLOR_ERROR, "문제:주차가 허용되는 곳은?");
		SCM(playerid, COLOR_ERROR, "답:경찰서로부터 10미터 이내의 곳");
		SCM(playerid, COLOR_ERROR, "문제:화물자동차 운전 중 다음 장소에 정차하였다.");
		SCM(playerid, COLOR_ERROR, "답:소방용 방화물통으로부터 5m 이내의 곳");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
	public eogud6(playerid)
	{
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(테스트 문제)");
		SCM(playerid, COLOR_ERROR, "문제:주차 위반으로 견인되었을 때 견인, 보관 비용은 누가 부담해야 하는가?");
		SCM(playerid, COLOR_ERROR, "답:사용자");
		SCM(playerid, COLOR_ERROR, "문제:다음 일시정지의 뜻은?");
		SCM(playerid, COLOR_ERROR, "신호대기 중 정지하는 것 / 위험 방지상 정지하는 것");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
	public eogud7(playerid)
	{
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "대형면허 시험테스트 (종료)");
		SCM(playerid, COLOR_ERROR, "제가 설명해준 것들을 잘 읽어보셨다면 시험을 잘칠수가 있을겁니다");
		SCM(playerid, COLOR_ERROR, "잘 읽어보시지 않고 시험을 친다면 불합격이 되실겁니다");
		SCM(playerid, COLOR_ERROR, "그러므로,꼭 기억하시기 바랍니다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SetTimerEx("eo1", 5000, 0, "d", playerid);
	}

	public eo1(playerid)
	{
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_SUC, "문제는 총 객관식 (5)문항입니다");
		SCM(playerid, COLOR_ERROR, " ");
		SCM(playerid, COLOR_ERROR, "답이 두개인 것도 있습니다");
		SCM(playerid, COLOR_ERROR, "그런 문제는 답을 연속으로 달아주십시오.");
		SCM(playerid, COLOR_WHITE, "예) 답이 1, 2번이라면 1/2를 입력");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SetTimerEx("eo2", 20000, 0, "d", playerid);
	}

	public eo2(playerid)
	{
		eo[playerid] = 1;
		ClearChatbox(playerid, 6);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(1) 대형차량을 운전하면 속도가 빨라야한다?");
		SCM(playerid, COLOR_ERROR, "1번 맞다");
		SCM(playerid, COLOR_ERROR, "2번 아니다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}

	public eo3(playerid)
	{
		eo[playerid] = 2;
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(2) 사고를 예방하면 좋은점은 무엇인가?");
		SCM(playerid, COLOR_ERROR, "1번 잘 지키면 돈이 많이 벌수가 있다");
		SCM(playerid, COLOR_ERROR, "2번 사고를 방지할 수 있으며, 생명을 구할 수 있다");
		SCM(playerid, COLOR_ERROR, "3번 잘 지키면 장동건처럼 잘생겨진다");
		SCM(playerid, COLOR_ERROR, "4번 좋은점은 전혀 없다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}


	public eo4(playerid)
	{
		eo[playerid] = 3;
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(3) 운전중에 하면 안되는 행위는?");
		SCM(playerid, COLOR_ERROR, "1번 안전벨트를 맨다");
		SCM(playerid, COLOR_ERROR, "2번 백미러를 바라본다");
		SCM(playerid, COLOR_ERROR, "3번 문자나 통화를 한다");
		SCM(playerid, COLOR_ERROR, "4번 사이드미러를 바라본다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}

	public eo5(playerid)
	{
		eo[playerid] = 4;
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(4)이 문항은 답이 두개인 문항입니다. 운전중에 올바른 행동은?");
		SCM(playerid, COLOR_ERROR, "1번 차로 다른 차를 박는다");
		SCM(playerid, COLOR_ERROR, "2번 빨간불일 때 브레이크를 밟아 멈춘다");
		SCM(playerid, COLOR_ERROR, "3번 너무 빠르지도 않고 너무 느리지도 않은 속도를 유지한다");
		SCM(playerid, COLOR_ERROR, "4번 후진을 해서 간다");
		SCM(playerid, COLOR_RED, "이 문항은 답이 두개인 문항입니다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}

	public eo6(playerid)
	{
		eo[playerid] = 5;
		ClearChatbox(playerid, 5);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		SCM(playerid, COLOR_WHITE, "(5) 이 문항은 답이 두개인 문항입니다. 옳지 않은 행동을 고르시오.");
		SCM(playerid, COLOR_ERROR, "1번 사람을 치고 상태만 확인하고 일을 하러 간다.");
		SCM(playerid, COLOR_ERROR, "2번 차 사고가 났을 경우, /통화 911 를 통해 신고한다.");
		SCM(playerid, COLOR_ERROR, "3번 차끼리는 약 10 미터의 거리를 둔다.");
		SCM(playerid, COLOR_ERROR, "4번 신호등을 박아서 부셔버린다");
		SCM(playerid, COLOR_RED, "이 문항은 답이 두개인 문항입니다");
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}

	public DollahScoreUpdate()
    {
	new LevScore;
	for(new i=0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return 1;
}
	public ckdnlcl(playerid)
	{
	if(PlayerIsSending[playerid] == 1)
    {
		DisablePlayerCheckpoint(playerid);
		PlayerIsSending[playerid] = 0;
		SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 피자 배달일을 중지했습니다");
		}
		return 1;
		}

	public wleh(playerid)
	{
	if(PlayerIsTruck[playerid] == 1)
	{
	DisablePlayerCheckpoint(playerid);
	PlayerIsTruck[playerid] = 0;
	ResetCheckPoint(playerid);
	SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 배달일을 중지했습니다");
	}
	return 1;
	}
 public cjdthdlf(playerid)
 {
 	if(PlayerIsSweeping[playerid] == 1)
	{
		DisablePlayerCheckpoint(playerid);
		PlayerIsSweeping[playerid] = 0;
		CP[playerid] = 0;
		SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 환경미화원 업무를 중지했습니다");
		}
		return 1;
		}
	public Encrypt(string[])
	{
		for(new x=0; x < strlen(string); x++)
		{
			string[x] += (3^x) * (x % 15);
			if(string[x] > (0xff))
			{
				string[x] -= 256;
			}
		}
		return 1;
	}

	stock right(source[], len)
	{
		new retval[MAX_STRING], srclen;
		srclen = strlen(source);
		strmid(retval, source, srclen - len, srclen, MAX_STRING);
		return retval;
	}

	stock sscanf(string[], format[], {Float,_}:...)
	{
		new
			formatPos = 0,
			stringPos = 0,
			paramPos = 2,
			paramCount = numargs();
		while (paramPos < paramCount && string[stringPos])
		{
			switch (format[formatPos++])
			{
			case '\0':
				{
					return 0;
				}
			case 'i', 'd':
				{
					new
						neg = 1,
						num = 0,
						ch = string[stringPos];
					if (ch == '-')
					{
						neg = -1;
						ch = string[++stringPos];
					}
					do
					{
						stringPos++;
						if (ch >= '0' && ch <= '9')
						{
							num = (num * 10) + (ch - '0');
						}
						else
						{
							return 1;
						}
					}
					while ((ch = string[stringPos]) && ch != ' ');
					setarg(paramPos, 0, num * neg);
				}
			case 'h', 'x':
				{
					new
						ch,
						num = 0;
					while ((ch = string[stringPos++]))
					{
						switch (ch)
						{
						case 'x', 'X':
							{
								num = 0;
								continue;
							}
						case '0' .. '9':
							{
								num = (num << 4) | (ch - '0');
							}
						case 'a' .. 'f':
							{
								num = (num << 4) | (ch - ('a' - 10));
							}
						case 'A' .. 'F':
							{
								num = (num << 4) | (ch - ('A' - 10));
							}
						case ' ':
							{
								break;
							}
						default:
							{
								return 1;
							}
						}
					}
					setarg(paramPos, 0, num);
				}
			case 'c':
				{
					setarg(paramPos, 0, string[stringPos++]);
				}
			case 'f':
				{
					new tmp[25];
					strmid(tmp, string, stringPos, stringPos+sizeof(tmp)-2);
					setarg(paramPos, 0, _:floatstr(tmp));
				}
			case 's', 'z':
				{
					new
						i = 0,
						ch;
					if (format[formatPos])
					{
						while ((ch = string[stringPos++]) && ch != ' ')
						{
							setarg(paramPos, i++, ch);
						}
						if (!i) return 1;
					}
					else
					{
						while ((ch = string[stringPos++]))
						{
							setarg(paramPos, i++, ch);
						}
					}
					stringPos--;
					setarg(paramPos, i, '\0');
				}
			default:
				{
					continue;
				}
			}
			while (string[stringPos] && string[stringPos] != ' ')
			{
				stringPos++;
			}
			while (string[stringPos] == ' ')
			{
				stringPos++;
			}
			paramPos++;
		}
		while (format[formatPos] == 'z') formatPos++;
		return format[formatPos];
	}
public cpfur(playerid)
{
	if(PlayerInfo[playerid][pJob] == 16 || PlayerInfo[playerid][pJob] == 3 || PlayerInfo[playerid][pJob] == 13 || PlayerInfo[playerid][pJob] == 19 || PlayerInfo[playerid][pJob] == 20 )
	{
        GiveHealth(playerid, -10);
	}
	return 1;
}

public Spectator()
{
	new string[256];
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(KickPlayer[i]==1) { Kick(i); }
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerColor(i,0xBFC0C200);
				SetPlayerFreeze(i, true, 1);
				TogglePlayerControllable(i, 0);
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
					TogglePlayerSpectating(i, 1);
					if(PlayerInfo[i][pAdmin] >= 1)
					{
						new Float:health;
						new name[MAX_PLAYER_NAME];
						GetPlayerName(targetid, name, sizeof(name));
						GetPlayerHealth(targetid, health);
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~health:%.1f",name,targetid,health);
						GameTextForPlayer(i, string, 2500, 3);
					}
					if(IsPlayerInAnyVehicle(targetid))
					{
						new carid = GetPlayerVehicleID(targetid);
						PlayerSpectateVehicle(i, carid);
					}
					else
					{
						PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}
			}
			if(Spectate[i] == 253)
			{
				SetPlayerFreeze(i, false, 0);
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				if(PlayerInfo[i][pDonateRank] > 0)
				{
					SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
				}
				else
				{
					SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				SetPlayerFreeze(i, false, 0);
				TogglePlayerControllable(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(GetVehicleModel(vehicleid) == 596)
	{
		PCar[playerid]=true;
		new slot, w, a;
		GetPlayerWeaponData(playerid, slot, w, a);
		if(slot == 3 && w == 25 && a != 0)
		{
			PShotgun[playerid]=a;
		}
		else
		{
			PShotgun[playerid]=0;
		}
	}
	if(gTeam[playerid] >= 1||gTeam[playerid] >= 3||gTeam[playerid] >= 4||gTeam[playerid] >= 2)
	{
		if (IsACopCar(vehicleid) && !ispassenger)
		{
			if(PlayerInfo[playerid][pLeader]==1||PlayerInfo[playerid][pLeader]==2||PlayerInfo[playerid][pLeader]==3||PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pMember]==3) {}
			else
			{
				new Float:cx, Float:cy, Float:cz;
				GetPlayerPos(playerid, cx, cy, cz);
				SetPlayerPos(playerid, cx,  cy, cz);
			}
		}
	}

	return 1;
}

public IsAnInstructor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==11)
		{
			return 1;
		}
		if(leader==11)
		{
			return 1;
		}
	}
	return 0;
}
public IsAMember2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new member = PlayerInfo[playerid][pMember];
		if(member==6 || member==14 || member==31 || member==30 || member==15 || member==18 || member==19 || member==22 || member==24 || member==27 || member==28 || member==29)
		{
			return 1;
		}
	}
	return 0;
}
public IsAArmy2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		new rank = PlayerInfo[playerid][pRank];
		if(member==3 && rank==16)
		{
			return 1;
		}
		else if(leader==3)
		{
			return 1;
		}
	}
	return 0;
}
public IsAMember3(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==12 || member==6 || member==30 || member==31 || member==29 || member==15 || member==5 || member==27 || member==14 || member==16 || member==17 || member==18 || member==19 || member==22 || member == 23 || member==24 || member==25 || member==28 || member==13)
		{
			return 1;
		}
		if(leader==12 || leader==6 || leader==29 || leader==30 || leader==31 || leader==15 || leader==5 || member==14 || leader==27 || leader==16 || leader==17 || leader==18 || leader==19 || leader==22 || leader == 23 || leader==24 || leader==25 || leader==28 || leader==13)
		{
			return 1;
		}
	}
	return 0;
}
public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==5 || member==27 || member==31 || member==30 || member==29 || member==6 || member==8 || member==12 || member==13 || member==14 || member==15 || member==16 || member==17 || member==18 || member==19 || member==22 || member == 23 || member==24 || member==25 || member==28)
		{
			return 1;
		}
		if(leader==5 || leader==27 || leader==31 || leader==30 || leader==29 || leader==6 || leader==8 || leader==12 || leader==13 || leader==14 || leader==15 || leader==16 || leader==17 || leader==18 || leader == 19 || leader==22 || leader == 23 || leader==24 || leader==25 || leader==28)
		{
			return 1;
		}
	}
	return 0;
}
public IsAHit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==8)
		{
			return 1;
		}
		if(leader==8)
		{
			return 1;
		}
	}
	return 0;
}
public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==1 || member==2 || member==3 || member==7 || member==8 || member == 32 || member == 34)
		{
			return 1;
		}
		else if(leader==1 || leader==2 || leader==3 || leader==7 || leader==8 || leader == 32 || leader == 34)
		{
			return 1;
		}
	}
	return 0;
}

public IsAPDMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==1)
		{
			return 1;
		}
		else if(leader==1)
		{
			return 1;
		}
	}
	return 0;
}

public AttachWeaponCorrectly(playerid, gun)
{
	if(gun == 2)
	{
	    SetPlayerAttachedObject(playerid, 0,333,1,0.3,-0.1,0.1,0.0,230.0,0.0);
	}
	else if(gun == 3)
	{
	    SetPlayerAttachedObject(playerid, 0,334,7,0.0,-0.0,-0.0,0.0,90.0,0.0);
	}
	else if(gun == 4)
	{
	    SetPlayerAttachedObject(playerid, 0,335,7,0.0,-0.1,-0.1,0.0,90.0,90.0);
	}
	else if(gun == 5)
	{
	    SetPlayerAttachedObject(playerid, 0,336,1,0.3,-0.1,0.1,0.0,230.0,0.0);
	}
	else if(gun == 7)
	{
	    SetPlayerAttachedObject(playerid, 0,338,1,0.3,-0.1,0.1,0.0,230.0,0.0);
	}
	else if(gun == 8)
	{
	    SetPlayerAttachedObject(playerid, 0,339,1,0.3,-0.1,0.1,0.0,230.0,0.0);
	}
	else if(gun == 10)
	{
	    SetPlayerAttachedObject(playerid, 0,321,7,0.3,-0.0,-0.2,0.0,280.0,0.0);
	}
	else if(gun == 11)
	{
	    SetPlayerAttachedObject(playerid, 0,322,7,0.2,-0.0,-0.0,0.0,90.0,0.0);
	}
	else if(gun == 12)
	{
	    SetPlayerAttachedObject(playerid, 0,323,7,0.3,-0.0,-0.2,0.0,280.0,0.0);
	}
	else if(gun == 13)
	{
	    SetPlayerAttachedObject(playerid, 0,324,7,0.2,-0.0,-0.0,0.0,90.0,0.0);
	}
	else if(gun == 15)
	{
	    SetPlayerAttachedObject(playerid, 0,326,1,0.3,-0.1,0.1,0.0,230.0,0.0);
	}
	else if(gun == 16)
	{
	    SetPlayerAttachedObject(playerid, 0,342,7,0.0,0.0,-0.1,0.0,270.0,0.0);
	}
	else if(gun == 17)
	{
	    SetPlayerAttachedObject(playerid, 0,343,7,0.0,0.0,-0.1,0.0,270.0,0.0);
	}
	else if(gun == 18)
	{
	    SetPlayerAttachedObject(playerid, 0,344,7,0.0,0.0,-0.1,0.0,270.0,0.0);
	}
	else if(gun == 22)
	{
	    SetPlayerAttachedObject(playerid, 0,346,8,-0.1,0.0,0.1,270.0,0.0,0.0);
	}
	else if(gun == 23)
	{
	    SetPlayerAttachedObject(playerid, 0,347,8,-0.1,0.0,0.1,270.0,0.0,0.0);
	}
	else if(gun == 24)
	{
	    SetPlayerAttachedObject(playerid, 0,348,8,-0.1,0.0,0.1,270.0,0.0,0.0);
	}
	else if(gun == 25)
	{
	    SetPlayerAttachedObject(playerid, 0,349,1,0.2,-0.1,0.2,180.0,40.0,180.0);
	}
	else if(gun == 26)
	{
	    SetPlayerAttachedObject(playerid, 0,350,8,-0.1,0.0,0.1,270.0,0.0,0.0);
	}
	else if(gun == 27)
	{
	    SetPlayerAttachedObject(playerid, 0,351,1,0.2,-0.1,0.3,180.0,40.0,186.0);
	}
	else if(gun == 28)
	{
	    SetPlayerAttachedObject(playerid, 0,372,8,0.1,0.0,0.1,270.0,270.0,0.0);
	}
	else if(gun == 29)
	{
	    SetPlayerAttachedObject(playerid, 0,353,8,0.1,-0.1,0.1,270.0,0.0,0.0);
	}
	else if(gun == 30)
	{
	    SetPlayerAttachedObject(playerid, 0,355,1,0.2,-0.1,0.2,180.0,40.0,180.0);
	}
	else if(gun == 31)
	{
	    SetPlayerAttachedObject(playerid, 0,356,1,0.2,-0.1,0.2,180.0,40.0,180.0);
	}
	else if(gun == 32)
	{
	    SetPlayerAttachedObject(playerid, 0,372,8,0.1,0.0,0.1,270.0,270.0,0.0);
	}
	else if(gun == 33)
	{
	    SetPlayerAttachedObject(playerid, 0,357,1,0.2,-0.1,0.2,180.0,40.0,180.0);
	}
	else if(gun == 34)
	{
	    SetPlayerAttachedObject(playerid, 0,358,1,0.2,-0.1,0.2,180.0,40.0,180.0);
	}
	else if(gun == 35)
	{
	    SetPlayerAttachedObject(playerid, 0,359,1,0.1,-0.2,-0.2,0.0,50.0,0.0);
	}
	else if(gun == 42)
	{
	    SetPlayerAttachedObject(playerid, 0,366,1,0.4,-0.2,0.1,180.0,50.0,180.0);
	}
	else if(gun == 41)
	{
	    SetPlayerAttachedObject(playerid, 0,365,7,0.0,0.0,-0.1,0.0,270.0,0.0);
	}
	else if(gun == 99)
	{
	    RemovePlayerAttachedObject(playerid,4);
		if(IsACop(playerid))
		{
		    if(Tazer[playerid] == 1)
		    {
				AttachWeaponCorrectly(playerid, 24);
			}
			else
			{
			    AttachWeaponCorrectly(playerid, 23);
			}
		}
	    RemovePlayerAttachedObject(playerid,4);
	}
	return 1;
}

public AttachObjectCorrectly(playerid, object)
{
	if(object == 1550)
	{
	    SetPlayerAttachedObject(playerid, 4,1550,3,0.1,0.1,-0.1,0.0,270.0,0.0);
	}
	else if(object == 373)
	{
	    SetPlayerAttachedObject(playerid, 4,373,1,0.3,-0.0,-0.18,70.0,25.0,35.0);
	}
	else if(object == 2992)
	{
	    SetPlayerAttachedObject(playerid, 4,2992,2,0.2,0.0,0.0,0.0,90.0,0.0);
	}
	else if(object == 3265)
	{
	    SetPlayerAttachedObject(playerid, 4,3265,1,-0.5,0.0,0.0,0.0,90.0,180.0);
	}
	else if(object == 1575)
	{
	    SetPlayerAttachedObject(playerid, 4,1575,6,0.0,0.0,0.0,0.0,90.0,0.0);
	}
	else if(object == 1210)
	{
	    SetPlayerAttachedObject(playerid, 4,1210,5,0.3,0.1,0.0,0.0,270.0,0.0);
	}
	else if(object == 3026)
	{
	    SetPlayerAttachedObject(playerid, 4,3026,1,-0.1,-0.0,0.0,0.0,0.0,0.0);
	}
	else if(object == 2054)
	{
	    SetPlayerAttachedObject(playerid, 4,2054,2,0.1,0.0,-0.0,0.0,90.0,180.0);
	}
	else if(object == 2053)
	{
	    SetPlayerAttachedObject(playerid, 4,2053,2,0.1,0.0,0.0,0.0,90.0,0.0);
	}
	else if(object == 2052)
	{
	    SetPlayerAttachedObject(playerid, 4,2052,2,0.1,0.0,0.0,0.0,90.0,0.0);
	}
	return 1;
}

public IsAtDealership(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(25.0,playerid,2128.0864,-1135.3912,25.5855) || PlayerToPoint(50,playerid,537.3366,-1293.2140,17.2422) || PlayerToPoint(35,playerid,2521.5544,-1524.4504,23.8365) || PlayerToPoint(50,playerid,2155.0146,-1177.3333,23.8211) || PlayerToPoint(50,playerid,299.1723,-1518.6627,24.6007))
		{
			return 1;
		}
	}
	return 0;
}
public IsAtCarrental(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(30.0,playerid,1696.5543,-1053.4685,23.9063))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(25.0,playerid,20.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{
			return 1;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)//주유좌표
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{
			return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2639.5574,1108.1146,10.8203) || PlayerToPoint(6.0,playerid,2639.3508,1097.6390,10.8203))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2114.8464,911.7383,10.8203) || PlayerToPoint(6.0,playerid,2116.0803,922.4962,10.8203))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2203.3596,2474.3584,10.8203) || PlayerToPoint(6.0,playerid,2149.0703,2747.9080,10.8203))
		{
			return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2202.5347,2473.3333,10.8203) || PlayerToPoint(6.0,playerid,2210.7839,2475.5974,10.8203))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
		{
			return 1;
		}
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
		{
			return 1;
		}
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
		{
			return 1;
		}
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
		{
			return 1;
		}
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtAtm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(3.0,playerid,-32.276363, -57.995586, 1003.139953))
		{
			return 1;
		}
		if(PlayerToPoint(3.0,playerid,374.718902, 167.128982, 1007.987304))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtMine(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(3.0,playerid,640.9634,862.7740,-42.8097))
		{
			return 1;
		}
		if(PlayerToPoint(3.0,playerid,612.8517,865.9244,-42.6931))
		{
			return 1;
		}
		if(PlayerToPoint(3.0,playerid,637.6669,831.6054,-42.9609))
		{
		    return 1;
		}
		if(PlayerToPoint(3.0,playerid,539.4710,841.2317,-40.9222))
		{
		    return 1;
		}
		if(PlayerToPoint(3.0,playerid,548.2313,912.2347,-40.1606))
		{
		    return 1;
		}
		if(PlayerToPoint(3.0,playerid,590.6077,920.3068,-41.4418))
		{
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
		{
			return 1;
		}
		else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
		{
			return 1;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtBar(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797))
		{
			return 1;
		}
		if(PlayerToPoint(4.0,playerid,-3551.97,-2140.08,11.78))
		{
			return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
		{
			return 1;
		}
		else if(PlayerToPoint(4.0,playerid,968.7739,-46.6145,1001.1172) || PlayerToPoint(10.0,playerid,968.7739,-46.6145,1001.1172))
		{
			return 1;
		}
		else if(PlayerToPoint(4.0,playerid,-791.016,512.249,1336.41) || PlayerToPoint(10.0,playerid,-799.122,520.988,1336.41))
		{
			return 1;
		}
		else if(PlayerToPoint(4.0,playerid,3271.08,-817.83,11.16) || PlayerToPoint(10.0,playerid,3271.08,-817.83,11.16))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtHarvest(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(2.0, playerid,-273.2152,-1505.9331,4.9843) || PlayerToPoint(2.0,playerid,-256.3690,-1366.7371,9.8769) || PlayerToPoint(2.0,playerid,-438.7477,-1307.6089,35.0138))
		{
			return 1;
		}
	}
	return 0;
}

public IsABoat(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 472 || GetVehicleModel(vehicleid) == 473 || GetVehicleModel(vehicleid) == 493 || GetVehicleModel(vehicleid) == 495 || GetVehicleModel(vehicleid) == 484 || GetVehicleModel(vehicleid) == 430 || GetVehicleModel(vehicleid) == 454 || GetVehicleModel(vehicleid) == 453 || GetVehicleModel(vehicleid) == 452 || GetVehicleModel(vehicleid) == 446)
	{
		return 1;
	}
	return 0;
}

public IsABmx(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
	{
		return 1;
	}
	return 0;
}

public IsAHarvest(carid)
{
	return 0;
}

public IsAPlane(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 593 || GetVehicleModel(vehicleid) == 520 || GetVehicleModel(vehicleid) == 519 || GetVehicleModel(vehicleid) == 512 || GetVehicleModel(vehicleid) == 513 || GetVehicleModel(vehicleid) == 511)
	{
		return 1;
	}
	return 0;
}

public IsAeogud(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 403 || GetVehicleModel(vehicleid) == 407 || GetVehicleModel(vehicleid) == 408 || GetVehicleModel(vehicleid) == 427 || GetVehicleModel(vehicleid) == 428 || GetVehicleModel(vehicleid) == 431 || GetVehicleModel(vehicleid) == 433 || GetVehicleModel(vehicleid) == 437||GetVehicleModel(vehicleid) == 514 || GetVehicleModel(vehicleid) == 544
		|| GetVehicleModel(vehicleid) == 498)
	{
		return 1;
	}
	return 0;
}

public IsACopCar(carid)
{
	if(carid >= 1 && carid <= 10)
	{
		return 1;
	}
	return 0;
}


public IsAOBike(carid)
{
	return 0;
}

public IsANoWindow(carid)
{
	if(carid == 424 || carid == 457|| carid == 471 || carid == 485 || carid == 486 || carid == 530 || carid == 531 || carid == 568 || carid == 571 || carid == 572)
	{
		return 1;
	}
	if(carid == 446 || carid == 452 || carid == 453 || carid == 454 || carid == 472 || carid == 473 || carid == 484 || carid == 493 || carid == 539 || carid == 595)
	{
		return 1;
	}
	if(carid == 448 || carid == 461 || carid == 462 || carid == 463 || carid == 468 || carid == 521 || carid == 522 || carid == 523 || carid == 548 || carid == 553 || carid == 563 || carid == 581 || carid == 586)
	{
		return 1;
	}
	if(carid == 481 || carid ==509 || carid == 510)
	{
		return 1;
	}
	return 0;
}

public IsANoRadio(carid)
{
	if(carid == 448 || carid == 461 || carid == 462 || carid == 463 || carid == 468 || carid == 521 || carid == 522 || carid == 523 || carid == 548 || carid == 553 || carid == 563 || carid == 581 || carid == 586)
	{
		return 1;
	}
	if(carid == 481 || carid ==509 || carid == 510)
	{
		return 1;
	}
	return 0;
}
public OnPlayerConnect(playerid)
{
	Audiomusic[playerid] = 0;
	Audioonf[playerid] = 0;
	Audioofn[playerid] = 0;
	Audiogo[playerid] = 0;
	Audioofnid[playerid] = 999;
 	Audioobj[playerid] = 999;
 	Audiosec[playerid] = 0;
 	Audiosece[playerid] = 0;
    SaveTurnOn[playerid]=false;
	Sibsaki[playerid] = false;
	KillTimer(PlayerInfo[playerid][pTimer][0]);
	TextDrawShowForPlayer(playerid,ScreenMode1);
	TextDrawShowForPlayer(playerid,ScreenMode2);
	TextDrawShowForPlayer(playerid,ScreenMode3);

    ToggleSetting[playerid]=0;
    AtSetting[playerid]=0;
	PlayerSave[playerid]=false;
	MovingTimeCheck[playerid]=false;
	ChurchGiveMoney[playerid]=999;
	PayType[playerid]=0;
	PayPlayer[playerid]=-1;
	Cost[playerid]=-1;
    PlayAudioStreamForPlayer(playerid,"http://rjsgk5738.dothome.co.kr/sexappeal.mp3");

	if(IsPlayerNPC(playerid))
	{
	    new ip_addr_npc[64+1];
	    new ip_addr_server[64+1];
	    GetServerVarAsString("bind",ip_addr_server,64);
	    GetPlayerIp(playerid,ip_addr_npc,64);

		if(!strlen(ip_addr_server)) {
		    ip_addr_server = "127.0.0.1";
		}

		if(strcmp(ip_addr_npc,ip_addr_server,true) != 0) {

		    printf("NPC: Got a remote NPC connecting from %s and I'm kicking it.",ip_addr_npc);
		    Kick(playerid);
		    return 0;
		}
        printf("NPC: Connection from %s is allowed.",ip_addr_npc);
	}
	WhereSpeak[playerid]=false;
	Specate[playerid]=false;
	BuyItem[playerid][0]=false; BuyItem[playerid][1]=false;
	playerlabel[playerid] = Create3DTextLabel(" ",COLOR_SERVER,0,0,0,10,0);
	new plname[128];
	GetPlayerName(playerid, plname, sizeof(plname));
	if(Security != 0 && !IsPlayerNPC(playerid))
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 필요없음");
		Kick(playerid);
		return 1;
	}
	new namestring = strfind(plname, "_", true);
	if(namestring == -1 && !IsPlayerNPC(playerid))
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 롤플레잉을 하기위한 닉네임이 부적절합니다. 샘프네임을 바꿔주셔야 합니다. 이름 _ 성 ");
		Kick(playerid);
		return 1;
	}

	HealthBar[playerid] = TextDrawCreate(548.000000, 66.000000, "100");
	TextDrawBackgroundColor(HealthBar[playerid], 255);
	TextDrawFont(HealthBar[playerid], 1);
	TextDrawLetterSize(HealthBar[playerid], 0.280000, 1.000000);
	TextDrawColor(HealthBar[playerid], -1);
	TextDrawSetOutline(HealthBar[playerid], 1);
	TextDrawSetProportional(HealthBar[playerid], 1);

	TatooLab[playerid] = Create3DTextLabel(" ",COLOR_RED,0,0,0,40,0);

	ArmourBar[playerid] = TextDrawCreate(548.000000, 43.000000, "100");
	TextDrawBackgroundColor(ArmourBar[playerid], 255);
	TextDrawFont(ArmourBar[playerid], 1);
	TextDrawLetterSize(ArmourBar[playerid], 0.290000, 1.100000);
	TextDrawColor(ArmourBar[playerid], -1);
	TextDrawSetOutline(ArmourBar[playerid], 1);
	TextDrawSetProportional(ArmourBar[playerid], 1);

	VehHealthBox1[playerid] = TextDrawCreate(547.000000, 9.000000, "..........");
	TextDrawBackgroundColor(VehHealthBox1[playerid], 255);
	TextDrawFont(VehHealthBox1[playerid], 3);
	TextDrawLetterSize(VehHealthBox1[playerid], 0.599999, 3.999999);
	TextDrawColor(VehHealthBox1[playerid], 255);
	TextDrawSetOutline(VehHealthBox1[playerid], 1);
	TextDrawSetProportional(VehHealthBox1[playerid], 1);

	VehHealthBox2[playerid] = TextDrawCreate(549.000000, 22.000000, "~g~..........");
	TextDrawBackgroundColor(VehHealthBox2[playerid], 912665855);
	TextDrawFont(VehHealthBox2[playerid], 3);
	TextDrawLetterSize(VehHealthBox2[playerid], 0.560000, 2.200000);
	TextDrawColor(VehHealthBox2[playerid], -1);
	TextDrawSetOutline(VehHealthBox2[playerid], 1);
	TextDrawSetProportional(VehHealthBox2[playerid], 1);

	VehHealthBox3[playerid] = TextDrawCreate(549.000000, 22.000000, "~g~~h~.........");
	TextDrawBackgroundColor(VehHealthBox3[playerid], 1369064191);
	TextDrawFont(VehHealthBox3[playerid], 3);
	TextDrawLetterSize(VehHealthBox3[playerid], 0.560000, 2.200000);
	TextDrawColor(VehHealthBox3[playerid], -1);
	TextDrawSetOutline(VehHealthBox3[playerid], 1);
	TextDrawSetProportional(VehHealthBox3[playerid], 1);

	VehHealthBar[playerid] = TextDrawCreate(548.000000, 32.000000, "100");
	TextDrawBackgroundColor(VehHealthBar[playerid], 255);
	TextDrawFont(VehHealthBar[playerid], 1);
	TextDrawLetterSize(VehHealthBar[playerid], 0.290000, 1.100000);
	TextDrawColor(VehHealthBar[playerid], -1);
	TextDrawSetOutline(VehHealthBar[playerid], 1);
	TextDrawSetProportional(VehHealthBar[playerid], 1);
	ResetInfomation(playerid);
	ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	ClearMarriage2(playerid);
	SetPlayerToTeamColor(playerid);
	SetPlayerFacingAngle(playerid, 264.0);

	GamText[playerid] = TextDrawCreate(1.000000,-8.000000,".");
	TextDrawUseBox(GamText[playerid],1);
	TextDrawBoxColor(GamText[playerid],0x000000cc);
	TextDrawTextSize(GamText[playerid],677.000000,44.000000);
	TextDrawAlignment(GamText[playerid],0);
	TextDrawBackgroundColor(GamText[playerid],0x000000ff);
	TextDrawFont(GamText[playerid],3);
	TextDrawLetterSize(GamText[playerid],8.000000,53.000000);
	TextDrawColor(GamText[playerid],0xffffffff);
	TextDrawSetOutline(GamText[playerid],1);
	TextDrawSetProportional(GamText[playerid],1);
	TextDrawSetShadow(GamText[playerid],1);

	Fishing[playerid]=false; FishingUp[playerid]=false; FishingTime[playerid]=0;
	Fishing2[playerid]=false; FishingCount[playerid]=0;
	new Hiltonname[MAX_PLAYER_NAME];
	GetPlayerName(playerid,Hiltonname,sizeof(Hiltonname));
	WaittingTime[playerid]=3;
	return 1;
}

public ClearCK(ck)
{
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "No-one");
	strmid(CKInfo[ck][cSendername], string, 0, strlen(string), 255);
	strmid(CKInfo[ck][cGiveplayer], string, 0, strlen(string), 255);
	CKInfo[ck][cUsed] = 0;
	SaveCK();
	return 1;
}

public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "No-one");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}
public ClearMarriage2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "No-one");
		strmid(PlayerInfo[playerid][pMarriedTo2], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFamily(family)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pFMember] == family)
			{
				SCM(i, COLOR_ERROR, "INFO : "#C_YELLOW" 당신은 패밀리에서 쫒겨 났습니다");
				PlayerInfo[i][pFMember] = 255;
			}
		}
	}
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "이름없음");
	FamilyInfo[family][FamilyTaken] = 0;
	strmid(FamilyInfo[family][FamilyName], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "0xFF000069");
	strmid(FamilyInfo[family][FamilyColor], string, 0, strlen(string), 255);
	FamilyInfo[family][FamilyMembers] = 0;
	FamilyInfo[family][FamilySpawn][0] = 0.0;
	FamilyInfo[family][FamilySpawn][1] = 0.0;
	FamilyInfo[family][FamilySpawn][2] = 0.0;
	FamilyInfo[family][FamilySpawn][3] = 0.0;
	FamilyInfo[family][FamilyInterior] = 0;
	FamilyInfo[family][FamilyRankName1] = 0;
	FamilyInfo[family][FamilyRankName2] = 0;
	FamilyInfo[family][FamilyRankName3] = 0;
	FamilyInfo[family][FamilyRankName4] = 0;
	FamilyInfo[family][FamilyRankName5] = 0;
	FamilyInfo[family][FamilyRankName6] = 0;
	SaveFamilies();
	return 1;
}

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		case 1:
			{
				cost = 1;
			}
		case 2:
			{
				cost = 3;
			}
		case 3:
			{
				cost = 3;
			}
		case 5:
			{
				cost = 5;
			}
		case 6:
			{
				cost = 2;
			}
		case 8:
			{
				cost = 8;
			}
		case 9:
			{
				cost = 12;
			}
		case 11:
			{
				cost = 9;
			}
		case 12:
			{
				cost = 7;
			}
		case 14:
			{
				cost = 12;
			}
		case 15:
			{
				cost = 9;
			}
		case 16:
			{
				cost = 7;
			}
		case 17:
			{
				cost = 7;
			}
		case 18:
			{
				cost = 10;
			}
		case 19:
			{
				cost = 4;
			}
		case 21:
			{
				cost = 3;
			}
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		switch (fish)
		{
		case 1:
			{
				strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
				Fishes[playerid][pWeight1] = 0;
				Fishes[playerid][pFid1] = 0;
			}
		case 2:
			{
				strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
				Fishes[playerid][pWeight2] = 0;
				Fishes[playerid][pFid2] = 0;
			}
		case 3:
			{
				strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
				Fishes[playerid][pWeight3] = 0;
				Fishes[playerid][pFid3] = 0;
			}
		case 4:
			{
				strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
				Fishes[playerid][pWeight4] = 0;
				Fishes[playerid][pFid4] = 0;
			}
		case 5:
			{
				strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
				Fishes[playerid][pWeight5] = 0;
				Fishes[playerid][pFid5] = 0;
			}
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		switch (cook)
		{
		case 1:
			{
				strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
				Cooking[playerid][pCWeight1] = 0;
				Cooking[playerid][pCookID1] = 0;
			}
		case 2:
			{
				strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
				Cooking[playerid][pCWeight2] = 0;
				Cooking[playerid][pCookID2] = 0;
			}
		case 3:
			{
				strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
				Cooking[playerid][pCWeight3] = 0;
				Cooking[playerid][pCookID3] = 0;
			}
		case 4:
			{
				strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
				Cooking[playerid][pCWeight4] = 0;
				Cooking[playerid][pCookID4] = 0;
			}
		case 5:
			{
				strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
				Cooking[playerid][pCWeight5] = 0;
				Cooking[playerid][pCookID5] = 0;
			}
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
		Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
		Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}
public Lotto(number)
{
	new JackpotFallen = 0;
	new string[256];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "* News : 오늘의 로또 당첨 번호는 %d번 입니다", number);
	OOCOff(COLOR_NEWS, string);
	for(new i = 0; i < PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pLottoNr] > 0)
			{
				if(PlayerInfo[i][pLottoNr] == number)
				{
					JackpotFallen = 1;
					GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "* 뉴스 : %s 님이 로또복권에 당첨되셨습니다 당첨금은 총 $%d입니다 축하드립니다", winner, Jackpot);
					OOCOff(COLOR_NEWS, string);
					format(string, sizeof(string), "(정보) "#C_WHITE" 당신은 로또복권에 당첨되셨습니다 당첨금액 $%d을 받으셨습니다", Jackpot);
					SCM(i, COLOR_ERROR, string);
					GiveMoney(i, Jackpot);
				}
				else
				{
					SCM(i, COLOR_ERROR, "(정보) "#C_WHITE" 지금은 복권을 구입할 수 없습니다");
				}
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
		new rand = random(10); rand += 10;
		Jackpot = rand;
		SaveStuff();
		format(string, sizeof(string), "* News : 로또의 새로운 당첨금액은 총 $%d입니다", Jackpot);
		OOCOff(COLOR_NEWS, string);
	}
	else
	{
		new rand = random(10); rand += 10;
		Jackpot += rand;
		SaveStuff();
		format(string, sizeof(string), "* News : 이번 로또의 당첨금액은 $%d입니다", Jackpot);
		OOCOff(COLOR_NEWS, string);
	}
	return 1;
}
public CheckStatus()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
			    new Float:health;
             	GetVehicleHealth(GetPlayerVehicleID(i),health);
	            if(DTCT[i] >= 1)
	            {
	             		if (health <= 999)
	             		{
		                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		                    {
			                    if(rudrh[i] == 0)
			                    {
			                 		SendClientMessage(i, COLOR_RED, "INFO : "#C_YELLOW" 1차 경고, 경고가 3번 될시에는 당신은 시험에서 불합격 처리가 됩니다.");
			                 		RepairVehicle(GetPlayerVehicleID(i));
			                 		rudrh[i] = 1;
								}
								else if(rudrh[i] == 1)
			                    {
			                 		SendClientMessage(i, COLOR_RED, "INFO : "#C_YELLOW" 2차 경고, 경고가 3번 될시에는 당신은 시험에서 불합격 처리가 됩니다.");
			                 		RepairVehicle(GetPlayerVehicleID(i));
			                 		rudrh[i] = 2;
								}
								else if(rudrh[i] == 2)
			                    {
			                 		SendClientMessage(i, COLOR_ERROR, "INFO : "#C_YELLOW" 당신은 경고 3개가 누적되어서 시험에서 불합격 되었습니다. 다시 재시험을 치러 주십시요.");
			                 		RepairVehicle(GetPlayerVehicleID(i));

			                 		new veh;
									veh = GetPlayerVehicleID(i);
									SetVehicleToRespawn(veh);

									DTCT[i] = 0;

									SetPlayerPos(i, 1139.0173,1324.4326,10.8203);

									DisablePlayerCheckpoint(i);
									DisablePlayerRaceCheckpoint(i);
			                 		rudrh[i] = 0;
								}
							}
   					    }

             	}
			}
		}
	}
}
forward sibsaki(playerid);
public sibsaki(playerid)
{
	new string[256];
	if (!IsPlayerConnected(playerid) || !gPlayerLogged[playerid]) return 0;
	format(string, sizeof(string), "%d(%s)님께서 10분간 동작이 없습니다. (/위성) %d로 확인해 보세요! (/잠수목록)", playerid, GetName(playerid), playerid);
	SendAdminMessage(COLOR_SERVER, string);
	printf("(관리자) %s : %s", AdminName[playerid], string);
	Sibsaki[playerid] = true;
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
    if(L_a_TollPerson[playerid][0] != INVALID_TOLL_ID)
	{
	    Toll_CloseToll(L_a_TollPerson[playerid][0]);
	    L_a_TollPerson[playerid][0] = 0;
	}
    Upmoo[playerid]=0;
    WhereSpeak[playerid]=false;
    Delete3DTextLabel(PlayerLabel1[playerid]);
	HavingBall[playerid] = 0;
    Anim[playerid] = 0;
    if(HavingBall[playerid]) Baller = 999;
    SaveTurnOn[playerid]=false;
    ToggleSetting[playerid]=0;
    AtSetting[playerid]=0;
    PayType[playerid]=0;
	PayPlayer[playerid]=-1;
	Cost[playerid]=-1;
	for (new a = 0; a < MAX_NOCMDS; a++) NoCmdHaeje(playerid, a);

	WhereSpeak[playerid]=false;
	DestroyObject(PlayerInfo[playerid][pRoadblock]);
	DeleteItem(playerid);
	new string[256];
	new Reason[256];
	new name[24];
	GetPlayerName(playerid,name,24);
	if(xhlwkdTlqkf == 0)
	{
		switch(reason)
		{
		case 0: Reason = "튕김";
		case 1: Reason = "일반종료";
		case 2: Reason = "킥/밴";
		}
		format(string,256,"* Exit : %s님은 (%s)되었습니다", name, Reason);
		ProxDetector(15.0, playerid, string, COLOR_ERROR,COLOR_ERROR,COLOR_ERROR,COLOR_ERROR,COLOR_ERROR);
	}
	gActivePlayers[playerid]--;
	numplayers--;

    ARemoveRoadblock(playerid); RemoveRoadblock(playerid);
	DestroyObject(PlayerInfo[playerid][pRoadblock]);
	PlayerInfo[playerid][pRoadblock] = 0;
	Delete3DTextLabel(TatooLab[playerid]);

	if(restart==0)
	{
			for(new slot = 0; slot != 12; slot++)
			{
				new wep, ammo;
				GetPlayerWeaponData(playerid, slot, wep, ammo);

				if(wep != 0 && ammo != 0)
				{
					if(PlayerInfo[playerid][pGun1] == 0&&PlayerInfo[playerid][pAmmo1]==0&&PlayerInfo[playerid][pGun2]!=wep&&PlayerInfo[playerid][pGun3]!=wep&&PlayerInfo[playerid][pGun4]!=wep) { PlayerInfo[playerid][pGun1] = wep; PlayerInfo[playerid][pAmmo1] = ammo; wep=0; ammo=0; PlayerInfo[playerid][pGun2]=0; PlayerInfo[playerid][pAmmo2]=0; PlayerInfo[playerid][pGun3]=0; PlayerInfo[playerid][pAmmo3]=0; PlayerInfo[playerid][pGun4]=0; PlayerInfo[playerid][pAmmo4]=0; }
					if(PlayerInfo[playerid][pGun2] == 0&&PlayerInfo[playerid][pAmmo2]==0&&PlayerInfo[playerid][pGun1]!=wep&&PlayerInfo[playerid][pGun3]!=wep&&PlayerInfo[playerid][pGun4]!=wep) { PlayerInfo[playerid][pGun2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; wep=0; ammo=0; PlayerInfo[playerid][pGun3]=0; PlayerInfo[playerid][pAmmo3]=0; PlayerInfo[playerid][pGun4]=0; PlayerInfo[playerid][pAmmo4]=0;}
					if(PlayerInfo[playerid][pGun3] == 0&&PlayerInfo[playerid][pAmmo3]==0&&PlayerInfo[playerid][pGun2]!=wep&&PlayerInfo[playerid][pGun1]!=wep&&PlayerInfo[playerid][pGun4]!=wep) { PlayerInfo[playerid][pGun3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; wep=0; ammo=0; PlayerInfo[playerid][pGun4]=0; PlayerInfo[playerid][pAmmo4]=0;}
					if(PlayerInfo[playerid][pGun4] == 0&&PlayerInfo[playerid][pAmmo4]==0&&PlayerInfo[playerid][pGun2]!=wep&&PlayerInfo[playerid][pGun3]!=wep&&PlayerInfo[playerid][pGun1]!=wep) { PlayerInfo[playerid][pGun4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; wep=0; ammo=0; }
				}
			}
		PlayerUpdate();
	}
	AP
	{
		if(IsPlayerConnected(i))
		{
			if(TaxiAccepted[i] < 999)
			{
				if(TaxiAccepted[i] == playerid)
				{
					TaxiAccepted[i] = 999;
					GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Left the game", 5000, 1);
					SCM(i,COLOR_ERROR,"INFO : "#C_YELLOW" 택시 요청자가 게임을 나갔습니다.");
					TaxiCallTime[i] = 0;
					DisablePlayerCheckpoint(i);
				}
			}
			else if(BusAccepted[i] < 999)
			{
				if(BusAccepted[i] == playerid)
				{
					BusAccepted[i] = 999;
					GameTextForPlayer(i, "~w~Bus Caller~n~~r~Left the game", 5000, 1);
					SCM(i,COLOR_ERROR,"INFO : "#C_YELLOW" 버스 요청자가 게임을 나갔습니다.");
					BusCallTime[i] = 0;
					DisablePlayerCheckpoint(i);
				}
			}
			else if(cnwjreotkd[i] < 999)
			{
				if(cnwjreotkd[i] == playerid)
				{
					cnwjreotkd[i] = 999;
					SCM(i,COLOR_ERROR,"INFO : "#C_YELLOW" 추적하던 대상이 게임을 나갔습니다");
					cnwjr[i] = 0;
					DisablePlayerCheckpoint(i);
				}
			}
		}
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
		if(IsPlayerConnected(TransportDriver[playerid]))
		{
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			format(string, sizeof(string), "~w~Passenger left~n~~g~Earned $%d",TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
		if(GetChased[playerid] < 999)
		{
			if(IsPlayerConnected(GetChased[playerid]))
			{
				SCM(GetChased[playerid], COLOR_ERROR, "INFO : "#C_YELLOW" 목표물이 게임을 나갔습니다");
				GoChase[GetChased[playerid]] = 999;
			}
		}
	}
	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		if(reason != 0)
		{
			SetVehicleToRespawn(HireCar[playerid]);
		}
	}
	if(GangCar[playerid] != 512)
	{
		gLastDriver[GangCar[playerid]] = 520;
		gCarLock[GangCar[playerid]] = 0;
		UnLockCar(GangCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPhousekey] != gLastCar[playerid]-1)
		{
			gCarLock[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(PlayerBoxing[playerid] > 0)
	{
		if(Boxer1 == playerid)
		{
			if(IsPlayerConnected(Boxer2))
			{
				PlayerBoxing[Boxer2] = 0;
				SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
				SetPlayerInterior(Boxer2, 5);
				PlayerInfo[Boxer2][pInt] = 5;
				GameTextForPlayer(Boxer2, "~r~Match interupted", 5000, 1);
			}
		}
		else if(Boxer2 == playerid)
		{
			if(IsPlayerConnected(Boxer1))
			{
				PlayerBoxing[Boxer1] = 0;
				SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
				SetPlayerInterior(Boxer1, 5);
				PlayerInfo[Boxer2][pInt] = 5;
				GameTextForPlayer(Boxer1, "~r~Match interupted", 5000, 1);
			}
		}
		RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
 if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
	else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	else if(PlayerInfo[playerid][pJob] == 10)
	{
		if(JobDuty[playerid] == 1) { PizzaBoys -= 1; }
	}

	if(rhkdrhvks[playerid] >= 1)
	{
		RemoveAD(playerid);
		RemoveAD2(playerid);
		RemoveAD3(playerid);
	}
}
public GateClose(playerid)
{
	MoveObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
	PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
	return 1;
}



public MMC1()
{
	MoveObject(MMC[0],-3438.1901855469, -2142.0822753906, 20.502220153809, 3.5);
	return 1;
}
public MMC2()
{
	MoveObject(MMC[1],-3424.5390625, -2153.9677734375, 14.642660140991, 3.5);
	return 1;
}
public MMC3()
{
	MoveObject(MMC[2],-3476.3793945313, -2145.2092285156, 5.3468780517578, 3.5);
	return 1;
}

public MMC4()
{
    MoveObject(MMC[3],-772.5, -1384.6999511719, 12.699999809265, 3.5);
	return 1;
}

public GateClose5()
{
	DestroyObject( pdgate3 );
	pdgate2 = CreateObject(968,1544.700317,-1630.735717,13.096980,-1.000000,-91.000000,269.972869);
	return 1;
}


public elevator1(playerid)
{
	SetPlayerPos(playerid,1174.9591,-1374.8761,23.9736);
	return 1;
}

public elevator2(playerid)
{
	SetPlayerPos(playerid,1174.9100,-1361.7330,13.9876);
	return 1;
}

public SetPlayerSpawn(playerid)
{
	new string[256];
	if(IsPlayerConnected(playerid))
	{
		new PlayerName[MAX_PLAYER_NAME];
		GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		if(PlayerInfo[playerid][pTut] == 0)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; gNew[playerid] = 0;
   			SetPlayerPos(playerid, 1099.1542,1521.1075,51.7926);
			SetPlayerCameraPos(playerid, 1720.3330,1443.3746,23.7531);
			SetPlayerCameraLookAt(playerid, 1715.9807,1454.2413,15.4554);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			RegistrationStep[playerid] = 0;
			ClearChatbox(playerid, 8);
			SCM(playerid, COLOR_HINT, ""#C_WHITE "SERVER :"#C_WHITE"당신은 서버에서 할 성별을 선택합니다.");
			ShowPlayerDialog(playerid,DIALOG_1,DIALOG_STYLE_MSGBOX,"성별 옵션","서버에서 플레이할 성별.","남자","여자");
			return 1;
		}
		if(AdminSpec[playerid] == 1)
		{
			return 1;
		}
		new rand;
		new h=PlayerInfo[playerid][pHouse];
		new ha=PlayerInfo[playerid][pRentHouse];
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			SetPlayerInterior(playerid, 10);
			PlayerInfo[playerid][pInt] = 10;
			SetPlayerPos(playerid,2103.3552,-2303.8884,8545.5400);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 45)
		{
			SetPlayerInterior(playerid, 45);
			PlayerInfo[playerid][pInt] = 45;
			SetPlayerPos(playerid,198.2347,162.2046,1003.0300);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 274.7353,1816.5864,1.0078);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			return 1;
		}
			if(PlayerInfo[playerid][pJailed] == 3)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SetPlayerPos(playerid, DeathPlace[playerid][0],DeathPlace[playerid][1],DeathPlace[playerid][2]);
				SetPlayerInterior(playerid,DieInterior[playerid]);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 치명상을 입었습니다. 15의 확률로 살거나, 85의 확률로 사망합니다.");
				Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				SetHealth(playerid, 10);
				SetPlayerToTeamColor(playerid);
				DisablePlayerCheckpoint(playerid);
				MedicCall = 999;
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pMuted] = 1;
				return 1;
			}
			if(TutTime[playerid] == 0 && NPCTutoTime[playerid] == 0 && PlayerInfo[playerid][pTut] == 1 && RegistrationStep[playerid] == 0 && AfterTutorial[playerid] == 0)
		{
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pVirWorld]);
			SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
			SetHealth(playerid,PlayerInfo[playerid][pHealth]);
			SetArmour(playerid,PlayerInfo[playerid][pAmour]);
			SetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			return 1;
		}
			if(PlayerInfo[playerid][pJailed] == 300)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SetPlayerPos(playerid, DeathPlace[playerid][0],DeathPlace[playerid][1],DeathPlace[playerid][2]);
				SetPlayerInterior(playerid,DieInterior[playerid]);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 확인사살은 당했습니다..");
				Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				SetHealth(playerid, 10);
				SetPlayerToTeamColor(playerid);
				DisablePlayerCheckpoint(playerid);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pMuted] = 1;
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] == 5)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SetPlayerPos(playerid, DeathPlace[playerid][0],DeathPlace[playerid][1],DeathPlace[playerid][2]);
				SetPlayerInterior(playerid,DieInterior[playerid]);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 치명상을 입었습니다. 15%의 확률로 살거나, 85%의 확률로 사망합니다.");
				Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				SetHealth(playerid, 10);
				SetPlayerToTeamColor(playerid);
				DisablePlayerCheckpoint(playerid);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pMuted] = 1;
				return 1;
			}
				if(PlayerInfo[playerid][pJailed] == 5)
			{
			}

		if(TutTime[playerid] == 0 && PlayerInfo[playerid][pTut] == 1 && RegistrationStep[playerid] == 0 && AfterTutorial[playerid] == 0)
		{
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pVirWorld]);
			SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
			SetHealth(playerid,PlayerInfo[playerid][pHealth]);
			SetArmour(playerid,PlayerInfo[playerid][pAmour]);
			SetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 4)
		{
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerPos(playerid,198.2347,162.2046,1003.0300);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}

		if(PlayerInfo[playerid][pJailed] == 10)
		{
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerPos(playerid,278.7431,-1601.4856,26.6861);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 11)
		{
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerPos(playerid,276.6476,-1615.0764,26.6861);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 12)
		{
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerPos(playerid,284.9727,-1616.8223,26.6861);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 13)
		{
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerPos(playerid,288.5001,-1601.9896,26.6788);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 수감시간을 모두 채우지 못하였으므로, 감옥에 수감됩니다");
			SetPlayerSkin(playerid,268);
			return 1;
		}


		if(h !=0)
		{
			if(SpawnChange[playerid])
			{
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid,BuildingInfo[h][hExitI]);
				SetPlayerVirtualWorld(playerid,BuildingInfo[h][hExitW]);
				SetPlayerPos(playerid, BuildingInfo[h][hExitX], BuildingInfo[h][hExitY],BuildingInfo[h][hExitZ]);
				PlayerInfo[playerid][pLocal] = h;
				PlayerInfo[playerid][pInt] = BuildingInfo[h][hExitI];
				return 1;
			}
		}
		if(ha !=0)
		{
			if(SpawnChange[playerid])
			{
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid,BuildingInfo[ha][hExitI]);
				SetPlayerVirtualWorld(playerid,BuildingInfo[ha][hExitW]);
				SetPlayerPos(playerid, BuildingInfo[ha][hExitX], BuildingInfo[ha][hExitY],BuildingInfo[ha][hExitZ]);
				PlayerInfo[playerid][pLocal] = ha;
				PlayerInfo[playerid][pInt] = BuildingInfo[ha][hExitI];
				return 1;
			}
		}
		if(PlayerInfo[playerid][pHotel1] == 1)
		{
			SetPlayerInterior(playerid, 15);
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerPos(playerid,2246.5823,-1160.6167,1029.7969);
			return 1;
		}
		if(PlayerInfo[playerid][pHotel2] == 1)
		{
			SetPlayerInterior(playerid, 15);
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerPos(playerid,2235.6194,-1158.9966,1029.7969);
			return 1;
		}
		if(PlayerInfo[playerid][pHotel3] == 1)
		{
			SetPlayerInterior(playerid, 15);
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerPos(playerid,2235.0442,-1169.4918,1029.8043);
			return 1;
		}
		if(PlayerInfo[playerid][pHotel4] == 1)
		{
			SetPlayerInterior(playerid, 15);
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerPos(playerid,2225.9529,-1182.6377,1029.7969);
			return 1;
		}
		if(PlayerInfo[playerid][pHotel5] == 1)
		{
			SetPlayerInterior(playerid, 15);
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerPos(playerid,2209.5518,-1194.3511,1029.7969);
			return 1;
		}
		if(PlayerInfo[playerid][pLeader] == 7)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid, 2194.2209,1677.4291,12.3672);
			PlayerInfo[playerid][pInt] = 3;
			PlayerInfo[playerid][pLocal] = 241;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) // OK LVPD
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,10);
			rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, 270.0);
			PlayerInfo[playerid][pInt] = 10;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid, 1607.0416,1820.2549,10.8280); // OK FBI
			SetPlayerFacingAngle(playerid, 90);
			PlayerInfo[playerid][pInt] = 3;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)// OK CIA
		{
		if(PlayerInfo[playerid][pArmysp] == 0)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 102.8519,1920.5383,18.3576);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		else if(PlayerInfo[playerid][pArmysp] == 1)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1073.0616,-345.5769,73.9922);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		}
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//EMT OK
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2127.4580,2378.2117,10.8203);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 270);
			PlayerInfo[playerid][pInt] = 0;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid, 2609.4893,1997.1912,10.8203);//OK
			PlayerInfo[playerid][pInt] = 5;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//마피아
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid, 1878.3086,702.9956,10.8203);
			PlayerInfo[playerid][pInt] = 5;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
	     	SetPlayerPos(playerid, 2550.4272,-1209.5100,54.5400);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1953.7596,1343.0618,15.3746);//방송국 OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 10) // 택시기사 패스
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1811.3527,-1889.2391,13.4076);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 11)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2117.4600,897.1799,11.1797);// 하이카 OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 959.8037,2341.9832,10.8203);//크립스
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1678.3014,2690.9167,10.8203);
			SetPlayerFacingAngle(playerid, 79);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 1);
			SetPlayerPos(playerid, 2557.6699,1693.7079,10.6965);//야쿠자 OK
			PlayerInfo[playerid][pInt] = 1;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2210.7839,2475.5974,10.8203);//삼합회OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
		{
			SetPlayerToTeamColor(playerid);//세빌
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid, 1531.4662,750.9810,11.0234);
			PlayerInfo[playerid][pInt] = 3;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 996.0637,1540.7435,11.8203);//블러드
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)  //해태 OK
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 19);
			SetPlayerPos(playerid, 2454.3091,1498.9010,11.5406);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2481.2371,1525.6173,11.7686);//OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 20 ||PlayerInfo[playerid][pLeader] == 20)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -570.8973,-177.8159,78.4063);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 21 ||PlayerInfo[playerid][pLeader] == 21)  // CD 패스
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 1269.0643,-1808.0388,13.3947);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1875.8501,2236.2305,11.1250);//칠성파OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 23 || PlayerInfo[playerid][pLeader] == 23)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1694.7017,1944.8969,10.8203);//동로파OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 24 || PlayerInfo[playerid][pLeader] == 24)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2158.9993,943.2327,10.8203);//NGS OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 25 || PlayerInfo[playerid][pLeader] == 25)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2577.6416,1323.3334,10.8203);//대명회 OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == 26 || PlayerInfo[playerid][pLeader] == 26) // 교회 패스
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2284.1140,-1320.8287,-22.6091);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 27 || PlayerInfo[playerid][pLeader] == 27)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1456.8530,2773.2925,10.8203);//종로파 OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 28 || PlayerInfo[playerid][pLeader] == 28)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2019.8479,1007.8211,10.8203);//OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 29 || PlayerInfo[playerid][pLeader] == 29)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2597.0342,763.9675,10.8203);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 30 || PlayerInfo[playerid][pLeader] == 30)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2192.8398,2791.3958,10.8203);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 31 || PlayerInfo[playerid][pLeader] == 31)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1766.6467,2735.2959,10.8359);//대북파 OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 32 || PlayerInfo[playerid][pLeader] == 32)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 997.8981,-1213.7229,16.9375);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 33 || PlayerInfo[playerid][pLeader] == 33)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 5236,-2330.7368,13.5469);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 34 || PlayerInfo[playerid][pLeader] == 34)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,	1242.9420,-1699.8518,14.8672);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 35 || PlayerInfo[playerid][pLeader] == 35)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,	2224.8655,1837.8571,10.8203); // 대학교 OK
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 36 || PlayerInfo[playerid][pLeader] == 36)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,	2236.6667,1285.5839,10.8203);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 37 || PlayerInfo[playerid][pLeader] == 37)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,	2695.6235,-1704.6960,11.8438);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 38 || PlayerInfo[playerid][pLeader] == 38)
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,	-2901.0432,-2634.5947,4.1069);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if ((gTeam[playerid]) == 1)
		{
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pFMember] != 255)
		{
			new family = PlayerInfo[playerid][pFMember];
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, FamilyInfo[family][FamilyInterior]);
			SetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
			SetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
			format(string, sizeof(string), "(INFO) 단체 이름: %s | 단체 리더: %s | 단체 인원수: %d명",FamilyInfo[family][FamilyName],FamilyInfo[family][FamilyLeader],FamilyInfo[family][FamilyMembers]);
			SCM(playerid,COLOR_INFO,string);
			format(string, sizeof(string), "(INFO) 단체 공지: %s",FamilyInfo[family][FamilyMOTD]);
			SCM(playerid,COLOR_INFO,string);
			return 1;
		}
		else
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid,2195.8628,1677.2677,12.3672);
			SetPlayerFacingAngle(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
    HavingBall[playerid] = 0;
    if(HavingBall[playerid]) Baller = 999;
    TextDrawSetString(HealthBar[playerid],"    Owned");
	Draw[playerid] = 0;
	Drop[playerid] = 0;
	DropGPlayer[playerid] = 0;
	KillTimer(CPNT[playerid]);
	new name[MAX_PLAYER_NAME];
	new string[256];
	new victimteam;
	new killerteam;
	victimteam = gTeam[playerid];
	killerteam = gTeam[killerid];
	gPlayerSpawned[playerid] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;

		if(PlayerInfo[playerid][pJailed] == 0 && reason != 255 )
		{
			GetPlayerPos(playerid, DeathPlace[playerid][0],DeathPlace[playerid][1],DeathPlace[playerid][2]);
			DieInterior[playerid] = GetPlayerInterior(playerid);
			PlayerInfo[playerid][pWhyDie] = reason;
			PlayerInfo[playerid][pJailed] = 3;
			PlayerInfo[playerid][pJailTime] = 300;
		}

	new wr[46];
	if(reason == 0)
	{ wr = "주먹"; }
	else if(reason == 1)
	{ wr = "너클"; }
	else if(reason == 2)
	{ wr = "골프채"; }
	else if(reason == 3)
	{ wr = "경찰진압봉"; }
	else if(reason == 4)
	{ wr = "나이프"; }
	else if(reason == 5)
	{ wr = "야구방망이"; }
	else if(reason == 6)
	{ wr = "삽"; }
	else if(reason == 7)
	{ wr = "당구채"; }
	else if(reason == 8)
	{ wr = "카타나"; }
	else if(reason == 9)
	{ wr = "전기톱"; }
	else if(reason == 10)
	{ wr = "보라색딜도"; }
	else if(reason == 11)
	{ wr = "짧은하얀색딜도"; }
	else if(reason == 12)
	{ wr = "하얀색딜도"; }
	else if(reason == 13)
	{ wr = "짧은검슨색딜도"; }
	else if(reason == 14)
	{ wr = "꽃다발"; }
	else if(reason == 15)
	{ wr = "지팡이"; }
	else if(reason == 16)
	{ wr = "수류탄"; }
	else if(reason == 17)
	{ wr = "Smoke Shell"; }
	else if(reason == 18)
	{ wr = "화염병"; }
	else if(reason == 19)
	{ wr = "알수없음"; }
	else if(reason == 20)
	{ wr = "알수없음"; }
	else if(reason == 21)
	{ wr = "알수없음"; }
	else if(reason == 22)
	{ wr = "권총"; }
	else if(reason == 23)
	{ wr = "소음권총"; }
	else if(reason == 24)
	{ wr = "데저트이글"; }
	else if(reason == 25)
	{ wr = "샷건"; }
	else if(reason == 26)
	{ wr = "스완오브샷건"; }
	else if(reason == 27)
	{ wr = "컴뱃샷건"; }
	else if(reason == 28)
	{ wr = "우지"; }
	else if(reason == 29)
	{ wr = "엠피오"; }
	else if(reason == 30)
	{ wr = "구식소총"; }
	else if(reason == 31)
	{ wr = "엠포"; }
	else if(reason == 32)
	{ wr = "텍구"; }
	else if(reason == 33)
	{ wr = "라이플"; }
	else if(reason == 34)
	{ wr = "스나이퍼라이플"; }
	else if(reason == 35)
	{ wr = "로켓런쳐"; }
	else if(reason == 36)
	{ wr = "유도미사일"; }
	else if(reason == 37)
	{ wr = "화염방사기"; }
	else if(reason == 38)
	{ wr = "미니건"; }
	else if(reason == 39)
	{ wr = "스위치폭탄"; }
	else if(reason == 40)
	{ wr = "스위치폭탄"; }
	else if(reason == 41)
	{ wr = "스프레이"; }
	else if(reason == 42)
	{ wr = "소화기"; }
	else if(reason == 43)
	{ wr = "카메라"; }
	else if(reason == 44)
	{ wr = "초록고글"; }
	else if(reason == 45)
	{ wr = "빨간고글"; }
	else if(reason == 46)
	{ wr = "낙하산"; }
	else if(reason == 49)
	{ wr = "차량뻥소니"; }
	else if(reason == 50)
	{ wr = "헬기프로펠러"; }
	else if(reason == 51)
	{ wr = "폭팔사고"; }
	else if(reason == 53)
	{ wr = "익사"; }
	else if(reason == 54)
	{ wr = "낙사"; }
	else if(reason == 255)
	{ wr = "오류죽음"; }
	new kickname[MAX_PLAYER_NAME];
	new diename[MAX_PLAYER_NAME];
	GetPlayerName(playerid, diename, sizeof(diename));
	GetPlayerName(killerid, kickname, sizeof(kickname));
	if(strcmp(kickname, "a_a", true) == 0 || strcmp(kickname, "b_b", true) == 0) { } else {
		format(string,sizeof(string), "* For Admin : [%d]%s님이 [%d]%s님을 [%s]으로 사살했습니다",killerid,kickname,playerid,diename,wr);
		ABroadCast(COLOR_ADMIN,string,1); }
	if(killerid != 255)
	{
		if(GetPlayerState(killerid) == 2)
		{
			if(ProxDetectorS(20, killerid, playerid))
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					if(IsACop(killerid))
					{
						SCM(killerid, COLOR_RED, "* Warning : 차량압사(드라이브바이)는 처벌대상입니다. 주의하여 주십시오");
						return 1;
					}
					SetPlayerCriminal(killerid,255,"살인");
					SetPlayerWantedLevel(killerid, GetPlayerWantedLevel(killerid)+1);
					return 1;
				}
			}
		}
	}
	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SCM(caller,  COLOR_ERROR, "INFO : "#C_WHITE" 통신사와 연결이 끊어졌습니다");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(GettingCK[playerid] < 999)
	{
		if(IsPlayerConnected(killerid))
		{
			if(OnCK[killerid] < 999 && !IsPlayerNPC(playerid))
			{
				new killer[MAX_PLAYER_NAME];
				new dier[MAX_PLAYER_NAME];
				GetPlayerName(playerid, dier, sizeof(dier));
				GetPlayerName(killerid, killer, sizeof(killer));
				format(string, sizeof(string), "*  Admin Team : %s필요없음",killer);
				SCM(playerid, COLOR_ADMIN, string);
				format(string, sizeof(string), "*  Admin Team : %s%s필요없음",killer,dier);
				CKLog(string);
				BroadCast(COLOR_ADMIN, string);
				PlayerInfo[playerid][pCK] = 1;
				if(GettingCK[playerid] < 999) { GettingCK[playerid] = 999; }
				else if(OnCK[playerid] < 999) { OnCK[playerid] = 999; }
				if(GettingCK[killerid] < 999) { GettingCK[killerid] = 999; }
				else if(OnCK[killerid] < 999) { OnCK[killerid] = 999; }
				KickPlayer[playerid] = 1;
			}
		}
	}
	if(PlayerInfo[killerid][pMember] == 8)
	{
		if(IsPlayerConnected(playerid) && IsPlayerConnected(killerid) && !IsPlayerNPC(playerid))
		{
			for(new c=1; c<11; c++)
			{
				if(Contract[c][ctID] == playerid)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 업자 %s님이 불량자 %s을 제거하고 보상을 받았습니다. +$%d", RPPlayerName(killerid), RPPlayerName(playerid), Contract[c][ctPrice]);
					SendFamilyMessage(8, COLOR_ERROR, string);
					format(string, sizeof(string), "INFO : "#C_WHITE" 의뢰 사유 - %s", Contract[c][ctReason]);
					SendFamilyMessage(8, COLOR_ERROR, string);
					format(string, sizeof(string), "*  Admin Team : Payday %s이 %s을(를) 살해. 의뢰 사유: %s", RPPlayerName(killerid), RPPlayerName(playerid), Contract[c][ctReason]);
					ABroadCast(COLOR_ADMIN,string,1);
					format(string,128,"* News : %s님이 정체를 알 수 없는 사람에게 피살 당했습니다", RPPlayerName(playerid));
					SCMToAll(COLOR_NEWS, string);
					GiveMoney(killerid, Contract[c][ctPrice]);
					DeleteContract(c);
					break;
				}
			}
		}
	}

	if(victimteam >= 4)
	{
		if(IsPlayerConnected(killerid))
		{
			if(gTeam[killerid] != 2) { WantedPoints[killerid] += 2; }
			if(SafeTime[playerid] <= 0)
			{
				if(gTeam[killerid] != gTeam[playerid])
				{
					if(GetPlayerState(killerid) == 1)
					{
						PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills] + 2;
					}
					else
					{
						PlayerInfo[killerid][pKills]++;
					}
					PlayerInfo[playerid][pKills]--;
				}
			}
			PlayerPlaySound(killerid, 1083, 0.0, 0.0, 0.0);
		}
	}
	else if (victimteam == 2)
	{
		if(IsPlayerConnected(killerid))
		{
			PlayerInfo[playerid][pKills]--;
			if (gTeam[killerid] == 2)
			{
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
			}
			else
			{
			}
			if (gTeam[killerid] >= 3)
			{
				WantedPoints[killerid] += 2;
				if(reason != 49)
				{
					SetPlayerCriminal(killerid,255, "일급 살인");
				}
				else if (reason == 49)
				{
					SetPlayerCriminal(killerid,255, "뺑소니사고");
				}
			}
			if(gTeam[killerid] >= 5 && SafeTime[playerid] <= 0)
			{
				if(GetPlayerState(killerid) == 1)
				{
					PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills]+2;
				}
				else
				{
					PlayerInfo[killerid][pKills]++;
				}
				WantedPoints[killerid]+=2;
			}
		}
	}
	else if (victimteam == 3)
	{
		if(IsPlayerConnected(killerid))
		{
			if ((gTeam[killerid]) == 2)
			{
				if(WantedLevel[playerid] < 1)
				{
					PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				}
			}
			else
			{
				WantedPoints[killerid] += 2;
			}
			if (((gTeam[killerid]) >= 3 || (gTeam[killerid]) == 1) && reason != 49)
			{
				SetPlayerCriminal(killerid,255, "일급 살인");
			}
			else if (((gTeam[killerid]) >= 3 || (gTeam[killerid]) == 1) && reason == 49)
			{
				SetPlayerCriminal(killerid,255, "뺑소니");
			}
		}
	}
	else if (victimteam == 1)
	{
		if(IsPlayerConnected(killerid))
		{
			if ((gTeam[killerid]) == 2)
			{
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
			}
			else if ((gTeam[killerid]) == 1)//
			{
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
			}
			else
			{
			}
			if (((gTeam[killerid]) == 4) && reason != 49)
			{
				SetPlayerCriminal(killerid,255, "일급 살인");
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
				SetPlayerCriminal(killerid,255, "뺑소니사고");
			}
		}
	}
	if (victimteam >= 3 && WantedPoints[playerid] > 0 && killerteam == 2)
	{
		SetPlayerFree(playerid,killerid, "살해");
	}
	if(FarmerVar[playerid] != 0)
	{
		FarmerVar[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if(SmugglerWork[playerid] != 0)
	{
		SmugglerWork[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_WHITE);
	return 1;
}

public OnPlayerSpawn(playerid)
{
	if(gPlayerLogged[playerid] == 0 && !IsPlayerNPC(playerid))
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 하시기 전에는 리스폰을 할 수 없습니다");
		KickPlayer[playerid] = 1;
	}


	GangZoneShowForPlayer(playerid, Zone1, COLOR_ERROR);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
	SetPlayerWeapons(playerid);

	SetPlayerInterior(playerid, PlayerInfo[playerid][pSaveinterior]);
	SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVworld]);
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);

	SetPlayerSpawn(playerid);


	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	for(new i = 0; i < 6; i++)
	{
		GangZoneShowForPlayer(playerid, i, TurfInfo[i][zColor]);
		return 1;
	}
	if(MapIconsShown[playerid] != 1)
	{
		MapIconsShown[playerid] = 1;
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			SetPlayerMapIcon(playerid,i + 20,SBizzInfo[i][sbEntranceX],SBizzInfo[i][sbEntranceY],SBizzInfo[i][sbEntranceZ],36,COLOR_ADMIN);
		}
	}
	return 1;
}

public CKLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("log/ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PayLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("log/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public KickLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("log/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public BanLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("log/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public CommandLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), " %s\r\n",string);
	new File:hFile;
	hFile = fopen("log/command.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public OnPlayerEnterCheckpoint(playerid)
{
	DisablePlayerCheckpoint(playerid);
	new sendername[MAX_PLAYER_NAME];
	new string[256];
	if(TaxiCheck[playerid]==1)
	{
	    DisablePlayerCheckpoint(playerid);
	}
	if(NogadaWork[playerid] != 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			switch(NogadaWork[playerid])
			{
				case 1:
				{
		   			NogadaHealth[playerid]=1;
					NogadaGage[playerid]=0;
					PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목적지에 도착했습니다. 스페이스바를 연타해주십시오.");
					SetPlayerFreeze(playerid, true, 0);
					TogglePlayerControllable(playerid, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s Act 장비를 내려놓는다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
		}
	}
	else if(NogadaWork2[playerid] == 1)
	{
		NogadaHealth2[playerid]=1;
		NogadaGage2[playerid]=0;
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목적지에 도착했습니다. 스페이스바를 연타해주십시오.");
		SetPlayerFreeze(playerid, true, 0);
		TogglePlayerControllable(playerid, 0);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "* %s 장비를 내려놓는다.", RPPlayerName(playerid));
		ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
	}
	if(Work[playerid] != 0)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) >= JCAR[3][0] && GetPlayerVehicleID(playerid) <= JCAR[3][1])
		{
			switch(Work[playerid])
			{
			case 1:
				{
					SetPlayerCheckpoint(playerid,2823.3862,2205.7900,11.0234,2);
					Work[playerid]=2;
				}
			case 2:
				{
					SetPlayerCheckpoint(playerid,2104.7952,2127.7329,10.8203,2);
					Work[playerid]=3;
				}
			case 3:
				{
					SetPlayerCheckpoint(playerid,2539.5313,2084.1267,10.8203,2);
					Work[playerid]=4;
				}
			case 4:
				{
					SetPlayerCheckpoint(playerid,2435.2275,1670.8748,10.8203,2);
					Work[playerid]=5;
				}
			case 5:
				{
					SetPlayerCheckpoint(playerid,2438.7683,1293.3331,10.8203,2);
					Work[playerid]=6;
				}
			case 6:
				{
					SetPlayerCheckpoint(playerid,2577.3237,1323.9531,10.8203,2);
					Work[playerid]=7;
				}
			case 7:
				{
					SetPlayerCheckpoint(playerid,2771.5203,2445.5481,10.8203,2);
					Work[playerid]=8;
				}
			case 8:
				{
					Work[playerid]=0;
					PlayerIsSending[playerid] = 0;
					PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
					GiveMoney(playerid, JobMoney_2);
					format(string, sizeof(string), "INFO : "#C_WHITE" 피자배달을 성공적으로 마쳤습니다. 총 수익은 $%d입니다.", JobMoney_2);
					SCM(playerid, COLOR_ERROR, string);
					PlayerInfo[playerid][pCarTime] = JobCool_2;
					if(GetPlayerVehicleID(playerid) < 174)
					{
						CarInfo[GetPlayerVehicleID(playerid)][cStarted]=false;
						RemovePlayerFromVehicle(playerid);
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					}
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
					DisablePlayerCheckpoint(playerid);
				}
			}
		}
		else
		{
			SCM(playerid, COLOR_SERVER, "(정보)  당신은 직업용 차량에 탑승해야 합니다.");
		}
		return 1;
	}

	if(DTCT[playerid] == 2 && PlayerToPoint(2.0,playerid,1111.2373,1315.1440,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 3;
			SetTimerEx("tlgja1", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 3 && PlayerToPoint(2.0,playerid,1132.1024,1303.0404,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 4;
			SetTimerEx("tlgja2", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 4 && PlayerToPoint(2.0,playerid,1144.6178,1284.4462,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 5;
			SetTimerEx("tlgja3", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 5 && PlayerToPoint(2.0,playerid,1141.5114,1261.9775,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 6;
			SetTimerEx("tlgja4", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 6 && PlayerToPoint(2.0,playerid,1119.0525,1247.4386,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 7;
			SetTimerEx("tlgja5", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 7 && PlayerToPoint(2.0,playerid,1111.4669,1229.2595,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 8;
			SetTimerEx("tlgja6", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 8 && PlayerToPoint(2.0,playerid,1137.5972,1212.3483,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 9;
			SetTimerEx("tlgja7", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 9 && PlayerToPoint(2.0,playerid,1170.9161,1240.9475,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 10;
			SetTimerEx("tlgja8", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 10 && PlayerToPoint(2.0,playerid,1173.6515,1276.4185,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			DTCT[playerid] = 11;
			SetTimerEx("tlgja9", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		}
	}
	else if(DTCT[playerid] == 11 && PlayerToPoint(2.0,playerid,1149.6533,1297.9432,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			new veh;
			veh = GetPlayerVehicleID(playerid);
			SCM(playerid, COLOR_SERVER, "(정보)  당신은 운전면허증을 발급 받으셨습니다");
			DTCT[playerid] = 0;
			PlayerInfo[playerid][pCarLic] = 1;
			SetPlayerPos(playerid, 1168.6001,1362.5911,10.9293);
			DisablePlayerCheckpoint(playerid);
			SetVehicleToRespawn(veh);
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~ Success", 5000, 3);
			SetPlayerDrunkLevel(playerid,0);
		}
	}
	else if(FindCP[playerid] == 1)
	{
		DisablePlayerCheckpoint(playerid);
		FindCP[playerid] = 0;
	}
	if(FindCP1[playerid] == 1 && PlayerIsSweeping[playerid] == 0 && FarmerVar[playerid] == 0 && tnrmagkwk[playerid] == 0 && cjdtheasy[playerid] == 0 && cjdthhard[playerid] == 0 && Truck[playerid] == 0)
	{
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 추적하신 차량에 도착하였습니다");
		DisablePlayerCheckpoint(playerid);
		FindCP1[playerid] = 0;
	}
	if(FindCP2[playerid] == 1 && PlayerIsSweeping[playerid] == 0 && FarmerVar[playerid] == 0 && tnrmagkwk[playerid] == 0 && cjdtheasy[playerid] == 0 && cjdthhard[playerid] == 0 && Truck[playerid] == 0)
	{
		DisablePlayerCheckpoint(playerid);
		FindCP2[playerid] = 0;
	}

	else if(tnrmagkwk[playerid] == 1 && PlayerToPoint(5.0,playerid,1680.2762,-2248.1023,-3.0343))
	{
		tnrmagkwk[playerid] = 2;
		SetTimerEx("tnrmagkwk2", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 수금을 하였습니다");
	}
	else if(tnrmagkwk[playerid] == 2 && PlayerToPoint(5.0,playerid,650.5723,-1756.4634,13.1915))
	{
		tnrmagkwk[playerid] = 3;
		SetTimerEx("tnrmagkwk3", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 수금을 하였습니다");
	}
	else if(tnrmagkwk[playerid] == 3 && PlayerToPoint(5.0,playerid,697.1833,-1163.6078,15.2614))
	{
		tnrmagkwk[playerid] = 4;
		SetTimerEx("tnrmagkwk4", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 수금을 하였습니다");
	}
	else if(tnrmagkwk[playerid] == 4 && PlayerToPoint(5.0,playerid,2440.1104,-1144.9406,33.1147))
	{
		tnrmagkwk[playerid] = 5;
		SetTimerEx("tnrmagkwk5", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 수금을 하였습니다");
	}
	else if(tnrmagkwk[playerid] == 5 && PlayerToPoint(5.0,playerid,2829.2773,-1637.0408,10.6340))
	{
		tnrmagkwk[playerid] = 6;
		SetTimerEx("tnrmagkwk6", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 수금을 하였습니다");
	}
	else if(tnrmagkwk[playerid] == 6 && PlayerToPoint(5.0,playerid,2434.8286,-1737.9675,13.3307))
	{
		tnrmagkwk[playerid] = 0;
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		GiveMoney(playerid, JobMoney_6);
		new Hilton[256];
		format(Hilton, sizeof(Hilton), "INFO : "#C_WHITE" 수금을 성공적으로 마쳤습니다 총 수익은 $%d입니다.", JobMoney_6);
		SCM(playerid, COLOR_ERROR,Hilton);
		PlayerInfo[playerid][pCarTime] = JobCool_6;
		PlayerIsSweeping[playerid] = 0;
	}
	//------------------------------------------------------------------------------------
if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) >= JCAR[16][0] && GetPlayerVehicleID(playerid) <= JCAR[16][1])
{
	if(cjdtheasy[playerid] == 1 && PlayerToPoint(2.0,playerid,1522.61,-1016.04,23.97))
	{
		cjdtheasy[playerid] = 2;
		SetTimerEx("cjdtheasy2", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 2 && PlayerToPoint(2.0,playerid,1340.08,-1772.64,13.54))
	{
		cjdtheasy[playerid] = 3;
		SetTimerEx("cjdtheasy3", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 3 && PlayerToPoint(2.0,playerid,1422.74,-1843.74,13.55))
	{
		cjdtheasy[playerid] = 4;
		SetTimerEx("cjdtheasy4", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 4 && PlayerToPoint(2.0,playerid,1467.02,-1845.11,13.55))
	{
		cjdtheasy[playerid] = 5;
		SetTimerEx("cjdtheasy5", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 5 && PlayerToPoint(2.0,playerid,1535.07,-1848.50,13.55))
	{
		cjdtheasy[playerid] = 6;
		SetTimerEx("cjdtheasy6", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 6 && PlayerToPoint(2.0,playerid,1423.29,-1319.64,13.55))
	{
		cjdtheasy[playerid] = 7;
		SetTimerEx("cjdtheasy7", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 7 && PlayerToPoint(2.0,playerid,1419.85,-1353.20,13.56))
	{
		cjdtheasy[playerid] = 8;
		SetTimerEx("cjdtheasy8", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdtheasy[playerid] == 8 && PlayerToPoint(2.0,playerid,2127.5129,-1982.7625,13.5547))
	{
		cjdtheasy[playerid] = 0;
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		GiveMoney(playerid, JobMoney_5);
		new Hilton[256];
		format(Hilton, sizeof(Hilton), "INFO : "#C_WHITE" 쓰레기수거를 성공적으로 마쳤습니다 총 수익은 $%d입니다", JobMoney_5);
		SCM(playerid, COLOR_ERROR,Hilton);
		PlayerInfo[playerid][pCarTime] = 0;
		PlayerIsSweeping[playerid] = 0;
		RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
		SetVehicleToRespawn(HireCar[playerid]);
		RentTimer[playerid] = 0;
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		HireCar[playerid] = 299;
	}
}
	//--------------------------------------------------------------------------------------------------
if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) >= JCAR[16][0] && GetPlayerVehicleID(playerid) <= JCAR[16][1])
{
	if(cjdthhard[playerid] == 1 && PlayerToPoint(2.0,playerid,1787.72,-1113.34,24.09))
	{
		cjdthhard[playerid] = 2;
		SetTimerEx("cjdthhard2", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 2 && PlayerToPoint(2.0,playerid,1786.17,-1146.33,23.92))
	{
		cjdthhard[playerid] = 3;
		SetTimerEx("cjdthhard3", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 3 && PlayerToPoint(2.0,playerid,1800.05,-1146.24,23.89))
	{
		cjdthhard[playerid] = 4;
		SetTimerEx("cjdthhard4", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 4 && PlayerToPoint(2.0,playerid,1828.71,-1145.63,23.91))
	{
		cjdthhard[playerid] = 5;
		SetTimerEx("cjdthhard5", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 5 && PlayerToPoint(2.0,playerid,1828.88,-1114.08,23.09))
	{
		cjdthhard[playerid] = 6;
		SetTimerEx("cjdthhard6", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 6 && PlayerToPoint(2.0,playerid,1829.37,-1098.01,23.89))
	{
		cjdthhard[playerid] = 7;
		SetTimerEx("cjdthhard7", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 7 && PlayerToPoint(2.0,playerid,1829.27,-1084.59,23.89))
	{
		cjdthhard[playerid] = 8;
		SetTimerEx("cjdthhard8", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 8 && PlayerToPoint(2.0,playerid,1661.08,-1001.51,24.05))
	{
		cjdthhard[playerid] = 9;
		SetTimerEx("cjdthhard9", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 9 && PlayerToPoint(2.0,playerid,1667.18,-998.85,24.06))
	{
		cjdthhard[playerid] = 10;
		SetTimerEx("cjdthhard10", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 10 && PlayerToPoint(2.0,playerid,1631.54,-990.43,24.07))
	{
		cjdthhard[playerid] = 11;
		SetTimerEx("cjdthhard11", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 11 && PlayerToPoint(2.0,playerid,1612.97,-995.06,24.08))
	{
		cjdthhard[playerid] = 12;
		SetTimerEx("cjdthhard12", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 12 && PlayerToPoint(2.0,playerid,1658.62,-1064.56,23.90))
	{
		cjdthhard[playerid] = 13;
		SetTimerEx("cjdthhard13", 100, false, "i", playerid);
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이곳에서 쓰레기를 주웠습니다");
	}
	else if(cjdthhard[playerid] == 13 && PlayerToPoint(2.0,playerid,2128.5129,-1982.7625,13.5547))
	{
		cjdthhard[playerid] = 0;
		PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
		GiveMoney(playerid, JobMoney_1);
		new Hilton[256];
		format(Hilton, sizeof(Hilton), "INFO : "#C_WHITE" 쓰레기수거를 성공적으로 마쳤습니다 총 수익은 $%d입니다", JobMoney_1);
		SCM(playerid, COLOR_ERROR,Hilton);
		PlayerInfo[playerid][pCarTime] = JobCool_1;
		PlayerIsSweeping[playerid] = 0;
		RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
	}
}

	if(Navigation[playerid] == 1 && PlayerIsSweeping[playerid] == 0 && FarmerVar[playerid] == 0 && cjdtheasy[playerid] == 0 && cjdthhard[playerid] == 0)
	{
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목적지에 도착 하였습니다");
		DisablePlayerCheckpoint(playerid);
		Navigation[playerid] = 0;
	}
	if(cnwjr[playerid] > 0 && cnwjreotkd[playerid] < 999 && PlayerIsSweeping[playerid] == 0 && FarmerVar[playerid] == 0 && cjdtheasy[playerid] == 0 && cjdthhard[playerid] == 0 && Truck[playerid] == 0)
	{
		cnwjreotkd[playerid] = 999;
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목적지에 도착 하였습니다.");
		cnwjr[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999 && PlayerIsSweeping[playerid] == 0 && FarmerVar[playerid] == 0 && cjdtheasy[playerid] == 0 && cjdthhard[playerid] == 0 && Truck[playerid] == 0)
	{
		TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목적지에 도착 하였습니다.");
		SCM(TaxiAccepted[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 택시기사가 도착했습니다.");
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999 && PlayerIsSweeping[playerid] == 0 && FarmerVar[playerid] == 0 && cjdtheasy[playerid] == 0 && cjdthhard[playerid] == 0 && Truck[playerid] == 0)
	{
		BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목적지에 도착 하였습니다.");
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) >= JCAR[13][0] && GetPlayerVehicleID(playerid) <= JCAR[13][1])
	{
		if(Truck[playerid] == 1 && PlayerToPoint(10.0,playerid,985.0813,2136.1106,10.8203) && Navigation[playerid] == 0 && cnwjr[playerid] == 0 && FindCP1[playerid] == 0 && FindCP2[playerid] == 0 && FindCP[playerid] == 0)
		{
			Truck[playerid] = 2;
			SetTimerEx("xmfjrqoekf2", 100, false, "i", playerid);
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 트럭에 있던 물건을 운반하였습니다. 회사로 돌아가십시요.");
		}
		else if(Truck[playerid] == 2 && PlayerToPoint(10.0,playerid,2625.4729,1077.6801,10.8203) && Navigation[playerid] == 0 && cnwjr[playerid] == 0 && FindCP1[playerid] == 0 && FindCP2[playerid] == 0 && FindCP[playerid] == 0)
		{
			Truck[playerid] = 0;
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
			GiveMoney(playerid, JobMoney_4);
			new Hilton[256];
			format(Hilton, sizeof(Hilton), "INFO : "#C_WHITE" 업무를 성공적으로 마쳤습니다. 총 수익은 $%d입니다.", JobMoney_4);
			SCM(playerid, COLOR_ERROR,Hilton);
			PlayerInfo[playerid][pCarTime] = JobCool_4;
			PlayerIsTruck[playerid] = 1;
			RemovePlayerFromVehicle(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
		}
	}
	if(CP[playerid]==1)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			PlayerInfo[playerid][pJackSkill] ++;
			if(PlayerInfo[playerid][pJackSkill] == 25)
			{ SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 차량절도 기술은 레벨 2입니다"); }
			else if(PlayerInfo[playerid][pJackSkill] == 50)
			{ SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 차량절도 기술은 레벨 3입니다"); }
			else if(PlayerInfo[playerid][pJackSkill] == 100)
			{ SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 차량절도 기술은 레벨 4입니다"); }
			else if(PlayerInfo[playerid][pJackSkill] == 200)
			{ SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 차량절도 기술은 레벨 5입니다"); }
			new level = PlayerInfo[playerid][pJackSkill];
			if(level >= 0 && level <= 25)
			{
				new rand = random(sizeof(SELLCAR1));
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 차량을 $%d에 판매했습니다(휴식 10분)", SELLCAR1[rand]);
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, SELLCAR1[rand]);
				PlayerInfo[playerid][pCarTime] = 600;
			}
			else if(level >= 26 && level <= 50)
			{
				new rand = random(sizeof(SELLCAR2));
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 차량을 $%d에 판매했습니다(휴식 10분)", SELLCAR2[rand]);
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, SELLCAR2[rand]);
				PlayerInfo[playerid][pCarTime] = 600;
			}
			else if(level >= 51 && level <= 100)
			{
				new rand = random(sizeof(SELLCAR3));
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 차량을 $%d에 판매했습니다(휴식 10분)", SELLCAR3[rand]);
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, SELLCAR3[rand]);
				PlayerInfo[playerid][pCarTime] = 600;
			}
			else if(level >= 101 && level <= 150)
			{
				new rand = random(sizeof(SELLCAR4));
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 차량을 $%d에 판매했습니다(휴식 10분)", SELLCAR4[rand]);
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, SELLCAR4[rand]);
				PlayerInfo[playerid][pCarTime] = 600;
			}
			else if(level >= 150)
			{
				new money = 1000;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 차량을 $%d에 판매했습니다(휴식 10분)", money);
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, money);
				PlayerInfo[playerid][pCarTime] = 600;
			}
			GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
			CP[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else
		{
			GameTextForPlayer(playerid, "Not in a car", 5000, 1);
		}
	}
	else if(CP[playerid] == 5)
	{
		GameTextForPlayer(playerid, "~y~At the Missions Checkpoint", 2500, 1);
		CP[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MissionCheckpoint[playerid] > 0 && PlayMission[kToggle] == 1)
	{
		RingTone[playerid] = 20;
		switch(MissionCheckpoint[playerid])
		{
		case 1:
			{
				format(string, sizeof(string), "%s", PlayMission[kGText1]);
				GameTextForPlayer(playerid, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText4]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText5]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText6]);
				SCM(playerid, COLOR_YELLOW2, string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, PlayMission[kCP2][0], PlayMission[kCP2][1], PlayMission[kCP2][2], 8);
				MissionCheckpoint[playerid] = 2;
			}
		case 2:
			{
				format(string, sizeof(string), "%s", PlayMission[kGText2]);
				GameTextForPlayer(playerid, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText7]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText8]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText9]);
				SCM(playerid, COLOR_YELLOW2, string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, PlayMission[kCP3][0], PlayMission[kCP3][1], PlayMission[kCP3][2], 8);
				MissionCheckpoint[playerid] = 3;
			}
		case 3:
			{
				format(string, sizeof(string), "%s", PlayMission[kGText3]);
				GameTextForPlayer(playerid, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText10]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText11]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText12]);
				SCM(playerid, COLOR_YELLOW2, string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, PlayMission[kCP4][0], PlayMission[kCP4][1], PlayMission[kCP4][2], 8);
				MissionCheckpoint[playerid] = 4;
			}
		case 4:
			{
				format(string, sizeof(string), "%s", PlayMission[kGText4]);
				GameTextForPlayer(playerid, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText13]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText14]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText15]);
				SCM(playerid, COLOR_YELLOW2, string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, PlayMission[kCP5][0], PlayMission[kCP5][1], PlayMission[kCP5][2], 8);
				MissionCheckpoint[playerid] = 5;
			}
		case 5:
			{
				format(string, sizeof(string), "%s", PlayMission[kGText5]);
				GameTextForPlayer(playerid, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText16]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText17]);
				SCM(playerid, COLOR_YELLOW2, string);
				format(string, sizeof(string), "%s", PlayMission[kText18]);
				SCM(playerid, COLOR_YELLOW2, string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, PlayMission[kCP6][0], PlayMission[kCP6][1], PlayMission[kCP6][2], 8);
				MissionCheckpoint[playerid] = 6;
			}
		case 6:
			{
				format(string, sizeof(string), "%s", PlayMission[kGText6]);
				GameTextForPlayer(playerid, string, 8000, 3);
				format(string, sizeof(string), "INFO : "#C_WHITE" 미션 %s을 성공하였습니다 보상으로 $%d을 받았습니다", PlayMission[kTitle], PlayMission[kReward]);
				SCM(playerid, COLOR_SUC, string);
				DisablePlayerCheckpoint(playerid);
				GiveMoney(playerid, PlayMission[kReward]);
				PlayerInfo[playerid][pMissionNr] = PlayerOnMission[playerid];
				MissionCheckpoint[playerid] = 0;
				PlayerOnMission[playerid] = 0;
			}
		}
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
		case CHECKPOINT_HOME:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~You are~n~~y~Home", 5000, 1);
			}
		}
	}
	if (InAFoodPlace[playerid] != 0)
	{
		SetPlayerFreeze(playerid, true, 1);
		TogglePlayerControllable(playerid, 0);
		switch (InAFoodPlace[playerid])
		{
		case 1: // chicken 버그확인
			{
				ShowMenuForPlayer(chickenmenu, playerid);
				SetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
		case 2: // burger
			{
				ShowMenuForPlayer(burgermenu, playerid);
				SetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
		case 3: // pizza
			{
				ShowMenuForPlayer(pizzamenu, playerid);
				SetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
		case 4: // donut
			{
				ShowMenuForPlayer(donutshop, playerid);
				SetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
				SetPlayerFacingAngle(playerid, 280);
			}
		}
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
new i = Baller;
    if(ShootingBall == 2)
    {
		BallDown2(i);
		return 1;
    }
    else if(ShootingBall == 3)
    {
		BallDown3(i);
		return 1;
    }
    else if(ShootingBall == 4)
    {
		BallDown4(i);
		return 1;
    }
    else if(ShootingBall == 5)
    {
		BallDown5(i);
		return 1;
    }
    else if(ShootingBall == 6)
    {
        ApplyAnimation(i,"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1);
		HavingBall[i] = 1;
		Anim[i] = 0;
    }
    if(BallBounce == 1)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z+1.2, 4);
	    BallBounce = 2;
	}
	else if(BallBounce == 2)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z-1.2, 4);
	    BallBounce = 3;
	}
	else if(BallBounce == 3)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z+0.8, 3);
	    BallBounce = 4;
	}
	else if(BallBounce == 4)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z-0.8, 3);
	    BallBounce = 5;
	}
	else if(BallBounce == 5)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z+0.5, 2);
	    BallBounce = 6;
	}
	else if(BallBounce == 6)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z-0.5, 2);
	    BallBounce = 7;
	}
	else if(BallBounce == 7)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z+0.2, 1);
	    BallBounce = 8;
	}
	else if(BallBounce == 8)
    {
        new Float:x, Float:y, Float:z;
	    GetObjectPos(Ball, x, y, z);
	    MoveObject(Ball, x, y, z-0.2, 1);
	    BallBounce = 0;
	}
    if(!HavingBall[i]) return 1;
	new Keys, ud, lr;
	GetPlayerKeys(i, Keys, ud, lr);
    if(Anim[i])
    {
        switch(BallStatus)
	    {
			case 0:
			{
				BallStatus = 1;
				new Float:x, Float:y, Float:z;
				GetPlayerPos(i, x, y, z);
				StopObject(Ball);
				new Float:x2, Float:y2;
		 	    GetXYInFrontOfPlayer(i, x2, y2, 0.4);
				MoveObject(Ball, x2, y2, z+0.1, 5.5);
			}
			case 1:
			{
        		BallStatus = 0;
        		new Float:x, Float:y, Float:z;
				GetPlayerPos(i, x, y, z);
				StopObject(Ball);
				new Float:x2, Float:y2;
				GetXYInFrontOfPlayer(i, x2, y2, 0.4);
				MoveObject(Ball, x2, y2, z-0.8, 5.5);
			}
		}
		return 1;
    }
    if(Keys & KEY_SPRINT)
	{
        ApplyAnimation(i,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
        switch(BallStatus)
		{
			case 0:
			{
				BallStatus = 1;
				new Float:x, Float:y, Float:z;
				GetPlayerPos(i, x, y, z);
				StopObject(Ball);
				new Float:x2, Float:y2;
		        GetXYInFrontOfPlayer(i, x2, y2, 1.5);
				MoveObject(Ball, x2, y2, z+0.1, 8);
			}
			case 1:
			{
        		BallStatus = 0;
        		new Float:x, Float:y, Float:z;
				GetPlayerPos(i, x, y, z);
				StopObject(Ball);
				new Float:x2, Float:y2;
				GetXYInFrontOfPlayer(i, x2, y2, 1.5);
				MoveObject(Ball, x2, y2, z-0.8, 8);
			}
		}
		return 1;
    }
    else
    {
        ApplyAnimation(i,"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1);
    }
	switch(BallStatus)
	{
		case 0:
		{
			BallStatus = 1;
			new Float:x, Float:y, Float:z;
			GetPlayerPos(i, x, y, z);
			StopObject(Ball);
			new Float:x2, Float:y2;
		    GetXYInFrontOfPlayer(i, x2, y2, 1.2);
			MoveObject(Ball, x2, y2, z+0.1, 5);
		}
		case 1:
		{
        	BallStatus = 0;
        	new Float:x, Float:y, Float:z;
			GetPlayerPos(i, x, y, z);
			StopObject(Ball);
			new Float:x2, Float:y2;
			GetXYInFrontOfPlayer(i, x2, y2, 1.2);
			MoveObject(Ball, x2, y2, z-0.8, 5);
		}
	}
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if ( pickupid == dlqtk20 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 택시 기사 (직업 - 택시 기사)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if ( pickupid == dlqtk3 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 피자 판매점 (직업 - 피자 배달부 배달원)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if ( pickupid == dlqtk4 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 마약딜러 기지 (직업 - 마약상)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if ( pickupid == dlqtk5 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 포장마차 판매점 (직업 - 잡상인)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if( pickupid == dlqtk6)
	{
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 총기거래상 대기소 (직업 - 총기상인)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if ( pickupid == dlqtk11 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 주말 농장 (직업 - 농부)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if ( pickupid == dlqtk12 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 낚시왕 강바다 (직업 - 어부)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
		SCM(playerid,COLOR_RED,"INFO : "#C_WHITE" 낚시도구와 낚시자격증이 없으면 불이익을 받을 수도 있습니다.");
	}
	if ( pickupid == dlqtk13 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 트럭 운전 사무소 (직업 - 트럭기사)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
		SCM(playerid,COLOR_RED,"INFO : "#C_WHITE" 대형면허 자격증이 없으면 불이익을 받을 수도 있습니다.");
	}
	if ( pickupid == dlqtk16 )
	{
		if(PlayerInfo[playerid][pJob] > 0) { return 1; }
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 환경미화원 사무소 (직업 - 환경미화원)");
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모든 직업은 (/입사)를 통해서 가지실 수 있습니다");
	}
	if ( pickupid == ghxpf)
	{
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 모텔방은 (/모텔)로 예약할 수 있습니다");
	}
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == burgermenu || Current == chickenmenu || Current == pizzamenu || Current == donutshop)
	{
		SetPlayerFreeze(playerid, false, 0);
		TogglePlayerControllable(playerid, 1);
		if (row != 10) // 10 = Leave
		{
			if (GetMoney(playerid) <= 0)
			{
				GameTextForPlayer(playerid, "~r~Not Enough Cash", 5000, 1);
				return 1;
			}

			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerNPC(i))
				{
					new npcname[MAX_PLAYER_NAME];
					GetPlayerName(i, npcname, sizeof(npcname));

					if(!strcmp(npcname,"manga",true))
					{
						if(GetPlayerSkin(i)!=50)
					    {
							SetPlayerSkin(i, 50);
						}
						new Float:AngleNPC2;
						GetPlayerFacingAngle(i,AngleNPC2);
						if(AngleNPC2!=179)
						{
							SetPlayerFacingAngle(i,179);
						}
						SetPlayerChatBubble(i," manga : \"  안녕!!\"",COLOR_WHITE,15,5000);

						Anim(i,"DEALER","shop_pay",4.1,0,1,1,1,1);
						Anim(i,"DEALER","shop_pay",4.1,0,1,1,1,1);

						Anim(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
						Anim(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
					}
				}
			}
			new actstring[128];
			new sendername[64];
			new Float:health;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerHealth(playerid, health);
			if (row == 7 || row == 8) // Drink
			{
				format(actstring, sizeof(actstring), "* %s 자신의 컵에서 콜라 음료를 따릅니다", RPPlayerName(playerid));
				GiveMoney(playerid, -30);
				GiveHealth(playerid, 10);
			}
			else // Meal
			{
				switch (row)
				{
				case 1:
					{
						if(Current == donutshop) format(actstring, sizeof(actstring), "* %s 도넛을 먹습니다.", RPPlayerName(playerid));
						else format(actstring, sizeof(actstring), "* %s 맛있는 도넛을 먹었습니다.", RPPlayerName(playerid));
						GiveMoney(playerid, -30);
						GiveHealth(playerid, 10);
					}
				case 2:
					{
						if (Current == chickenmenu) format(actstring, sizeof(actstring), "* %s 자신의 컵에서 음료를 마십니다", RPPlayerName(playerid));
						else if (Current == pizzamenu) format(actstring, sizeof(actstring), "* %s 자신의 팬피자에서 피자를 먹습니다", RPPlayerName(playerid));
						else if (Current == donutshop) format(actstring, sizeof(actstring), "* %s 일반크기의 도넛을 먹습니다", RPPlayerName(playerid));
						else format(actstring, sizeof(actstring), "* %s 치즈버거를 먹는다.", RPPlayerName(playerid));
						GiveMoney(playerid, -30);
						GiveHealth(playerid, 10);
					}
				case 3:
					{
						if (Current == pizzamenu) format(actstring, sizeof(actstring), "* %s 피자에 기름을 넣고 먹습니다", RPPlayerName(playerid));
						else if (Current == donutshop) format(actstring, sizeof(actstring), "* %s 초대형 도넛을 먹습니다", RPPlayerName(playerid));
						else format(actstring, sizeof(actstring), "* %s 손으로 샌드위치를 먹습니다.", RPPlayerName(playerid));
						GiveMoney(playerid, -30);
						GiveHealth(playerid, 10);
					}
				case 4:
					{
						if (Current == donutshop) format(actstring, sizeof(actstring), "* %s 초대형 도넛을 먹습니다", RPPlayerName(playerid));
						else format(actstring, sizeof(actstring), "* %s 포크로 샐러드를 먹습니다", RPPlayerName(playerid));
						GiveMoney(playerid, -30);
						GiveHealth(playerid, 10);
					}
				}
				if (GetMoney(playerid) > 30) GiveHealth(playerid, 10);
			}
			ProxDetector(10.0, playerid, actstring, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
		}
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(!IsValidMenu(Current)) return 1;
	ShowMenuForPlayer(Current, playerid);
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid,1);
	SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
	return 1;
}


public RefreshMenuHeader(playerid,Menu:menu,text[])
{
	SetMenuColumnHeader(menu,0,text);
	ShowMenuForPlayer(menu,playerid);
}


public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[256];
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	new vehicle = GetPlayerVehicleID(playerid);
	GetVehicleHealth(GetPlayerVehicleID(playerid),CarHealth[playerid]);
	GetVehicleHealth(GetPlayerVehicleID(playerid),Ccndehf[playerid]);
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{// 차량에 탑승 했을때.
		if(PCar[playerid])
		{// 경찰차를 탓을 때.
			new slot, w, a;
			GetPlayerWeaponData(playerid, slot, w, a);
			if(slot == 3 && w == 25 && a != 0)// 3번슬롯의 샷건이 1발 이상일 때.
			{// 샷건을 가지고있는지 검사.
				SetPlayerAmmo(playerid, 25, PShotgun[playerid]);
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER && (pveh != 509 && pveh != 481 && pveh != 510) && IsPlayerInAnyVehicle(playerid) && !IsAPlane(vehicle) && !IsAHarvest(vehicle))
	{
		SetTimerEx("Startup", 1, false, "ii", playerid, vehicle);
		SetTimerEx("engine2", 2500, false, "ii", playerid);
	}
	else if(newstate == PLAYER_STATE_DRIVER && (pveh != 509 && pveh != 481 && pveh != 510) && IsPlayerInAnyVehicle(playerid) && !IsAPlane(vehicle) && !IsAHarvest(vehicle))
	{
		SetTimerEx("Startup", 1, false, "ii", playerid, vehicle);
		SetTimerEx("engine2", 2500, false, "ii", playerid);
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(TransportDuty[playerid] > 0)
		{
   if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
				BusDrivers -= 1;
			}
			SetPlayerColor(playerid,COLOR_SUC);
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "INFO : "#C_WHITE" 운행을 성공적으로 마쳤습니다 총 수익은 $%d입니다", TransportMoney[playerid]);
			SCM(playerid, COLOR_SUC, string);
			GiveMoney(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
			if(IsPlayerConnected(TransportDriver[playerid]))
			{
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportTime[TransportDriver[playerid]] = 0;
				TransportCost[TransportDriver[playerid]] = 0;
				format(string, sizeof(string), "~w~The ride cost~n~~r~$%d",TransportCost[playerid]);
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "INFO : "#C_WHITE" 운행요금으로 $%d을 지불하였습니다",TransportCost[playerid]);
				SCM(playerid,COLOR_ERROR,string);
				format(string, sizeof(string), "~w~Passenger left the taxi~n~~g~Earned $%d",TransportCost[playerid]);
				GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				format(string, sizeof(string), "INFO : "#C_WHITE" 손님이 목적지에 내렸습니다. 요금으로 $%d을 받았습니다",TransportCost[playerid]);
				SCM(TransportDriver[playerid],COLOR_ERROR,string);
				GiveMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		for(new i = 0; i < M_P; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
				{
					if(GetMoney(playerid) < TransportValue[i])
					{
						format(string, sizeof(string), "INFO : "#C_WHITE" 탑승 하시려면 $%d만큼의 돈이 필요합니다", TransportValue[i]);
						SCM(playerid, COLOR_ERROR, string);
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						if(TransportDuty[i] == 1)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" 택시에 탑승하셨습니다. 미터기가 돌아가기 시작합니다.", TransportValue[i]);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 손님 %s님이 택시에 탑승하셨습니다. 운행을 시작하십시오.", name);
							SCM(i, COLOR_ERROR, string);
							TransportTime[i] = 1;
							TransportTime[playerid] = 1;
							TransportCost[playerid] = TransportValue[i];
							TransportCost[i] = TransportValue[i];
							TransportDriver[playerid] = i;
						}
						else if(TransportDuty[i] == 2)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" 버스 기사에게 운행요금으로 $%d을 지불하였습니다.",TransportValue[i]);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 손님 %s님이 버스에 탑승하셨습니다. 운행을 시작하십시오.", name);
							SCM(i, COLOR_ERROR, string);
	  }
						TransportMoney[i] += TransportValue[i];//왠지 아닌거같다가 맞네 되겟지? 그,
					}
				}
			}
      }
  }
	if(newstate == PLAYER_STATE_WASTED)
	{
		if(WantedLevel[playerid] >= 1)
		{
			for(new i = 0; i < M_P; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(gTeam[i] == 2 && CrimInRange(30.0, playerid,i))
					{
					}
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		//new vehicle = GetPlayerVehicleID(playerid);
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new housecar = PlayerInfo[playerid][pPhousekey]+1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsABoat(newcar))
		{
			if(PlayerInfo[playerid][pBoatLic] < 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 보트 면허증이 없어서 운전 할 수 없습니다");
				RemovePlayerFromVehicle(playerid);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
			}
		}
		else if(IsAPlane(newcar))
		{
			if(PlayerInfo[playerid][pFlyLic] < 1)
			{
				if(TakingLesson[playerid] == 1) { }
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 비행 면허증이 없어서 운전 할 수 없습니다");
					RemovePlayerFromVehicle(playerid);
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		else
		{
			if(PlayerInfo[playerid][pCarLic] < 0)
			{
				if(PlayerDrunk[playerid] >= 5)
				{
					WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "음주운전");
				}
			}
			else if(PlayerDrunk[playerid] >= 5)
			{
				WantedPoints[playerid] += 1;
				SetPlayerCriminal(playerid,255, "음주운전");
			}
				if(PlayerInfo[playerid][pCarLic] < 1)
			{
				if(newcar >= 56 && newcar <= 101 || newcar >= JCAR[99][0] && newcar <=JCAR[99][1]) { }
				else
				{
					if(TakingLesson[playerid] == 1) { }
					else
					{
                        SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 운전 면허증이 없습니다, (/전자지도) 에서 운전면허증을 따주세요. ");
						SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 운전면허증없이 타게 되면 벌금을 물게되니 꼭 취득하시길 바랍니다.");
						SCM(playerid, COLOR_SUC, "INFO : "#C_YELLOW" 운전면허증을 따기전 시민증을 먼저 따시고 운전면허증을 따길 바랍니다.");
					}
				}
			}
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510)
		{
			SCM(playerid, COLOR_HINT,  ""#C_RED"(INFO) "#C_YELLOW": 'W' 키를 연타하는 행위, 'Ctrl' 키를 눌러 점프하는 행위는 불가능합니다.");
		}
		if(VehicleInfo[newcar][vLock] == 1)
		{
			SCM(playerid, COLOR_HINT, ""#C_RED"(INFO) "#C_YELLOW": 잠긴차량입니다.");
			LockCar(newcar);
			RemovePlayerFromVehicle(playerid);
			return 1;
		}
		new check = IsMemberCar(playerid, newcar);
		if(check == 2)
		{
			if (HireCar[playerid] != newcar)
			{
				if(GetVehicleModel(newcar) == 400)//캐뇨레노
				{
					format(string, sizeof(string), "Rent Cost : ~g~$%d",300);
				}
				if(GetVehicleModel(newcar) == 474)//캐뇨레노
				{
				format(string, sizeof(string), "Rent Cost : ~g~$%d",500);
				}
				else if(GetVehicleModel(newcar) == 462)// 스쿠터
				{
					format(string, sizeof(string), "Rent Cost : ~g~$%d",250);
				}
				else if(GetVehicleModel(newcar) == 510)// 자전거
				{
					format(string, sizeof(string), "Rent Cost : ~g~$%d",150);
				}
				else if(GetVehicleModel(newcar) == 493)// 자전거
				{
					format(string, sizeof(string), "Rent Cost : ~g~$%d",150);
				}
				else if(GetVehicleModel(newcar) == 539)//
				{
					format(string, sizeof(string), "Bum Bu car : ~g~$%d",150);
				}
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지금 타고 계신 차량은 렌트카 입니다. 차량을 렌트 하시려면 '/렌트카'를 입력하세요.");
				SetPlayerFreeze(playerid, true, 2);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		else if(check == 3)
		{
			if(PlayerInfo[playerid][pCarTime] != 0)
			{
				RemovePlayerFromVehicle(playerid);
				format(string, sizeof(string), ""#C_RED"(INFO) "#C_WHITE": 이 차량은 %d초 후 사용할 수 있습니다.", PlayerInfo[playerid][pCarTime]);
				SCM(playerid, COLOR_ERROR, string);
			}
		}
		else if(check == 3)
		{
			if(PlayerInfo[playerid][pCarTime] != 0)
			{
				RemovePlayerFromVehicle(playerid);
				format(string, sizeof(string), ""#C_RED"(INFO) "#C_WHITE": 이 차량은 %d초 후 사용할 수 있습니다.", PlayerInfo[playerid][pCarTime]);
				SCM(playerid, COLOR_ERROR, string);
			}
		}
		else if(check == 4)
		{
			if(DTCT[playerid] >= 1)
			{
				SetPlayerCheckpoint(playerid,1111.2373,1315.1440,10.8203,2);
				SCM(playerid,COLOR_ERROR,"(정보)  다음 장소로 이동하십시오");
				SCM(playerid,COLOR_ERROR,"(정보)  체크포인트를 따라가십시오.");
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				DTCT[playerid] = 2;
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이차량을 사용할 권한이 없습니다");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(check == 5)
		{
			if(IsCarOwner(playerid, newcar))
			{
				format(string,sizeof(string),  "차량번호판 : [ %s ] ",VehicleInfo[newcar][vSign]);
				SendClientMessage(playerid, COLOR_SUC, string);
				format(string, sizeof(string), "주인연락처 : ☎%d ", VehicleInfo[newcar][vOwnerPnumber]);
				SendClientMessage(playerid, COLOR_RED, string);

if(VehicleInfo[newcar][vLock] == 1)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잠긴차량입니다.");
			LockCar(newcar);
			RemovePlayerFromVehicle(playerid);
			return 1;
			}
			}
			else
			{
				format(string,sizeof(string),  "차량번호판 : [ %s ] ",VehicleInfo[newcar][vSign]);
				SendClientMessage(playerid, COLOR_SUC, string);
				format(string, sizeof(string), "주인연락처 : ☎%d ", VehicleInfo[newcar][vOwnerPnumber]);
				SendClientMessage(playerid, COLOR_RED, string);

			if(VehicleInfo[newcar][vLock] == 1)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잠긴차량입니다.");
			LockCar(newcar);
			RemovePlayerFromVehicle(playerid);
			return 1;
			}
				if(VehicleInfo[newcar][vAlarmOff]==0)
				{
				    if(VehicleInfo[newcar][vFaction] != 0 && VehicleInfo[newcar][vFaction] != PI(playerid,pFMember))
				    {
						format(string, sizeof(string), "(경고) 경보음: 빵빵빵빵빵빵빵빵빵빵빵빵빵빵빵빵 ");
						ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else if(VehicleInfo[newcar][vFaction] == 0)
					{
						format(string, sizeof(string), "(경고) 경보음: 빵빵빵빵빵빵빵빵빵빵빵빵빵빵빵빵 ");
						ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
				}
			}
		}


		if(oldcar != 403)
		{
			if((housecar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != housecar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					gCarLock[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
			SetPlayerSpawn(playerid);
		}
		if(WantedPoints[playerid] > 0)
		{
			new dstring[128];
			new wanted = WantedPoints[playerid];
			new diecash = 0;
			while(WantedPoints[playerid] > 0)
			{
				diecash += 1;
				WantedPoints[playerid] --;
			}
			format(dstring, sizeof(dstring), "INFO : "#C_WHITE" 기절했기 때문에 돈과 수배포인트를 잃었습니다 (돈: $%d, 수배포인트: %d)", diecash, wanted);
			SCM(playerid, COLOR_WHITE, dstring);
			GiveMoney(playerid, -diecash);
			PlayerInfo[playerid][pWantedDeaths] += 1;
		}
		if(PlayerOnMission[playerid] > 0)
		{
			GameTextForPlayer(playerid, "~r~Mission failed", 5000, 3);
			PlayerOnMission[playerid] = 0;
			PlayerInfo[playerid][pMissionNr] = 0;
		}
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		if(PlayerInfo[playerid][pDonateRank] > 0) { SetHealth(playerid, 100.0); }
		else { SetHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}

public HireCost(carid)
{
	switch (carid)
	{
	case 69:
		{
			return 90000; //bullit
		}
	case 70:
		{
			return 130000; //infurnus
		}
	case 71:
		{
			return 100000; //turismo
		}
	case 72:
		{
			return 80000;
		}
	case 73:
		{
			return 70000;
		}
	case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()
{
	new string[256];
	for(new j = 0; j<M_P; j++)
	{
		if(IsPlayerConnected(j))
		{

			if(PlayerInfo[j][pCash] < 0)
			{
				if(MoneyMessage[j]==0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 국가에 $%d를 빚지고 있습니다. 다음 월급날까지 갚지 못한다면 감옥으로 이행됩니다", PlayerInfo[j][pCash]);
					SCM(j, COLOR_ERROR, string);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
				MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
		for(new i = 0; i < M_P; i++)
		{
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pJob] == 15)
				{
					SetVehicleParamsForPlayer(c, i, 0, 0);
				}
			}
		}
		if (gLastDriver[c] == 301)
		{
			//			CarRespawn(c);
		}
		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//foundowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}


public LockCar(carid)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
		new model;
		model = GetVehicleModel(carid);
			SetVehicleParamsForPlayer(carid,i,0,1);
			VehicleInfo[carid][vLock]=1;
			if(model == 481 || model == 509 || model == 510)
			{
			Update3DTextLabelText(BS[carid],COLOR_LIGHTBLUE,"(( 체인 ))");
			Attach3DTextLabelToVehicle(BS[carid],carid,0,-0.7,0);
			}
   			else if(model == 448 || model == 461 || model == 462 || model == 463 || model == 468 || model == 521 || model == 522 || model == 523 || model == 548 || model == 553 || model == 563 || model == 581 || model == 586)
			{
			Update3DTextLabelText(BS[carid],COLOR_LIGHTBLUE,"(( 키박스 ))");
			Attach3DTextLabelToVehicle(BS[carid],carid,0,-0.7,0);
			}

		}
	}
}

public UnLockCar(carid)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!IsAPlane(carid))
			{
				SetVehicleParamsForPlayer(carid,i,0,0);
				VehicleInfo[carid][vLock]=0;
			Update3DTextLabelText(BS[carid],COLOR_SUN,"");
			Attach3DTextLabelToVehicle(BS[carid],carid,0,-0.7,0);
			}
		}
	}
}

public InitLockDoors(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 254)
		{
			c++;
			if (gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid,0,1);
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	if(IsAHarvest(vehicleid))
	{
		if(FarmerVar[playerid] == 1)
		{
			SetTimer("FarmerExit", 7000, 0);
			GameTextForPlayer(playerid, "~n~~w~You have ~r~7~w~ seconds~n~to get back on a harvest", 5000, 3);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량으로 돌아가주십시오");
		}
	}
	if(gGas[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Left car", 500, 3);
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	SetPlayerCameraPos(playerid, 931.8417,-1843.0017,11.3362);
	SetPlayerCameraLookAt(playerid, 858.3233,-1936.8684,11.3362);
	SetPlayerPos(playerid, 923.9698,-1850.3982,6.0127);
	if(gPlayerLogged[playerid] == 0)
	{
	    new string[256];
		new message[] = ""C_YELLOW"                                                     ";
		new message2[] = ""C_YELLOW"당신은 서비스 운영 원칙을 따르는 것을 동의합니까? ";
		new message3[] = ""C_YELLOW"따르겠다면 '동의함'를 눌러주세요. 아니면 '동의안함'을 눌러주세요.";
		format(string, sizeof(string),"%s\n%s\n%s",message,message2,message3);
		ShowPlayerDialog(playerid,MSGBOX_SKEY,DIALOG_STYLE_MSGBOX,"물음창",string,"동의함","동의안함");
 	}
	return 1;
}



public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerNPC(playerid))
	{
		return 1;
	}
	if(gPlayerLogged[playerid] == 1)
	{
		return 1;
	}
	else
	{
 		SCM(playerid, COLOR_ERROR," ");
		SCM(playerid, COLOR_ERROR," ");
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/login) or (/register)");
		return 0;
	}
}

public SetupPlayerForClassSelection(playerid)
{

}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{

}
//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
		PlayerInfo[playerid][pCrimes] += 1;
		new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "알수없음");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "(Info) 범죄를 저질렀습니다 (%s), (신고자: %s)",reason,turner);
		SCM(playerid, COLOR_INFO, turnmes);
		if(points > 0)
		{
			new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == 3) { gTeam[playerid] = 4; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "(정보) 현재 수배 레벨: %d", wlevel);
				SCM(playerid, COLOR_INFO, wantedmes);
				AP
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
						{
							format(cbjstore, sizeof(turnmes), "(본부) 모든 부대원에게 전국 지명 수배자를 알립니다 (신고자: %s)",turner);
							SCM(i, COLOR_INFO, cbjstore);
							format(cbjstore, sizeof(turnmes), "(본부) 범죄내용: %s, (용의자: %s)",reason,turned);
							SCM(i, COLOR_INFO, cbjstore);
						}
					}
				}
			}
		}
	}
}
//---------------------------------------------------------

public SetPlayerCriminalEx(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
		PlayerInfo[playerid][pCrimes] += 1;
		new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "알수 없음");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "(정보) 범죄를 저질렀습니다 (%s), (신고자: %s)",reason,turner);
		if(points > 0)
		{
			new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == 3) { gTeam[playerid] = 4; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "(정보) 현재 수배 레벨: %d", wlevel);
				SCM(playerid, COLOR_INFO, wantedmes);
				AP
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
						{
							format(cbjstore, sizeof(turnmes), "(본부) 모든 부대원에게 전국 지명 수배자를 알립니다 (신고자: %s)",turner);
							SCM(i, COLOR_BLUE, cbjstore);
							format(cbjstore, sizeof(turnmes), "(본부) 범죄내용: %s, (용의자: %s)",reason,turned);
							SCM(i, COLOR_BLUE, cbjstore);
						}
					}
				}
			}
		}
	}
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "INFO : "#C_WHITE" %s, 당신은 이미 %s되었으므로 더 이상 범죄자가 아닙니다. (발신자: 국가정보원)",turned,reason);
		RingTone[playerid] = 20;
		SCM(playerid, COLOR_ERROR, turnmes);
		for(new i = 0; i < M_P; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
				{
					format(crbjstore, sizeof(crbjstore), "(L.V.P.D) 경찰이 수배범을 잡았습니다.",turner);
					SendFamilyMessage(1,COLOR_BLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "(L.V.P.D) 수배범 %s님이 처리되었습니다 (이유: %s)",turned,reason);
                    SendFamilyMessage(1,COLOR_BLUE, crbjstore);
					//SCM(i, COLOR_BLUE, crbjstore);
				}
			}
		}
	}
}

	public RingToner()
	{
		for(new i = 0; i < M_P; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
				{
					RingTone[i] = RingTone[i] -1;
					PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
				}
				if(RingTone[i] == 6)
				{
					RingTone[i] = RingTone[i] -1;
				}
				if(RingTone[i] == 20)
				{
					RingTone[i] = RingTone[i] -1;
					PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				}
			}
		}
		SetTimer("RingTonerRev", 1000, 0);
		return 1;
	}

	public RingTonerRev()
	{
		for(new i = 0; i < M_P; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
				{
					RingTone[i] = RingTone[i] -1;
					PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
				}
				if(RingTone[i] == 5)
				{
					RingTone[i] = RingTone[i] -1;
				}
				if(RingTone[i] == 19)
				{
					PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
					RingTone[i] = 0;
				}
			}
		}
		SetTimer("RingToner", 1000, 0);
		return 1;
	}
public OnVehicleSpawn(vehicleid)
{
	if(vehicleid >= MCAR[1][0] && vehicleid <= MCAR[1][1])
	{
		SetVehicleHealth(vehicleid,1500);
	}
	else if(vehicleid >= MCAR[2][0] && vehicleid <= MCAR[2][1])
	{
		SetVehicleHealth(vehicleid,1500);
	}
	else if(vehicleid >= MCAR[3][0] && vehicleid <= MCAR[3][1])
	{
		SetVehicleHealth(vehicleid,1500);
	}

	SetTimerEx("Vehcheck",1000,0,"vv",vehicleid);
}
	forward Vehcheck(vehicleid);
	public Vehcheck(vehicleid)
	{
		if(VehicleInfo[vehicleid][vModel]!=0)
		{

				SetVehicleVirtualWorld(vehicleid,VehicleInfo[vehicleid][vVir]);
				SetVehiclePos(vehicleid,VehicleInfo[vehicleid][vPark_x],VehicleInfo[vehicleid][vPark_y],VehicleInfo[vehicleid][vPark_z]);
				SetVehicleZAngle(vehicleid,VehicleInfo[vehicleid][vPark_r]);
				SetVehicleHealth(vehicleid,VehicleInfo[vehicleid][vHP]);
				ChangeVehicleColor(vehicleid,VehicleInfo[vehicleid][vColor1],VehicleInfo[vehicleid][vColor2]);
				if(VehicleInfo[vehicleid][vPaintJob]!=999)
				{
					ChangeVehiclePaintjob(vehicleid,VehicleInfo[vehicleid][vPaintJob]);
				}
				for(new ce=0;ce<17;ce++)
				{
					AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][vTune][ce]);
				}
		}
	}
	public OtherTimer()
	{
	new Float:maxspeed = 400.0;//175면은 그냥뜸 400은 스핵기준이고 로켓포 (R)는 1000넘고 텔레포트는 몇만뜸
	new plname[MAX_PLAYER_NAME];
	new string[256];
	new Float:oldposx, Float:oldposy, Float:oldposz;
	if(GwanggoCool > 0)
	    GwanggoCool --;
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(QandATime[i] > 0)
			{
				QandATime[i] --;
				if(QandATime[i] == 0)
				{
					QandATime[i] = 0;
				}
			}
			if(AdminTime[i] > 0)
			{
				AdminTime[i] --;
				if(AdminTime[i] == 0)
				{
					AdminTime[i] = 0;
				}
			}
			if(OllTime[i] > 0)
			{
				OllTime[i] --;
				if(OllTime[i] == 0)
				{
					OllTime[i] = 0;
				}
			}
			if(IsPlayerInAnyVehicle(i))
			{
				GetVehicleHealth(GetPlayerVehicleID(i),CarHealth[i]);
			}
			if(CoolT[i] > 0)
			{
				CoolT[i]--;
			}
			for(new carid = 1; carid < MAX_VEHICLES; carid++)
			{
				if(VehicleInfo[carid][vLock]==1)
				{
					SetVehicleParamsForPlayer(carid,i,0,1);
				}
				else
				{
					SetVehicleParamsForPlayer(carid,i,0,0);
				}
			}
			if(PlayerToPoint(10.0, i,2288.0679,-1104.8263,38.4002))
			{
				if(GPackage[i]==true)
				{
					GPackage[i]=false;
					PlayerInfo[i][pMats]+=200;
					SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 1개의 패키지를 200개의 총기재료로 바꾸셨습니다.");
				}
			}
			ResetPlayerMoney(i);
			GivePlayerMoney(i, PlayerInfo[i][pCash]);
			if(PlayerToPoint(20.0,i,617.533203,-1.99,1000.657836) || PlayerToPoint(20.0,i,615.2847,-124.2390,997.6895) || PlayerToPoint(20.0,i,616.7888,-74.8149,997.8874))
			{
				new veh = GetPlayerVehicleID(i);
				if(IsCarOwner(i,veh))
				{
					for(new ce=0;ce<17;ce++)
					{
						VehicleInfo[veh][vTune][ce]=GetVehicleComponentInSlot(veh,ce);
					}
					SaveVehicle(veh);
				}
				if(GetPlayerMoney(i) < PlayerInfo[i][pCash])
				{
					PlayerInfo[i][pCash] -= PlayerInfo[i][pCash] - GetPlayerMoney(i);
				}
			}
			//==================================
			new nxtlevel = PlayerInfo[i][pLevel]+1;
			new expamount = nxtlevel*levelexp;
			if(PlayerInfo[i][pExp] >= expamount)
			{
				new infostring[128];
				PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
				PlayerPlayMusic(i);
				format(infostring, 256, "(정보) 레벨 %d으로 성장하였습니다, (/업글)으로 업그레이드가 가능합니다", nxtlevel);
				SCM(i, COLOR_INFO, infostring);
				format(infostring, 256, "(정보) 업그레이드 포인트 %d를 받았습니다",PlayerInfo[i][gPupgrade]);
				SCM(i, COLOR_INFO, infostring);
				PlayerInfo[i][pLevel]++;
				PlayerInfo[i][pExp] = 0;
				PlayerInfo[i][gPupgrade] = PlayerInfo[i][gPupgrade]+2;
				DollahScoreUpdate();
			}
			//==================================
			if (GetPlayerState(i) == 1) CheckForWalkingTeleport(i); // IF THE PLAYER IS IN A TELEPORT ZONE, TELEPORT THEM
			if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
				{
					SCM(i, COLOR_ERROR," ");
					SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" "#C_YELLOW"(/가자 [비밀번호])"#C_WHITE"또는 "#C_YELLOW"(/log [비밀번호])"#C_WHITE"를 입력하세요");
				}
			}
			if(GetPlayerState(i) == 2)
			{
				GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
				if(TelePos[i][5] > 550.0)
				{
					TelePos[i][0] = 0.0;
					TelePos[i][1] = 0.0;
				}
				if(TelePos[i][0] != 0.0)
				{
					new Float:xdist = TelePos[i][3]-TelePos[i][0];
					new Float:ydist = TelePos[i][4]-TelePos[i][1];
					new Float:sqxdist = xdist*xdist;
					new Float:sqydist = ydist*ydist;
					new Float:distance = (sqxdist+sqydist)/31;
					new zone[MAX_ZONE_NAME];
					GetPlayer2DZone(i, zone, MAX_ZONE_NAME);
					if(distance > maxspeed && PlayerInfo[i][pAdmin] < 1)
					{
						new tmpcar = GetPlayerVehicleID(i);
						if(!IsAPlane(tmpcar))
						{
							GetPlayerName(i, plname, sizeof(plname));
							format(string, 256, "* (%d)%s님의 움직임이 수상합니다 (텔레포트/에어브레이크) (속도 - %.0f)",i,plname,distance);
							ABroadCast(COLOR_ADMIN,string,1);
						}
					}
				}
				if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
				{
					TelePos[i][0] = TelePos[i][3];
					TelePos[i][1] = TelePos[i][4];
				}
			}
			if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new house = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(house == 242)
						{
							SetPlayerInterior(i,0);
							SetPlayerPos(i,-2518.5967,-623.2701,132.7679);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						else if(house < 99 && house != 10000)
						{
						}
					}
				}
			}
			if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 10)
				{
					if(IsPlayerConnected(Mobile[i]))
					{
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(string, sizeof(string), "* %s의 휴대 전화기가 울린다.",RPPlayerName(Mobile[i]));
						RingTone[Mobile[i]] = 10;
						ProxDetector(10.0, Mobile[i], string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				if(Gongjun[i] == 0)
				{
					format(string, sizeof(string), " Call charge : -%d",CallCost[i]*1);
					GiveMoney(i, -CallCost[i]*5);
					SBizzInfo[1][sbTill] += CallCost[i]*5;
					ExtortionSBiz(2, CallCost[i]*5);
					GameTextForPlayer(i, string, 5000, 1);
					CallCost[i] = 0;
				}
				format(string, sizeof(string), " Call charge : -%d",CallCost[i]*5);
				GiveMoney(i, -CallCost[i]*5);
				SBizzInfo[1][sbTill] += CallCost[i]*5;
				ExtortionSBiz(2, CallCost[i]*5);
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{//Taxi driver and passenger only
				if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
							TransportCost[i] += TransportValue[TransportDriver[i]];
							TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
				TransportTime[i] += 1;
				format(string, sizeof(string), "~w~$%d",TransportCost[i]);
				GameTextForPlayer(i, string, 15000, 6);
			}
			if(PlayerGam[i] > 0)
			{
			    Anim(i,"CRACK","crckidle2",4.1,0,0,0,0,0);
			    PlayerGam[i]--;
			    if(PlayerGam[i] == 0 || PlayerGam[i] < 0)
			    {
			        PlayerGam[i] = 0;
			      //  SetPlayerUnGam(i);
			    }
			}
		}
	}
	return 1;
}

public SetPlayerUnjail()
{
	//	new plname[MAX_PLAYER_NAME];
	new string[256];
//	new Float: xx,Float: yy,Float:zz;
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			new Float:health;
			GetPlayerHealth(i, health);
			if(health > 100)
			{
				SetPlayerHealth(i, 100);
			}
			if(Fishing[i])
			{
				if(FishingTime[i] == 5)
				{
					new rand=random(5);
					if(rand != 3)
					{
						GameTextForPlayer(i, "~w~Wait", 1000, 5);
						FishingUp[i]=false;
					}
					else
					{
						GameTextForPlayer(i, "~r~Press Space Bar!!", 1000, 5);
						FishingUp[i]=true;
					}
				}
				else
				{
					FishingTime[i]++;
				}
			}
   			if(Fishing2[i])
			{
				if(FishingCount[i] >= FishingSize[i])
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 물고기를 잡았습니다. [%s %dkg]", FishNames[FishingName[i]], FishingSize[i]);
					SCM(i, COLOR_ERROR, string);
					if(Fishes[i][pWeight1]==0)
					{
						strmid(Fishes[i][pFish1], FishNames[FishingName[i]], strlen(FishNames[FishingName[i]]), 255);
						Fishes[i][pWeight1]=FishingSize[i];
					}
					else if(Fishes[i][pWeight2]==0)
					{
						strmid(Fishes[i][pFish2], FishNames[FishingName[i]], strlen(FishNames[FishingName[i]]), 255);
						Fishes[i][pWeight2]=FishingSize[i];
					}
					else if(Fishes[i][pWeight3]==0)
					{
						strmid(Fishes[i][pFish3], FishNames[FishingName[i]], strlen(FishNames[FishingName[i]]), 255);
						Fishes[i][pWeight3]=FishingSize[i];
					}
					else if(Fishes[i][pWeight4]==0)
					{
						strmid(Fishes[i][pFish4], FishNames[FishingName[i]], strlen(FishNames[FishingName[i]]), 255);
						Fishes[i][pWeight4]=FishingSize[i];
					}
					else if(Fishes[i][pWeight5]==0)
					{
						strmid(Fishes[i][pFish5], FishNames[FishingName[i]], strlen(FishNames[FishingName[i]]), 255);
						Fishes[i][pWeight5]=FishingSize[i];
					}
					else
					{
						SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 물고기가 가득찼으므로, 물고기를 돌려보냅니다.");
					}
					Fishing2[i]=false;
					FishingCount[i]=0;
					FishingSize[i]=0;
				}
				else
				{
					format(string, sizeof(string), "%dKG/%dKG", FishingCount[i], FishingSize[i]);
					GameTextForPlayer(i, string, 1000, 5);
				}
			}



			if(gPlayerLogged[i] == 1 && HergiTimer[i] == 1)
			{
				HergiTimer[i]++;
				if(HergiTimer[i] >= 150)
				{
					HergiTimer[i] = 0;
				}
			}
			new newcar = GetPlayerVehicleID(i);
			if(PlayerInfo[i][pJailed] > 0)
			{
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
					PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;
						SetPlayerInterior(i, 0);
						PlayerInfo[i][pInt] = 0;
						SetPlayerPos(i, -2917.4670,-2642.0303,6.8180);
						//  SetPlayerWorldBounds(i, 20000.0000,-20000.0000,20000.0000,-20000.0000);
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이제 자유로운 몸이 되었습니다");//-2917.4670,-2642.0303,6.8180
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;
						SetPlayerInterior(i, 0);
						SetPlayerPos(i, -2917.4670,-2642.0303,6.8180);
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						PlayerInfo[i][pMuted] = 0;
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이제 자유로운 몸이 되었습니다");
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 99)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;
						SetPlayerInterior(i, 0);
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						PlayerInfo[i][pMuted] = 0;
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신의 입원시간은 끝났습니다. 앞으로 몸조심하세요.");
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 10)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;//
						SetPlayerInterior(i, 0);//
						SetPlayerPos(i, 1544.1604,-1675.2933,13.5579);//
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						PlayerInfo[i][pMuted] = 0;
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이제 자유로운 몸이 되었습니다");
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 11)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;
						SetPlayerInterior(i, 0);
						SetPlayerPos(i, 1544.1604,-1675.2933,13.5579);
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						PlayerInfo[i][pMuted] = 0;
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이제 자유로운 몸이 되었습니다");
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 12)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;
						SetPlayerInterior(i, 0);
						SetPlayerPos(i, 1544.1604,-1675.2933,13.5579);
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						PlayerInfo[i][pMuted] = 0;
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이제 자유로운 몸이 되었습니다");
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 13)
					{
						SetPlayerToTeamColor(i);
						PlayerInfo[i][pJailed] = 0;
						SetPlayerInterior(i, 0);
						SetPlayerPos(i, 1544.1604,-1675.2933,13.5579);
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						PlayerInfo[i][pMuted] = 0;
						ClearCrime(i);
						SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이제 자유로운 몸이 되었습니다");
						SetPlayerSkin(i,PlayerInfo[i][pChar]);
					}
					else if(PlayerInfo[i][pJailed] == 3) //병원입원
					{
						new RandomTazer;
						RandomTazer = random(20);
						switch(RandomTazer)
						{
							case 0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17:
								{
								PlayerPlaySound(i,1135, 0.0, 0.0, 0.0);
								SetCameraBehindPlayer(i);
								SetPlayerFreeze(i, false, 0);
								TogglePlayerControllable(i,1);
								PlayerInfo[i][pMuted] = 0;
								PlayerInfo[i][pJailed] = 0;
								PlayerInfo[i][pJailTime] = 0;
								SpawnPlayerHospital(i);
								Dmdrmqtkdxo[giveDmdrmqtkdxo[i]]=0;
								PlayerDmdrmq[giveDmdrmqtkdxo[i]]=0;
								Dmdrmqtkdxo[giveDmdrmqtkdxo[i]]=0;
								SetPlayerColor(i,TEAM_HIT_COLOR);
								PlayerInfo[i][diedie] = 0;
								SCM(i, COLOR_GRAD1,"INFO : "#C_WHITE" 당신은 끝내 치명상을 입어 깨어나지 못했습니다. 이전의 기억은 잊어버립니다.");
								SCM(i, COLOR_GRAD1,"INFO : "#C_WHITE" 당신은 가방에 들어있는 모든 물건들을 잊어버립니다.");
								SCM(i, COLOR_ERROR,"");
								giveDmdrmqtkdxo[i]=0;
								Draw[i] = 0;
								Drop[i] = 0;
								DropGPlayer[i] = 0;
								DieInfo(i);
								}
							case 18.19,20:
							{
							SetCameraBehindPlayer(i);
							TogglePlayerControllable(i, 1);
							SetPlayerVirtualWorld(i,0);
							PlayerInfo[i][pMuted] = 0;
							PlayerInfo[i][pJailed] = 0;
							PlayerInfo[i][pJailTime] = 0;
							SetPlayerHealth(i, 20);
							SetPlayerColor(i,TEAM_HIT_COLOR);
							SCM(i, COLOR_GRAD1,"INFO : "#C_WHITE" 당신은 혼수상태에서 가까스로 깨어납니다.");
							}
						}
					}
				}
			}
			else if(PlayerInfo[i][pJailed] == 300) //병원입원
			{
				PlayerPlaySound(i,1135, 0.0, 0.0, 0.0);
				SetCameraBehindPlayer(i);
				SetPlayerFreeze(i, false, 0);
				TogglePlayerControllable(i,1);
				PlayerInfo[i][pMuted] = 0;
				PlayerInfo[i][pJailed] = 0;
				PlayerInfo[i][pJailTime] = 0;
				SpawnPlayerHospital(i);
				Dmdrmqtkdxo[giveDmdrmqtkdxo[i]]=0;
				PlayerDmdrmq[giveDmdrmqtkdxo[i]]=0;
				Dmdrmqtkdxo[giveDmdrmqtkdxo[i]]=0;
				SetPlayerColor(i,TEAM_HIT_COLOR);
				PlayerInfo[i][diedie] = 0;
				SCM(i, COLOR_GRAD1,"INFO : "#C_WHITE" 당신은 끝내 치명상을 입어 깨어나지 못했습니다. 당신은 죽기 직전의 기억은 다 잊어버립니다.");
				SCM(i, COLOR_GRAD1,"INFO : "#C_WHITE" 당신은 가방에 들어있는 모든 물건들을 잊어버립니다.");
				SCM(i, COLOR_ERROR,"");
				giveDmdrmqtkdxo[i]=0;
				Draw[i] = 0;
				Drop[i] = 0;
				DropGPlayer[i] = 0;
				DieInfo(i);
			}

			if(IsABoat(newcar))
			{
				if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2)
				{
					RemovePlayerFromVehicle(i);
				}
			}
			else if(IsAPlane(newcar))
			{
				if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				}
			}
			else
			{
				if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				}
			}//Done with car check
				if(UsedFind[i] >= 1)
				{
					UsedFind[i] += 1;
					if(UsedFind[i] >= 120)
					{
						UsedFind[i] = 0;
					}
				}
				if(ShotTime[i] >= 1)
				{
					ShotTime[i] += 1;
					if(ShotTime[i] >= 1)
					{
						ShotTime[i] = 1;
						SetPlayerPos(i,ShotPlace[i][0],ShotPlace[i][1],ShotPlace[i][2]);
					}
				}
				if(PlayerInfo[i][RentTime] > 0)//캐뇨레노
				{
					if(RentTimer[i])
					{
						format(string, sizeof(string), "~g~RentTime:~w~%d",PlayerInfo[i][RentTime]);
						GameTextForPlayer(i, string, 2500, 3);//이거로하지말고
						PlayerInfo[i][RentTime] -= 1;
					}
					else
					{
					    PlayerInfo[i][RentTime] -= 1;
					}
					if(PlayerInfo[i][RentTime] <= 0)
					{
						SetVehicleToRespawn(HireCar[i]);
						gCarLock[HireCar[i]] = 0;
						UnLockCar(HireCar[i]);
						SCM(i,COLOR_ERROR," 렌트카 시간이 지나므로 스폰됩니다 ");
						PlayerInfo[i][RentTime] = 0;
						HireCar[i] = 299;
						RentTimer[i] = 0;
					}
				}
				if(TazerRes[i] >= 1)
				{
					new weapon,ammo;
					TazerRes[i] += 1;
					if(TazerRes[i] >= 5)
					{
						GetPlayerWeaponData(i,2,weapon,ammo);
						if(ammo == 0)
						{
							TazerRes[i] = 1;
							RemovePlayerWeapon(i,23);
							GiveWeapon(i,23,3);
							format(string, sizeof(string), "INFO : "#C_WHITE" %s 테이저건을 재장전 시킨다", RPPlayerName(i));
							ProxDetector(10.0, i, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
					}
				}
			if(PlayerInfo[i][pdudwkd] == 1)
			{
			if(PlayerInfo[i][pdudwkdt] >= 1)
			{
			PlayerInfo[i][pdudwkdt]++;
			if(PlayerInfo[i][pdudwkdt] == 10800)
			{
			SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 영장의 유효기한이 다되어 사라집니다.");
			PlayerInfo[i][pdudwkdt] = 0;
			PlayerInfo[i][pdudwkd] = 0;
 			}
			}
			}
			if(CivilTest[i] == 1)
			{
			if(CivilTime[i] >= 1)
			{
			CivilTime[i]++;

					if(CivilTime[i] == 2)
					{
					format(string, sizeof(string), " %s : 시민증좀 발급해주시겠습니까 ??", RPPlayerName(i));
					SCM(i, COLOR_WHITE, string);
					SetPlayerCameraPos(i, 359.7139,173.5408,1008.3828);
					SetPlayerCameraLookAt(i, 362.7384,173.5648,1008.3828);
					SetPlayerPos(i, 362.7384,173.5648,1008.3828);
					SetPlayerSkin(i, 26);//23
					SetPlayerFacingAngle(i, 91.7722);//262.5594
					}
					else if(CivilTime[i] == 5)
					{
					SCM(i, COLOR_WHITE, "시청직원 : 흠 방금 입국 하신분인가 보군요, 환영합니다. 자 나이와 성별, 국적을 말해주시겠습니까?.");
					SCM(i, COLOR_ACT, "* 시청직원 이(가) 컴퓨터 자판을 두드리며 말한다.");
					SetPlayerCameraPos(i, 362.7384,173.5648,1008.3828);
					SetPlayerCameraLookAt(i, 359.7139,173.5408,1008.3828);
					SetPlayerPos(i, 359.7139,173.5408,1008.3828);
					SetPlayerSkin(i, 150);//23
					SetPlayerFacingAngle(i, 264.8134);//262.5594
					}
					else if(CivilTime[i] == 15)
					{
					new atext[20];
					if(PlayerInfo[i][pSex] == 1) { atext = "남자"; }
					else if(PlayerInfo[i][pSex] == 2) { atext = "여자"; }
					new otext[20];
					if(PlayerInfo[i][pOrigin] == 1) { otext = "한국"; }
					else if(PlayerInfo[i][pOrigin] == 2) { otext = "미국"; }
					else if(PlayerInfo[i][pOrigin] == 3) { otext = "중국"; }
					else if(PlayerInfo[i][pOrigin] == 4) { otext = "일본"; }
					else if(PlayerInfo[i][pOrigin] == 5) { otext = "프랑스"; }
					else if(PlayerInfo[i][pOrigin] == 6) { otext = "이탈리아"; }
					else if(PlayerInfo[i][pOrigin] == 7) { otext = "스페인"; }
					else if(PlayerInfo[i][pOrigin] == 8) { otext = "러시아"; }
					else if(PlayerInfo[i][pOrigin] == 9) { otext = "아프가니스탄"; }
					format(string, sizeof(string), " %s : 이름은 %s이고 나이는 %d세 성별은 %s 입니다. %s 출신입니다.하하", RPPlayerName(i), RPPlayerName(i), PlayerInfo[i][pAge], atext, otext);
					SCM(i, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s 이(가) 구렛나루를 쓰다듬으며 말한다", RPPlayerName(i));
					SCM(i, COLOR_ACT, string);
					SetPlayerCameraPos(i, 359.7139,173.5408,1008.3828);
					SetPlayerCameraLookAt(i, 362.7384,173.5648,1008.3828);
					SetPlayerPos(i, 362.7384,173.5648,1008.3828);
					SetPlayerSkin(i, 26);//23
					SetPlayerFacingAngle(i, 91.7722);//262.5594
					}
					else if(CivilTime[i] == 25)
					{
					format(string, sizeof(string), " 시청직원 : 모든정보가 성공적으로 입력되었습니다 !  %s씨", RPPlayerName(i));
					SCM(i, COLOR_WHITE, string);
					SCM(i, COLOR_ACT, "* 시청직원 이(가) 미소를 짓는다");
					SetPlayerCameraPos(i, 362.7384,173.5648,1008.3828);
					SetPlayerCameraLookAt(i, 359.7139,173.5408,1008.3828);
					SetPlayerPos(i, 359.7139,173.5408,1008.3828);
					SetPlayerSkin(i, 150);//23
					SetPlayerFacingAngle(i, 264.8134);//262.5594
					Anim(i,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
					Anim(i,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
					Anim(i,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
					Anim(i,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
					}
					else if(CivilTime[i] == 35)
					{
					format(string, sizeof(string), " 시청직원 : 이 시민증은 라스 벤츄라 를 살아가기위해 꼭 필요한것이 이 시민증입니다!.");
					SCM(i, COLOR_WHITE, string);
					}
					else if(CivilTime[i] == 40)
					{
					format(string, sizeof(string), " 시청직원 : 로마에 가면 로마법을 따르고, 한국을 가면 한국 법을 따르는것이 법이죠. %s씨 ", RPPlayerName(i));
					SCM(i, COLOR_WHITE, string);
					}
					else if(CivilTime[i] == 45)
					{
					format(string, sizeof(string), " 시청직원 : %s 씨, 이 시민증을가지고 집을사고 차량을 사고 여러가지 일을 할수있습니다! . ", RPPlayerName(i));
					SCM(i, COLOR_WHITE, string);
					}
					else if(CivilTime[i] == 50)
					{
					format(string, sizeof(string), " 시청직원 : %s 씨는 이 시민증을 가지고 계신다면 이 뉴 릴리  시티의 시민이란걸 잊지 말아주세요. ", RPPlayerName(i));
					SCM(i, COLOR_WHITE, string);
					}
					else if(CivilTime[i] == 55)
					{
					format(string, sizeof(string), " 시청직원 : 이것은 여권이라 생각하시고 잃어버리시면 재발급이 가능하니 꼭 오세요 .", RPPlayerName(i));
					SCM(i, COLOR_WHITE, string);
					SCM(i, COLOR_ACT, "* 시청직원 이(가) 시민증을 건내어준다");
					format(string, sizeof(string), "* %s 이(가) 시민증을 받는다", RPPlayerName(i));
					SCM(i, COLOR_ACT, string);
					}
					else if(CivilTime[i] == 60)
					{
					SCM(i, COLOR_ERROR,  "INFO : "#C_YELLOW" 시민증 발급이 정상적으로 지급 되었습니다.");
					SCM(i, COLOR_ERROR,  "INFO : "#C_YELLOW" /민증보 /명함보 로 자신을 남에게 보여줄수있습니다.");
					CivilTest[i] = 2;
    				CivilTime[i] = 0;
    				PlayerInfo[i][pCityLic] = 1;
    				SetPlayerFreeze(i, false, 0);
					TogglePlayerControllable(i, 1);
					SetPlayerPos(i, 1479.0691,-1744.8447,14.9533);
					SetPlayerSkin(i, PlayerInfo[i][pChar]);//햇고
					SetPlayerInterior(i, 0);
					SetCameraBehindPlayer(i);
					}
			}
			}

         if(TutTime[i] >= 1)
			{
				TutTime[i] += 1;
				if(TutTime[i] == 2)
				{
					ClearChatbox(i, 10);
					SCM(i, 0xDB7093FF,	 "[방송] 승객분들은 서둘러 탑승해주시길 바랍니다.");
					SCM(i, 0x62B382AA,   "");
					SCM(i, 0x62B382AA,   "");
					format(string, sizeof(string), "%s : .... 내 고향... 다시 가는군.. 그나저나 뭐를 탈까..", RPPlayerName(i) );
					SCM(i, COLOR_FADE1, string);
					SetPlayerInterior(i, 1);
					SetPlayerPos(i, 1664.1145,-2321.7209,-21.1802);
					SetPlayerFacingAngle(i, 179.3958);
					Anim(i,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
					SetPlayerCameraPos(i, 1665.0052,-2324.7339,-20.7900);
					SetPlayerCameraLookAt(i, 1664.1581,-2316.2549,-21.7177);
				}
				if(TutTime[i] == 6)
				{
					//ClearChatbox(i, 10);
					format(string, sizeof(string), "(행동) %s이(가) 박스에 꽂혀있는 안내북을 가져다 펼쳐서 본다.", RPPlayerName(i) );
					SCM(i, COLOR_ACT, string);
					Anim(i,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
					gOoc[i] = 0;
				}
				if(TutTime[i] == 10)
				{
					ClearChatbox(i, 20);
                    SetPlayerInterior(i, 0);
                    SetPlayerPos(i, 1664.1145,-2321.7209,-21.1802);//캐릭터 자리.
                    SetPlayerCameraPos(i, 1665.0052,-2324.7339,-20.7900);//내가 볼 자리.
                    SetPlayerCameraLookAt(i, 1664.1581,-2316.2549,-21.7177);//캐릭터 자리.
                    SCM(i, 0xC2A2DAAA,   "튜토리얼 진행률 : ★☆☆☆☆☆☆");
					SCM(i, 0x11EADAFF,   "튜토리얼을 시작 합니다. 총 7페이지 입니다.");
					SCM(i, 0x11EADAFF,   "원활한 RP를 진행하기 위해서 아시더라도 다시 봐주시길 바랍니다.");
					SCM(i, 0x11EADAFF,   "저희 라스 벤츄라 서버 에는 저희서버만의 규칙이 있습니다. [/서버규칙]참고 바랍니다.");
					SCM(i, 0x11EADAFF,   "처벌 내용이 궁금 하시다면 [/처벌내용] 참고하시면 됩니다.");
					SCM(i, 0x11EADAFF,   "튜토리얼을 다 보시면 인증번호를 쓰셔야합니다. 인증번호는 튜토리얼 중간에 나옵니다.");
					SCM(i, 0x11EADAFF,   "꼭 필독 해주시길 바랍니다.");
				}
				else if(TutTime[i] == 20)
				{
					ClearChatbox(i, 20);
					SCM(i, 0xC2A2DAAA,   "튜토리얼 진행률 : ★★☆☆☆☆☆");
					SCM(i, 0xFFFFFFAA,	 "           ＃Tutorial Part.1＃       ");
					SCM(i, 0x11EADAFF,   "");
					SCM(i, 0x11EADAFF,   "기본 규칙 - IC & OOC");
					SCM(i, 0x11EADAFF,   "IC : 게임속 세상, 즉 지금 유저분께서 하고 계시는 GTA 안의 세상입니다.");
					SCM(i, 0x11EADAFF,   "OOC : 게임 밖 세상, 즉 지금 유저분은 컴퓨터를 하고 계십니다. 그 세상입니다.");
					SCM(i, 0x11EADAFF,   "IC IN OOC : IC 세상에서 OOC 를 얘기 하는것 입니다. 이것은 RP중 금지 되어있는 규칙입니다.");
					SCM(i, 0x11EADAFF,   "OOC IN IC : OOC 세상에서 IC 를 얘기 하는것 입니다. 이것은 RP중 금지 되어있는 규칙입니다.");
					SCM(i, 0x11EADAFF,   "IC IN OOC 금지 왜 ?     IC에서 OOC를 얘기하면 RP를 진행하기엔 부적합니다. 대신 [/B]로 OOC를 말하실 수 있습니다. ");
					SCM(i, 0x11EADAFF,   "OOC IN IC 금지 왜 ?     OOC에서 IC를 얘기하면 OOC분쟁과 모욕이 있을수도 있기 때문에 금지합니다.");
				}
				else if(TutTime[i] == 30)//튜토리얼 시작후 몇초후
				{
					ClearChatbox(i, 20);//및미터 띌껀지
					SCM(i, 0xC2A2DAAA,   "튜토리얼 진행률 : ★★★☆☆☆☆");
					SCM(i, 0xFFFFFFAA,	 "           ＃Tutorial Part.2＃       ");
					SCM(i, 0x11EADAFF,   "");
					SCM(i, 0x11EADAFF,   "기본 규칙 - 버니 합핑");
					SCM(i, 0x11EADAFF,   "버니 합핑 : IC 세상에서 Shift 키를 눌러 점프를 해 깡충 깡충 뛰어 다니는것입니다.");
					SCM(i, 0x11EADAFF,   "버니 합핑 금지 왜 ?     Shift 키를 누르면 달리는 속도가 빨라질 뿐더러 OOC에선 빨리 뛰기 위해 깡충깡충 뛰지 않기 때문입니다.");
				}
                else if(TutTime[i] == 40)
				{
					ClearChatbox(i, 20);
					SCM(i, 0xC2A2DAAA,   "튜토리얼 진행률 : ★★★★☆☆☆");
					SCM(i, 0xFFFFFFAA,	 "           ＃Tutorial Part.3＃       ");
					SCM(i, 0x11EADAFF,   "");
					SCM(i, 0x11EADAFF,   "기본 규칙 - 이유 없이 데스매치");
					SCM(i, 0x11EADAFF,   "줄임말 이없데 : IC 세상에서 상대방을 이유없이 때리는것입니다. 데스매치를 하기 위해선 충분한 사유가 있어야합니다. [부모&두목님의 복수]등");
                    SCM(i, 0x11EADAFF,   "이없데 금지 왜 ?        OOC에서 이유없이 다른 사람을 때리진 않습니다.");
				}
				else if(TutTime[i] == 55)
				{
					ClearChatbox(i, 20);
					SCM(i, 0xC2A2DAAA,   "튜토리얼 진행률 : ★★★★★★☆");
					SCM(i, 0xFFFFFFAA,	 "           ＃Tutorial Part.4＃       ");
					SCM(i, 0x11EADAFF,   "기본규칙 - Transgress The Rule RP");
					SCM(i, 0x11EADAFF,   "Transgress The Rule RP [TTR - RP] : 규칙에 어긋난 RP");
					SCM(i, 0x11EADAFF,   "TTRRP는 릴리 서버에서 만든 규칙입니다.");
					SCM(i, 0x11EADAFF,   "규칙에 어긋나다라는 뜻을 가지고 있습니다.");
                	SCM(i, 0x11EADAFF,   "위에서 설명했듯이 메타게이밍,파워게이밍,이없데,버니합핑을 하면 모두 티티알 알피입니다.");
               		SCM(i, 0x11EADAFF,   "이 전 규칙에는 베드 알피 논알피 모두 해당 하는게 바로 티티알 알피 입니다.");
				}
				else if(TutTime[i] == 65)
				{
				    ClearChatbox(i, 20);
				    SCM(i, 0xC2A2DAAA,   "튜토리얼 진행률 : ★★★★★★★");
					SCM(i, 0x11EADAFF,   "자 ! 이제 튜토리얼을 모두 끝 맞췄습니다. 어서 RP를 하고 싶죠 ! ? 자 이제 RP속으로 빠져 볼까요 !");
					SCM(i, 0x11EADAFF,   "그리고 인증번호는 집중을 유도한 거짓말이었습니다. ~~~ 감사합니다 즐거운 RP하세요 ^^ ..");
                	SCM(i, 0x11EADAFF,   "참 ! 그리고 다른 규칙이 있다면 [/서버규칙] 을 참고하시고 처벌내용이 궁금하시면 [/처벌내용] 을 참고하세요 ! ");
				}
				else if(TutTime[i] == 73)
				{
					SetTimerEx("dlqwkd2", 4000, false, "i", i);
				}
			  }
			if(PlayerTazeTime[i] >= 1)
			{
				PlayerTazeTime[i] += 1;
				if(PlayerTazeTime[i] == 15)
				{
					PlayerTazeTime[i] = 0;
				}
				else
				{
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
				}
			}
			if(PlayerDrunk[i] >= 5)
			{
				PlayerDrunkTime[i] += 1;
				if(PlayerDrunkTime[i] == 8)
				{
					PlayerDrunkTime[i] = 0;
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
						if(GetPlayerState(i) == 2)
						{
							SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
						Anim(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
				}
			}
			if(PlayerStoned[i] >= 2)
			{
				PlayerStoned[i] += 0;
				if(PlayerStoned[i] == 0)
				{
					PlayerStoned[i] = 2;
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
						if(GetPlayerState(i) == 2)
						{
							SetVehicleZAngle(GetPlayerVehicleID(i), angle + 0);
						}
					}
					else
					{
						SetPlayerFacingAngle(i, angle + 0);
					}
				}
			}
			if(PlayerInfo[i][pCarTime] > 0)
			{
				if(PlayerInfo[i][pCarTime] <= 0)
				{
					PlayerInfo[i][pCarTime] = 0;
				}
				else
				{
					PlayerInfo[i][pCarTime] -= 1;
				}
			}
			if(RlwjfTime[i] > 0)
			{
				if(RlwjfTime[i] <= 0)
				{
					RlwjfTime[i] = 0;
				}
				else
				{
					RlwjfTime[i] -= 1;
				}
			}
			if(GunTime[i] > 0)
			{
				if(GunTime[i] <= 0)
				{
					GunTime[i] = 0;
				}
				else
				{
					GunTime[i] -= 1;
				}
			}
			if(BoxWaitTime[i] > 0)
			{
				if(BoxWaitTime[i] >= BoxDelay)
				{
					BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~Match Started", 5000, 1);
					SetPlayerFreeze(i, false, 0);
					TogglePlayerControllable(i, 1);
					RoundStarted = 1;
				}
				else
				{
					format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RoundStarted > 0)
			{
				if(PlayerBoxing[i] > 0)
				{
					new trigger = 0;
					new Lost = 0;
					new Float:angle;

					GetPlayerHealth(i, health);
					if(health < 12)
					{
						if(i == Boxer1) { Lost = 1; trigger = 1; }
						else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
					if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
					if(trigger)
					{
						new winner[MAX_PLAYER_NAME];
						new loser[MAX_PLAYER_NAME];
						new titel[MAX_PLAYER_NAME];
						if(Lost == 1)
						{
							if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
							{
								SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
								SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
								PlayerInfo[Boxer1][pInt] = 5; PlayerInfo[Boxer2][pInt] = 5;
								GetPlayerName(Boxer1, loser, sizeof(loser));
								GetPlayerName(Boxer2, winner, sizeof(winner));
								if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
								if(TBoxer < 255)
								{
									if(IsPlayerConnected(TBoxer))
									{
										if(TBoxer != Boxer2)
										{
											if(PlayerInfo[Boxer2][pJob] == 12)
											{
												TBoxer = Boxer2;
												GetPlayerName(TBoxer, titel, sizeof(titel));
												new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
												Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
												Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
												SaveBoxer();
												format(string, sizeof(string), "(뉴스) %s님이 월드챔피언 %s님과 경기를 하여 승리하였습니다",  titel, loser);
												OOCOff(COLOR_NEWS,string);
											}
											else
											{
												SCM(Boxer1, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 실망하지 마십시오, 당신은 언젠간 월드챔피언이 될것입니다");
											}
										}
										else
										{
											GetPlayerName(TBoxer, titel, sizeof(titel));
											format(string, sizeof(string), "(뉴스) 복싱챔피언  %s님이 %s님과 경기를 하여 승리하였습니다",  titel, loser);
											OOCOff(COLOR_NEWS,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
											Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
											SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), ""#C_WHITE "SERVER :"#C_WHITE" 당신은 경기를 마쳤습니다 (패배자 - %s), (승리자 - %s)", loser, winner);
								SCM(Boxer2, COLOR_INFO, string);
								GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
								format(string, sizeof(string), ""#C_WHITE "SERVER :"#C_WHITE" 당신은 경기를 마쳤습니다 (패배자 - %s), (승리자 - %s)", loser, winner);
								SCM(Boxer1, COLOR_INFO, string);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
									SCM(Boxer1, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신은 싸움으로 인해서 허기가 집니다, 무언가를 먹으십시오");
									SetHealth(Boxer1, 30.0);
								}
								else
								{
									SCM(Boxer1, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 컨디션은 최상입니다, 계속 경기를 진행하십시오");
									SetHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
									SCM(Boxer2, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신은 싸움으로 인해서 허기가 집니다, 무언가를 먹으십시오");
									SetHealth(Boxer2, 30.0);
								}
								else
								{
									SCM(Boxer2, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 컨디션은 최상입니다, 계속 경기를 진행하십시오");
									SetHealth(Boxer2, 50.0);
								}
								GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
						}
						else if(Lost == 2)
						{
							if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
							{
								SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
								SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
								PlayerInfo[Boxer1][pInt] = 5; PlayerInfo[Boxer2][pInt] = 5;
								GetPlayerName(Boxer1, winner, sizeof(winner));
								GetPlayerName(Boxer2, loser, sizeof(loser));
								if(PlayerInfo[Boxer2][pJob] == 9) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pJob] == 9) { PlayerInfo[Boxer1][pWins] += 1; }
								if(TBoxer < 255)
								{
									if(IsPlayerConnected(TBoxer))
									{
										if(TBoxer != Boxer1)
										{
											if(PlayerInfo[Boxer1][pJob] == 12)
											{
												TBoxer = Boxer1;
												GetPlayerName(TBoxer, titel, sizeof(titel));
												new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
												Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
												Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
												SaveBoxer();
												format(string, sizeof(string), "(뉴스) %s님이 월드챔피언 %s님과 경기를 하여 승리하였습니다",  titel, loser);
												OOCOff(COLOR_NEWS,string);
											}
											else
											{
												SCM(Boxer1, COLOR_ERROR, "INFO : "#C_WHITE" 실망하지 마십시오, 당신은 언젠간 월드챔피언이 될것입니다");
											}
										}
										else
										{
											GetPlayerName(TBoxer, titel, sizeof(titel));
											format(string, sizeof(string), "(뉴스) 복싱챔피언  %s님이 %s님과 경기를 하여 승리하였습니다",  titel, loser);
											OOCOff(COLOR_NEWS,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
											Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
											SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 경기를 마쳤습니다 (패배자 - %s), (승리자 - %s)", loser, winner);
								SCM(Boxer2, COLOR_ERROR, string);
								GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 경기를 마쳤습니다 (패배자 - %s), (승리자 - %s)", loser, winner);
								SCM(Boxer1, COLOR_ERROR, string);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
									SCM(Boxer1, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 싸움으로 인해서 허기가 집니다. 무언가를 먹으십시오");
									SetHealth(Boxer1, 30.0);
								}
								else
								{
									SCM(Boxer1, COLOR_ERROR, "INFO : "#C_WHITE" 당신의 컨디션은 최상입니다. 계속 경기를 진행하십시오");
									SetHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
									SCM(Boxer2, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 싸움으로 인해서 허기가 집니다. 무언가를 먹으십시오");
									SetHealth(Boxer2, 30.0);
								}
								else
								{
									SCM(Boxer2, COLOR_ERROR, "INFO : "#C_WHITE" 당신의 컨디션은 최상입니다. 계속 경기를 진행하십시오");
									SetHealth(Boxer2, 50.0);
								}
								GameTextForPlayer(Boxer1, "~g~Game ~r~End", 5000, 1); GameTextForPlayer(Boxer2, "~g~Game ~r~End", 5000, 1);
								if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
						}
						RoundStarted = 0;
						Boxer1 = 255;
						Boxer2 = 255;
						TBoxer = 255;
						trigger = 0;
					}
				}
			}
			if(gPlayerLogged[i] == 1 && PlayerInfo[i][pJailed] == 3 && PlayerInfo[i][pJailTime] >= 1)
			{
				new Float:X, Float:Y, Float:Z;
				Anim(i,"CRACK","crckidle2",3.0,1,1,1,1,-1);
				GetPlayerPos(i,X,Y,Z);
				SetPlayerCameraPos(i, X,Y,Z);
				SetPlayerCameraLookAt(i, X,Y,Z+0.1);
			}
			if(FindTime[i] > 0)
			{
				if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
				else
				{
					format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(TaxiCallTime[i] > 0)
			{
				if(TaxiAccepted[i] < 999)
				{
					if(IsPlayerConnected(TaxiAccepted[i]))
					{
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
					}
				}
			}
			if(BusCallTime[i] > 0)
			{
				if(BusAccepted[i] < 999)
				{
					if(IsPlayerConnected(BusAccepted[i]))
					{
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
					}
				}
			}
			if(cnwjr[i] > 0)
			{
				if(cnwjreotkd[i] < 999)
				{
					if(IsPlayerConnected(cnwjreotkd[i]))
					{
						if(PhoneOnline[cnwjreotkd[i]] == 0)
						{
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(cnwjreotkd[i], X, Y, Z);
							SetPlayerCheckpoint(i, X, Y, Z, 5);
						}
					}
				}
			}
			if(MechanicCallTime[i] > 0)
			{
				if(MechanicCallTime[i] >= 200) { MechanicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
				else
				{
					format(string, sizeof(string), "%d", 200 - MechanicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MechanicCallTime[i] += 1;
				}
			}
			if(PizzaCallTime[i] > 0)
			{
				if(PizzaCallTime[i] == 90) { PizzaCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
				else
				{
					format(string, sizeof(string), "%d", 90 - PizzaCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					PizzaCallTime[i] += 1;
				}
			}
			if(Robbed[i] == 1)
			{
				if(RobbedTime[i] <= 0)
				{
					RobbedTime[i] = 0;
					Robbed[i] = 0;
				}
				else
				{
					RobbedTime[i] -= 1;
				}
			}
			if(PlayerCuffed[i] == 1)
			{
				if(PlayerCuffedTime[i] <= 0)
				{
					SetPlayerFreeze(i, false, 0);
					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					PlayerCuffedTime[i] = 0;
					PlayerTazeTime[i] = 1;
				}
				else
				{
					PlayerCuffedTime[i] -= 1;
				}
			}
			if(PlayerCuffed[i] == 2)
			{
				if(PlayerCuffedTime[i] <= 0)
				{
					GameTextForPlayer(i, "~r~You broke the Cuffs, you are free", 2500, 3);
					SetPlayerFreeze(i, false, 0);
					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					PlayerCuffedTime[i] = 0;
				}
				else
				{
					PlayerCuffedTime[i] -= 1;
				}
			}
		}
	}
}


public Fillup()
{
	for(new i=0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			new VID;
			new FillUp;
			new string[256];
			VID = GetPlayerVehicleID(i);
			FillUp = GasMax - Gas[VID];
			if(Refueling[i] == 1)
			{
				if(IsACopCar(VID))
				{
					Gas[VID] += FillUp;
					FillUp = FillUp * SBizzInfo[0][sbEntranceCost];
					format(string,sizeof(string),"INFO : "#C_WHITE" 차량에 기름을 가득채우셨습니다 (비용 : $100)",FillUp);
					SCM(i,COLOR_ERROR,string);
					GameTextForPlayer(i, "~w~Government has paid for a gas", 5000, 1);
					GiveMoney(i,-100);
					SBizzInfo[0][sbTill] += 100;
					ExtortionSBiz(3, 100);
					HicarBank += 33;
					Refueling[i] = 0;
					SetPlayerFreeze(i, false, 0);
					TogglePlayerControllable(i, 1);
					SaveStuff();
				}
				else
				{
					if(GetMoney(i) >= 100)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * SBizzInfo[0][sbEntranceCost];
						format(string,sizeof(string),"INFO : "#C_WHITE" 차량에 기름을 가득채우셨습니다 (비용 : $100)",FillUp);
						SCM(i,COLOR_SUC,string);
						GiveMoney(i,-100);
						SBizzInfo[0][sbTill] += 100;
						HicarBank += 33;
						ExtortionSBiz(3, 100);
						Refueling[i] = 0;
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
						SaveStuff();
					}
					else
					{
						SCM(i,COLOR_ERROR,"INFO : "#C_WHITE" 주유를 위해서 필요한 돈이 부족합니다. 비용은 $100입니다");
						SetPlayerFreeze(i, false, 0);
						TogglePlayerControllable(i, 1);
					}
				}
			}
		}
	}
	return 1;
}

public StoppedVehicle()
{
	new Float:x,Float:y,Float:z;
	new Float:distance,value;
	for(new i=0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
				new VID;
				VID = GetPlayerVehicleID(i);
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
				value = floatround(distance * 3600);
				if(UpdateSeconds > 1)
				{
					value = floatround(value / UpdateSeconds);
				}
				if(SpeedMode)
				{
				}
				if(value == 0)
				{
					Gas[VID]++;
				}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ResetPlayerWeapons(playerid);
		if(PlayerInfo[playerid][pJailed] < 1)
		{
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			}
			if(gTeam[playerid] >= 3)
			{
				GiveWeapon(playerid, 0, 0);
			}
			SetPlayerArmour(playerid,PlayerInfo[playerid][pAmour]);
	//		if(PlayerInfo[playerid][pDonateRank] > 0)
	//		{
				if (PlayerInfo[playerid][pGun1] > 0)
				{
					GiveWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
					PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
				}
				if (PlayerInfo[playerid][pGun2] > 0)
				{
					GiveWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
					PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
				if (PlayerInfo[playerid][pGun3] > 0)
				{
					GiveWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
					PlayerInfo[playerid][pGun3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
				}
				if (PlayerInfo[playerid][pGun4] > 0)
				{
					GiveWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
					PlayerInfo[playerid][pGun4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
				}
 			PlayerInfo[playerid][pGun1]=0; PlayerInfo[playerid][pAmmo1]=0; PlayerInfo[playerid][pGun2]=0; PlayerInfo[playerid][pAmmo2]=0; PlayerInfo[playerid][pGun3]=0; PlayerInfo[playerid][pAmmo3]=0; PlayerInfo[playerid][pGun4]=0; PlayerInfo[playerid][pAmmo4]=0;
		}
	}
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		format(coordsstring, sizeof(coordsstring),"INFO : "#C_WHITE" 사업장 이름: %s",SBizzInfo[targetid][sbMessage]);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring),"(잠금) [%d] 입장가격: $%d 투자: %d원", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring),"(제품) [%d/%d] 사업장주인: %s", SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbMaxProducts],SBizzInfo[targetid][sbExtortion]);
		SCM(playerid, COLOR_ERROR,coordsstring);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
}
public Hacking(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "남자"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "여자"; }
		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "한국"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "미국"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "중국"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "일본"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "프랑스"; }
		else if(PlayerInfo[targetid][pOrigin] == 6) { otext = "이탈리아"; }
		else if(PlayerInfo[targetid][pOrigin] == 7) { otext = "스페인"; }
		else if(PlayerInfo[targetid][pOrigin] == 8) { otext = "러시아"; }
		new ttext[256];
		ttext = GetMemberName(PlayerInfo[targetid][pMember]);
		new rtext[256];
		rtext = GetRankName(PlayerInfo[targetid][pMember], PlayerInfo[targetid][pRank]);
		new jtext[21];
		if(PlayerInfo[targetid][pJob] == 1) { jtext = "탐정"; }
	    if(PlayerInfo[targetid][pJob] == 2) { jtext = "변호사"; }
	    if(PlayerInfo[targetid][pJob] == 3) { jtext = "피자 배달부"; }
		else if(PlayerInfo[targetid][pJob] == 4) { jtext = "마약상"; }
		else if(PlayerInfo[targetid][pJob] == 5) { jtext = "노점상인"; }
		else if(PlayerInfo[targetid][pJob] == 6) { jtext = "총기상"; }
		//else if(PlayerInfo[targetid][pJob] == 7) { jtext = "보디가드"; }
		//else if(PlayerInfo[targetid][pJob] == 8) { jtext = "총기상"; }
		//else if(PlayerInfo[targetid][pJob] == 9) { jtext = "복서"; }

		else if(PlayerInfo[targetid][pJob] == 11) { jtext = "농부"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "어부"; }
		else if(PlayerInfo[targetid][pJob] == 13) { jtext = "트럭기사"; }
		//else if(PlayerInfo[targetid][pJob] == 14) { jtext = "위조면허판매자"; }
		else if(PlayerInfo[targetid][pJob] == 16) { jtext = "환경미화원"; }
		else if(PlayerInfo[targetid][pJob] == 18) { jtext = "담배제조원"; }
		//else if(PlayerInfo[targetid][pJob] == 19) { jtext = "인부"; }
		else if(PlayerInfo[targetid][pJob] == 20) { jtext = "택시기사"; } //뭐 건듬? 그냥 텍스트하고 그 통 911 이거에서 신고후 납치시도 논알 이거 추가햇는데 .. 잠시
		else { jtext = "없음"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new married2[20];
		strmid(married2, PlayerInfo[targetid][pMarriedTo2], 0, strlen(PlayerInfo[targetid][pMarriedTo2]), 255);
		new age = PlayerInfo[targetid][pAge];
		new level = PlayerInfo[targetid][pLevel];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new coordsstring[256];
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
		format(coordsstring, sizeof(coordsstring), "INFO : "#C_WHITE" %s님의 신상 정보", name);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), "INFO : "#C_WHITE" 이름:[%s] 신용등급:[%d] 성별:[%s] 나이:[%d] ☎:[%d]", name,level,atext,age,pnumber);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), "INFO : "#C_WHITE" 단체:[%s] 계급:[%s] 부업:[%s] 배우자:[%s] 범죄:[%s]",ttext,rtext,jtext,married,married2);
		SCM(playerid, COLOR_ERROR,coordsstring);
		SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
	}
}
public ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "남자"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "여자"; }
		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "한국"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "미국"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "중국"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "일본"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "프랑스"; }
		else if(PlayerInfo[targetid][pOrigin] == 6) { otext = "이탈리아"; }
		else if(PlayerInfo[targetid][pOrigin] == 7) { otext = "스페인"; }
		else if(PlayerInfo[targetid][pOrigin] == 8) { otext = "러시아"; }
		new ttext[256];
		ttext = GetMemberName(PlayerInfo[targetid][pMember]);
		new rtext[256];
		rtext = GetRankName(PlayerInfo[targetid][pMember], PlayerInfo[targetid][pRank]);
		new jtext[21];
		if(PlayerInfo[targetid][pJob] == 1) { jtext = "탐정"; }
	    if(PlayerInfo[targetid][pJob] == 2) { jtext = "변호사"; }
	    if(PlayerInfo[targetid][pJob] == 3) { jtext = "피자 배달부"; }
		else if(PlayerInfo[targetid][pJob] == 4) { jtext = "마약상"; }
		else if(PlayerInfo[targetid][pJob] == 5) { jtext = "노점상인"; }
		else if(PlayerInfo[targetid][pJob] == 6) { jtext = "총기상"; }
		else if(PlayerInfo[targetid][pJob] == 10) { jtext = "피자배달부"; }
		else if(PlayerInfo[targetid][pJob] == 11) { jtext = "농부"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "어부"; }
		else if(PlayerInfo[targetid][pJob] == 13) { jtext = "트럭기사"; }
		else if(PlayerInfo[targetid][pJob] == 16) { jtext = "환경미화원"; }
		else if(PlayerInfo[targetid][pJob] == 18) { jtext = "담배제조원"; }
		else if(PlayerInfo[targetid][pJob] == 20) { jtext = "택시기사"; }
 		 else { jtext = "없음"; }
  		new PremiumName[20];
		if(PlayerInfo[playerid][premium] == 0){ PremiumName = "미등록"; }
		else if(PlayerInfo[playerid][premium] == 1){ PremiumName = "등록"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new married2[126];
		strmid(married2, PlayerInfo[targetid][pMarriedTo2], 0, strlen(PlayerInfo[targetid][pMarriedTo2]), 255);
		//new Wanted[64];
	//	strmid(Wanted, PlayerInfo[targetid][pWanted], 0, strlen(PlayerInfo[targetid][pWanted]), 255);
		new age = PlayerInfo[targetid][pAge];
		new level = PlayerInfo[targetid][pLevel];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new exp = PlayerInfo[targetid][pExp];
		new chingchan = PlayerInfo[targetid][pChingchan];
		new Float:health;
		new cash =  PlayerInfo[targetid][pCash];
		new accounts = PlayerInfo[targetid][pAccount];
		new warns = PlayerInfo[targetid][pWarns];
		//new beom = PlayerCrime[playerid][pAccusedof];
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new coordsstring[256];
		ClearChatbox(playerid, 1);
		SCM(playerid, COLOR_ERROR,"									 스탯목록");
		SCM(playerid, COLOR_SUN, "");
		format(coordsstring, sizeof(coordsstring), " Name : %s", name);
		SCM(playerid, COLOR_YELLOW2,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 성별:[%s] 나이:[%d] 국적:[%s] 배우자:[%s]",atext,age,otext,married);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 신용등급:[%d] 신용도:[%d/%d] 프리미엄:[%s]",level,exp,expamount,PremiumName);
		SCM(playerid, COLOR_ERROR,coordsstring);//프리미엄
		format(coordsstring, sizeof(coordsstring), " 단체:[%s] 계급:[%s] 시민직:[%s] 범죄:[%s]",ttext,rtext,jtext,married2);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 소지금:[%d] 은행잔액:[%d] ☎:[%d]",cash,accounts,pnumber);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 칭찬:[%d/3] 경고:[%d/8]",chingchan, warns);
		SCM(playerid, COLOR_ERROR,coordsstring);
	}
}
public ShowStats4(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
				new text1[20];
				new text2[20];
				new text3[20];
				new text4[20];
				new text5[20];
				new text6[20];
				new text7[20];
				new text8[20];
				if(PlayerInfo[targetid][pCarLic]) { text1 = "취득"; } else { text1 = "미취득"; }
				if(PlayerInfo[targetid][pFlyLic]) { text4 = "취득"; } else { text4 = "미취득"; }
				if(PlayerInfo[targetid][pBoatLic]) { text2 = "취득"; } else { text2 = "미취득"; }
				if(PlayerInfo[targetid][pFishLic]) { text3 = "취득"; } else { text3 = "미취득"; }
				if(PlayerInfo[targetid][pGunLic]) { text5 = "취득"; } else { text5 = "미취득"; }
				if(PlayerInfo[targetid][peogudLic]) { text6 = "취득"; } else { text6 = "미취득"; }
				if(PlayerInfo[targetid][dmdrmqLic]) { text7 = "취득"; } else { text7 = "미취득"; }
				if(PlayerInfo[targetid][pCityLic]) { text8 = "취득"; } else { text8 = "미취득"; }
				new string[256];
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
				format(string, sizeof(string), "INFO : "#C_WHITE" 운전면허: %s, 벌점: (%d점/5점)", text1, PlayerInfo[targetid][pDemerit]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 비행면허: %s", text4);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 항해면허: %s", text2);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 낚시면허: %s", text3);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 무기면허: %s", text5);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 대형면허: %s", text6);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 의료자격: %s", text7);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 시민증: %s", text8);
			    SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
			}
		}
public Showthwlvna(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new drugs =  PlayerInfo[targetid][pDrugs];
		new mats =  PlayerInfo[targetid][pMats];
		new Cigarettes =  PlayerInfo[targetid][pCigarettes];
		new Lighter =  PlayerInfo[targetid][pLighter];
		new housekey = PlayerInfo[targetid][pHouse];
		new Food1 = PlayerInfo[targetid][Gimbob];
		new pak = PlayerInfo[targetid][pPackage];
		new Pill = PlayerInfo[targetid][pPill];
		new Fuel = PlayerInfo[targetid][pFuel];
		new Meal = PlayerInfo[targetid][pMeal];
		new HarvestMeal = PlayerInfo[targetid][pHarvestMeal];
		new gps = PlayerInfo[targetid][pGPS];
		new baejin2 = PlayerInfo[playerid][pBaejin2];
		new gktehrm = PlayerInfo[playerid][pgktehrm];
		new fkaus = PlayerInfo[playerid][pfkaus];
		new dkdltm = PlayerInfo[playerid][pdkdltm];
		new coordsstring[256];
		ClearChatbox(playerid, 5);

//		SCM(playerid, COLOR_YELLOW2, "자신의 소지품 정보");

		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));

		format(coordsstring, sizeof(coordsstring), "%s 의 소지품 정보", name);
		SCM(playerid, COLOR_YELLOW2,coordsstring);
		format(coordsstring, sizeof(coordsstring), "패키지:[%d] 총기재료:[%d] 마약:[%d] 담배:[%d] 술:[%d]",pak,mats,drugs,Cigarettes,Lighter);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), "가스캔:[%d] 밧줄:[%d] 재갈:[%d] 안대:[%d] 알약:[%d]",Food1, Fuel, PlayerInfo[targetid][pRope], PlayerInfo[targetid][pShutupMouse], PlayerInfo[targetid][pBandage], Pill);//뭐뭐? 밧줄 제갈.
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), "밀씨앗:[%d] 수확한 밀:[%d] GPS:[%d] 철근:[%d]",Meal,HarvestMeal,gps,baejin2);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), "라면사리:[%d] 핫도그:[%d] 아이스크림:[%d]",fkaus,gktehrm,dkdltm);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), "집열쇠:[%d]",housekey);
		SCM(playerid, COLOR_ERROR,coordsstring);
	}
}
public ShowStats2(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "남자"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "여자"; }
		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "한국"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "미국"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "중국"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "일본"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "프랑스"; }
		else if(PlayerInfo[targetid][pOrigin] == 6) { otext = "이탈리아"; }
		else if(PlayerInfo[targetid][pOrigin] == 7) { otext = "스페인"; }
		else if(PlayerInfo[targetid][pOrigin] == 8) { otext = "러시아"; }
		new ttext[256];
		ttext = GetMemberName(PlayerInfo[targetid][pMember]);
		new rtext[256];
		rtext = GetRankName(PlayerInfo[targetid][pMember], PlayerInfo[targetid][pRank]);
		new jtext[21];
		if(PlayerInfo[targetid][pJob] == 1) { jtext = "탐정"; }
		if(PlayerInfo[targetid][pJob] == 2) { jtext = "변호사"; }
		if(PlayerInfo[targetid][pJob] == 3) { jtext = "피자 배달부"; }
		else if(PlayerInfo[targetid][pJob] == 4) { jtext = "마약상"; }
		else if(PlayerInfo[targetid][pJob] == 5) { jtext = "노점상인"; }
		else if(PlayerInfo[targetid][pJob] == 6) { jtext = "총기상"; }
		else if(PlayerInfo[targetid][pJob] == 10) { jtext = "피자배달부"; }
		else if(PlayerInfo[targetid][pJob] == 11) { jtext = "농부"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "어부"; }
		else if(PlayerInfo[targetid][pJob] == 13) { jtext = "트럭기사"; }
		else if(PlayerInfo[targetid][pJob] == 16) { jtext = "환경미화원"; }
		else if(PlayerInfo[targetid][pJob] == 18) { jtext = "담배제조원"; }
		else if(PlayerInfo[targetid][pJob] == 20) { jtext = "택"; }
		else { jtext = "없음"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new married2[126];
		strmid(married2, PlayerInfo[targetid][pMarriedTo2], 0, strlen(PlayerInfo[targetid][pMarriedTo2]), 255);
		new age = PlayerInfo[targetid][pAge];
		new level = PlayerInfo[targetid][pLevel];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new exp = PlayerInfo[targetid][pExp];
		new Float:health;
		new cash =  PlayerInfo[targetid][pCash];
		new accounts = PlayerInfo[targetid][pAccount];
		new warns = PlayerInfo[targetid][pWarns];
		new chingchan = PlayerInfo[targetid][pChingchan];
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new coordsstring[256];
		ClearChatbox(playerid, 1);
		SCM(playerid, COLOR_ERROR,"									 스탯목록 ");
		SCM(playerid, COLOR_SUN, "");
		format(coordsstring, sizeof(coordsstring), " Name : %s", name);
		SCM(playerid, COLOR_YELLOW2,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 성별:[%s] 나이:[%d] 국적:[%s] 배우자:[%s]",atext,age,otext,married);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 신용등급:[%d] 신용도:[%d/%d]",level,exp,expamount);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 단체:[%s] 계급:[%s] 시민직:[%s]",ttext,rtext,jtext);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 소지금:[%d] 은행계좌:[%d]",cash,accounts);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " ☎:[%d] 범죄:[%d]",pnumber,married2);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 칭찬:[%d/3] 경고:[%d/8]",chingchan, warns);
		SCM(playerid, COLOR_ERROR,coordsstring);
	}
}

public ShowStats3(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "남자"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "여자"; }
		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "한국"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "미국"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "중국"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "일본"; }
		else if(PlayerInfo[targetid][pOrigin] == 5) { otext = "프랑스"; }
		else if(PlayerInfo[targetid][pOrigin] == 6) { otext = "이탈리아"; }
		else if(PlayerInfo[targetid][pOrigin] == 7) { otext = "스페인"; }
		else if(PlayerInfo[targetid][pOrigin] == 8) { otext = "러시아"; }
		new ttext[256];
		ttext = GetMemberName(PlayerInfo[targetid][pMember]);
		new rtext[256];
		rtext = GetRankName(PlayerInfo[targetid][pMember], PlayerInfo[targetid][pRank]);

		new age = PlayerInfo[targetid][pAge];
		new level = PlayerInfo[targetid][pLevel];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new coordsstring[256];
		SCM(playerid, COLOR_SUN,"━━━━━━━━━━━━━━━━━━━━━━━━━━");
		format(coordsstring, sizeof(coordsstring), " Name %s", name);
		SCM(playerid, COLOR_YELLOW,coordsstring);
		format(coordsstring, sizeof(coordsstring), " 신용등급:[%d] 성별:[%s] 국적: [%s] 나이:[%d] ☎:[%d]", level,atext,otext,age,pnumber);
		SCM(playerid, COLOR_ERROR,coordsstring);
		format(coordsstring, sizeof(coordsstring), " Job 단체:[%s] 계급:[%s] ",ttext,rtext);
		SCM(playerid, COLOR_ERROR,coordsstring);
		SCM(playerid, COLOR_SUN,"━━━━━━━━━━━━━━━━━━━━━━━━━━");
	}
}
//---------------------------------------------------------

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetPlayerColor(playerid,COLOR_WHITE);
	}
}
//---------------------------------------------------------

public GameModeInitExitFunc()
{
	new string[128];
	format(string, sizeof(string), "Server Rebooting...~n~Please Wait For Server");
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}

public GameModeExitFunc()
{
	GameModeExit();
}

//------------------------------------------------------------------------------------------------------
public SaveMission(playerid,name[])
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		new missionname[64];
		new var[128];
		new makername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, makername, sizeof(makername));
		new rand = random(999);
		if(rand == 0) { rand = 1; }
		new number = rand;
		if(MissionInfo[mToggle] == 0 || MissionInfo[mToggle] == 1) { }
		else { MissionInfo[mToggle] = 1; }
		format(missionname, sizeof(missionname), "script/%s.mis",name);
		new File: hFile = fopen(missionname, io_write);
		format(var, 128, "Title=%s\n", MissionInfo[mTitle]);fwrite(hFile, var);
		format(var, 128, "Maker=%s\n", makername);fwrite(hFile, var);
		format(var, 128, "Text1=%s\n", MissionInfo[mText1]);fwrite(hFile, var);
		format(var, 128, "Text2=%s\n", MissionInfo[mText2]);fwrite(hFile, var);
		format(var, 128, "Text3=%s\n", MissionInfo[mText3]);fwrite(hFile, var);
		format(var, 128, "Text4=%s\n", MissionInfo[mText4]);fwrite(hFile, var);
		format(var, 128, "Text5=%s\n", MissionInfo[mText5]);fwrite(hFile, var);
		format(var, 128, "Text6=%s\n", MissionInfo[mText6]);fwrite(hFile, var);
		format(var, 128, "Text7=%s\n", MissionInfo[mText7]);fwrite(hFile, var);
		format(var, 128, "Text8=%s\n", MissionInfo[mText8]);fwrite(hFile, var);
		format(var, 128, "Text9=%s\n", MissionInfo[mText9]);fwrite(hFile, var);
		format(var, 128, "Text10=%s\n", MissionInfo[mText10]);fwrite(hFile, var);
		format(var, 128, "Text11=%s\n", MissionInfo[mText11]);fwrite(hFile, var);
		format(var, 128, "Text12=%s\n", MissionInfo[mText12]);fwrite(hFile, var);
		format(var, 128, "Text13=%s\n", MissionInfo[mText13]);fwrite(hFile, var);
		format(var, 128, "Text14=%s\n", MissionInfo[mText14]);fwrite(hFile, var);
		format(var, 128, "Text15=%s\n", MissionInfo[mText15]);fwrite(hFile, var);
		format(var, 128, "Text16=%s\n", MissionInfo[mText16]);fwrite(hFile, var);
		format(var, 128, "Text17=%s\n", MissionInfo[mText17]);fwrite(hFile, var);
		format(var, 128, "Text18=%s\n", MissionInfo[mText18]);fwrite(hFile, var);
		format(var, 128, "GText1=%s\n", MissionInfo[mGText1]);fwrite(hFile, var);
		format(var, 128, "GText2=%s\n", MissionInfo[mGText2]);fwrite(hFile, var);
		format(var, 128, "GText3=%s\n", MissionInfo[mGText3]);fwrite(hFile, var);
		format(var, 128, "GText4=%s\n", MissionInfo[mGText4]);fwrite(hFile, var);
		format(var, 128, "GText5=%s\n", MissionInfo[mGText5]);fwrite(hFile, var);
		format(var, 128, "GText6=%s\n", MissionInfo[mGText6]);fwrite(hFile, var);
		format(var, 128, "CP1X=%f\n", MissionInfo[mCP1][0]);fwrite(hFile, var);
		format(var, 128, "CP1Y=%f\n", MissionInfo[mCP1][1]);fwrite(hFile, var);
		format(var, 128, "CP1Z=%f\n", MissionInfo[mCP1][2]);fwrite(hFile, var);
		format(var, 128, "CP2X=%f\n", MissionInfo[mCP2][0]);fwrite(hFile, var);
		format(var, 128, "CP2Y=%f\n", MissionInfo[mCP2][1]);fwrite(hFile, var);
		format(var, 128, "CP2Z=%f\n", MissionInfo[mCP2][2]);fwrite(hFile, var);
		format(var, 128, "CP3X=%f\n", MissionInfo[mCP3][0]);fwrite(hFile, var);
		format(var, 128, "CP3Y=%f\n", MissionInfo[mCP3][1]);fwrite(hFile, var);
		format(var, 128, "CP3Z=%f\n", MissionInfo[mCP3][2]);fwrite(hFile, var);
		format(var, 128, "CP4X=%f\n", MissionInfo[mCP4][0]);fwrite(hFile, var);
		format(var, 128, "CP4Y=%f\n", MissionInfo[mCP4][1]);fwrite(hFile, var);
		format(var, 128, "CP4Z=%f\n", MissionInfo[mCP4][2]);fwrite(hFile, var);
		format(var, 128, "CP5X=%f\n", MissionInfo[mCP5][0]);fwrite(hFile, var);
		format(var, 128, "CP5Y=%f\n", MissionInfo[mCP5][1]);fwrite(hFile, var);
		format(var, 128, "CP5Z=%f\n", MissionInfo[mCP5][2]);fwrite(hFile, var);
		format(var, 128, "CP6X=%f\n", MissionInfo[mCP6][0]);fwrite(hFile, var);
		format(var, 128, "CP6Y=%f\n", MissionInfo[mCP6][1]);fwrite(hFile, var);
		format(var, 128, "CP6Z=%f\n", MissionInfo[mCP6][2]);fwrite(hFile, var);
		format(var, 128, "Number=%d\n", number);fwrite(hFile, var);
		format(var, 128, "Reward=%d\n", MissionInfo[mReward]);fwrite(hFile, var);
		format(var, 128, "Toggle=%d\n", MissionInfo[mToggle]);fwrite(hFile, var);
		fclose(hFile);
		format(coordsstring, sizeof(coordsstring), "INFO : "#C_WHITE" %s미션이 저장되었습니다",name);
		SCM(playerid, COLOR_ERROR,coordsstring);
	}
	return 1;
}

public LoadMission(playerid,name[])
{
	if(IsPlayerConnected(playerid))
	{
		new missionname[64];
		format(missionname, sizeof(missionname), "script/%s.mis",name);
		new File: file = fopen(missionname, io_read);
		if (file)
		{
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( file , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Title" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kTitle], val, 0, strlen(val), 255); }
				if( strcmp( key , "Maker" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kMaker], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText1], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText2], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText3], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText4], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText5], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text6" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText6], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text7" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText7], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text8" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText8], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text9" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText9], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text10" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText10], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text11" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText11], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text12" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText12], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text13" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText13], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text14" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText14], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text15" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText15], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text16" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText16], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text17" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText17], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text18" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText18], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText1], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText2], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText3], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText4], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText5], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText6" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText6], val, 0, strlen(val), 255); }
				if( strcmp( key , "CP1X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][0] = floatstr( val ); }
				if( strcmp( key , "CP1Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][1] = floatstr( val ); }
				if( strcmp( key , "CP1Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][2] = floatstr( val ); }
				if( strcmp( key , "CP2X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][0] = floatstr( val ); }
				if( strcmp( key , "CP2Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][1] = floatstr( val ); }
				if( strcmp( key , "CP2Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][2] = floatstr( val ); }
				if( strcmp( key , "CP3X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][0] = floatstr( val ); }
				if( strcmp( key , "CP3Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][1] = floatstr( val ); }
				if( strcmp( key , "CP3Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][2] = floatstr( val ); }
				if( strcmp( key , "CP4X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][0] = floatstr( val ); }
				if( strcmp( key , "CP4Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][1] = floatstr( val ); }
				if( strcmp( key , "CP4Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][2] = floatstr( val ); }
				if( strcmp( key , "CP5X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][0] = floatstr( val ); }
				if( strcmp( key , "CP5Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][1] = floatstr( val ); }
				if( strcmp( key , "CP5Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][2] = floatstr( val ); }
				if( strcmp( key , "CP6X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][0] = floatstr( val ); }
				if( strcmp( key , "CP6Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][1] = floatstr( val ); }
				if( strcmp( key , "CP6Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][2] = floatstr( val ); }
				if( strcmp( key , "Number" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kNumber] = strval( val ); }
				if( strcmp( key , "Reward" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kReward] = strval( val ); }
				if( strcmp( key , "Toggle" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kToggle] = strval( val ); }
			}
			fclose(file);
			//MissionPlayable = PlayMission[kNumber];
		}
		else
		{
			//SCM(playerid, COLOR_GREEN,"발견되지 않은 임무 파일");
		}
	}
	return 1;
}

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("script/boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("script/boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadStuff()
{
	new arrCoords[21][128];
	new strFromFile2[256];
	new File: file = fopen("script/stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		HicarBank = strval(arrCoords[4]);
		ri = strval(arrCoords[5]);
		fl = strval(arrCoords[6]);
		fbi = strval(arrCoords[7]);
		gnu = strval(arrCoords[8]);
		si = strval(arrCoords[9]);
		emt = strval(arrCoords[10]);
		bangsoso = strval(arrCoords[11]);
		admin = strval(arrCoords[12]);
		goodnewbie = strval(arrCoords[13]);
		TaxValue2 = strval(arrCoords[14]);
		TaxValue3 = strval(arrCoords[15]);
		TaxValue4 = strval(arrCoords[16]);
		TaxValue5 = strval(arrCoords[17]);
		TaxValue6 = strval(arrCoords[18]);
		TaxValue7 = strval(arrCoords[19]);
		TaxValue8 = strval(arrCoords[20]);
		fclose(file);
		if(Security == 0 || Security == 1)
		{
		}
		else
		{
			GameModeExit();
		}
	}
	else
	{
		GameModeExit();
	}
	return 1;
}

public SaveStuff()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", Jackpot,Tax,TaxValue,Security,HicarBank,ri,fl,fbi,gnu,si,emt,bangsoso,admin,goodnewbie,TaxValue2,TaxValue3,TaxValue4,TaxValue5,TaxValue6,TaxValue7,TaxValue8);
	new File: file2 = fopen("script/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadTurfs()
{
	new arrCoords[6][64];
	new strFromFile2[256];
	new File: file = fopen("script/turfs.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(TurfInfo))
		{
			fread(file, strFromFile2);//
			split(strFromFile2, arrCoords, '|');
			strmid(TurfInfo[idx][zOwner], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(TurfInfo[idx][zColor], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			TurfInfo[idx][zMinX] = floatstr(arrCoords[2]);
			TurfInfo[idx][zMinY] = floatstr(arrCoords[3]);
			TurfInfo[idx][zMaxX] = floatstr(arrCoords[4]);
			TurfInfo[idx][zMaxY] = floatstr(arrCoords[5]);
			//printf("Turf:%d Name: %s Owner:%s MinX:%f MinY:%f MinZ:%f MaxX:%f MaxY:%f MaxZ:%f\n",
			//idx,TurfInfo[idx][zName],TurfInfo[idx][zOwner],TurfInfo[idx][zMinX],TurfInfo[idx][zMinY],TurfInfo[idx][zMinZ],TurfInfo[idx][zMaxX],TurfInfo[idx][zMaxY],TurfInfo[idx][zMaxZ]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveTurfs()
{
	new idx;
	new File: file2;
	while (idx < sizeof(TurfInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%f|%f|%f|%f|%f|%f\n",
			TurfInfo[idx][zOwner],
			TurfInfo[idx][zColor],
			TurfInfo[idx][zMinX],
			TurfInfo[idx][zMinY],
			TurfInfo[idx][zMaxX],
			TurfInfo[idx][zMaxY]);
		if(idx == 0)
		{
			file2 = fopen("script/turfs.cfg", io_write);
		}
		else
		{
			file2 = fopen("script/turfs.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("script/ck.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			//		printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
			//			idx,CKInfo[idx][cUsed],CKInfo[idx][cSendername],CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveCK()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CKInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%d\n",
			CKInfo[idx][cSendername],
			CKInfo[idx][cGiveplayer],
			CKInfo[idx][cUsed]);
		if(idx == 0)
		{
			file2 = fopen("script/ck.cfg", io_write);
		}
		else
		{
			file2 = fopen("script/ck.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadFamilies()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("script/families.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(FamilyInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			FamilyInfo[idx][FamilyTaken] = strval(arrCoords[0]);
			strmid(FamilyInfo[idx][FamilyName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(FamilyInfo[idx][FamilyMOTD], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(FamilyInfo[idx][FamilyColor], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(FamilyInfo[idx][FamilyLeader], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			FamilyInfo[idx][FamilyMembers] = strval(arrCoords[5]);
			FamilyInfo[idx][FamilySpawn][0] = floatstr(arrCoords[6]);
			FamilyInfo[idx][FamilySpawn][1] = floatstr(arrCoords[7]);
			FamilyInfo[idx][FamilySpawn][2] = floatstr(arrCoords[8]);
			FamilyInfo[idx][FamilySpawn][3] = floatstr(arrCoords[9]);
			FamilyInfo[idx][FamilyInterior] = strval(arrCoords[10]);
		//	printf("Family:%d Taken: %d Name:%s MOTD:%s Leader:%s Members:%d SpawnX:%f SpawnY:%f SpawnZ:%f Int:%d",
			//idx,FamilyInfo[idx][FamilyTaken],FamilyInfo[idx][FamilyName],FamilyInfo[idx][FamilyMOTD],FamilyInfo[idx][FamilyLeader],FamilyInfo[idx][FamilyMembers],FamilyInfo[idx][FamilySpawn][0],FamilyInfo[idx][FamilySpawn][1],FamilyInfo[idx][FamilySpawn][2],FamilyInfo[idx][FamilyInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveFamilies()
{
	new idx;
	new File: file2;
	while (idx < sizeof(FamilyInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%d|%f|%f|%f|%f|%d\n",
			FamilyInfo[idx][FamilyTaken],
			FamilyInfo[idx][FamilyName],
			FamilyInfo[idx][FamilyMOTD],
			FamilyInfo[idx][FamilyColor],
			FamilyInfo[idx][FamilyLeader],
			FamilyInfo[idx][FamilyMembers],
			FamilyInfo[idx][FamilySpawn][0],
			FamilyInfo[idx][FamilySpawn][1],
			FamilyInfo[idx][FamilySpawn][2],
			FamilyInfo[idx][FamilySpawn][3],
			FamilyInfo[idx][FamilyInterior],
			FamilyInfo[idx][FamilyRankName1],
			FamilyInfo[idx][FamilyRankName2],
			FamilyInfo[idx][FamilyRankName3],
			FamilyInfo[idx][FamilyRankName4],
			FamilyInfo[idx][FamilyRankName5],
			FamilyInfo[idx][FamilyRankName6]);
		if(idx == 0)
		{
			file2 = fopen("script/families.cfg", io_write);
		}
		else
		{
			file2 = fopen("script/families.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadWareHouse()
{
	new arrCoords[4][64];
	new strFromFile2[256];
	new File: file = fopen("script/warehouse.cfg", io_read);
	if (file)
	{
		new idx = 0;
		while (idx < sizeof(WHInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			WHInfo[idx][wMember] = strval(arrCoords[0]);
			WHInfo[idx][wMoney] = strval(arrCoords[1]);
			WHInfo[idx][wDrug] = strval(arrCoords[2]);
			WHInfo[idx][wMaterial] = strval(arrCoords[3]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}
public SaveWareHouse()
{
	new idx;
	new File: file2;
	while (idx < sizeof(WHInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%d|%d|%d",
			WHInfo[idx][wMember],
			WHInfo[idx][wMoney],
			WHInfo[idx][wDrug],
			WHInfo[idx][wMaterial]);
		if(idx == 0)
		{
			file2 = fopen("script/warehouse.cfg", io_write);
		}
		else
		{
			file2 = fopen("script/warehouse.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadSBizz()
{
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("script/sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[12]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[13]);
			SBizzInfo[idx][sbMaxProducts] = strval(arrCoords[14]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[15]);
			printf("SBizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
				idx,
				SBizzInfo[idx][sbOwner],
				SBizzInfo[idx][sbMessage],
				SBizzInfo[idx][sbEntranceCost],
				SBizzInfo[idx][sbTill],
				SBizzInfo[idx][sbProducts],
				SBizzInfo[idx][sbMaxProducts],
				SBizzInfo[idx][sbInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
Baller = 999;
DestroyObject(Ball);
Ball = CreateObject(2114, 2782.3027,-2019.0826,13.5547-0.8, 0, 0, 96);
	new File: file = fopen("lamdnn.gsav", io_read);
	Audio_SetPack("Lily_pack", true);
	Audio_CreateTCPServer(7777);
	LoadAudios();
	SetTimer("MaxExpAndLevelUp",1000,true);
	if (file)
	{
		new valtmp[256];
		fread(file, valtmp);
		new key[256],val[256];
		new Data[256];
		while(fread(file,Data,sizeof(Data)))
		{
			key = ini_GetKey(Data);
            if( strcmp( key , "MSG1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Gongji[0], val, 0, strlen(val)-1, 255); }
			if( strcmp( key , "MSG2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(Gongji[1], val, 0, strlen(val)-1, 255); }
		}

		print("Load Date File");
		printf("1:%s",Gongji[0]);
		printf("2:%s",Gongji[1]);
		fclose(file);

		new string[256];
	    format(string,sizeof(string),"%s\n\n\n%s",Gongji[0],Gongji[1]);
	    Update3DTextLabelText(GongiMS,0xFFFFFFFF,string);
	}else{
		new File:hFile;
		hFile = fopen("lamdnn.gsav", io_write);
		new var[32];
		c_fwrite(hFile, "Text Save\r\n");
		format(var, 32, "MSG1=%s\r\n",Gongji[0]);c_fwrite(hFile, var);
		format(var, 32, "MSG2=%s\r\n",Gongji[1]);c_fwrite(hFile, var);
		fclose(hFile);
 }


	//=================================
	LoadContract();
	LoadCarlist();
	LoadHouse();
	noooc = 1; xhlwkdTlqkf=0;
	norhks = 0;
	ShowNameTags(1);//
	//=================================
	for(new h=1; h<MAX_BUILDING; h++)
	{
		BuildingInfo[h][hNum]=h;
	}
	new string[MAX_PLAYER_NAME];
	new string1[MAX_PLAYER_NAME];
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}
	CreateFoodMenus();
	LoadSBizz();
	LoadBoxer();
	LoadStuff();
	LoadFamilies();
	LoadCK();
	LoadTurfs();
	LoadDrugSystem();
	LoadMatsSystem();
	LoadHQLocks();
	LoadWareHouse();
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nothing");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "No-one");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	PlayerHaul[99][pCapasity] = 100;
	PlayerHaul[100][pCapasity] = 100;
	PlayerHaul[101][pCapasity] = 50;
	PlayerHaul[102][pCapasity] = 50;

	SetTimer("LuX_SpeedoMeterUp", 500, 1);
	for(new i=0; i<PLAYERS; i++){
	
	zstar9 = CreateObject(2920, 2238.16, 2450.25, 10.72,   -90.00, 0.00, 360.00);//경찰서문 2
	
//======================[하단에 텍스트 드로우] =========================//
	foresttext = TextDrawCreate(5.000000,435.000000,"Las Venturas Role Playing Game Server");
	TextDrawAlignment(foresttext,1);
	TextDrawBackgroundColor(foresttext,0x0000ff33);
	TextDrawFont(foresttext,2);
	TextDrawLetterSize(foresttext,0.299999,1.100000);
	TextDrawSetOutline(foresttext,1);
	TextDrawSetProportional(foresttext,1);
//---------------------------------------------------------->

//---------------------------------------------------------->
    format(lstring, sizeof(lstring), "Inicializing...");
    LFunc[i] = TextDrawCreate(466.000000,343.000000,lstring);
	TextDrawAlignment(LFunc[i],0);
	TextDrawBackgroundColor(LFunc[i],0x000000ff);
	TextDrawFont(LFunc[i],1);
	TextDrawLetterSize(LFunc[i],0.299999,1.200000);
	TextDrawColor(LFunc[i],0xffffffff);
	TextDrawSetOutline(LFunc[i],1);
	TextDrawSetProportional(LFunc[i],1);
	TextDrawSetShadow(LFunc[i],1);

//---------------------------------------------------------->
    format(lstr, sizeof(lstr), "Inicializing...");
	Lmph[i] = TextDrawCreate(466.000000,400.000000,lstr);
	TextDrawAlignment(Lmph[i],0);
	TextDrawBackgroundColor(Lmph[i],0x000000ff);
	TextDrawFont(Lmph[i],1);
	TextDrawLetterSize(Lmph[i],0.299999,1.000000);
	TextDrawColor(Lmph[i],0xffffffff);
	TextDrawSetOutline(Lmph[i],1);
	TextDrawSetProportional(Lmph[i],1);
	TextDrawSetShadow(Lmph[i],1);
	}
	SetTimer("CheckStatus", 500, 1);
	/*========================================================================*/
	new Hilton[128];
	format(Hilton, sizeof(Hilton), "hostname %s", SERVER1);
	SendRconCommand(Hilton);
	format(Hilton, sizeof(Hilton), "mapname %s", MAPNAME1);
	SendRconCommand(Hilton);
	format(Hilton, sizeof(Hilton), "weburl %s", WEBSITE);
	SendRconCommand(Hilton);
	if(strlen(PASSWORD) != 0)
	{
	format(Hilton, sizeof(Hilton), "password %s", PASSWORD);
	SendRconCommand(Hilton);
	format(Hilton, sizeof(Hilton), "hostname %s", PASSSERVER);
	SendRconCommand(Hilton);
	}
	format(Hilton, sizeof(Hilton), "%s", SCRIPT_VERSION);
	SetGameModeText(Hilton);
	/*========================================================================*/
	format(objstore, sizeof(objstore), "필요없음");
	format(cbjstore, sizeof(cbjstore), "필요없음");

	format(motd, sizeof(motd), "INFO : "#C_WHITE" 서버에 접속하셨습니다.");
	gettime(ghour, gminute, gsecond);
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	AllowInteriorWeapons(1);
	AllowAdminTeleport(0);
	ShowPlayerMarkers(false);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	// ------------------오브젝트!- ---------------------------\
	//LV 카지노 옵젝
	CreateDynamicObject(18018, 1477.64648438, -1553.73046875, 12.54687500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1482.81481934, -1546.13842773, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1483.70068359, -1546.14135742, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1484.53869629, -1546.15893555, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1486.87609863, -1546.20056152, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1487.78808594, -1546.18371582, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1488.75000000, -1546.14599609, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1754, 1489.64379883, -1546.13659668, 14.98437500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(16151, 1467.98583984, -1549.82446289, 12.85468769, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(1337, 1467.41101074, -1544.12341309, 13.20391273, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2796, 1469.99389648, -1558.83239746, 15.79220772, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(16000, 1484.18847656, -1562.18395996, 10.01188278, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1337, 1421.74255371, -1479.13464355, 31.48595810, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(974, 1477.75695801, -1552.33496094, 15.33242798, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(974, 1477.70532227, -1545.98425293, 15.33242798, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2954, 1472.54235840, -1563.86743164, 13.95312500, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2954, 1471.64611816, -1563.88574219, 13.95312500, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2946, 1476.07360840, -1543.73864746, 12.60143852, 0.00000000, 0.00000000, 270.00000000);
	CreateDynamicObject(2949, 1477.73901367, -1543.71972656, 12.54687500, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(974, 1471.62329102, -1565.36206055, 15.33242798, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(974, 1477.64062500, -1557.05041504, 15.33242798, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(974, 1468.39941406, -1560.58691406, 15.33242798, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1491, 1471.74279785, -1562.13989258, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1506, 1477.65539551, -1561.19738770, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1523, 1477.48510742, -1562.60424805, 12.61017132, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2514, 1463.92895508, -1560.97753906, 12.54687500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2514, 1465.33483887, -1561.14123535, 12.54687500, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(974, 1464.78918457, -1560.52380371, 15.32461548, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(974, 1466.61267090, -1560.58691406, 15.32461548, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1491, 1463.66711426, -1563.89453125, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2523, 1470.16503906, -1567.26184082, 12.55468750, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(2523, 1468.29113770, -1567.26074219, 12.55468750, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(2872, 1467.29187012, -1558.43286133, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2778, 1467.32580566, -1555.91552734, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2500, 1468.91186523, -1552.40222168, 13.46010590, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2500, 1469.02014160, -1550.59106445, 13.46010590, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2500, 1468.89440918, -1548.38391113, 13.46010590, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2422, 1468.80615234, -1549.65527344, 13.46010590, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2422, 1468.81445312, -1547.57946777, 13.46010590, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2422, 1468.76367188, -1551.75500488, 13.46010590, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1991, 1467.13024902, -1548.65539551, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1996, 1467.14233398, -1547.67175293, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(18001, 1480.29296875, -1561.12597656, 13.08532524, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1502, 1495.68688965, -1547.57312012, 15.57596207, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2571, 1497.17980957, -1556.69104004, 15.57031250, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(2290, 1497.07189941, -1550.90661621, 15.57031250, 0.00000000, 0.00000000, 270.00000000);
	CreateDynamicObject(2707, 1493.90075684, -1557.63940430, 18.24255371, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1482.04772949, -1548.23254395, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1485.00402832, -1548.17919922, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1487.96301270, -1548.22106934, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1479.69567871, -1551.00207520, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1482.66149902, -1551.03442383, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1479.70166016, -1553.95239258, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1482.62963867, -1553.96350098, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1479.61462402, -1556.06762695, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1482.54321289, -1556.02465820, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1479.66369629, -1558.32580566, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2290, 1482.62109375, -1558.34411621, 12.55468750, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(970, 1479.04516602, -1561.09997559, 13.00835609, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(970, 1483.25610352, -1561.07128906, 13.00131035, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2959, 1466.60339355, -1563.87048340, 12.55468750, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1337, 1408.66125488, -1486.75537109, 33.50516510, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1622, 1466.18261719, -1563.02246094, 14.94909096, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2942, 1476.32653809, -1553.25280762, 13.19758701, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(2942, 1477.30773926, -1553.36450195, 13.19758701, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(2773, 1475.62902832, -1552.79956055, 13.07191563, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2773, 1475.65747070, -1550.80932617, 13.07191563, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2773, 1475.65710449, -1548.91223145, 13.07191563, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2773, 1474.25134277, -1548.84423828, 13.06410313, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2773, 1474.26684570, -1550.76220703, 13.07191563, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2773, 1474.24926758, -1552.70275879, 13.07191563, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2773, 1473.34082031, -1546.55407715, 13.07191563, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 1473.33422852, -1547.89819336, 13.07191563, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 1471.41101074, -1546.51831055, 13.07191563, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 1471.42004395, -1547.93225098, 13.07191563, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1361, 1476.54223633, -1556.32958984, 13.29803085, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1361, 1467.47277832, -1554.65270996, 13.29803085, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1364, 1492.88916016, -1552.22094727, 13.33880901, 0.00000000, 0.00000000, 270.00000000);
	CreateDynamicObject(1361, 1467.96435547, -1561.04675293, 13.29803085, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1364, 1493.31542969, -1558.25927734, 13.33880901, 0.00000000, 0.00000000, 270.00000000);
	CreateDynamicObject(1216, 1470.33898926, -1558.59948730, 13.24668980, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(1216, 1469.53515625, -1558.74291992, 13.23887730, 0.00000000, 0.00000000, 179.99450684);
	CreateDynamicObject(2453, 1468.22607422, -1546.49841309, 13.85845852, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1582, 1468.01342773, -1552.99291992, 13.91149807, 0.00000000, 0.00000000, 0.00000000);
	//체육관 / 사진촬영소
	CreateDynamicObject(14488, 2063.2321777344, 2426.1489257813, 313.51483154297, 0, 0, 359.75);
	CreateDynamicObject(14488, 2077.9782714844, 2404.6623535156, 313.51461791992, 0, 0, 178.75);
	CreateDynamicObject(14780, 2084.6166992188, 2405.8596191406, 311.95895385742, 0, 0, 358);
	CreateDynamicObject(14782, 2084.4047851563, 2393.7526855469, 312.11602783203, 0, 0, 180);
	CreateDynamicObject(14488, 2077.9775390625, 2404.662109375, 313.51461791992, 0, 0, 178.74755859375);
	CreateDynamicObject(2959, 2073.568359375, 2430.0349121094, 311.00723266602, 0, 0, 0);
	CreateDynamicObject(2627, 2054.5051269531, 2418.6047363281, 311.08743286133, 0, 0, 90.75);
	CreateDynamicObject(2627, 2054.3715820313, 2422.1010742188, 311.08743286133, 0, 0, 90.7470703125);
	CreateDynamicObject(2628, 2054.2543945313, 2426.5417480469, 311.07919311523, 0, 0, 89.75);
	CreateDynamicObject(2629, 2054.3994140625, 2429.7155761719, 311.09140014648, 0, 0, 89.75);
	CreateDynamicObject(2630, 2054.3620605469, 2432.6303710938, 311.08636474609, 0, 0, 270);
	CreateDynamicObject(2630, 2054.4291992188, 2435.314453125, 311.08636474609, 0, 0, 270);
	CreateDynamicObject(2632, 2063.5859375, 2432.994140625, 311.14651489258, 0, 0, 0);
	CreateDynamicObject(2631, 2063.6337890625, 2428.5615234375, 311.14163208008, 0, 0, 0);
	CreateDynamicObject(2648, 2052.8488769531, 2418.5007324219, 312.85876464844, 0, 0.5, 91);
	CreateDynamicObject(2648, 2052.9787597656, 2422.0251464844, 312.85876464844, 0, 0.4998779296875, 90.999755859375);
	CreateDynamicObject(2648, 2053.3779296875, 2432.5104980469, 312.68380737305, 0, 0.4998779296875, 90.999755859375);
	CreateDynamicObject(2648, 2053.40625, 2435.30859375, 312.68380737305, 0, 0.4998779296875, 90.999755859375);
	CreateDynamicObject(14806, 2064.2138671875, 2437.1616210938, 312.18621826172, 0, 0, 0);
	CreateDynamicObject(14787, 2073.6484375, 2409.7514648438, 311.18826293945, 0, 0, 0);
	CreateDynamicObject(14789, 2289.6701660156, 2460.3620605469, 295.88934326172, 0, 0, 1.75);
	CreateDynamicObject(367, 2302.0104980469, 2461.9790039063, 292.7297668457, 0, 0, 270.5);
	CreateDynamicObject(369, 2302.0439453125, 2461.7829589844, 292.77975463867, 0, 0, 0);
	CreateDynamicObject(2266, 2313.1262207031, 2462.6870117188, 293.52975463867, 0, 0, 270);
	CreateDynamicObject(2266, 2313.1318359375, 2459.2275390625, 293.52975463867, 0, 0, 270);
	CreateDynamicObject(2265, 2312.8266601563, 2470.9743652344, 293.52969360352, 0, 0, 0);
	CreateDynamicObject(2267, 2311.025390625, 2471.3793945313, 294.11196899414, 0, 0, 0);
	CreateDynamicObject(2267, 2308.1633300781, 2471.2919921875, 294.08206176758, 0, 0, 0);
	CreateDynamicObject(2264, 2306.4418945313, 2470.7646484375, 293.62966918945, 0, 0, 0);
	CreateDynamicObject(2264, 2305.2116699219, 2470.7275390625, 293.62966918945, 0, 0, 0);
	CreateDynamicObject(2177, 2302.1049804688, 2462.1928710938, 294.43942260742, 0, 0, 0);
	CreateDynamicObject(2119, 2302.099609375, 2449.0034179688, 291.65496826172, 0, 0, 0);
	CreateDynamicObject(2108, 2301.0163574219, 2448.7932128906, 291.65496826172, 0, 0, 0);
	CreateDynamicObject(2113, 2302.6081542969, 2448.4880371094, 292.80340576172, 0, 0, 0);
	CreateDynamicObject(16155, 2289.9260253906, 2469.7329101563, 293.22103881836, 0, 0, 18.75);
	CreateDynamicObject(1710, 2307.4821777344, 2437.4418945313, 291.65496826172, 0, 0, 180.75);
	CreateDynamicObject(1710, 2303.1884765625, 2437.3735351563, 291.65496826172, 0, 0, 180.7470703125);
	CreateDynamicObject(1710, 2298.8957519531, 2437.3283691406, 291.65496826172, 0, 0, 180.7470703125);
	CreateDynamicObject(1657, 2302.7646484375, 2454.1020507813, 299.59539794922, 0, 0, 0);
	CreateDynamicObject(1736, 2303.169921875, 2471.1394042969, 294.59432983398, 0, 0, 0);
	CreateDynamicObject(1786, 2290.3168945313, 2470.7468261719, 292.62530517578, 0, 0, 0);
	CreateDynamicObject(1787, 2290.5131835938, 2470.2783203125, 293.41864013672, 0, 0, 0);
	CreateDynamicObject(1963, 2290.8725585938, 2469.9880371094, 292.28271484375, 0, 0, 0);
	CreateDynamicObject(1963, 2290.8720703125, 2469.9873046875, 291.95779418945, 0, 0, 0);
	CreateDynamicObject(2096, 2304.2956542969, 2449.12890625, 291.65496826172, 0, 0, 180);
	CreateDynamicObject(2173, 2302.5639648438, 2462.4743652344, 291.57998657227, 0, 0, 178.25);
	CreateDynamicObject(2190, 2302.3696289063, 2462.2917480469, 292.2971496582, 0, 0, 160);
	CreateDynamicObject(3061, 2309.8698730469, 2436.6743164063, 292.84393310547, 0, 0, 270);
	CreateDynamicObject(3061, 2309.208984375, 2436.6296386719, 292.84393310547, 0, 0, 270);
	CreateDynamicObject(3061, 2309.208984375, 2436.62890625, 292.94390869141, 0, 0, 270);
	CreateDynamicObject(3061, 2309.7661132813, 2436.671875, 292.94390869141, 0, 0, 270);

	//LV BY . 오브젝트 메이커 대학교 내부 , LV 시청 꾸밈 ,
	CreateDynamicObject(980, 1634.878052, 569.601135, 3.671829, 0.0000, 0.0000, 92.8192);
	CreateDynamicObject(980, 1628.253418, 563.813782, 3.671829, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(980, 1621.730591, 569.735535, 3.671829, 0.0000, 0.0000, 88.5220);
	CreateDynamicObject(2755, 1628.231812, 600.577332, 2.489293, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2755, 1623.609741, 575.284241, 2.629918, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2755, 1631.989746, 575.205200, 2.629918, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3749, 1627.826416, 576.109558, 6.616227, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1630.354614, 609.697327, 7.311996, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1626.192017, 609.509216, 7.310206, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1630.336182, 613.376221, 7.327159, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1626.174805, 613.127014, 7.327159, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1626.617432, 594.817017, 1.303721, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1626.641235, 590.016418, 1.303721, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1626.596558, 585.399902, 1.303721, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1629.904785, 594.790588, 1.303721, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1629.852905, 590.302856, 1.303721, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3850, 1629.839966, 585.525513, 1.303721, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 1629.756470, 598.338867, 1.813520, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(627, 1628.427368, 594.566589, 2.603121, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(627, 1628.011230, 589.755493, 2.603121, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(627, 1628.188232, 585.527222, 2.603121, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2133.401123, 1693.921509, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2125.910889, 1698.964966, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2116.277832, 1702.592773, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2113.167480, 1694.700806, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2106.999268, 1705.709351, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2104.603516, 1696.419556, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2097.901123, 1709.449707, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2095.572998, 1698.018066, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2131.287598, 1669.858765, 10.876019, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2122.705322, 1666.058838, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2111.655762, 1669.609131, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2111.167725, 1661.630249, 10.876022, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2099.687012, 1656.833984, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(625, 2101.472412, 1669.714600, 10.876020, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(966, 2087.470459, 1642.276733, 9.820313, 0.0000, 0.0000, 271.4780);
	CreateDynamicObject(968, 2087.481201, 1642.251465, 10.879562, 0.0000, 34.3775, 88.5219);
	CreateDynamicObject(979, 2066.720947, 1628.219727, 10.519879, 0.0000, 0.0000, 271.4780);
	CreateDynamicObject(979, 2066.615967, 1637.451294, 10.519879, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(979, 2066.668457, 1646.658936, 10.519877, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(979, 2066.579834, 1655.920044, 10.512095, 0.0000, 0.8594, 270.6186);
	CreateDynamicObject(982, 2087.439453, 1689.418823, 10.503867, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(984, 2087.346191, 1670.064697, 10.456992, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(984, 2087.434326, 1657.278931, 10.456992, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(984, 2090.157227, 1708.010986, 10.456993, 0.0000, 0.0000, 335.0763);
	CreateDynamicObject(982, 2106.387939, 1713.454956, 10.503867, 0.0000, 0.0000, 260.3053);
	CreateDynamicObject(984, 2124.999023, 1708.374634, 10.456991, 0.0000, 0.0000, 65.3172);
	CreateDynamicObject(984, 2136.394531, 1701.749512, 10.456992, 0.0000, 0.0000, 53.2851);
	CreateDynamicObject(984, 2144.875244, 1692.795654, 11.011965, 0.0000, 0.0000, 32.6586);
	CreateDynamicObject(983, 2148.490967, 1683.510986, 10.503867, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(983, 2147.939209, 1677.169556, 10.503867, 0.0000, 359.1406, 350.5462);
	CreateDynamicObject(983, 2145.660156, 1671.414063, 10.503867, 0.0000, 0.0000, 326.4820);
	CreateDynamicObject(983, 2142.122803, 1666.256470, 10.503867, 0.0000, 0.0000, 323.9037);
	CreateDynamicObject(983, 2137.565674, 1662.012451, 10.529825, 0.0000, 0.0000, 301.5583);
	CreateDynamicObject(983, 2131.933594, 1658.825562, 10.503867, 0.0000, 0.0000, 297.2611);
	CreateDynamicObject(983, 2125.842529, 1655.513306, 10.503867, 0.0000, 0.0000, 295.5422);
	CreateDynamicObject(983, 2118.768799, 1653.012695, 10.503867, 0.0000, 0.0000, 281.7912);
	CreateDynamicObject(983, 2111.789551, 1651.565186, 10.503867, 0.0000, 0.0000, 280.0724);
	CreateDynamicObject(983, 2104.133545, 1650.737061, 10.503867, 0.0000, 0.0000, 273.1969);
	CreateDynamicObject(983, 2096.491455, 1650.473267, 10.503867, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(983, 2090.193359, 1650.451294, 10.496070, 0.0000, 0.0000, 88.5220);
	CreateDynamicObject(982, 2100.684814, 1642.383911, 10.503867, 0.0000, 0.0000, 270.6186);
	CreateDynamicObject(984, 2119.631836, 1643.770874, 10.449195, 0.0000, 0.0000, 280.9318);
	CreateDynamicObject(984, 2131.583984, 1647.755005, 10.449195, 0.0000, 0.0000, 295.5422);
	CreateDynamicObject(643, 2108.567139, 1700.047241, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2111.278564, 1707.275513, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2099.560791, 1702.866089, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2117.062256, 1696.817017, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2096.809570, 1693.099976, 10.290785, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2103.462646, 1711.371826, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2093.540527, 1702.277344, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2124.459961, 1702.654175, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2124.891602, 1693.613525, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2133.417725, 1697.917603, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2134.760742, 1670.820068, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2126.724609, 1664.230103, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2124.864990, 1671.120605, 10.290785, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2115.353760, 1661.149658, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2114.334961, 1670.319580, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2102.935303, 1658.713379, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2105.782471, 1669.910522, 10.290785, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(643, 2094.012451, 1662.601807, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14608, 2163.660645, 1677.963257, 21.075695, 0.0000, 0.0000, 45.5501);
	CreateDynamicObject(14608, 2166.816650, 1677.682617, 21.186647, 0.0000, 0.0000, 222.4901);
	CreateDynamicObject(16776, 2131.621582, 1730.423706, 21.141468, 0.0000, 0.0000, 339.3735);
	CreateDynamicObject(16778, 2078.282715, 1640.739502, 9.669165, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1505, 2416.128418, 1758.212769, 9.839630, 0.0000, 0.0000, 137.5100);
	CreateDynamicObject(1505, 2413.835938, 1760.223999, 9.820610, 0.0000, 0.0000, 317.0282);
	CreateDynamicObject(14447, 2253.785156, 1960.478271, -42.388092, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14827, 2237.161133, 1965.902344, -55.681118, 0.0000, 0.0000, 90.3181);
	CreateDynamicObject(14790, 2244.440674, 1970.075195, -54.644566, 0.0000, 0.0000, 92.8192);
	CreateDynamicObject(14782, 2244.365234, 1956.912842, -58.647861, 0.0000, 0.0000, 179.6223);
	CreateDynamicObject(14595, 2316.487549, 1984.937500, -32.805229, 0.0000, 0.0000, 85.8400);
	CreateDynamicObject(2607, 2293.165527, 1974.220215, -36.362671, 0.0000, 0.0000, 358.2811);
	CreateDynamicObject(2607, 2296.351318, 1973.628784, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2299.850342, 1973.523560, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2299.797119, 1976.281738, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2296.367676, 1976.379639, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2293.240723, 1976.579224, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2299.656982, 1978.382568, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2296.324219, 1978.650269, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2293.221191, 1978.292725, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2299.550537, 1980.686523, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2296.426758, 1980.662231, -36.355824, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2293.217529, 1980.442993, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2293.219971, 1982.493774, -36.362671, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2296.465332, 1982.521729, -36.355820, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2607, 2299.621826, 1982.667114, -36.355824, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2309, 2299.633789, 1983.904907, -36.737358, 0.0000, 0.0000, 177.7993);
	CreateDynamicObject(2309, 2296.297119, 1983.279419, -36.487343, 0.0000, 269.7592, 183.8154);
	CreateDynamicObject(2309, 2293.196289, 1983.000244, -35.419125, 0.0000, 178.6586, 175.2210);
	CreateDynamicObject(2309, 2293.117188, 1981.550781, -36.744205, 0.0000, 0.0000, 188.1125);
	CreateDynamicObject(2309, 2296.320801, 1981.639160, -36.737358, 0.0000, 355.7028, 190.7951);
	CreateDynamicObject(2309, 2299.589844, 1981.955811, -36.744205, 0.0000, 0.0000, 185.5342);
	CreateDynamicObject(2309, 2299.779785, 1979.607056, -36.744205, 0.0000, 0.0000, 164.0483);
	CreateDynamicObject(2309, 2296.364502, 1979.990234, -36.737358, 0.0000, 0.0000, 181.2371);
	CreateDynamicObject(2309, 2293.177490, 1979.595215, -36.744205, 0.0000, 0.0000, 175.2211);
	CreateDynamicObject(2309, 2296.482910, 1977.547363, -36.744205, 0.0000, 0.0000, 186.3936);
	CreateDynamicObject(2309, 2293.217041, 1977.640015, -36.744205, 0.0000, 0.0000, 176.9399);
	CreateDynamicObject(2309, 2299.871582, 1977.345581, -36.744205, 0.0000, 3.4377, 179.5182);
	CreateDynamicObject(2309, 2293.138916, 1975.271973, -36.744205, 0.0000, 0.0000, 179.5182);
	CreateDynamicObject(2309, 2296.257813, 1974.563965, -36.744205, 0.0000, 0.0000, 182.0965);
	CreateDynamicObject(2309, 2300.110840, 1974.527710, -36.744205, 0.0000, 0.0000, 178.7628);
	CreateDynamicObject(2605, 2296.197754, 1971.996582, -36.359917, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2356, 2296.122559, 1970.961792, -36.763702, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2605, 2324.355225, 1970.106079, -36.359917, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2356, 2324.386963, 1969.049683, -36.756851, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2639, 2328.342529, 1973.239014, -36.130695, 0.0000, 0.0000, 357.4217);
	CreateDynamicObject(2639, 2328.582031, 1976.016357, -36.130695, 0.0000, 0.0000, 175.3251);
	CreateDynamicObject(2747, 2328.227051, 1974.620728, -36.345802, 0.0000, 0.0000, 356.5623);
	CreateDynamicObject(2800, 2328.216309, 1974.591064, -36.108860, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2311, 2322.467529, 1961.939941, -36.766045, 0.0000, 0.0000, 354.8434);
	CreateDynamicObject(2311, 2324.754639, 1961.714844, -36.766045, 0.0000, 0.0000, 353.9839);
	CreateDynamicObject(2311, 2322.578125, 1958.512573, -36.766045, 0.0000, 0.0000, 355.7028);
	CreateDynamicObject(2311, 2324.966309, 1958.332642, -36.766045, 0.0000, 0.0000, 355.7028);
	CreateDynamicObject(1704, 2327.879150, 1960.144653, -36.761486, 0.0000, 0.0000, 266.3214);
	CreateDynamicObject(1705, 2322.300293, 1963.109985, -36.760345, 0.0000, 0.0000, 354.8434);
	CreateDynamicObject(1705, 2324.206299, 1963.057495, -36.760345, 0.0000, 0.0000, 349.6868);
	CreateDynamicObject(1705, 2326.047607, 1962.865356, -36.760345, 0.0000, 0.0000, 352.2651);
	CreateDynamicObject(1705, 2326.321777, 1957.255737, -36.760345, 0.0000, 0.0000, 176.0804);
	CreateDynamicObject(1705, 2324.704102, 1957.235840, -36.760345, 0.0000, 0.0000, 177.0440);
	CreateDynamicObject(1705, 2323.173828, 1957.288696, -36.760345, 0.0000, 0.0000, 176.0805);
	CreateDynamicObject(1826, 2326.657715, 1960.510498, -36.759785, 0.0000, 0.0000, 265.4620);
	CreateDynamicObject(1491, 2319.847900, 1959.531860, -36.763397, 0.0000, 0.0000, 85.0842);
	CreateDynamicObject(1491, 2320.693359, 1974.770874, -36.763397, 0.0000, 0.0000, 265.4619);
	CreateDynamicObject(1828, 2324.274902, 1974.133911, -36.735634, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2297, 2321.542480, 1975.772461, -36.757484, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2596, 2327.236084, 1976.223145, -33.998978, 0.0000, 0.0000, 354.8434);
	CreateDynamicObject(2813, 2324.885010, 1970.260864, -35.942692, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2812, 2324.462158, 1969.917847, -35.942444, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14455, 2322.527832, 1967.946289, -35.079742, 0.0000, 0.0000, 356.5623);
	CreateDynamicObject(977, 2327.250977, 1987.377563, -35.154469, 0.0000, 0.0000, 4.2972);
	CreateDynamicObject(18553, 2329.210938, 1987.118286, -32.265213, 0.0000, 0.0000, 265.4620);
	//LV집
	CreateDynamicObject(16021, 990.160828, 2434.116943, 9.618095, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(17573, 1051.941162, 2410.408936, 11.609016, 0.0000, 0.0000, 89.3815);
	CreateDynamicObject(17554, 1103.505737, 2422.441406, 26.970852, 0.0000, 0.0000, 268.8997);
	CreateDynamicObject(17041, 934.033386, 2271.935547, 9.817329, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(17041, 923.779358, 2272.294678, 9.817329, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1250, 1098.610352, 2287.476318, 10.836071, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(1251, 1098.643799, 2287.987549, 14.544485, 87.6625, 0.0000, 0.0000);
	CreateDynamicObject(1282, 1102.531006, 2294.010742, 10.509129, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1282, 1102.493652, 2296.508301, 10.509129, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1282, 1090.263550, 2293.983643, 10.464073, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1282, 1090.146729, 2296.158203, 10.453502, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1228, 1093.459595, 2293.214355, 10.216500, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(1228, 1097.276978, 2293.230225, 10.241441, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(997, 1099.216797, 2287.120361, 9.947649, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(996, 1090.469971, 2287.318359, 10.569068, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3260, 1097.166992, 2279.719482, 12.187670, 0.0000, 0.0000, 226.7873);
	CreateDynamicObject(3749, 1076.052734, 2293.059814, 15.529188, 0.0000, 0.0000, 272.3374);
	CreateDynamicObject(3458, 1065.663818, 2194.300049, 18.590282, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(3458, 1065.841431, 2223.629395, 18.596891, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(3458, 1137.728271, 2249.323486, 18.290264, 0.0000, 0.0000, 90.1368);
	CreateDynamicObject(18014, 1101.083740, 2295.670654, 17.596266, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(18014, 1101.083618, 2291.102539, 17.589348, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(18014, 1101.076172, 2286.645508, 17.589348, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3660, 1077.001709, 2284.475098, 11.273398, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3660, 1075.946289, 2302.332764, 11.248399, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3439, 1073.734009, 2284.030029, 13.821577, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3439, 1071.666870, 2302.085938, 13.721579, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(982, 1117.487061, 2389.788574, 10.503867, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3660, 934.027954, 2254.361084, 12.415576, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3660, 926.443176, 2254.355469, 12.423381, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(982, 930.963257, 2253.075439, 11.653850, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(983, 919.852356, 2253.089355, 11.716762, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(3660, 917.213928, 2262.927246, 11.223399, 0.0000, 0.0000, 91.1003);
	CreateDynamicObject(3660, 916.977661, 2274.979980, 11.273398, 0.0000, 0.0000, 91.1003);
	CreateDynamicObject(18243, 916.551758, 2252.869629, 9.643864, 0.0000, 0.0000, 329.9197);
	CreateDynamicObject(1320, 913.012695, 2239.868408, 11.204689, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(1320, 913.202454, 2360.247314, 11.129690, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(2714, 933.132568, 2284.544678, 12.103019, 0.0000, 0.0000, 181.2371);
	CreateDynamicObject(4640, 1096.062378, 2286.460205, 11.516892, 0.0000, 0.0000, 180.3777);
	CreateDynamicObject(4641, 1096.340454, 2299.695557, 11.516892, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(17551, 882.168213, 2361.462158, 20.075539, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3660, 1116.252808, 2367.198730, 12.473380, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3660, 1116.258179, 2347.575928, 12.473380, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3660, 1116.292114, 2341.123047, 12.473380, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(7596, 874.386902, 2298.257568, 14.271557, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(6961, 1048.688721, 2427.704590, 10.976778, 0.0000, 0.0000, 89.3814);
	CreateDynamicObject(3305, 985.034180, 2369.041260, 12.779825, 0.0000, 0.0000, 179.5182);
	CreateDynamicObject(3306, 929.986084, 2415.492188, 11.282193, 0.0000, 0.0000, 268.8997);
	CreateDynamicObject(3307, 954.886169, 2414.690918, 11.232194, 0.0000, 0.0000, 268.8997);
	CreateDynamicObject(3308, 984.398926, 2240.285889, 11.291252, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3309, 985.090210, 2215.313965, 11.221434, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3310, 953.763184, 2214.945801, 11.885321, 0.0000, 0.0000, 91.1003);
	CreateDynamicObject(3311, 928.780701, 2214.053711, 12.758757, 0.0000, 0.0000, 271.4780);
	CreateDynamicObject(3315, 880.032227, 2265.162354, 10.813442, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(3316, 880.405701, 2236.772949, 13.157188, 0.0000, 0.0000, 89.3815);
	CreateDynamicObject(3317, 880.267517, 2212.078369, 13.157188, 0.0000, 0.0000, 89.3814);
	CreateDynamicObject(3353, 934.945862, 2235.228760, 10.864121, 0.0000, 0.0000, 271.4780);
	CreateDynamicObject(3442, 881.131104, 2181.977051, 14.057112, 0.0000, 0.0000, 89.3814);
	CreateDynamicObject(3443, 885.858398, 2150.383057, 12.701200, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(3445, 884.116455, 2125.867920, 12.845118, 0.0000, 0.0000, 89.3815);
	CreateDynamicObject(3446, 884.082642, 2107.864746, 13.298376, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3449, 883.463074, 2087.618652, 11.779919, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3464, 982.432739, 1471.358154, 12.117188, 0.0000, 0.0000, 179.1405);
	CreateDynamicObject(3466, 882.401489, 1955.716675, 12.381638, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3483, 880.226807, 1927.152344, 16.823509, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3484, 880.157593, 1897.015381, 16.520403, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3485, 934.475281, 1901.406250, 16.784801, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3486, 880.447327, 1866.739502, 16.848522, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3488, 934.464233, 1875.775269, 16.354755, 0.0000, 0.0000, 269.9999);
	CreateDynamicObject(3501, 942.822266, 1977.162964, 12.980902, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3308, 1055.800659, 2316.591309, 11.316252, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(7019, 1052.688110, 2253.028564, 13.396530, 0.0000, 0.0000, 178.6589);
	CreateDynamicObject(7020, 887.269897, 2437.965820, 13.125770, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(7035, 1027.903931, 2461.158203, 14.825096, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(8260, 1041.844971, 2473.760498, 13.552781, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3488, 980.725342, 1613.397705, 16.426601, 0.0000, 0.0000, 90.3778);
	CreateDynamicObject(9513, 992.970276, 1576.960938, 14.697971, 0.0000, 0.0000, 93.6786);
	CreateDynamicObject(9325, 983.625793, 1595.860229, 16.427036, 0.0000, 0.0000, 274.9158);
	CreateDynamicObject(9324, 989.767212, 1536.269165, 16.036373, 0.0000, 0.0000, 91.1003);
	CreateDynamicObject(9258, 993.621399, 1514.432861, 13.632560, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(7929, 980.430176, 1495.081665, 16.520405, 0.0000, 0.0000, 88.5220);
	CreateDynamicObject(7885, 937.679260, 2342.654297, 9.818430, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3304, 985.227295, 1445.727173, 12.887670, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(3303, 985.061646, 1420.754517, 11.882627, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3305, 985.099792, 1395.770630, 12.804827, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3307, 984.465149, 1371.296387, 11.282193, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3306, 984.471252, 1346.366577, 11.282193, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3307, 984.437805, 1321.403442, 11.274871, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3308, 984.969971, 1295.175903, 11.891243, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3310, 985.095398, 1270.946655, 11.885321, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3311, 985.146179, 1246.230835, 12.758757, 0.0000, 0.0000, 90.0001);
	CreateDynamicObject(3312, 985.178284, 1221.295776, 12.785156, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3313, 985.236023, 1196.345093, 12.722820, 0.0000, 0.0000, 90.0000);
	//LV택시기사후드
	CreateDynamicObject(8040, 1076.253296, 1263.420532, 10.590719, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(1290, 1076.144409, 1281.575073, 16.020390, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1290, 1075.978271, 1246.629883, 16.020390, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1290, 1076.052368, 1263.532593, 16.020390, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(996, 1089.412842, 1336.601807, 10.569068, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(996, 1089.165405, 1343.905273, 10.569068, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(996, 1089.559082, 1329.632446, 10.569070, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(996, 1089.497681, 1322.482300, 10.569068, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(996, 1088.927368, 1352.321533, 10.569068, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1229, 1088.494629, 1343.979126, 11.421309, 0.0000, 0.0000, 252.5704);
	CreateDynamicObject(1229, 1087.808716, 1338.374634, 11.379992, 0.0000, 0.0000, 252.5704);
	CreateDynamicObject(1229, 1087.938843, 1331.507446, 11.390809, 0.0000, 0.0000, 252.5704);
	CreateDynamicObject(1229, 1087.953613, 1324.399048, 11.379992, 0.0000, 0.0000, 252.5704);
	CreateDynamicObject(1257, 1095.021362, 1351.376465, 11.099504, 0.0000, 0.0000, 89.3815);
	CreateDynamicObject(1257, 1090.454468, 1351.459595, 11.099505, 0.0000, 0.0000, 89.3815);
	CreateDynamicObject(1257, 1095.050171, 1337.412598, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1090.299805, 1337.456421, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1095.063232, 1330.494019, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1090.378418, 1330.524658, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1095.057739, 1323.482300, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1090.370850, 1323.509888, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1346, 1096.648804, 1306.915161, 11.171318, 0.0000, 0.0000, 271.4780);
	CreateDynamicObject(1257, 1090.358276, 1315.965820, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1095.050903, 1315.961060, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1229, 1087.874268, 1316.867798, 11.379992, 0.0000, 0.0000, 243.1166);
	CreateDynamicObject(1257, 1090.319946, 1353.358154, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1094.946411, 1353.339600, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1094.913940, 1361.177368, 11.099504, 0.0000, 358.2811, 90.1370);
	CreateDynamicObject(1257, 1090.230469, 1361.261719, 11.099504, 0.0000, 358.2811, 90.1370);
	CreateDynamicObject(1229, 1087.504639, 1360.190918, 11.204995, 0.0000, 0.0000, 310.1527);
	CreateDynamicObject(1215, 1088.008423, 1354.217651, 10.066973, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1092.531738, 1343.937622, 9.787432, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1087.913940, 1316.955322, 9.664326, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1087.952637, 1324.503296, 9.739325, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1087.902832, 1331.517944, 9.739325, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1087.734619, 1338.502808, 9.739325, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1088.464355, 1344.046875, 9.814323, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1087.592773, 1360.202026, 9.539328, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3458, 1092.811890, 1244.421875, 12.546606, 0.0000, 0.0000, 89.3814);
	CreateDynamicObject(3458, 1092.674438, 1276.864136, 12.547021, 0.0000, 0.0000, 91.1003);
	CreateDynamicObject(3881, 1060.313965, 1360.269165, 11.532640, 0.0000, 0.0000, 182.0963);
	CreateDynamicObject(2797, 1097.244507, 1357.197144, 13.803004, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(2797, 1097.244507, 1347.119995, 13.691484, 0.0000, 0.0000, 90.2409);
	CreateDynamicObject(2795, 1097.244507, 1319.032593, 14.575098, 0.0000, 0.0000, 270.6186);
	CreateDynamicObject(2794, 1097.244507, 1326.493530, 14.462545, 0.0000, 0.0000, 272.3375);
	CreateDynamicObject(2793, 1097.244507, 1332.776123, 14.622700, 0.0000, 0.0000, 272.3375);
	CreateDynamicObject(2792, 1097.244507, 1339.856567, 14.476881, 0.0000, 0.0000, 273.1969);
	CreateDynamicObject(2796, 1052.597534, 1303.053101, 12.492939, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2775, 1043.301270, 1303.053101, 13.591961, 0.0000, 0.0000, 179.5180);
	CreateDynamicObject(1507, 1050.330566, 1303.053101, 9.756308, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1533, 1039.387939, 1302.941895, 9.814436, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1649, 1032.887085, 1303.078125, 16.692244, 0.0000, 0.0000, 180.3774);
	CreateDynamicObject(1649, 1042.419312, 1303.076660, 16.809351, 0.0000, 0.0000, 180.3774);
	CreateDynamicObject(1649, 1052.466431, 1303.177979, 16.828875, 0.0000, 0.0000, 180.3774);
	CreateDynamicObject(3851, 1033.935303, 1303.111328, 11.820313, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(3851, 1024.143433, 1303.201782, 11.834485, 0.0000, 0.0000, 269.7591);
	CreateDynamicObject(1649, 1023.468018, 1303.076660, 16.519430, 0.0000, 0.0000, 180.3774);
	CreateDynamicObject(3851, 1057.250610, 1297.194092, 17.379631, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1057.250610, 1285.970215, 17.394613, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1057.250610, 1274.689087, 17.399414, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1057.250610, 1263.444214, 17.401577, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1057.250610, 1252.135498, 17.380827, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1057.250610, 1240.896362, 17.375355, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1057.250610, 1229.601196, 17.419205, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1043.419067, 1302.976563, 11.533555, 0.0000, 0.0000, 270.6186);
	CreateDynamicObject(1257, 1054.170532, 1359.730713, 11.106668, 0.0000, 358.2811, 358.1776);
	CreateDynamicObject(1257, 1054.004883, 1355.054199, 11.099504, 0.0000, 358.2811, 358.1776);
	CreateDynamicObject(1257, 1039.227051, 1359.723145, 11.099504, 0.0000, 358.2811, 180.2744);
	CreateDynamicObject(1257, 1039.158325, 1355.051025, 11.099504, 0.0000, 358.2811, 179.4149);
	CreateDynamicObject(996, 1046.609497, 1361.105225, 10.569069, 0.0000, 0.0000, 267.1808);
	CreateDynamicObject(1214, 1046.169556, 1353.612061, 9.814323, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1054.915649, 1352.716064, 9.814323, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1214, 1039.955688, 1352.659058, 9.814323, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1229, 1040.033569, 1352.508545, 11.429992, 0.0000, 0.0000, 46.4095);
	CreateDynamicObject(1229, 1053.119507, 1352.636841, 11.379992, 0.0000, 0.0000, 4.2971);
	CreateDynamicObject(3851, 1018.722412, 1297.391479, 17.110983, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1018.639709, 1286.136719, 17.134790, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1018.689758, 1274.882446, 17.127007, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1018.639709, 1263.655273, 17.127069, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1018.639709, 1252.425049, 17.131104, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1018.639709, 1241.190796, 17.123730, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1018.664734, 1229.935059, 17.133892, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3851, 1024.143555, 1224.080078, 17.080044, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3851, 1035.334229, 1224.055054, 17.137266, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3851, 1046.602173, 1224.055054, 17.117594, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3851, 1051.409180, 1224.005005, 17.194305, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(16500, 1051.244995, 1305.302490, 9.914516, 0.0000, 90.2409, 0.0000);
	CreateDynamicObject(16500, 1047.254272, 1305.309570, 9.939516, 0.0000, 90.2409, 0.0000);
	CreateDynamicObject(16500, 1043.250366, 1305.294189, 9.939550, 0.0000, 90.2409, 0.0000);
	CreateDynamicObject(16500, 1039.267578, 1305.299316, 9.939550, 0.0000, 90.2409, 0.0000);
	CreateDynamicObject(640, 1036.888184, 1305.085693, 10.524510, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1257, 1095.070190, 1308.554688, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1257, 1090.354248, 1308.570923, 11.099504, 0.0000, 0.0000, 269.7592);
	CreateDynamicObject(1214, 1087.956421, 1309.446777, 9.764324, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1229, 1087.874756, 1309.538330, 11.379992, 0.0000, 0.0000, 243.1166);
	CreateDynamicObject(2794, 1041.923950, 1362.095581, 14.045606, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2793, 1042.284058, 1362.145630, 14.059694, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2794, 1048.270996, 1362.095581, 14.232941, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2792, 1048.615601, 1362.145630, 14.246599, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2792, 1097.244507, 1312.860352, 14.506963, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2793, 1097.319580, 1312.468872, 14.501004, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1364, 1055.324097, 1303.607422, 10.604434, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1361, 1058.299194, 1303.888550, 10.563656, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1360, 1065.087524, 1304.057129, 10.592334, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1361, 1061.906982, 1303.894287, 10.563656, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1597, 1054.085083, 1327.580078, 12.477695, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1597, 1058.221680, 1323.464478, 12.477695, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(1597, 1058.344971, 1331.319580, 12.477695, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(1597, 1062.071777, 1327.572388, 12.477695, 0.0000, 0.0000, 360.0000);
	CreateDynamicObject(9833, 1057.898682, 1327.635742, 12.447865, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3461, 1062.894409, 1331.926025, 11.584910, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3461, 1062.853882, 1323.184937, 11.547664, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3461, 1053.466431, 1323.071167, 11.599581, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3461, 1053.457764, 1332.088867, 11.509204, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14402, 1055.901489, 1328.180176, 10.623981, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14402, 1059.660034, 1326.897827, 10.623981, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(8623, 1057.820068, 1327.580444, 10.581223, 0.0000, 0.0000, 40.3935);
	CreateDynamicObject(3522, 1032.235352, 1305.436401, 9.898729, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3522, 1030.811035, 1305.445679, 9.898729, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3522, 1024.473389, 1305.731934, 9.923729, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3522, 1025.732056, 1305.672119, 9.898729, 0.0000, 0.0000, 357.4217);
	CreateDynamicObject(638, 1031.573730, 1305.696655, 10.685679, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(638, 1025.230103, 1306.189819, 10.710679, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1649, 1062.277100, 1361.111328, 10.954515, 0.0000, 0.0000, 91.7189);
	CreateDynamicObject(1649, 1062.366455, 1361.129883, 11.462634, 0.0000, 0.0000, 91.7189);
	//LV꾸밈옵젝
	CreateDynamicObject(4113, 2096.90747070, 1281.28393555, 45.68178940, 0.00000000, 0.00000000, 283.35729980);
	CreateDynamicObject(4564, 2112.56713867, 1231.87182617, 119.03736115, 0.00000000, 0.00000000, 270.27026367);
	CreateDynamicObject(4572, 2103.24145508, 1333.90393066, 39.98305893, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(6959, 2148.96801758, 1308.01159668, 9.57622814, 0.00000000, 0.78399658, 0.00000000);
	CreateDynamicObject(6959, 2107.65063477, 1308.08862305, 9.86720371, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(6959, 2149.39770508, 1269.86340332, 9.57882500, 0.00000000, 0.78002930, 0.00000000);
	CreateDynamicObject(6959, 2108.06884766, 1269.85058594, 10.13894081, 0.00000000, 0.78002930, 0.00000000);
	CreateDynamicObject(3660, 2087.01391602, 1257.58044434, 12.45938110, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(6959, 2129.23217773, 1243.75671387, 9.83368111, 0.00000000, 0.78002930, 0.00000000);
	CreateDynamicObject(3660, 2098.05175781, 1248.49645996, 12.45989037, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(3660, 2107.77490234, 1239.78771973, 12.45874119, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(3660, 2155.35546875, 1251.81579590, 12.11798000, 0.00000000, 0.00000000, 211.88952637);
	CreateDynamicObject(1522, 2097.30175781, 1348.86596680, 9.83008289, 0.00000000, 0.00000000, 220.00000000);
	CreateDynamicObject(1280, 2166.33276367, 1288.11083984, 9.71350479, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1280, 2166.27319336, 1283.65881348, 9.70647240, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1300, 2166.13793945, 1285.79943848, 9.67320442, 0.00000000, 0.00000000, 89.73001099);
	CreateDynamicObject(18241, 2158.69360352, 1329.84008789, 9.37120914, 0.00000000, 0.00000000, 147.60998535);
	CreateDynamicObject(1281, 2159.26757812, 1346.66174316, 10.62069511, 0.00000000, 0.00000000, 268.28527832);
	CreateDynamicObject(1281, 2169.91601562, 1343.61975098, 10.62069511, 0.00000000, 0.00000000, 25.98449707);
	CreateDynamicObject(1281, 2170.05371094, 1335.33239746, 10.62069511, 0.00000000, 0.00000000, 27.91970825);
	CreateDynamicObject(1281, 2149.16186523, 1334.22363281, 10.07779312, 0.00000000, 0.00000000, 109.65975952);
	CreateDynamicObject(1281, 2139.97143555, 1338.43627930, 10.09790707, 0.00000000, 0.00000000, 69.77453613);
	CreateDynamicObject(1281, 2153.44018555, 1340.14562988, 9.97012997, 0.00000000, 0.00000000, 179.44409180);
	CreateDynamicObject(982, 2172.39916992, 1327.29541016, 10.50386715, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(982, 2137.86181641, 1350.90832520, 10.50386715, 0.00000000, 0.00000000, 89.73001099);
	CreateDynamicObject(984, 2157.10546875, 1350.88647461, 10.45699215, 0.00000000, 0.00000000, 270.27026367);
	CreateDynamicObject(983, 2166.67309570, 1350.67822266, 10.50386715, 0.00000000, 0.00000000, 85.91098022);
	CreateDynamicObject(983, 2172.31909180, 1343.27502441, 10.50386715, 0.00000000, 0.00000000, 181.44177246);
	CreateDynamicObject(1281, 2145.17578125, 1344.20812988, 10.62069511, 0.00000000, 0.00000000, 239.25976562);
	CreateDynamicObject(2010, 2170.23730469, 1350.34179688, 9.81999969, 0.00000000, 0.00000000, 330.08972168);
	CreateDynamicObject(2010, 2172.54492188, 1347.07714844, 9.82230949, 0.00000000, 0.00000000, 9.96459961);
	CreateDynamicObject(2010, 2171.81225586, 1315.78906250, 9.80750275, 0.00000000, 0.00000000, 9.96459961);
	CreateDynamicObject(1364, 2130.13427734, 1344.02319336, 10.60443401, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(1597, 2132.40576172, 1362.14562988, 12.47769451, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(1597, 2152.38818359, 1362.13061523, 12.47769451, 0.00000000, 0.00000000, 89.72534180);
	CreateDynamicObject(1597, 2172.30419922, 1362.11010742, 12.47769451, 0.00000000, 0.00000000, 89.72534180);
	CreateDynamicObject(1807, 2157.65625000, 1337.51806641, 9.83790684, 0.00000000, 0.00000000, 232.33032227);
	CreateDynamicObject(2233, 2157.01123047, 1337.40783691, 9.96510696, 0.00000000, 0.00000000, 249.25006104);
	CreateDynamicObject(2233, 2157.88916016, 1336.89746094, 9.31382751, 0.00000000, 0.00000000, 149.54681396);
	CreateDynamicObject(2233, 2165.68750000, 1332.30102539, 9.81285095, 0.00000000, 0.00000000, 119.63586426);
	CreateDynamicObject(1364, 2165.03002930, 1305.89379883, 10.11051083, 0.00000000, 0.00000000, 255.00000000);
	CreateDynamicObject(6289, 2136.49804688, 1308.39526367, 12.42584896, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(1571, 2127.55883789, 1325.91333008, 11.13277149, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(3041, 2128.11254883, 1326.04382324, 9.95008373, 0.00000000, 0.00000000, 269.63977051);
	CreateDynamicObject(1364, 2128.13769531, 1341.79650879, 10.61693001, 0.00000000, 0.00000000, 359.45422363);
	CreateDynamicObject(1300, 2125.80517578, 1331.73339844, 10.19177246, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(6299, 2129.91674805, 1283.35046387, 11.74950027, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1363, 2140.48022461, 1246.56286621, 10.48565292, 0.00000000, 0.00000000, 19.94000244);
	CreateDynamicObject(1363, 2161.04418945, 1309.73693848, 10.21608448, 0.00000000, 0.00000000, 55.79965210);
	CreateDynamicObject(1342, 2145.40136719, 1254.40844727, 10.73051834, 0.00000000, 0.00000000, 149.55026245);
	CreateDynamicObject(1341, 2154.79028320, 1264.60949707, 10.47673893, 0.00000000, 0.00000000, 29.91000366);
	CreateDynamicObject(1341, 2151.05664062, 1287.64208984, 10.52757359, 0.00000000, 0.00000000, 246.35498047);
	CreateDynamicObject(1340, 2128.09301758, 1249.78674316, 10.94552612, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(1340, 2114.79174805, 1277.73217773, 11.15374279, 0.00000000, 0.00000000, 356.92993164);
	CreateDynamicObject(1288, 2144.39965820, 1280.56896973, 10.19469070, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1288, 2156.73950195, 1254.51257324, 10.02802277, 0.00000000, 0.00000000, 29.91000366);
	CreateDynamicObject(1257, 2078.84594727, 1305.58850098, 11.09950447, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1529, 2149.14477539, 1269.94519043, 11.08373737, 0.00000000, 352.05999756, 87.69995117);
	CreateDynamicObject(17969, 2167.01293945, 1285.80920410, 12.20402145, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(3935, 2158.51733398, 1260.11621094, 13.47500229, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(8558, 2075.71655273, 1227.89587402, 11.19341564, 0.00000000, 0.00000000, 270.07421875);
	CreateDynamicObject(8558, 2075.63598633, 1282.25524902, 11.19341564, 0.00000000, 0.00000000, 270.07141113);
	CreateDynamicObject(1256, 2164.04687500, 1266.56433105, 10.00758171, 0.00000000, 0.00000000, 350.03002930);
	CreateDynamicObject(1256, 2163.16162109, 1259.74938965, 10.01963329, 0.00000000, 0.00000000, 350.02990723);
	CreateDynamicObject(12949, 2127.97167969, 1262.58532715, 9.69005108, 0.00000000, 0.00000000, 179.55004883);
	CreateDynamicObject(1289, 2122.94775391, 1257.16894531, 10.49418259, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(16781, 2203.62915039, 1221.23022461, 9.92600441, 0.00000000, 0.00000000, 270.27026367);
	CreateDynamicObject(984, 2197.40039062, 1209.62719727, 10.44952106, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(984, 2197.27026367, 1233.49108887, 10.45699215, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(984, 2203.66333008, 1239.84973145, 10.45699215, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(984, 2203.79882812, 1203.15307617, 10.45699215, 0.00000000, 0.00000000, 89.72534180);
	CreateDynamicObject(983, 2213.38427734, 1203.13269043, 10.50386715, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(983, 2213.26586914, 1239.80419922, 10.50386715, 0.00000000, 0.00000000, 89.72534180);
	CreateDynamicObject(982, 2216.60058594, 1215.91320801, 10.50386715, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(983, 2216.61889648, 1231.92199707, 10.50386715, 0.00000000, 0.00000000, 179.45520020);
	CreateDynamicObject(983, 2216.60253906, 1236.70104980, 10.50386715, 0.00000000, 0.00000000, 181.43566895);
	CreateDynamicObject(2195, 2197.60473633, 1216.58728027, 10.54397392, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2195, 2197.39892578, 1226.57836914, 10.54397392, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1432, 2212.72412109, 1236.95886230, 9.82031250, 0.00000000, 0.00000000, 29.91000366);
	CreateDynamicObject(1432, 2206.06835938, 1237.37963867, 9.82031250, 0.00000000, 0.00000000, 109.65975952);
	CreateDynamicObject(1432, 2199.36450195, 1237.36462402, 9.82031250, 0.00000000, 0.00000000, 139.56457520);
	CreateDynamicObject(1432, 2213.30566406, 1205.50805664, 9.82031250, 0.00000000, 0.00000000, 169.46936035);
	CreateDynamicObject(1432, 2206.24707031, 1205.31225586, 9.82031250, 0.00000000, 0.00000000, 219.31414795);
	CreateDynamicObject(1432, 2199.09570312, 1205.53894043, 9.81284142, 0.00000000, 0.00000000, 259.18896484);
	CreateDynamicObject(5017, 2210.45532227, 1343.27795410, 13.27843380, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(984, 2203.91381836, 1363.25610352, 10.45699215, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(984, 2217.57446289, 1356.93627930, 10.45699215, 0.00000000, 0.00000000, 180.00000000);
	CreateDynamicObject(984, 2210.99877930, 1323.92358398, 10.45699215, 0.00000000, 0.00000000, 90.31799316);
	CreateDynamicObject(984, 2197.46289062, 1356.80957031, 10.45699215, 0.00000000, 0.00000000, 180.04315186);
	CreateDynamicObject(984, 2197.45727539, 1344.01965332, 10.45699215, 0.00000000, 0.00000000, 180.03845215);
	CreateDynamicObject(983, 2201.29638672, 1323.88549805, 10.50386715, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(1500, 2203.34643555, 1335.09265137, 10.02223778, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(3504, 2133.77416992, 1264.89282227, 11.10681534, 0.00000000, 0.00000000, 89.73004150);
	CreateDynamicObject(3504, 2133.76440430, 1267.87475586, 11.10456276, 0.00000000, 0.00000000, 89.72534180);
	CreateDynamicObject(984, 2217.29516602, 1330.42431641, 10.45699215, 0.00000000, 0.00000000, 180.04315186);


	// ------------ 방송국
	CreateObject(14602, 1837.306640625, -1349.2731933594, -85.093193054199, 0, 0, 0);
	CreateObject(3055, 1826.9387207031, -1333.4145507813, -90.367401123047, 0, 0, 0);
	CreateObject(14593, 1839.4910888672, -1370.7932128906, -88.135124206543, 0, 0, 178);
	CreateObject(1715, 1818.5184326172, -1349.4252929688, -90.45662689209, 0, 0, 90);
	CreateObject(14391, 1835.6579589844, -1336.5377197266, -89.500297546387, 0, 0, 220);
	CreateObject(2648, 1831.1967773438, -1333.9025878906, -86.860877990723, 28, 0, 0);
	CreateObject(2648, 1837.9929199219, -1339.9632568359, -86.860877990723, 27.998657226563, 0, 270);
	CreateObject(2202, 1814.9108886719, -1358.2508544922, -90.461700439453, 0, 0, 90);
	CreateObject(2202, 1814.7219238281, -1342.4444580078, -90.461700439453, 0, 0, 90);
	CreateObject(1808, 1829.96875, -1355.9470214844, -90.460380554199, 0, 0, 180);
	CreateObject(1726, 1821.0776367188, -1336.3203125, -90.460380554199, 0, 0, 0);
	CreateObject(1726, 1825.9916992188, -1336.6179199219, -90.460380554199, 0, 0, 0);
	CreateObject(1726, 1821.1007080078, -1341.3807373047, -90.460380554199, 0, 0, 0);
	CreateObject(1726, 1826.1639404297, -1341.2205810547, -90.460380554199, 0, 0, 0);
	CreateObject(1748, 1825.1900634766, -1345.3604736328, -88.237426757813, 12, 0, 186);
	CreateObject(1704, 1831.6003417969, -1338.7740478516, -90.460380554199, 0, 0, 50);
	CreateObject(1704, 1835.7027587891, -1340.6188964844, -90.460380554199, 0, 0, 229.99877929688);
	CreateObject(2184, 1833.6353759766, -1340.5334472656, -90.460380554199, 0, 0, 60);
	CreateObject(2828, 1833.0738525391, -1339.7625732422, -89.684638977051, 0, 0, 40);
	CreateObject(2832, 1834.0627441406, -1339.501953125, -89.684638977051, 0, 0, 0);
	CreateObject(1337, 1830.8583984375, -1337.59375, -89.953880310059, 0, 0, 0);
	CreateObject(2099, 1840.2462158203, -1371.7154541016, -90.463249206543, 0, 0, 0);
	CreateObject(2099, 1840.5155029297, -1375.6346435547, -90.463249206543, 0, 0, 175.99548339844);
	CreateObject(2099, 1842.4569091797, -1373.6329345703, -90.463249206543, 0, 0, 268);
	CreateObject(2099, 1838.4993896484, -1373.8271484375, -90.463249206543, 0, 0, 87.994995117188);
	CreateObject(2224, 1835.3933105469, -1373.4500732422, -85.806022644043, 0, 0, 0);
	//--------------톨게이트
	CreateDynamicObject( 8168, 612.73895263672, -1191.4602050781, 20.294105529785, 0.000000, 5, 318.31237792969, -1 );
	CreateDynamicObject( 8168, 620.47265625, -1188.49609375, 20.044105529785, 0.000000, 352.99621582031, 138.94409179688, -1 );
	CreateDynamicObject( 966, 613.97229003906, -1197.7174072266, 17.475030899048, 0.000000, 0.000000, 23.81982421875, -1 );
	CreateDynamicObject( 997, 614.33209228516, -1194.3870849609, 17.709369659424, 0.000000, 0.000000, 266.70568847656, -1 );
	CreateDynamicObject( 973, 602.98425292969, -1202.1643066406, 18.000516891479, 0.000000, 0.000000, 19.849853515625, -1 );
	Richman = CreateDynamicObject( 968, 613.8935546875, -1197.7329101563, 18.109180450439, 0.000000, -90.000000, 23.81982421875, -1 );
	CreateDynamicObject( 966, 619.42913818359, -1181.6597900391, 18.725030899048, 0.000000, 0.000000, 214.37744140625, -1 );
	CreateDynamicObject( 973, 629.68823242188, -1176.0551757813, 19.500516891479, 0.000000, 0.000000, 21.831787109375, -1 );
	CreateDynamicObject( 997, 619.26574707031, -1181.6518554688, 18.709369659424, 0.000000, 0.000000, 268.68908691406, -1 );
	Richman1 = CreateDynamicObject( 968, 619.44201660156, -1181.6903076172, 19.525806427002, 0.000000, -90.000000, 214.37744140625, -1 );
	CreateDynamicObject( 8168, 61.256042480469, -1533.3946533203, 6.1042537689209, 0.000000, 0.000000, 9.9252624511719, -1 );
	CreateDynamicObject( 8168, 40.966598510742, -1529.5725097656, 6.1042537689209, 0.000000, 0.000000, 188.5712890625, -1 );
	Flint = CreateDynamicObject( 968, 35.838928222656, -1525.9034423828, 5.0012145042419, 0.000000, -90.000000, 270.67565917969, -1 );
	CreateDynamicObject( 966, 35.889751434326, -1526.0096435547, 4.2410612106323, 0.000000, 0.000000, 270.67565917969, -1 );
	CreateDynamicObject( 966, 67.093727111816, -1536.8275146484, 3.9910612106323, 0.000000, 0.000000, 87.337799072266, -1 );
	Flint1 = CreateDynamicObject( 968, 67.116600036621, -1536.8218994141, 4.7504549026489, 0.000000, -90.000000, 87.337799072266, -1 );
	CreateDynamicObject( 973, 52.9794921875, -1531.9252929688, 5.090488910675, 0.000000, 0.000000, 352.06005859375, -1 );
	CreateDynamicObject( 973, 49.042072296143, -1531.5065917969, 5.1758694648743, 0.000000, 0.000000, 352.05688476563, -1 );
	CreateDynamicObject( 997, 68.289916992188, -1546.6020507813, 4.0626411437988, 0.000000, 0.000000, 119.09942626953, -1 );
	CreateDynamicObject( 997, 34.5198097229, -1516.1402587891, 4.0626411437988, 0.000000, 0.000000, 292.50622558594, -1 );
	CreateDynamicObject( 997, 35.903915405273, -1525.8717041016, 4.0626411437988, 0.000000, 0.000000, 342.13012695313, -1 );
	CreateDynamicObject( 997, 63.914081573486, -1535.7126464844, 4.0626411437988, 0.000000, 0.000000, 342.130859375, -1 );
	CreateDynamicObject( 8168, 1789.83203125, 703.189453125, 15.846367835999, 0.000000, 3, 99.24951171875, -1 );
	CreateDynamicObject( 8168, 1784.8334960938, 703.94799804688, 16.070636749268, 0.000000, 357, 278.61096191406, -1 );
	CreateDynamicObject( 966, 1781.4122314453, 697.32531738281, 14.636913299561, 0.000000, 0.000000, 348.09008789063, -1 );
	CreateDynamicObject( 996, 1767.3087158203, 700.50506591797, 15.281567573547, 0.000000, 0.000000, 346.10510253906, -1 );
	CreateDynamicObject( 997, 1781.6832275391, 697.34796142578, 14.698781013489, 0.000000, 3, 77.41455078125, -1 );
	CreateDynamicObject( 997, 1792.7745361328, 706.38543701172, 13.948781013489, 0.000000, 2.999267578125, 81.379638671875, -1 );
	CreateDynamicObject( 966, 1793.4289550781, 709.87982177734, 13.636913299561, 0.000000, 0.000000, 169.43664550781, -1 );
	CreateDynamicObject( 996, 1800.8060302734, 708.38299560547, 14.281567573547, 0.000000, 0.000000, 346.10229492188, -1 );
	CreateDynamicObject( 973, 1769.889404,699.821472, 15.246355, 1.000000, 0.000000, -194.000000);
	CreateDynamicObject( 973, 1804.737304,707.449890, 14.372567, 0.000000, 1.000000, 166.000000);
	lv = CreateDynamicObject( 968, 1781.4133300781, 697.31750488281, 15.420023918152, 0.000000, -90.000000, 348.10229492188, -1 );
	lv1 = CreateDynamicObject( 968, 1793.6700439453, 709.84631347656, 14.405718803406, 0.000000, -90.000000, 169.43664550781, -1 );
	// ----------------시청 내부
	CreateDynamicObject(2395, 385.00000000, 174.80000305, 1007.15899658, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2395, 385.00000000, 169.60000610, 1007.15997314, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1491, 384.89999390, 172.83000183, 1007.40002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1892, 385.29998779, 173.08000183, 1007.40002441, 0.00000000, 0.00000000, 89.00000000);
	CreateDynamicObject(1703, 381.00000000, 177.60000610, 1007.40002441, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1703, 378.50000000, 177.60000610, 1007.40002441, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(16780, 382.29998779, 173.50000000, 1011.09002686, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(16780, 378.29998779, 173.39999390, 1011.00000000, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1822, 379.10000610, 176.00000000, 1007.40002441, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(1822, 381.50000000, 175.89999390, 1007.40002441, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(2000, 354.00000000, 172.89999390, 1007.40002441, 0.00000000, 0.00000000, 88.00000000);
	CreateDynamicObject(2773, 371.10000610, 174.39999390, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 369.20001221, 174.39999390, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 367.29998779, 174.39999390, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 365.39999390, 174.39999390, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 363.50000000, 174.39999390, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 361.79998779, 175.00000000, 1007.90002441, 0.00000000, 0.00000000, 52.00000000);
	CreateDynamicObject(2773, 371.10000610, 173.10000610, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 369.20001221, 173.10000610, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 367.29998779, 173.10000610, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 365.39999390, 173.10000610, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 363.50000000, 173.10000610, 1007.90002441, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(2773, 361.79998779, 172.50000000, 1007.90002441, 0.00000000, 0.00000000, 130.00000000);
	CreateDynamicObject(2614, 353.60000610, 174.10000610, 1012.00000000, 0.00000000, 0.00000000, 88.00000000);
	CreateDynamicObject(1616, 353.60000610, 171.60000610, 1011.40002441, 0.00000000, 0.00000000, 225.99998474);
	CreateDynamicObject(1616, 353.79998779, 176.60000610, 1011.40002441, 0.00000000, 0.00000000, 199.99682617);
	CreateDynamicObject(1616, 374.39999390, 166.50000000, 1011.40002441, 0.00000000, 0.00000000, 337.99978638);
	CreateDynamicObject(6300, 360.60000610, 174.19999695, 999.41998291, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(6300, 349.39999390, 180.00000000, 999.40002441, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(8674, 357.79998779, 184.50000000, 1009.00000000, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(8674, 357.79998779, 179.39999390, 1009.00000000, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(8674, 357.70001221, 160.00000000, 1009.00000000, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(1337, 353.82324219, 172.17187500, 1008.59436035, 0.00000000, 0.00000000, 0.00000000);
	CreateDynamicObject(8674, 357.70001221, 167.69999695, 1009.00000000, 0.00000000, 0.00000000, 90.00000000);
	CreateDynamicObject(3089, 357.73999023, 174.30000305, 1009.00000000, 0.00000000, 0.00000000, 270.00000000);
	//-------------------교도소
	CreateDynamicObject(8661, -2967.3000488281, -2619.1000976563, 14.199999809265, 0, 0, 356);
	CreateDynamicObject(16111, -2946.5, -2638.5, 4.6999998092651, 0, 0, 200);
	CreateDynamicObject(16111, -2949.1000976563, -2599, 0, 0, 0, 251.99513244629);
	CreateDynamicObject(16111, -2958.8000488281, -2585, -3.7999999523163, 0, 0, 255.99340820313);
	CreateDynamicObject(16111, -3066, -2571.3000488281, 4.8000001907349, 0, 0, 15.987670898438);
	CreateDynamicObject(16111, -3014, -2561.6999511719, -0.40000000596046, 0, 0, 295.98400878906);
	CreateDynamicObject(16111, -3038.1999511719, -2613.5, 1.8999999761581, 0, 354, 27.984008789063);
	CreateDynamicObject(16111, -3026.8999023438, -2649.1999511719, 1, 43.697235107422, 351.68157958984, 75.750122070313);
	CreateDynamicObject(16111, -3003.3999023438, -2667.6000976563, -5.3000001907349, 11.93115234375, 353.85864257813, 109.25189208984);
	CreateDynamicObject(16111, -2996, -2667.1000976563, -1.7000000476837, 9.9425659179688, 353.89440917969, 119.03076171875);
	CreateDynamicObject(16111, -2958.8000488281, -2656.8000488281, -0.80000001192093, 9.9371337890625, 353.8916015625, 131.02587890625);
	CreateDynamicObject(8661, -2968.5, -2635.3000488281, 14.199999809265, 0, 0, 355.99548339844);
	CreateDynamicObject(8661, -2969.099609375, -2644.599609375, 14.199999809265, 0, 0, 355.98999023438);
	CreateDynamicObject(8661, -3006.3000488281, -2642.1999511719, 14.199999809265, 0, 0, 355.99548339844);
	CreateDynamicObject(8661, -3005.099609375, -2624, 14.199999809265, 0, 0, 355.98999023438);
	CreateDynamicObject(8661, -3003.8000488281, -2605.1999511719, 14.199999809265, 0, 0, 355.99548339844);
	CreateDynamicObject(8661, -3009.5, -2588.2998046875, 14.199999809265, 0, 0, 355.98999023438);
	CreateDynamicObject(8661, -3021.2998046875, -2608, 14.199999809265, 0, 0, 85.995483398438);
	CreateDynamicObject(8661, -3028.1000976563, -2625.1999511719, 14.199999809265, 0, 0, 85.995483398438);
	CreateDynamicObject(8661, -3007.3000488281, -2657.8000488281, 14.39999961853, 358, 0, 355.99548339844);
	CreateDynamicObject(8661, -2966.1000976563, -2605, 14.199999809265, 0, 0, 355.99548339844);
	CreateDynamicObject(8661, -2983.1999511719, -2592.6000976563, 14.199999809265, 0, 0, 87.995483398438);
	CreateDynamicObject(8661, -2967.1999511719, -2605.6999511719, 14.199999809265, 0, 0, 87.994995117188);
	CreateDynamicObject(8661, -3003.599609375, -2578.099609375, 14.199999809265, 0, 0, 355.98999023438);
	CreateDynamicObject(11556, -2934, -2629.3994140625, 14, 337.99987792969, 0, 83.995971679688);
	CreateDynamicObject(11556, -2946.3999023438, -2589.8000488281, 15.699999809265, 337.99987792969, 0, 111.99594116211);
	CreateDynamicObject(11556, -2984.099609375, -2561.5, 16.89999961853, 335.98388671875, 0, 157.98889160156);
	CreateDynamicObject(11556, -3028.5, -2552.8994140625, 16.39999961853, 332.00134277344, 357.73132324219, 168.92578125);
	CreateDynamicObject(11556, -3091.6000976563, -2630.6999511719, 11.800000190735, 351.98547363281, 2.0159912109375, 254.27308654785);
	CreateDynamicObject(16113, -3030.1999511719, -2647.1000976563, -0.5, 1.9890441894531, 6.0036315917969, 159.79083251953);
	CreateDynamicObject(16113, -2999.3000488281, -2661.3999023438, -3.5999999046326, 1.9982604980469, 1.9961242675781, 45.927490234375);
	CreateDynamicObject(16113, -2956.8000488281, -2650.3000488281, -0.10000000149012, 352.03918457031, 6.0513305664063, 238.83343505859);
	CreateDynamicObject(16113, -2948.6000976563, -2635.8000488281, 2.2999999523163, 0, 2, 296);
	CreateDynamicObject(16113, -2935.3000488281, -2619.8000488281, -5.5999999046326, 0, 8, 314);
	CreateDynamicObject(16113, -2951.2998046875, -2582.5, -4.3000001907349, 0, 357.99499511719, 357.99499511719);
	CreateDynamicObject(3279, -2952.3000488281, -2619.5, 14, 0, 0, 268);
	CreateDynamicObject(3279, -2999.3000488281, -2579.8999023438, 14.199999809265, 0, 0, 267.99499511719);
	CreateDynamicObject(3279, -3029.6000976563, -2606.5, 14.5, 0, 0, 91.244995117188);
	CreateDynamicObject(3279, -2995.3999023438, -2650.6000976563, 13.699999809265, 0, 0, 89.241455078125);
	CreateDynamicObject(2929, -2955.5, -2613.3000488281, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(2929, -2955.8999023438, -2604.8000488281, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(2929, -2958.3999023438, -2613.3000488281, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(2929, -2961.5, -2613.3000488281, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(2929, -2959.5, -2604.8000488281, 15.800000190735, 0, 0, 359.25);
	CreateDynamicObject(2929, -2964, -2613.2998046875, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(2929, -2965.8000488281, -2611.5, 15.800000190735, 0, 0, 268);
	CreateDynamicObject(2929, -2965.6999511719, -2607.8000488281, 15.800000190735, 0, 0, 267.99499511719);
	CreateDynamicObject(2929, -2965.6999511719, -2606.6000976563, 15.800000190735, 0, 0, 267.99499511719);
	CreateDynamicObject(1523, -2965.6000976563, -2604.6999511719, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1523, -2962.6000976563, -2604.6999511719, 14.199999809265, 0, 0, 177.49993896484);
	CreateDynamicObject(2929, -2960.6999511719, -2604.8000488281, 15.800000190735, 0, 0, 359.24743652344);
	CreateDynamicObject(2930, -2965.3999023438, -2604.6999511719, 18.200000762939, 88.653625488281, 248.2014465332, 21.053802490234);
	CreateDynamicObject(2929, -2963.6999511719, -2606.3000488281, 17.5, 88.096069335938, 336.79663085938, 23.689392089844);
	CreateDynamicObject(2929, -2959.6999511719, -2606.3000488281, 17.5, 88.093933105469, 336.79162597656, 23.686279296875);
	CreateDynamicObject(2929, -2956.1000976563, -2606.3000488281, 17.5, 88.093933105469, 336.79165649414, 23.686279296875);
	CreateDynamicObject(2929, -2956.1000976563, -2609.6999511719, 17.60000038147, 88.093933105469, 336.79162597656, 23.686279296875);
	CreateDynamicObject(2929, -2960, -2609.6999511719, 17.5, 88.093933105469, 336.79162597656, 23.686279296875);
	CreateDynamicObject(2929, -2963.8999023438, -2609.8000488281, 17.39999961853, 88.093933105469, 336.79168701172, 23.686309814453);
	CreateDynamicObject(2929, -2963.8999023438, -2611.6999511719, 17.5, 87.692932128906, 319.39956665039, 39.06689453125);
	CreateDynamicObject(2929, -2960, -2611.6000976563, 17.60000038147, 87.69287109375, 319.39465332031, 40.061767578125);
	CreateDynamicObject(2929, -2956, -2611.6000976563, 17.60000038147, 87.687377929688, 319.39453125, 40.061645507813);
	CreateDynamicObject(2929, -2954.1000976563, -2606.8999023438, 15.89999961853, 0, 0, 90.247467041016);
	CreateDynamicObject(2929, -2954.1999511719, -2611.1000976563, 15.89999961853, 0, 0, 90.247192382813);
	CreateDynamicObject(2945, -2958.8000488281, -2613.1000976563, 15.5, 0, 0, 0);
	CreateDynamicObject(3388, -2954.8999023438, -2612.5, 14.10000038147, 0, 0, 178.25);
	CreateDynamicObject(3390, -2957.1999511719, -2612.5, 14.199999809265, 0.25, 0, 268.25);
	CreateDynamicObject(3392, -2954.8999023438, -2610.3999023438, 14.199999809265, 0, 0, 358.75);
	CreateDynamicObject(12911, -3030.8999023438, -2630.8000488281, 13.699999809265, 0, 0, 7.5);
	CreateDynamicObject(3763, -2958.8000488281, -2653.1999511719, 46.5, 0, 0, 345.5);
	CreateDynamicObject(11556, -2914.099609375, -2605.099609375, 0, 353.99047851563, 0, 93.993530273438);
	CreateDynamicObject(11556, -3078.69921875, -2616.599609375, 11.39999961853, 351.97998046875, 2.0159912109375, 228.26843261719);
	CreateDynamicObject(11556, -2938.8994140625, -2625.3994140625, -0.30000001192093, 351.97998046875, 2.0159912109375, 252.26843261719);
	CreateDynamicObject(4079, -2995.5, -2618.099609375, 15.89999961853, 0, 0, 0);
	CreateDynamicObject(2963, -2981.6999511719, -2593.8000488281, 16, 0, 0, 315);
	CreateDynamicObject(2963, -3000.6999511719, -2608.6000976563, 16.10000038147, 0, 0, 90.244506835938);
	CreateDynamicObject(2963, -3004.8000488281, -2639.3000488281, 16.10000038147, 0, 0, 180.24169921875);
	CreateDynamicObject(5816, -3003.1999511719, -2614.3999023438, 23, 0, 359.75, 271.25);
	CreateDynamicObject(972, -2975.3000488281, -2623.1999511719, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(972, -2975.3000488281, -2631.6999511719, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(972, -2995.19921875, -2639.099609375, 14.199999809265, 0, 0, 271.99951171875);
	CreateDynamicObject(1237, -2976.3999023438, -2641.6999511719, 14.199999809265, 0, 0, 68.5);
	CreateDynamicObject(1411, -3004.8999023438, -2615.5, 30.200000762939, 0, 0, 89.75);
	CreateDynamicObject(1411, -3007.5, -2607.8000488281, 30.299999237061, 0, 0, 134.24945068359);
	CreateDynamicObject(1411, -3013.6999511719, -2605.1000976563, 30.299999237061, 0, 0, 181.49743652344);
	CreateDynamicObject(1411, -3007.5, -2620.6000976563, 30.200000762939, 0, 0, 45.494140625);
	CreateDynamicObject(1411, -3010.3000488281, -2626.5, 30.200000762939, 0, 0, 89.747314453125);
	CreateDynamicObject(1411, -3008.3999023438, -2632.1000976563, 30.200000762939, 0, 359.75, 133.24728393555);
	CreateDynamicObject(1411, -3004.8000488281, -2639.1000976563, 30.299999237061, 0, 359.74731445313, 89.9921875);
	CreateDynamicObject(1411, -3007.3000488281, -2645.1999511719, 30.200000762939, 0, 359.74731445313, 46.489013671875);
	CreateDynamicObject(1411, -3013.5, -2648.1000976563, 30.200000762939, 0, 359.74731445313, 0.2386474609375);
	CreateDynamicObject(1411, -3019.6999511719, -2645.8000488281, 30.200000762939, 0, 359.74731445313, 313.73620605469);
	CreateDynamicObject(1411, -3022.6999511719, -2639.3000488281, 30.200000762939, 0, 359.74731445313, 270.23107910156);
	CreateDynamicObject(1411, -3020.1999511719, -2633, 30.200000762939, 0, 359.74731445313, 226.48107910156);
	CreateDynamicObject(1411, -3017.1999511719, -2626.8999023438, 30.200000762939, 0, 359.74731445313, 270.97766113281);
	CreateDynamicObject(1411, -3020.1000976563, -2620.5, 30.299999237061, 0, 359.74731445313, 314.97229003906);
	CreateDynamicObject(1411, -3022.6000976563, -2614.1000976563, 30.200000762939, 0, 359.74731445313, 270.22229003906);
	CreateDynamicObject(1411, -3020.1000976563, -2607.8000488281, 30.200000762939, 0, 359.74731445313, 224.46969604492);
	CreateDynamicObject(1411, -2999.6000976563, -2608.5, 30.200000762939, 0, 359.74731445313, 0.2362060546875);
	CreateDynamicObject(1411, -3006.1999511719, -2605.3999023438, 30.200000762939, 0, 359.74731445313, 314.73620605469);
	CreateDynamicObject(1411, -3008.3000488281, -2599.8000488281, 30.200000762939, 0, 359.74731445313, 270.23083496094);
	CreateDynamicObject(1411, -3005.6999511719, -2593.1000976563, 30.200000762939, 0, 359.74731445313, 225.23071289063);
	CreateDynamicObject(1411, -2999.6999511719, -2590.6000976563, 30.200000762939, 0, 359.74731445313, 179.97521972656);
	CreateDynamicObject(1411, -2993.5, -2593, 30.200000762939, 0, 359.74731445313, 134.22500610352);
	CreateDynamicObject(1411, -2987.1000976563, -2596.1000976563, 30.200000762939, 0, 359.74731445313, 179.47253417969);
	CreateDynamicObject(1411, -2981.1999511719, -2593.5, 30.200000762939, 0, 359.74731445313, 225.21716308594);
	CreateDynamicObject(1411, -2974.8000488281, -2590.5, 30.200000762939, 0, 359.74731445313, 180.46423339844);
	CreateDynamicObject(1411, -2968.6000976563, -2593.1999511719, 30.200000762939, 0, 359.74731445313, 135.21142578125);
	CreateDynamicObject(1411, -2965.8999023438, -2600, 30.200000762939, 0, 359.74731445313, 89.958740234375);
	CreateDynamicObject(1411, -2968.5, -2605.8000488281, 30.200000762939, 0, 359.74731445313, 44.9560546875);
	CreateDynamicObject(1411, -2974.8000488281, -2608.6000976563, 30.200000762939, 0, 359.74731445313, 359.9560546875);
	CreateDynamicObject(1411, -2993.1000976563, -2606, 30.200000762939, 0, 359.74731445313, 45.736206054688);
	CreateDynamicObject(1411, -2981, -2606.1000976563, 30.200000762939, 0, 358.99731445313, 313.45602416992);
	CreateDynamicObject(1411, -2987.1000976563, -2603.1000976563, 30.200000762939, 0, 358.74206542969, 357.95092773438);
	CreateDynamicObject(3550, -3001.8999023438, -2643, 18.200000762939, 0, 0, 272);
	CreateDynamicObject(3550, -2995.8000488281, -2642.5, 18.299999237061, 0, 0, 271.99951171875);
	CreateDynamicObject(3550, -2989.8000488281, -2642.3999023438, 18.39999961853, 0, 0, 271.99951171875);
	CreateDynamicObject(3550, -2983.8999023438, -2642.3000488281, 18.39999961853, 0, 0, 270.99951171875);
	CreateDynamicObject(3550, -2971.6999511719, -2639.1999511719, 18.39999961853, 0, 0, 359.99426269531);
	CreateDynamicObject(3550, -2971.6999511719, -2633.1999511719, 18.5, 0, 0, 359.98901367188);
	CreateDynamicObject(3550, -2973.3000488281, -2626.6999511719, 3.4000000953674, 0, 0, 359.98901367188);
	CreateDynamicObject(3550, -2971.6999511719, -2627.3000488281, 18.5, 0, 0, 359.98901367188);
	CreateDynamicObject(3550, -2971.6999511719, -2621.3000488281, 18.5, 0, 0, 359.98901367188);
	CreateDynamicObject(3550, -2972, -2615.19921875, 18.39999961853, 0, 0, 359.98352050781);
	CreateDynamicObject(3550, -2971.8999023438, -2609.1999511719, 18.39999961853, 0, 0, 359.98901367188);
	CreateDynamicObject(2792, -2982, -2642, 16.89999961853, 0, 0, 2);
	CreateDynamicObject(16113, -3031.3999023438, -2667.3000488281, -5.3000001907349, 0, 0, 0);
	CreateDynamicObject(16113, -3041.8000488281, -2672.6000976563, -15.300000190735, 0, 0, 0);
	CreateDynamicObject(16113, -3034.3999023438, -2687.6999511719, -9.1000003814697, 0, 0, 152);
	CreateDynamicObject(16113, -3020.6999511719, -2690, -5.5999999046326, 0, 0, 151.99584960938);
	CreateDynamicObject(16113, -3002.3999023438, -2693.3999023438, -4.5, 0, 0, 99.995849609375);
	CreateDynamicObject(16113, -3037.6000976563, -2700.8000488281, -7.8000001907349, 0, 2, 9.9920654296875);
	CreateDynamicObject(8661, -3015, -2691.6000976563, 14.699999809265, 0, 0, 355.99548339844);
	CreateDynamicObject(8661, -3013.6999511719, -2673.1999511719, 14.699999809265, 0, 0, 355.99548339844);
	CreateDynamicObject(9241, -3010.8000488281, -2685.8999023438, 16.39999961853, 0, 0, 356.75);
	CreateDynamicObject(16113, -3037.3000488281, -2704.3000488281, 3, 0, 1.99951171875, 17.992065429688);
	CreateDynamicObject(16113, -3005.6000976563, -2710.6000976563, -0.80000001192093, 0, 1.99951171875, 71.990112304688);
	CreateDynamicObject(16113, -3052.8000488281, -2668.6999511719, -0.80000001192093, 0, 1.99951171875, 307.99011230469);
	CreateDynamicObject(16113, -3029.3999023438, -2663, -2.2000000476837, 0, 1.99951171875, 267.98522949219);
	CreateDynamicObject(16113, -3037.3000488281, -2679, 1.1000000238419, 0, 1.99951171875, 303.98522949219);
	CreateDynamicObject(16113, -2993.1999511719, -2674.1000976563, -3.5, 0, 21.99951171875, 295.98791503906);
	CreateDynamicObject(8661, -3011.3999023438, -2661.6000976563, 13.300000190735, 0, 0, 355.99548339844);
	CreateDynamicObject(16113, -2967.6000976563, -2649.6999511719, -5.5999999046326, 352.03491210938, 6.0479736328125, 230.83184814453);
	CreateDynamicObject(16114, -2981.1000976563, -2560.1999511719, -9, 0, 0, 278);
	CreateDynamicObject(5191, -2952.7067871094, -2642.5617675781, -1.0049939155579, 358.24768066406, 0, 276.24523925781);
	CreateDynamicObject(8041, -2761.4689941406, -2612.4677734375, 6, 0, 0, 16.245239257813);
	CreateDynamicObject(6976, -2921.69921875, -2644.2998046875, 6.4000000953674, 0, 0, 209.99816894531);
	CreateDynamicObject(5820, -2941.3999023438, -2645.1999511719, 18.60000038147, 0, 0, 119.5);
	CreateDynamicObject(7522, -3010.8000488281, -2663.1999511719, 18.60000038147, 0, 0, 357.5);
	CreateDynamicObject(680, -2932.1000976563, -2634.8000488281, 11.10000038147, 0, 0, 0);
	CreateDynamicObject(680, -2938.6999511719, -2628.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(680, -2944.8999023438, -2637.3999023438, 21.10000038147, 0, 0, 0);
	CreateDynamicObject(680, -2929.6999511719, -2619.6000976563, 10.800000190735, 0, 0, 0);
	CreateDynamicObject(680, -2941.8999023438, -2611.3000488281, 14.39999961853, 0, 0, 0);
	CreateDynamicObject(680, -2933, -2607.1000976563, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(680, -2925.1000976563, -2611.6999511719, 5.5, 0, 0, 0);
	CreateDynamicObject(680, -3003.1000976563, -2708.6000976563, 20, 0, 0, 0);
	CreateDynamicObject(680, -2987.5, -2668, 14.800000190735, 0, 0, 0);
	CreateDynamicObject(680, -3031.8000488281, -2667.8000488281, 17.5, 0, 0, 0);
	CreateDynamicObject(680, -3036.8000488281, -2680.5, 21.700000762939, 0, 0, 0);
	CreateDynamicObject(680, -2941.3000488281, -2657.5, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(680, -2935.3999023438, -2652.1999511719, 4.5, 0, 0, 0);
	CreateDynamicObject(680, -2945.1999511719, -2646.8999023438, 17.60000038147, 0, 0, 0);
	CreateDynamicObject(5153, -2944, -2640.1000976563, 21.200000762939, 0, 0, 300.25);
	CreateDynamicObject(5153, -2944.69921875, -2640.5, 21.200000762939, 0, 0, 302.49755859375);
	CreateDynamicObject(5152, -2948.8000488281, -2631.1000976563, 19.299999237061, 2, 0, 268.5);
	CreateDynamicObject(3852, -2952.6000976563, -2628.1000976563, 15.60000038147, 0, 0, 284);
	CreateDynamicObject(3666, -3000.5, -2676.8999023438, 17.700000762939, 0, 0, 0);
	CreateDynamicObject(3666, -3019.1999511719, -2675.6999511719, 17.700000762939, 0, 0, 0);
	CreateDynamicObject(3666, -3020.3999023438, -2695.3000488281, 17.700000762939, 0, 0, 0);
	CreateDynamicObject(3666, -3001.5, -2696.1999511719, 17.700000762939, 0, 0, 0);
	CreateDynamicObject(3881, -2901.3977050781, -2630.0573730469, 4.8999934196472, 0, 0, 97.498168945313);
	CreateDynamicObject(1411, -2910.1000976563, -2627.8000488281, 6.3000001907349, 0, 0, 187.49792480469);
	CreateDynamicObject(1690, -3022.3000488281, -2639.1999511719, 29.299999237061, 0, 0, 0);
	CreateDynamicObject(1688, -3013.3999023438, -2647.3999023438, 29.700000762939, 0, 0, 0);
	CreateDynamicObject(1688, -3013.3999023438, -2645.5, 29.60000038147, 0, 0, 0);
	CreateDynamicObject(3287, -2974, -2597.8999023438, 32, 0, 0, 0);
	CreateDynamicObject(3643, -3015.3999023438, -2613.3000488281, 33.799999237061, 0, 0, 0);
	CreateDynamicObject(3091, -2978.8000488281, -2641.8999023438, 14.800000190735, 0, 0, 1);
	CreateDynamicObject(951, -2995.3999023438, -2650.6999511719, 30.5, 0, 0, 0);
	CreateDynamicObject(951, -2952.5, -2619.6999511719, 30.799999237061, 0, 0, 84.25);
	CreateDynamicObject(951, -2999.5, -2579.8000488281, 31, 0, 0, 181.24496459961);
	CreateDynamicObject(951, -3029.5, -2606.5, 31.299999237061, 0, 0, 274.74865722656);
	CreateDynamicObject(1432, -2974.3000488281, -2611, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1432, -2977.1999511719, -2611.5, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1432, -2974.6000976563, -2618.1999511719, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1432, -2974.1000976563, -2614.3000488281, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1432, -2979.1999511719, -2614.3000488281, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1432, -2978.8000488281, -2618.3000488281, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1432, -2981.3000488281, -2611, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(16338, -2468.19921875, -2410.2998046875, -24.10000038147, 0, 0, 0);
	CreateDynamicObject(16350, -2457.7998046875, -2410.19921875, -24.10000038147, 0, 0, 179.24743652344);
	CreateDynamicObject(16339, -2478.7998046875, -2410.2998046875, -24.10000038147, 0, 0, 180.49987792969);
	CreateDynamicObject(16640, -2450.19921875, -2425.099609375, -35.700000762939, 0, 0, 0);
	CreateDynamicObject(16642, -2487.2998046875, -2433.3994140625, -30, 0, 0, 0);
	CreateDynamicObject(7891, -2457.2998046875, -2419.7998046875, -30.10000038147, 0, 0, 0);
	CreateDynamicObject(7891, -2473.6000976563, -2437.8000488281, -33, 359.75, 0, 269.25);
	CreateDynamicObject(7891, -2473.6000976563, -2437.8000488281, -30, 359.74731445313, 0, 269.49743652344);
	CreateDynamicObject(18553, -2501.2998046875, -2434.5, -31.299999237061, 0, 0, 0);
	CreateDynamicObject(7891, -2475.8000488281, -2437.5, -33.700000762939, 271, 180, 269.75);
	CreateDynamicObject(3117, -2470.8999023438, -2437.6999511719, -36.400001525879, 359.94543457031, 89.5029296875, 88.999298095703);
	CreateDynamicObject(7891, -2478.3999023438, -2440.8999023438, -32.900001525879, 0, 0, 0);
	CreateDynamicObject(7891, -2478.3999023438, -2440.8999023438, -30.39999961853, 0, 0, 0);
	CreateDynamicObject(2938, -2478.7998046875, -2428.7998046875, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2481.3000488281, -2418.8000488281, -28.5, 0, 0, 0);
	CreateDynamicObject(2904, -2480.1000976563, -2420.6000976563, -29.799999237061, 0, 0, 0);
	CreateDynamicObject(2904, -2480.1999511719, -2419.3000488281, -31.10000038147, 270.55883789063, 333.43530273438, 332.43640136719);
	CreateDynamicObject(2904, -2480, -2419.3999023438, -28.5, 271.50012207031, 0, 268.75);
	CreateDynamicObject(2938, -2484.3000488281, -2460.6000976563, -29.700000762939, 0, 0, 269.75);
	CreateDynamicObject(3095, -2492.69921875, -2447.3994140625, -35.200000762939, 0, 90.499877929688, 91.746826171875);
	CreateDynamicObject(3095, -2492.6999511719, -2443.3000488281, -35.099998474121, 0, 90.500061035156, 90.249877929688);
	CreateDynamicObject(3095, -2492.6999511719, -2439.3999023438, -35.099998474121, 0, 90.500061035156, 90.499877929688);
	CreateDynamicObject(3095, -2492.6999511719, -2435.3999023438, -35.099998474121, 0, 90.500061035156, 90.499877929688);
	CreateDynamicObject(3095, -2492.6999511719, -2446.3999023438, -31.10000038147, 0, 0, 0.25);
	CreateDynamicObject(3095, -2492.6999511719, -2437.3999023438, -31.10000038147, 0, 0, 0.2471923828125);
	CreateDynamicObject(3095, -2492.6999511719, -2428.3999023438, -31.10000038147, 0, 0, 0.2471923828125);
	CreateDynamicObject(3095, -2492.6999511719, -2419.8999023438, -31.10000038147, 0, 0, 0.2471923828125);
	CreateDynamicObject(14883, -2488.3000488281, -2439, -33.099998474121, 0, 0, 0);
	CreateDynamicObject(14883, -2488.2998046875, -2431.099609375, -33.099998474121, 0, 0, 0);
	CreateDynamicObject(3095, -2492.8000488281, -2431.5, -35.099998474121, 0, 90.500061035156, 90.749877929688);
	CreateDynamicObject(3095, -2492.69921875, -2427.5, -35.099998474121, 0, 90.500061035156, 90.741577148438);
	CreateDynamicObject(14883, -2488.3000488281, -2423.1000976563, -33.099998474121, 0, 0, 0);
	CreateDynamicObject(3095, -2492.8000488281, -2423.5, -35.099998474121, 0, 90.499877929688, 90.7470703125);
	CreateDynamicObject(3095, -2492.8000488281, -2419.5, -35.099998474121, 0, 90.499877929688, 90.7470703125);
	CreateDynamicObject(2930, -2488.3000488281, -2421.1999511719, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2425.1999511719, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3999023438, -2429.1999511719, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2433.1000976563, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2437.1000976563, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2441, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2445, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3999023438, -2423.5, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3999023438, -2419.5, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.5, -2427.6000976563, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3999023438, -2431.6000976563, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2435.3999023438, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2439.3999023438, -32.5, 0, 0, 0);
	CreateDynamicObject(2930, -2488.3000488281, -2443.1999511719, -32.5, 0, 0, 0);
	CreateDynamicObject(1801, -2492.5, -2444.6999511719, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(1801, -2492.5, -2440.8000488281, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(1801, -2492.5, -2436.8000488281, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(1801, -2492.5, -2432.8999023438, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(1801, -2492.5, -2428.8999023438, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(1801, -2492.5, -2424.8999023438, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(1801, -2492.5, -2420.8999023438, -35.099998474121, 0, 0, 90.247192382813);
	CreateDynamicObject(5820, -2486.8999023438, -2448.8999023438, -35.799999237061, 0, 0, 269.99450683594);
	CreateDynamicObject(3095, -2488.8000488281, -2451.3000488281, -37.400001525879, 0, 90.500061035156, 359.49682617188);
	CreateDynamicObject(14883, -2488.2998046875, -2443, -33, 0, 0, 0);
	CreateDynamicObject(2930, -2488.1999511719, -2447.1000976563, -30.700000762939, 0, 0, 0);
	CreateDynamicObject(2930, -2488.1999511719, -2448.8000488281, -30.700000762939, 0, 0, 0);
	CreateDynamicObject(7891, -2478.6000976563, -2421.1000976563, -29.700000762939, 0, 0, 0);
	CreateDynamicObject(1775, -2479.1999511719, -2450.1999511719, -34.099998474121, 0, 0, 179.5);
	CreateDynamicObject(1432, -2481.6000976563, -2453.1999511719, -32.400001525879, 0, 0, 0);
	CreateDynamicObject(1432, -2481.5, -2456, -32.400001525879, 0, 0, 0);
	CreateDynamicObject(1432, -2484.5, -2455.8999023438, -32.400001525879, 0, 0, 0);
	CreateDynamicObject(1742, -2489.3000488281, -2451.6000976563, -32.400001525879, 0, 0, 2);
	CreateDynamicObject(1744, -2494.1000976563, -2447, -33.200000762939, 0, 0, 182.75006103516);
	CreateDynamicObject(1755, -2495.5, -2446.8999023438, -35.200000762939, 0, 0, 91.25);
	CreateDynamicObject(2046, -2492.8999023438, -2446.6999511719, -34.599998474121, 0, 0, 181.99998474121);
	CreateDynamicObject(2066, -2495.5, -2445.5, -35.200000762939, 0, 0, 92);
	CreateDynamicObject(2161, -2493, -2443.3000488281, -35.099998474121, 0, 0, 0);
	CreateDynamicObject(2915, -2486.8000488281, -2460.1999511719, -32.299999237061, 0, 0, 0);
	CreateDynamicObject(1585, -2494.1999511719, -2446.8000488281, -35.099998474121, 0, 0, 0);
	CreateDynamicObject(14578, -2471, -2416.6999511719, -13.5, 0, 0, 0);
	CreateDynamicObject(1886, -2485.6999511719, -2450.8999023438, -29.799999237061, 5.2499389648438, 0.25103759765625, 181.47703552246);
	CreateDynamicObject(2964, -2489.1999511719, -2457.3000488281, -32.5, 0, 0, 0);
	CreateDynamicObject(3004, -2488.6000976563, -2457.3000488281, -31.60000038147, 357.50146484375, 2.0018920898438, 84.087341308594);
	CreateDynamicObject(3004, -2490.1000976563, -2457.6000976563, -31.60000038147, 356, 0, 278);
	CreateDynamicObject(3003, -2488.8000488281, -2457.6000976563, -31.60000038147, 0, 0, 0);
	CreateDynamicObject(3002, -2488.6000976563, -2457.6000976563, -31.60000038147, 0, 0, 0);
	CreateDynamicObject(3001, -2489.1000976563, -2457.3000488281, -31.60000038147, 0, 0, 0);
	CreateDynamicObject(3000, -2489.3000488281, -2457.6000976563, -31.60000038147, 0, 0, 0);
	CreateDynamicObject(2999, -2488.8000488281, -2457.1000976563, -31.60000038147, 0, 0, 0);
	CreateDynamicObject(2998, -2489.6999511719, -2457, -31.60000038147, 0, 0, 0);
	CreateDynamicObject(14772, -2493.1999511719, -2443.3999023438, -33.599998474121, 0, 0, 0);
	CreateDynamicObject(1808, -2490.1000976563, -2451.8000488281, -32.5, 0, 0, 1);
	CreateDynamicObject(1828, -2482.6000976563, -2454.6999511719, -32.400001525879, 0, 0, 0);
	CreateDynamicObject(2103, -2494.5, -2446.8000488281, -32.900001525879, 0, 0, 179);
	CreateDynamicObject(2528, -2491.6000976563, -2443.6999511719, -35.200000762939, 0, 0, 0);
	CreateDynamicObject(2528, -2492, -2439.8999023438, -35.200000762939, 0, 0, 0);
	CreateDynamicObject(2528, -2491.5, -2435.8999023438, -35.200000762939, 0, 0, 0);
	CreateDynamicObject(2528, -2491.8999023438, -2432, -35.200000762939, 0, 0, 0);
	CreateDynamicObject(2528, -2492.1999511719, -2428, -35.200000762939, 0, 0, 0);
	CreateDynamicObject(2528, -2491.8999023438, -2424.1000976563, -35.200000762939, 359.75, 0, 0);
	CreateDynamicObject(2528, -2492.1999511719, -2420.1000976563, -35.200000762939, 359.74731445313, 0, 0);
	CreateDynamicObject(11556, -3072, -2587.1000976563, 8.6999998092651, 331.98486328125, 0, 255.99221801758);
	CreateDynamicObject(11556, -3057.5, -2582.1000976563, -4.5999999046326, 357.97634887695, 1.9974975585938, 82.057250976563);
	CreateDynamicObject(8661, -3028.3000488281, -2576.1999511719, 14.199999809265, 0, 0, 355.98999023438);
	CreateDynamicObject(8661, -3029.6999511719, -2595.5, 14.300000190735, 0, 0, 355.98999023438);
	CreateDynamicObject(8661, -3053.6000976563, -2584.5, 14.199999809265, 0, 0, 266.48999023438);
	CreateDynamicObject(16111, -3069.1000976563, -2570.8999023438, 7.0999999046326, 0, 10, 29.985107421875);
	CreateDynamicObject(11556, -3061.1000976563, -2635.3999023438, 11.800000190735, 351.98547363281, 2.0159912109375, 336.27307128906);
	CreateDynamicObject(11556, -3070, -2581.1999511719, 19.799999237061, 332.00134277344, 357.73132324219, 256.92590332031);
	CreateDynamicObject(3550, -3011.3000488281, -2593.1999511719, 16.700000762939, 0, 0, 275.73352050781);
	CreateDynamicObject(3550, -3008.1000976563, -2589.6999511719, 16.700000762939, 0, 359.5, 6.4835205078125);
	CreateDynamicObject(3550, -3017.1000976563, -2600.8000488281, 16.60000038147, 0, 0, 268.48352050781);
	CreateDynamicObject(3550, -3023.1000976563, -2600.6000976563, 16.60000038147, 0, 0, 268.47839355469);
	CreateDynamicObject(3550, -3029.1000976563, -2600.3999023438, 16.60000038147, 0, 0, 268.47839355469);
	CreateDynamicObject(3550, -3035.1000976563, -2600.1999511719, 16.60000038147, 0, 0, 268.47839355469);
	CreateDynamicObject(3550, -3041.1000976563, -2600, 16.60000038147, 0, 0, 268.47839355469);
	CreateDynamicObject(3550, -3046.3000488281, -2597.6000976563, 16.5, 0, 0, 221.22845458984);
	CreateDynamicObject(3550, -3048.1000976563, -2592.1000976563, 16.60000038147, 0, 0, 179.22314453125);
	CreateDynamicObject(3550, -3048, -2586.1000976563, 16.60000038147, 0, 0, 179.21997070313);
	CreateDynamicObject(3550, -3047.8999023438, -2580.1000976563, 16.60000038147, 0, 0, 179.21997070313);
	CreateDynamicObject(3550, -3047.8000488281, -2574.1000976563, 16.60000038147, 0, 0, 179.21997070313);
	CreateDynamicObject(3550, -3044.3000488281, -2570.6999511719, 16.700000762939, 0, 0, 93.219970703125);
	CreateDynamicObject(3550, -3038.3000488281, -2570.3999023438, 16.799999237061, 0, 0, 93.218994140625);
	CreateDynamicObject(3550, -3032.3000488281, -2570.1000976563, 16.799999237061, 0, 0, 93.218994140625);
	CreateDynamicObject(3550, -3026.3999023438, -2569.8000488281, 16.799999237061, 0, 0, 93.218994140625);
	CreateDynamicObject(3550, -3020.5, -2569.3999023438, 16.700000762939, 0, 0, 96.468994140625);
	CreateDynamicObject(3550, -3014.6000976563, -2568.8999023438, 16.700000762939, 0, 0, 93.218994140625);
	CreateDynamicObject(3550, -3011, -2572.1000976563, 16.700000762939, 0, 0, 9.468994140625);
	CreateDynamicObject(3550, -3010, -2577.8999023438, 16.700000762939, 0, 0, 9.4647216796875);
	CreateDynamicObject(3550, -3009, -2583.8000488281, 16.700000762939, 0, 0, 9.4647216796875);
	CreateDynamicObject(3550, -3014.1999511719, -2590.3000488281, 16.700000762939, 0, 0.24462890625, 6.98193359375);
	CreateDynamicObject(3550, -3015.1000976563, -2584.3999023438, 16.799999237061, 0, 0, 8.9647216796875);
	CreateDynamicObject(3550, -3016, -2578.5, 16.700000762939, 0, 0, 8.9593505859375);
	CreateDynamicObject(6965, -3031, -2586.3000488281, 16.700000762939, 0, 0, 1.75);
	CreateDynamicObject(7916, -2937.6999511719, -2612.3000488281, 13.699999809265, 0, 4, 94);
	CreateDynamicObject(14814, -2492.1000976563, -2414.3999023438, -31.200000762939, 0, 0, 270);
	CreateDynamicObject(5820, -2482.8999023438, -2419.6000976563, -35.799999237061, 0, 0, 178.24444580078);
	CreateDynamicObject(18553, -2485.6000976563, -2418.3999023438, -31.10000038147, 0, 0, 270.75);
	CreateDynamicObject(7891, -2484.1000976563, -2418.6000976563, -27.799999237061, 0, 0, 270);
	CreateDynamicObject(18553, -2485.3999023438, -2415.1000976563, -31.60000038147, 0, 0, 267.4970703125);
	CreateDynamicObject(7891, -2486, -2415.1999511719, -28.39999961853, 0, 0, 268.49450683594);
	CreateDynamicObject(18553, -2500.5, -2412.3000488281, -31.60000038147, 0, 0, 179.4951171875);
	CreateDynamicObject(14744, -2501.6999511719, -2412.6999511719, -31.10000038147, 0, 0, 90);
	CreateDynamicObject(18553, -2500.8999023438, -2412.3999023438, -31.60000038147, 0, 0, 178.24462890625);
	CreateDynamicObject(3095, -2504.3999023438, -2416.1999511719, -36.599998474121, 0.013092041015625, 89.249938964844, 179.24163818359);
	CreateDynamicObject(2959, -2504.3999023438, -2411.6999511719, -32.900001525879, 0, 0, 1);
	CreateDynamicObject(3095, -2504.3000488281, -2416.1999511719, -26.39999961853, 0.010986328125, 89.24755859375, 178.23626708984);
	CreateDynamicObject(2343, -2506, -2412.3999023438, -32.400001525879, 0, 0, 2);
	CreateDynamicObject(3095, -2504.1999511719, -2410.1999511719, -25.89999961853, 0.0054931640625, 89.247497558594, 180.23114013672);
	CreateDynamicObject(1649, -2504.5, -2413.8000488281, -30.700000762939, 0, 0, 89.25);
	CreateDynamicObject(14881, -2489.3999023438, -2402.1000976563, -30.89999961853, 0, 0, 359.25);
	CreateDynamicObject(2987, -2485.6999511719, -2410.1999511719, -31.700000762939, 0, 0, 0);
	CreateDynamicObject(2986, -2470.8000488281, -2437.5, -37.5, 0.10403442382813, 89.257080078125, 88.750671386719);
	CreateDynamicObject(1241, -2485.6999511719, -2410.1999511719, -30.299999237061, 0, 0, 0);
	CreateDynamicObject(1247, -2485.5, -2418.6000976563, -29.700000762939, 0, 0, 0);
	CreateDynamicObject(1254, -2500.5, -2412.3000488281, -30, 0, 0, 91.5);
	CreateDynamicObject(14603, -2512.8000488281, -2433.8000488281, -31.299999237061, 0, 0, 90.75);
	CreateDynamicObject(18553, -2505.1000976563, -2434.6000976563, -31.200000762939, 0, 0, 0);
	CreateDynamicObject(18553, -2505.1000976563, -2431.5, -31.200000762939, 0, 0, 0);
	CreateDynamicObject(18553, -2505, -2437.8999023438, -31.200000762939, 0, 0, 0);
	CreateDynamicObject(18553, -2508.1999511719, -2434.6999511719, -31.799999237061, 0, 0, 0);
	CreateDynamicObject(1963, -2509.5, -2440.8000488281, -32.700000762939, 0, 0, 0);
	CreateDynamicObject(1999, -2514.1999511719, -2436.1999511719, -33.099998474121, 0, 0, 0);
	CreateDynamicObject(2169, -2514.3000488281, -2441, -33.099998474121, 0, 0, 91.499969482422);
	CreateDynamicObject(2172, -2509.8999023438, -2426.6999511719, -33.099998474121, 0, 0, 1);
	CreateDynamicObject(2356, -2509.1999511719, -2427.5, -33.099998474121, 0, 0, 0);
	CreateDynamicObject(2724, -2513.5, -2436.6999511719, -32.599998474121, 0, 0, 181.75);
	CreateDynamicObject(11631, -2514, -2434.5, -31.799999237061, 0, 0, 90.75);
	CreateDynamicObject(1671, -2513.5, -2434.6999511719, -32.599998474121, 0, 0, 209.99996948242);
	CreateDynamicObject(1337, -2508.8000488281, -2440.3000488281, -32.299999237061, 85.528564453125, 153.40710449219, 204.52307128906);
	CreateDynamicObject(1337, -2509.6000976563, -2440.3999023438, -32.299999237061, 84.593292236328, 326.25918579102, 9.622802734375);
	CreateDynamicObject(1337, -2510.3999023438, -2441, -32.299999237061, 79.582916259766, 226.21060180664, 134.26531982422);
	CreateDynamicObject(1337, -2509.8000488281, -2440.8999023438, -32.299999237061, 84.166198730469, 313.18853759766, 178.66345214844);
	CreateDynamicObject(1337, -2508.8000488281, -2440.8999023438, -32.299999237061, 80.1064453125, 312.73571777344, 157.08618164063);
	CreateDynamicObject(1337, -2510.3999023438, -2440.6999511719, -32.299999237061, 0, 265.49981689453, 0);
	CreateDynamicObject(1337, -2509, -2441.1999511719, -31.799999237061, 329.85595703125, 305.14611816406, 91.999420166016);
	CreateDynamicObject(1337, -2509.6999511719, -2441.3000488281, -32.099998474121, 13.749877929688, 359.74261474609, 359.31118774414);
	CreateDynamicObject(1337, -2509.1000976563, -2440.5, -32.299999237061, 85.999969482422, 0, 303);
	CreateDynamicObject(1318, -2500.8999023438, -2434.3999023438, -31.700000762939, 0, 0, 0);
	CreateDynamicObject(1318, -2508.6000976563, -2434.6999511719, -32.299999237061, 0, 0, 0);
	CreateDynamicObject(1318, -2485.6999511719, -2418.8000488281, -31.5, 0, 0, 271);
	CreateDynamicObject(1318, -2485.6999511719, -2410.5, -32.200000762939, 0, 0, 270.99975585938);
	CreateDynamicObject(1318, -2485.3999023438, -2414.6000976563, -32.099998474121, 0, 0, 270.99975585938);
	CreateDynamicObject(1318, -2485.8000488281, -2409.8999023438, -32.200000762939, 0, 0, 270.99975585938);
	CreateDynamicObject(1318, -2500.1999511719, -2412.3000488281, -32.099998474121, 0, 0, 184.2497253418);
	CreateDynamicObject(1318, -2501.3999023438, -2412.3999023438, -32, 0, 0, 182.99621582031);
	CreateDynamicObject(16640, -2463.6999511719, -2425, -39.700000762939, 0, 0, 179);
	CreateDynamicObject(2929, -2456.5, -2418, -41.299999237061, 0, 0, 269.5);
	CreateDynamicObject(2929, -2456.5, -2422.1000976563, -41.299999237061, 0, 0, 89.74462890625);
	CreateDynamicObject(1318, -2457, -2420, -42.200000762939, 0, 0, 0);
	CreateDynamicObject(6976, -2893.2263183594, -2622.3542480469, -5.7500033378601, 0, 0, 273.99816894531);
	CreateDynamicObject(1698, -2892.4873046875, -2632.74609375, 0.52500003576279, 0, 0, 0);
	CreateDynamicObject(1698, -2892.46875, -2629.6826171875, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2891.412109375, -2632.7578125, 0.4750000834465, 0, 0, 0);
	CreateDynamicObject(1698, -2891.4326171875, -2629.662109375, 0.45000004768372, 0, 0, 0);
	CreateDynamicObject(1698, -2892.5241699219, -2626.6418457031, 0, 0, 0, 0);
	CreateDynamicObject(1698, -2891.4819335938, -2626.7817382813, 0, 0, 0, 0);
	CreateDynamicObject(1698, -2890.1708984375, -2632.75390625, 0.47500005364418, 0, 0, 0);
	CreateDynamicObject(1698, -2889.2744140625, -2632.736328125, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2888.203125, -2632.740234375, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2888.1982421875, -2629.541015625, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2889.1943359375, -2629.560546875, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2890.21484375, -2629.580078125, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2890.275390625, -2626.7578125, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2889.0263671875, -2626.73046875, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(1698, -2888.1494140625, -2626.708984375, 0.50000005960464, 0, 0, 0);
	CreateDynamicObject(2933, -2895.4453125, -2629.8625488281, 1.1288114786148, 0, 0, 276.24523925781);
	CreateDynamicObject(2933, -2894.5324707031, -2638.1848144531, 1.058811545372, 0, 0, 276.240234375);
	CreateDynamicObject(2933, -2894.0942382813, -2639.4125976563, 1.1588114500046, 0, 0, 276.240234375);
	CreateDynamicObject(3049, -2893.892578125, -2640.9345703125, 0, 0, 0, 0);
	CreateDynamicObject(3049, -2894.9936523438, -2630.0251464844, 5.2000026702881, 0, 0, 277.75);
	CreateDynamicObject(3049, -2894.4660644531, -2634.2573242188, 5.2000026702881, 0, 0, 277.74536132813);
	CreateDynamicObject(3049, -2893.8349609375, -2638.4580078125, 5.2000026702881, 0, 0, 277.74536132813);
	CreateDynamicObject(3036, -2901.0817871094, -2653.4243164063, 0, 0, 0, 0);
	CreateDynamicObject(1337, -2891.7119140625, -2623.2919921875, -0.91958069801331, 0, 0, 0);
	CreateDynamicObject(980, -2885.9904785156, -2623.9809570313, -1.849998831749, 0, 0, 3.25);
	CreateDynamicObject(980, -2880.0673828125, -2629.2663574219, -1.7999962568283, 0, 0, 272.75);
	CreateDynamicObject(980, -2885.521484375, -2635.5642089844, -1.7999962568283, 0, 0, 186.24658203125);
	CreateDynamicObject(980, -2772.8842773438, -2612.2399902344, -2.4396190643311, 0, 0, 18.75);
	CreateDynamicObject(980, -2771.1767578125, -2619.216796875, -2.3146185874939, 0, 0, 18.748168945313);
	CreateDynamicObject(980, -2776.6977539063, -2618.4829101563, -2.4896192550659, 0, 0, 286.74816894531);
	CreateDynamicObject(7419, -2715.6411132813, -2509.3759765625, -3.7156667709351, 0, 0, 10);
	//--------------------------------교도소2
	CreateDynamicObject(13657, 2020.0888671875, -2344.3515625, 8541.654296875, 0, 0, 0);
	CreateDynamicObject(8947, 2082.8137207031, -2297.109375, 8541.486328125, 0, 0, 0);
	CreateDynamicObject(8947, 2082.8046875, -2297.1000976563, 8547.5927734375, 0, 0, 0);
	CreateDynamicObject(8947, 2082.7939453125, -2297.1008300781, 8553.69921875, 0, 0, 0);
	CreateDynamicObject(8947, 2082.7448730469, -2297.0837402344, 8559.8056640625, 0, 0, 0);
	CreateDynamicObject(6295, 2077.3952636719, -2325.8596191406, 8541.5146484375, 0, 0, 27.5);
	CreateDynamicObject(8947, 2061.9367675781, -2304.59765625, 8541.486328125, 0, 0, 46);
	CreateDynamicObject(8947, 2061.9833984375, -2304.5791015625, 8547.5927734375, 0, 0, 45.741577148438);
	CreateDynamicObject(8947, 2062.0415039063, -2304.5258789063, 8553.69921875, 0, 0, 45.5);
	CreateDynamicObject(8947, 2061.9650878906, -2304.537109375, 8559.8056640625, 0, 0, 46);
	CreateDynamicObject(8947, 2103.1740722656, -2303.6608886719, 8541.486328125, 0, 0, 318);
	CreateDynamicObject(8947, 2103.1611328125, -2303.6813964844, 8547.5927734375, 0, 0, 317.99780273438);
	CreateDynamicObject(8947, 2103.1579589844, -2303.6892089844, 8553.69921875, 0, 0, 317.99780273438);
	CreateDynamicObject(8947, 2103.1579589844, -2303.7009277344, 8559.8056640625, 0, 0, 317.99780273438);
	CreateDynamicObject(8947, 2112.96875, -2324.6420898438, 8541.486328125, 0, 0, 272);
	CreateDynamicObject(8947, 2112.794921875, -2324.7978515625, 8547.5927734375, 0, 0, 271.99951171875);
	CreateDynamicObject(8947, 2112.7731933594, -2324.8410644531, 8553.69921875, 0, 0, 272);
	CreateDynamicObject(8947, 2112.7177734375, -2324.8515625, 8559.8056640625, 0, 0, 271.99951171875);
	CreateDynamicObject(8947, 2106.6337890625, -2345.8037109375, 8541.486328125, 0, 0, 231.99951171875);
	CreateDynamicObject(8947, 2106.5512695313, -2345.8562011719, 8547.5927734375, 0, 0, 231.49731445313);
	CreateDynamicObject(8947, 2106.5930175781, -2345.8552246094, 8553.69921875, 0, 0, 231.49731445313);
	CreateDynamicObject(8947, 2106.5900878906, -2345.9157714844, 8559.8056640625, 0, 0, 231.74731445313);
	CreateDynamicObject(8947, 2083.8400878906, -2356.2770996094, 8541.486328125, 0, 0, 171.99731445313);
	CreateDynamicObject(8947, 2083.8347167969, -2356.2702636719, 8547.5927734375, 0, 0, 171.99597167969);
	CreateDynamicObject(8947, 2083.8234863281, -2356.2531738281, 8553.69921875, 0, 0, 171.99597167969);
	CreateDynamicObject(8947, 2083.8229980469, -2356.2517089844, 8559.8056640625, 0, 0, 171.99597167969);
	CreateDynamicObject(986, 2070.4814453125, -2313.2314453125, 8556.720703125, 0, 0, 45.7470703125);
	CreateDynamicObject(986, 2070.5314941406, -2313.2502441406, 8550.646484375, 0, 0, 45.75);
	CreateDynamicObject(986, 2070.5551757813, -2313.283203125, 8544.5400390625, 0, 0, 46);
	CreateDynamicObject(986, 2082.5302734375, -2309.326171875, 8550.646484375, 0, 0, 0);
	CreateDynamicObject(986, 2082.556640625, -2309.3225097656, 8544.5400390625, 0, 0, 0);
	CreateDynamicObject(986, 2082.5495605469, -2309.3098144531, 8556.7529296875, 0, 0, 0);
	CreateDynamicObject(986, 2094.8603515625, -2312.6108398438, 8556.7529296875, 0, 0, 318);
	CreateDynamicObject(986, 2094.8312988281, -2312.6335449219, 8550.646484375, 0, 0, 318);
	CreateDynamicObject(986, 2100.5754394531, -2325.060546875, 8556.7529296875, 0, 0, 272);
	CreateDynamicObject(986, 2100.5620117188, -2324.9997558594, 8550.646484375, 0, 0, 272);
	CreateDynamicObject(986, 2100.7824707031, -2325.0122070313, 8544.5400390625, 0, 0, 272);
	CreateDynamicObject(986, 2096.8784179688, -2338.5390625, 8556.7529296875, 0, 0, 231.75);
	CreateDynamicObject(986, 2096.9274902344, -2338.3991699219, 8550.646484375, 0, 0, 231.5);
	CreateDynamicObject(986, 2096.9025878906, -2338.4694824219, 8544.6904296875, 0, 0, 231.75);
	CreateDynamicObject(986, 2085.6494140625, -2344.2763671875, 8556.7529296875, 0, 0, 173);
	CreateDynamicObject(986, 2085.72265625, -2344.275390625, 8550.646484375, 0, 0, 173.25);
	CreateDynamicObject(986, 2085.6564941406, -2344.3015136719, 8544.5400390625, 0, 0, 172.25);
	CreateDynamicObject(13657, 2115.7668457031, -2255.9948730469, 8563.814453125, 0, 180, 91.249816894531);
	CreateDynamicObject(986, 2094.8564453125, -2312.5927734375, 8544.5400390625, 0, 0, 317.99926757813);
	CreateDynamicObject(1653, 2070.5283203125, -2314.2080078125, 8544.470703125, 270, 175.869140625, 221.62170410156);
	CreateDynamicObject(5821, 2083.8120117188, -2331.9650878906, 8544.30078125, 0, 0, 90);
	CreateDynamicObject(5821, 2084.66015625, -2320.6672363281, 8553.8984375, 0, 0, 192);
	CreateDynamicObject(10244, 2078.9177246094, -2321.126953125, 8558.5361328125, 0, 0, 214.25);
	CreateDynamicObject(13657, 2135.1569824219, -2295.8833007813, 8556.6240234375, 0, 193.99995422363, 43.999908447266);
	CreateDynamicObject(13657, 2126.5261230469, -2384.6411132813, 8532.7607421875, 358.56146240234, 224.01745605469, 318.8896484375);
	CreateDynamicObject(13657, 2052.9255371094, -2323.3337402344, 8521.4326171875, 0, 260, 200.5);
	CreateDynamicObject(991, 2047.6510009766, -2300.7336425781, 8539.634765625, 0, 0, 194);
	CreateDynamicObject(1653, 2081.1850585938, -2309.8127441406, 8544.4599609375, 270.25024414063, 90.000579833984, 87.997863769531);
	CreateDynamicObject(1653, 2092.234375, -2309.9301757813, 8544.2763671875, 272.82806396484, 134.98336791992, 135.76403808594);
	CreateDynamicObject(1653, 2094.8530273438, -2313.4797363281, 8544.3828125, 270.75012207031, 269.99981689453, 227.99444580078);
	CreateDynamicObject(1653, 2097.0249023438, -2337.2058105469, 8544.2119140625, 270, 164.49829101563, 36.24169921875);
	CreateDynamicObject(1653, 2100.052734375, -2323.8454589844, 8544.4521484375, 270, 164.49829101563, 76.489868164063);
	CreateDynamicObject(1653, 2084.7236328125, -2343.4245605469, 8544.1201171875, 270, 176.07202148438, 348.06506347656);
	CreateDynamicObject(1653, 2100.3989257813, -2331.3581542969, 8544.4169921875, 270, 175.89453125, 87.8857421875);
	CreateDynamicObject(1653, 2093.1325683594, -2342.236328125, 8544.2021484375, 271.99996948242, 0, 232.74453735352);
	CreateDynamicObject(3109, 2057.5793457031, -2335.7353515625, 8539.611328125, 0, 10.5, 22);
	CreateDynamicObject(2098, 2057.7124023438, -2334.8452148438, 8540.3662109375, 0, 0, 291);
	CreateDynamicObject(1652, 2075.0871582031, -2309.4948730469, 8550.4140625, 270, 180.00105285645, 226.00109863281);
	CreateDynamicObject(1652, 2085.5048828125, -2309.9914550781, 8550.4296875, 270, 180, 180);
	CreateDynamicObject(1652, 2097.0483398438, -2315.4821777344, 8550.4326171875, 270, 179.99450683594, 137.74658203125);
	CreateDynamicObject(1652, 2100.0661621094, -2328.0866699219, 8550.3408203125, 270, 179.99450683594, 91.746826171875);
	CreateDynamicObject(1652, 2094.17578125, -2340.78125, 8550.287109375, 270, 179.99450683594, 51.992797851563);
	CreateDynamicObject(1652, 2090.9243164063, -2344.25390625, 8550.30078125, 270, 179.99450683594, 352.24377441406);
	CreateDynamicObject(1652, 2090.9226074219, -2344.2033691406, 8556.62109375, 270, 179.99450683594, 352.99682617188);
	CreateDynamicObject(1652, 2096.6286621094, -2337.7534179688, 8556.6025390625, 270, 179.99450683594, 52.243286132813);
	CreateDynamicObject(1652, 2099.8620605469, -2323.8557128906, 8556.634765625, 270, 179.99450683594, 92.493286132813);
	CreateDynamicObject(1652, 2094.1315917969, -2312.8537597656, 8556.6259765625, 270, 179.99450683594, 137.74328613281);
	CreateDynamicObject(1652, 2085.8442382813, -2309.8823242188, 8556.56640625, 270, 179.99450683594, 179.99328613281);
	CreateDynamicObject(1652, 2075.1232910156, -2309.7414550781, 8556.552734375, 270.75012207031, 90.000183105469, 315.24890136719);
	CreateDynamicObject(1653, 2063.052734375, -2322.1223144531, 8539.841796875, 315.52618408203, 268.28131103516, 316.04766845703);
	CreateDynamicObject(2948, 2066.9533691406, -2317.1071777344, 8544.470703125, 0, 0, 314);
	CreateDynamicObject(2948, 2066.9323730469, -2317.0932617188, 8550.408203125, 0, 0, 313.99475097656);
	CreateDynamicObject(2948, 2066.9169921875, -2317.0805664063, 8556.5185546875, 0, 0, 313.99475097656);
	//---------------------------------도구점
	CreateDynamicObject(11312, 1763.6555175781, -1801.7969970703, 773.39617919922, 0, 0, 350);
	CreateDynamicObject(977, 1770.9139404297, -1802.6472167969, 772.78912353516, 0, 0, 270.5);
	CreateDynamicObject(977, 1770.5983886719, -1804.494140625, 772.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1770.2692871094, -1806.4418945313, 772.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1769.96875, -1808.3684082031, 772.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1769.96875, -1808.3681640625, 773.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1770.2227783203, -1806.4715576172, 773.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1770.5246582031, -1804.6479492188, 773.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1770.8521728516, -1802.7750244141, 773.78912353516, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1758.2071533203, -1805.5446777344, 773.73907470703, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1758.6037597656, -1803.6860351563, 773.73907470703, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1758.9935302734, -1801.7489013672, 773.73907470703, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1759.2700195313, -1799.8806152344, 773.71405029297, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1759.26953125, -1799.8798828125, 772.63800048828, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1758.8951416016, -1801.7467041016, 772.63800048828, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1758.5911865234, -1803.6475830078, 772.63800048828, 0, 0, 270.49987792969);
	CreateDynamicObject(977, 1758.1635742188, -1805.5324707031, 772.63800048828, 0, 0, 270.49987792969);
	CreateDynamicObject(11631, 1758.5626220703, -1808.5020751953, 772.43115234375, 0, 0, 77.5);
	CreateDynamicObject(2184, 1764.2109375, -1803.8236083984, 771.18524169922, 0, 0, 260.75);
	CreateDynamicObject(2181, 1759.1580810547, -1804.2838134766, 771.18524169922, 0, 0, 76);
	CreateDynamicObject(14455, 1764.3952636719, -1799.9956054688, 772.63232421875, 0, 0, 171.25);
	CreateDynamicObject(14455, 1769.8427734375, -1800.8852539063, 772.63232421875, 0, 0, 171.24938964844);
	CreateDynamicObject(3061, 1769.8681640625, -1806.6824951172, 772.37420654297, 0, 0, 349.5);
	CreateDynamicObject(2133, 1761.1680908203, -1809.5671386719, 771.18524169922, 0, 0, 167.25);
	CreateDynamicObject(2133, 1763.5777587891, -1809.9398193359, 771.18524169922, 0, 0, 167.24487304688);
	//---------------------운전면허소
	CreateDynamicObject(1999, 1164.9440917969, 1352.8569335938, 9.921875, 0, 0, 88.5);
	CreateDynamicObject(1999, 1164.8961181641, 1350.9887695313, 9.921875, 0, 0, 88.494873046875);
	CreateDynamicObject(1999, 1164.8103027344, 1349.2159423828, 9.921875, 0, 0, 88.494873046875);
	CreateDynamicObject(2909, 1105.6047363281, 1358.09375, 11.126722335815, 0, 0, 0.25);
	CreateDynamicObject(2909, 1113.0788574219, 1357.9606933594, 11.126722335815, 0, 0, 0.4996337890625);
	CreateDynamicObject(2909, 1120.5576171875, 1357.9539794922, 11.126722335815, 0, 0, 359.74963378906);
	CreateDynamicObject(2909, 1127.8248291016, 1357.8972167969, 11.126722335815, 0, 0, 359.49987792969);
	CreateDynamicObject(4505, 1109.5192871094, 1213.7423095703, 12.595319747925, 0, 0, 75.75);
	CreateDynamicObject(968, 1141.7731933594, 1214.4691162109, 10.420303344727, 0, 0, 93.25);
	CreateDynamicObject(966, 1141.7689208984, 1214.4931640625, 9.8203125, 0, 0, 90);
	CreateDynamicObject(983, 1143.4052734375, 1217.5335693359, 10.503867149353, 0, 0, 331.5);
	CreateDynamicObject(983, 1154.2064208984, 1206.4290771484, 10.503867149353, 0, 0, 313.24597167969);
	CreateDynamicObject(983, 1142.2934570313, 1204.2875976563, 10.503867149353, 0, 0, 8.25);
	CreateDynamicObject(983, 1146.5020751953, 1222.0145263672, 10.503867149353, 0, 0, 318.24523925781);
	CreateDynamicObject(983, 1149.6044921875, 1226.3939208984, 10.503867149353, 0, 0, 329.74096679688);
	CreateDynamicObject(983, 1152.7220458984, 1230.3656005859, 10.503867149353, 0, 0, 315.73815917969);
	CreateDynamicObject(983, 1156.9584960938, 1233.20703125, 10.503867149353, 0, 0, 291.73608398438);
	CreateDynamicObject(983, 1161.7779541016, 1235.6800537109, 10.503867149353, 0, 0, 302.23095703125);
	CreateDynamicObject(983, 1165.9835205078, 1239.7023925781, 10.503867149353, 0, 0, 326.97839355469);
	CreateDynamicObject(983, 1167.8381347656, 1244.6540527344, 10.503867149353, 0, 0, 353.47509765625);
	CreateDynamicObject(983, 1167.837890625, 1244.6533203125, 10.503867149353, 0, 0, 353.47412109375);
	CreateDynamicObject(983, 1168.5875244141, 1249.052734375, 10.503867149353, 0, 0, 344);
	CreateDynamicObject(983, 1169.5679931641, 1254.1024169922, 10.503867149353, 0, 0, 350.24841308594);
	CreateDynamicObject(983, 1170.0808105469, 1260.0928955078, 10.503867149353, 0, 0, 358.244140625);
	CreateDynamicObject(983, 1170.0056152344, 1264.5711669922, 10.503867149353, 0, 0, 2.2421875);
	CreateDynamicObject(983, 1169.6938476563, 1270.2783203125, 10.503867149353, 0, 0, 3.9912109375);
	CreateDynamicObject(983, 1169.2934570313, 1276.3413085938, 10.503867149353, 0, 0, 3.988037109375);
	CreateDynamicObject(983, 1168.2670898438, 1281.4145507813, 10.503867149353, 0, 0, 19.988037109375);
	CreateDynamicObject(983, 1163.1921386719, 1294.9774169922, 10.503867149353, 0, 0, 19.984130859375);
	CreateDynamicObject(4509, 1169.5877685547, 1305.34375, 12.495312690735, 0, 0, 296);
	CreateDynamicObject(984, 1162.0708007813, 1286.5054931641, 10.456992149353, 0, 0, 64);
	CreateDynamicObject(984, 1158.5079345703, 1294.4370117188, 10.456992149353, 0, 0, 67.745361328125);
	CreateDynamicObject(984, 1149.7979736328, 1300.7655029297, 10.456992149353, 0, 0, 39.74169921875);
	CreateDynamicObject(984, 1151.92578125, 1293.0451660156, 10.456992149353, 0, 0, 47.737548828125);
	CreateDynamicObject(984, 1143.8323974609, 1301.4986572266, 10.456992149353, 0, 0, 37.735595703125);
	CreateDynamicObject(984, 1138.5224609375, 1311.97265625, 10.456992149353, 0, 0, 15.732543945313);
	CreateDynamicObject(984, 1144.0905761719, 1311.6374511719, 10.456992149353, 0, 0, 15.732421875);
	CreateDynamicObject(984, 1141.7075195313, 1322.9151611328, 10.456992149353, 0, 0, 7.732421875);
	CreateDynamicObject(984, 1136.1079101563, 1323.3277587891, 10.456992149353, 0, 0, 7.7288818359375);
	CreateDynamicObject(4505, 1138.7436523438, 1337.8352050781, 12.520301818848, 0, 0, 267.25);
	//---------------------------공항-----------
	CreateDynamicObject(3971, 1681, -2320.1999511719, -20.200000762939, 0, 0, 0);
	CreateDynamicObject(7891, 1658.3994140625, -2316.7998046875, -22.200000762939, 0, 0, 0);
	CreateDynamicObject(7891, 1712.3994140625, -2316.69921875, -22, 0, 0, 0);
	CreateDynamicObject(3034, 1677.3994140625, -2330.19921875, -20.700000762939, 0, 0, 270);
	CreateDynamicObject(2878, 1707.2998046875, -2327.099609375, -21.60000038147, 0, 0, 179.99450683594);
	CreateDynamicObject(2878, 1709.7998046875, -2327.099609375, -21.60000038147, 0, 0, 181.99951171875);
	CreateDynamicObject(3969, 1673.69921875, -2310.3994140625, -21.799999237061, 0, 0, 0);
	CreateDynamicObject(1572, 1694.7998046875, -2325.69921875, -22.200000762939, 0, 0, 0);
	CreateDynamicObject(1572, 1696, -2325.3999023438, -22.200000762939, 0, 0, 16);
	CreateDynamicObject(1572, 1697.0999755859, -2325.6999511719, -22.200000762939, 0, 0, 0);
	CreateDynamicObject(1572, 1698, -2324.7998046875, -22.200000762939, 0, 0, 0);
	CreateDynamicObject(3816, 1685.7998046875, -2325.2998046875, -14.199999809265, 0, 0, 0);
	CreateDynamicObject(3037, 1677.2998046875, -2304.8994140625, -22.799999237061, 0, 0, 90);
	CreateDynamicObject(3037, 1669.8994140625, -2304.8994140625, -22.5, 0, 0, 270);
	CreateDynamicObject(8378, 1712.69921875, -2314.69921875, -22, 0, 0, 270);
	CreateDynamicObject(8378, 1657.7998046875, -2319, -26.10000038147, 0, 0, 90);
	CreateDynamicObject(10671, 1693.3994140625, -2332.8994140625, -20.89999961853, 0, 0, 357.98950195313);
	CreateDynamicObject(10671, 1699.2998046875, -2327.099609375, -20.89999961853, 0, 0, 267.99499511719);
	CreateDynamicObject(10671, 1663.5, -2327, -20.89999961853, 0, 0, 90);
	CreateDynamicObject(10575, 1708.69921875, -2327.19921875, -21, 0, 0, 270);
	CreateDynamicObject(10575, 1708.69921875, -2304, -21, 0, 0, 91.994018554688);
	CreateDynamicObject(7930, 1701, -2304.8000488281, -22, 0, 0, 90);
	CreateDynamicObject(7930, 1692.8994140625, -2304.7998046875, -22, 0, 0, 90);
	CreateDynamicObject(7930, 1685.7998046875, -2303.8994140625, -22, 0, 0, 90);
	CreateDynamicObject(1966, 1661.3000488281, -2304.1000976563, -20.700000762939, 0, 0, 0);
	CreateDynamicObject(1651, 1677.5, -2328.2998046875, -21.299999237061, 0, 0, 0);
	CreateDynamicObject(1566, 1676, -2326.8994140625, -21.200000762939, 0, 0, 0);
	CreateDynamicObject(1566, 1674.69921875, -2326.8994140625, -21.200000762939, 0, 0, 0);
	CreateDynamicObject(1651, 1677.5, -2331.099609375, -21.299999237061, 0, 0, 0);
	CreateDynamicObject(1651, 1677.5, -2334.8994140625, -21.60000038147, 0, 0, 0);
	CreateDynamicObject(1651, 1677.5, -2332.69921875, -21.60000038147, 0, 0, 0);
	CreateDynamicObject(2773, 1687.3994140625, -2305.3994140625, -22.200000762939, 0, 0, 91.99951171875);
	CreateDynamicObject(2773, 1685.3994140625, -2305.3994140625, -22.200000762939, 0, 0, 87.989501953125);
	CreateDynamicObject(2773, 1683.3994140625, -2305.3994140625, -22.200000762939, 0, 0, 91.99951171875);
	CreateDynamicObject(3034, 1677.599609375, -2330.19921875, -20.89999961853, 0, 0, 90);
	CreateDynamicObject(8247, 1669.3994140625, -2459.5, -12.5, 0, 0, 0);
	CreateDynamicObject(7930, 1658.4000244141, -2317, -21.60000038147, 0, 0, 180);
	CreateDynamicObject(7930, 1712.0999755859, -2317.1000976563, -21.39999961853, 0, 0, 0);
	CreateDynamicObject(2942, 1675.5, -2326.3999023438, -22.10000038147, 0, 0, 180);
	CreateDynamicObject(2942, 1676.8000488281, -2326.3999023438, -22.10000038147, 0, 0, 180);
	CreateDynamicObject(1843, 1669.4000244141, -2328.8999023438, -22.700000762939, 0, 0, 94);
	CreateDynamicObject(1844, 1674.6999511719, -2333.3000488281, -22.700000762939, 0, 0, 180);
	CreateDynamicObject(1885, 1671.5999755859, -2327.3000488281, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(1984, 1675.1999511719, -2329.5, -22.700000762939, 0, 0, 90);
	CreateDynamicObject(1987, 1670.6999511719, -2329.8999023438, -22.700000762939, 0, 0, 182.5);
	CreateDynamicObject(1991, 1671.6999511719, -2329.8999023438, -22.700000762939, 0, 0, 180);
	CreateDynamicObject(2362, 1675.3000488281, -2329.8999023438, -21.799999237061, 0, 0, 268);
	CreateDynamicObject(3851, 1687.599609375, -2336.19921875, -21.299999237061, 0, 0, 270);
	CreateDynamicObject(3851, 1676.3010253906, -2336.1967773438, -21.325002670288, 0, 0, 270);
	CreateDynamicObject(18070, 1670.6999511719, -2334.1000976563, -22.200000762939, 0, 0, 90);
	CreateDynamicObject(2871, 1676.8000488281, -2333.1000976563, -22.799999237061, 0, 0, 182);
	CreateDynamicObject(2775, 1681.8994140625, -2326.5, -19.10000038147, 0, 0, 181.99951171875);
	CreateDynamicObject(2792, 1692.0007324219, -2336.3051757813, -19.625005722046, 0, 0, 0);
	CreateDynamicObject(4996, 1655.8994140625, -2321.599609375, -18.60000038147, 0, 0, 179.99450683594);
	CreateDynamicObject(1726, 1661, -2321.5, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(1726, 1663.5999755859, -2321.5, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(1726, 1661, -2319.3000488281, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(1726, 1663.5999755859, -2319.3000488281, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(1726, 1661, -2317.3000488281, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(1726, 1663.5999755859, -2317.3000488281, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(2229, 1666, -2326.8000488281, -22.700000762939, 0, 0, 180);
	CreateDynamicObject(2229, 1666.3994140625, -2326.7998046875, -22.700000762939, 0, 0, 181.99951171875);
	CreateDynamicObject(2596, 1663.3000488281, -2326.5, -20, 0, 0, 182);
	CreateDynamicObject(3851, 1666.599609375, -2326.8994140625, -21.700000762939, 0, 0, 270);
	CreateDynamicObject(1523, 1673.0999755859, -2327, -22.799999237061, 0, 0, 0);
	CreateDynamicObject(2949, 1671.4000244141, -2327, -24.10000038147, 0, 0, 92);
	CreateDynamicObject(2670, 1683.4000244141, -2309.8000488281, -22.60000038147, 0, 0, 0);
	CreateDynamicObject(2670, 1673.8000488281, -2324.8000488281, -22.60000038147, 0, 0, 0);
	CreateDynamicObject(2674, 1683.5999755859, -2307.6999511719, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(2675, 1673.0999755859, -2324.3000488281, -22.700000762939, 0, 0, 0);
	CreateDynamicObject(3119, 1670.6999511719, -2325.8000488281, -22.39999961853, 0, 0, 0);
	CreateDynamicObject(1444, 1693.5, -2326.5, -21.89999961853, 0, 0, 0);
	CreateDynamicObject(3037, 1677.8963623047, -2336.2751464844, -21, 0, 0, 269.49462890625);
	CreateDynamicObject(3037, 1688.099609375, -2336.2998046875, -21, 0, 0, 270.49438476563);
	CreateDynamicObject(2789, 1658.599609375, -2314.8994140625, -19.799999237061, 0, 0, 90);
	CreateDynamicObject(2790, 1658.5999755859, -2320.1000976563, -19.799999237061, 0, 0, 90);
	CreateDynamicObject(2793, 1688.0107421875, -2336.3232421875, -19.622861862183, 0, 0, 0);
	CreateDynamicObject(2794, 1683.5725097656, -2336.3393554688, -19.63458442688, 0, 0, 0.2471923828125);
	CreateDynamicObject(2795, 1679.4493408203, -2336.3364257813, -19.634721755981, 0, 0, 359.5);
	CreateDynamicObject(2773, 1689.7023925781, -2329.9006347656, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1681.1843261719, -2330.0302734375, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1681.1976318359, -2334.8212890625, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1681.1878662109, -2332.3508300781, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1685.1094970703, -2334.8845214844, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1685.0850830078, -2332.419921875, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1689.6842041016, -2334.9086914063, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1689.6700439453, -2332.3100585938, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2773, 1685.1086425781, -2329.9943847656, -22.206209182739, 0, 0, 359.98901367188);
	CreateDynamicObject(2944, 1678.3962402344, -2336.1206054688, -21.328742980957, 0, 0, 92);
	CreateDynamicObject(2944, 1682.4636230469, -2336.1743164063, -21.278743743896, 0, 0, 91.99951171875);
	CreateDynamicObject(2944, 1686.8985595703, -2336.1765136719, -21.303743362427, 0, 0, 91.99951171875);
	CreateDynamicObject(2944, 1690.9298095703, -2336.1743164063, -21.303750991821, 0, 0, 91.99951171875);
	//-----------------------------------------------

	CreateDynamicObject(11295, 1345.4074707031, -1810.5207519531, 40.848445892334, 0, 0, 0);
	CreateDynamicObject(3601, 1349.9077148438, -1783.0777587891, 42.839859008789, 0, 0, 0);
	CreateDynamicObject(1362, 1375.7517089844, -1812.5498046875, 35.614109039307, 0, 0, 0);
	CreateDynamicObject(15041, 1368.3465576172, -1838.3280029297, 868.67639160156, 0, 0, 0);
	CreateDynamicObject(2166, 1368.2230224609, -1830.6245117188, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2166, 1368.0927734375, -1832.32421875, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1374.2993164063, -1829.6791992188, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1371.4066162109, -1829.48046875, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1371.3897705078, -1831.5412597656, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1374.2990722656, -1831.7730712891, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1374.3243408203, -1833.7224121094, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1371.4647216797, -1833.4187011719, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2173, 1374.4158935547, -1840.1627197266, 866.98156738281, 0, 0, 0);
	CreateDynamicObject(2174, 1375.001953125, -1842.9451904297, 866.98156738281, 0, 0, 268.25);
	CreateDynamicObject(2174, 1372.6203613281, -1844.9969482422, 866.98156738281, 0, 0, 180);
	CreateDynamicObject(2174, 1370.4711914063, -1841.8059082031, 866.67639160156, 0, 0, 88);
	CreateDynamicObject(2183, 1357.9500732422, -1847.2448730469, 866.67639160156, 0, 0, 0);
	CreateDynamicObject(2207, 1364.6396484375, -1841.4288330078, 866.67639160156, 0, 0, 0);
	CreateDynamicObject(2207, 1356.5302734375, -1835.4796142578, 866.67639160156, 0, 0, 0);
	CreateDynamicObject(2207, 1361.9520263672, -1845.2713623047, 866.67639160156, 0, 0, 0);
	CreateDynamicObject(2207, 1369.8394775391, -1833.1295166016, 866.67639160156, 0, 0, 180);
	CreateDynamicObject(1811, 1365.3033447266, -1839.7967529297, 867.30267333984, 0, 0, 0);
	CreateDynamicObject(1811, 1358.8236083984, -1845.0983886719, 867.30999755859, 0, 0, 86);
	CreateDynamicObject(1811, 1360.5307617188, -1848.3703613281, 867.30267333984, 0, 0, 272);
	CreateDynamicObject(1811, 1358.5260009766, -1848.1723632813, 867.30267333984, 0, 0, 266);
	CreateDynamicObject(1811, 1360.4814453125, -1845.0463867188, 867.30267333984, 0, 0, 88);
	CreateDynamicObject(1811, 1371.42578125, -1834.0714111328, 867.30267333984, 0, 0, 278);
	CreateDynamicObject(1811, 1371.4052734375, -1832.4926757813, 867.30267333984, 0, 0, 270);
	CreateDynamicObject(1811, 1371.5455322266, -1830.1322021484, 867.30267333984, 0, 0, 278);
	CreateDynamicObject(1811, 1374.7965087891, -1830.4586181641, 867.30267333984, 0, 0, 270);
	CreateDynamicObject(1811, 1374.9124755859, -1832.8306884766, 867.30267333984, 0, 0, 0);
	CreateDynamicObject(1811, 1368.7930908203, -1832.2242431641, 867.30267333984, 0, 0, 320);
	CreateDynamicObject(1811, 1368.8865966797, -1830.2956542969, 867.30267333984, 0, 0, 308);
	CreateDynamicObject(1811, 1371.7591552734, -1844.6840820313, 867.30267333984, 0, 0, 92);
	CreateDynamicObject(1811, 1371.2513427734, -1841.1376953125, 867.30267333984, 0, 0, 0);
	CreateDynamicObject(1811, 1374.3977050781, -1844.6613769531, 867.30267333984, 0, 0, 25.5);
	CreateDynamicObject(1622, 1941.3000488281, -1766.1999511719, 17.700000762939, 0, 0, 0);
	CreateDynamicObject(11292, 1947.0999755859, -1794.9000244141, 14, 0, 0, 180);
	CreateDynamicObject(1723, 1946, -1794, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1723, 1948, -1796.5, 12.800000190735, 0, 0, 180);
	CreateDynamicObject(1433, 1947.3000488281, -1795.3000488281, 13, 0, 0, 312);
	CreateDynamicObject(1670, 1947.4000244141, -1794.9000244141, 13.5, 0, 0, 0);
	CreateDynamicObject(1670, 1947.4000244141, -1795.6999511719, 13.5, 0, 0, 180);
	CreateDynamicObject(2008, 1950.6999511719, -1795.5, 12.800000190735, 0, 0, 270);
	CreateDynamicObject(2314, 1943.5999755859, -1796, 12.800000190735, 0, 0, 90);
	CreateDynamicObject(1719, 1943.6999511719, -1794.5, 13.39999961853, 0, 0, 70);
	CreateDynamicObject(1738, 1943.6999511719, -1793.5999755859, 13.39999961853, 0, 0, 0);
	CreateDynamicObject(1748, 1943.4000244141, -1795.1999511719, 13.300000190735, 0, 0, 100);
	CreateDynamicObject(1780, 1950.5999755859, -1794, 13.89999961853, 0, 0, 268.75);
	CreateDynamicObject(1663, 1949.6999511719, -1796.0999755859, 13.300000190735, 0, 0, 110);
	CreateDynamicObject(2612, 1946.0999755859, -1793.5, 14.39999961853, 0, 0, 0);
	CreateDynamicObject(1514, 1950.6999511719, -1795.6999511719, 13.89999961853, 0, 0, 100);
	CreateDynamicObject(1597, 1951.8994140625, -1773.099609375, 15.199999809265, 0, 0, 179.99450683594);
	CreateDynamicObject(1597, 1951.9000244141, -1766.9000244141, 15.199999809265, 0, 0, 180);
	CreateDynamicObject(942, 1938.9000244141, -1795.5999755859, 15, 0, 0, 0);
	CreateDynamicObject(923, 1935.5, -1795.5, 13.39999961853, 0, 0, 260);
	CreateDynamicObject(970, 1948.9000244141, -1761.8000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1951.8000488281, -1780.0999755859, 13.10000038147, 0, 0, 90);
	CreateDynamicObject(970, 1929.5999755859, -1762.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1931.6999511719, -1764.4000244141, 13.10000038147, 0, 0, 270);
	CreateDynamicObject(970, 1925.4000244141, -1762.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1921.19921875, -1762.2998046875, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(1214, 1951.8000488281, -1787.4000244141, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1215, 1951.6999511719, -1782.5, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1215, 1951.6999511719, -1792.1999511719, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1214, 1943.1999511719, -1785.8000488281, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1214, 1947.1999511719, -1787.5999755859, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(970, 1949.5, -1787.5, 12.89999961853, 0, 0, 2.25);
	CreateDynamicObject(970, 1945.0999755859, -1786.8000488281, 12.89999961853, 0, 0, 336);
	CreateDynamicObject(970, 1942.4000244141, -1783.5999755859, 12.89999961853, 0, 0, 290);
	CreateDynamicObject(1214, 1941.5999755859, -1781.1999511719, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(978, 1936.0999755859, -1776, 13.199999809265, 0, 0, 90.25);
	CreateDynamicObject(979, 1936.1999511719, -1776, 13.199999809265, 0, 0, 270.25);
	CreateDynamicObject(3096, 1934.3000488281, -1774.3000488281, 17.10000038147, 0, 0, 0);
	CreateDynamicObject(3877, 1941.5999755859, -1763.9000244141, 14.10000038147, 0, 0, 0);
	CreateDynamicObject(7017, 1914.8000488281, -1797.4000244141, 13.39999961853, 0, 0, 0);
	CreateDynamicObject(7016, 1872.6999511719, -1791.6999511719, 13.5, 0, 0, 90);
	CreateDynamicObject(1318, 1911.5999755859, -1763.0999755859, 12.39999961853, 0, 278, 270);
	CreateDynamicObject(1318, 1913, -1790, 12.39999961853, 0, 279.99996948242, 330);
	CreateDynamicObject(1318, 1911, -1786, 12.39999961853, 0, 276, 270);
	CreateDynamicObject(1318, 1950.9000244141, -1789.9000244141, 12.39999961853, 0, 271.99996948242, 0);
	CreateDynamicObject(1318, 1950.6999511719, -1784.9000244141, 12.39999961853, 0, 91.999969482422, 0);
	CreateDynamicObject(930, 1928.8000488281, -1782.8000488281, 13.300000190735, 0, 0, 100);
	CreateDynamicObject(923, 1929.4000244141, -1784.5999755859, 13.39999961853, 0, 0, 287.25);
	CreateDynamicObject(942, 1934, -1776.5999755859, 11.199999809265, 0, 0, 270);
	CreateDynamicObject(942, 1929.5, -1780.9000244141, 11.60000038147, 0, 0, 270);
	CreateDynamicObject(1010, 1929.3000488281, -1779, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1010, 1929.3000488281, -1779.4000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(3015, 1929.8000488281, -1782.5, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(3016, 1929.5999755859, -1782, 13, 0, 0, 350);
	CreateDynamicObject(2969, 1930.1999511719, -1779.1999511719, 13, 0, 0, 100);
	CreateDynamicObject(2912, 1929.6999511719, -1780.3000488281, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(2912, 1930, -1781.1999511719, 12.800000190735, 0, 0, 30);
	CreateDynamicObject(3615, 1941.7998046875, -1775.1956787109, 20.712566375732, 0, 0, 0);
	CreateDynamicObject(14759, 1902.5355224609, -1775.2264404297, 470.65371704102, 0, 0, 0);
	CreateDynamicObject(2090, 1893.6705322266, -1782.1130371094, 468.82766723633, 0, 0, 0);
	CreateDynamicObject(2091, 1895.2994384766, -1783.6768798828, 468.89288330078, 0, 0, 182);
	CreateDynamicObject(2099, 1918.6379394531, -1763.314453125, 463.14508056641, 0, 0, 0);
	CreateDynamicObject(2100, 1906.4458007813, -1772.1873779297, 468.82928466797, 0, 0, 0);
	CreateDynamicObject(9818, 1903.8005371094, -1773.4213867188, 470.29040527344, 0, 0, 92);
	CreateDynamicObject(3642, 1921.5185546875, -1778.7379150391, 19.927663803101, 0, 0, 0);
	CreateDynamicObject(14389, -31.700000762939, -1401.8000488281, 848.5, 0, 0, 0);
	CreateDynamicObject(1557, -18.700000762939, -1360.5999755859, 845.29998779297, 0, 0, 90);
	CreateDynamicObject(1557, -18.700000762939, -1357.5999755859, 845.29998779297, 0, 0, 270);
	CreateDynamicObject(14484, -31.69921875, -1401.599609375, 848.5, 0, 0, 0);
	CreateDynamicObject(1523, -21.60000038147, -1364.5999755859, 845.29998779297, 0, 0, 0);
	CreateDynamicObject(1523, -25.5, -1364.5999755859, 845.29998779297, 0, 0, 0);
	CreateDynamicObject(18092, -35.799999237061, -1356.4000244141, 845.70001220703, 0, 0, 219.99572753906);
	CreateDynamicObject(1491, -39.299999237061, -1357.5999755859, 843.5, 0, 0, 0);
	CreateDynamicObject(1723, -31.5, -1356.1999511719, 845.29998779297, 0, 0, 0);
	CreateDynamicObject(1724, -28.89999961853, -1356.1999511719, 845.29998779297, 0, 0, 0);
	CreateDynamicObject(1724, -33.099998474121, -1356.1999511719, 845.29998779297, 0, 0, 0);
	CreateDynamicObject(1742, -27.5, -1361.599609375, 845.29998779297, 0, 0, 229.99328613281);
	CreateDynamicObject(1786, -31.19921875, -1362.5, 845.79998779297, 0, 0, 179.99450683594);
	CreateDynamicObject(14418, -31.5, -1401.7998046875, 848.5, 0, 0, 0);
	CreateDynamicObject(14596, -33.900001525879, -1376.5, 856, 0, 0, 90);
	CreateDynamicObject(14597, -37.400001525879, -1396, 853.09997558594, 0, 0, 90);
	CreateDynamicObject(1742, -39.200000762939, -1361.6999511719, 845.29998779297, 0, 0, 90);
	CreateDynamicObject(1742, -39.200000762939, -1360.3000488281, 845.29998779297, 0, 0, 90);
	CreateDynamicObject(2190, -36.200000762939, -1357.3000488281, 846.20001220703, 0, 0, 219.99572753906);
	CreateDynamicObject(2202, -39.900001525879, -1355, 845.20001220703, 0, 0, 0);
	CreateDynamicObject(2066, -39.7998046875, -1357, 845.29998779297, 0, 0, 179.99450683594);
	CreateDynamicObject(638, -19.200000762939, -1356.1999511719, 845.90002441406, 0, 0, 0);
	CreateDynamicObject(638, -19.200000762939, -1362, 845.90002441406, 0, 0, 0);
	CreateDynamicObject(8957, -44.900001525879, -1363.8000488281, 848, 0, 0, 90);
	CreateDynamicObject(2008, -43.799999237061, -1368.6999511719, 845.29998779297, 0, 0, 270);
	CreateDynamicObject(1663, -44.400001525879, -1369.3000488281, 845.70001220703, 0, 0, 90);
	CreateDynamicObject(1714, -42.400001525879, -1368.9000244141, 845.29998779297, 0, 0, 270);
	CreateDynamicObject(14455, -46.8994140625, -1365, 846.90002441406, 0, 0, 270);
	CreateDynamicObject(2066, -45.900001525879, -1369.8000488281, 845.29998779297, 0, 0, 180);
	CreateDynamicObject(1771, -40.700000762939, -1364.8000488281, 845.90002441406, 0, 0, 88);
	CreateDynamicObject(1492, -39.099998474121, -1369.3000488281, 845.29998779297, 0, 0, 90);
	CreateDynamicObject(1523, -34.200000762939, -1386.9000244141, 851.09997558594, 0, 0, 270);
	CreateDynamicObject(1523, -34.200000762939, -1396.3000488281, 851.09997558594, 0, 0, 270);
	CreateDynamicObject(1523, -36.599998474121, -1400.4000244141, 851.09997558594, 0, 0, 180);
	CreateDynamicObject(1523, -40.700000762939, -1397.9000244141, 851.09997558594, 0, 0, 90);
	CreateDynamicObject(1523, -40.700000762939, -1388.5999755859, 851.09997558594, 0, 0, 90);
	CreateDynamicObject(3383, -24.60000038147, -1388.5, 851.09997558594, 0, 0, 90);
	CreateDynamicObject(3383, -24.60000038147, -1396.5, 851.09997558594, 0, 0, 90);
	CreateDynamicObject(3383, -37.599998474121, -1408.4000244141, 851.09997558594, 0, 0, 0);
	CreateDynamicObject(3383, -50.200000762939, -1396.3000488281, 851.09997558594, 0, 0, 270);
	CreateDynamicObject(3383, -50.200000762939, -1388.5, 851.09997558594, 0, 0, 270);
	CreateDynamicObject(2921, -23.799999237061, -1391.9000244141, 854.5, 0, 0, 350);
	CreateDynamicObject(2921, -24.299999237061, -1392.6999511719, 854.40002441406, 0, 0, 80);
	CreateDynamicObject(2921, -34.5, -1408.8000488281, 854.5, 0, 0, 0);
	CreateDynamicObject(2921, -51, -1392.9000244141, 854.5, 0, 0, 150);
	CreateDynamicObject(2921, -50.900001525879, -1385.0999755859, 854.40002441406, 0, 0, 140);
	CreateDynamicObject(3390, -45.799999237061, -1391.5999755859, 851.09997558594, 0, 0, 270);
	CreateDynamicObject(3390, -45.599998474121, -1393.0999755859, 851.09997558594, 0, 0, 90);
	CreateDynamicObject(3390, -28.60000038147, -1385.3000488281, 851.09997558594, 0, 0, 90);
	CreateDynamicObject(3390, -29.10000038147, -1399.4000244141, 851.09997558594, 0, 0, 270);
	CreateDynamicObject(3389, -26.39999961853, -1385.1999511719, 851.09997558594, 0, 0, 0);
	CreateDynamicObject(3389, -26.700000762939, -1399.4000244141, 851.09997558594, 0, 0, 180);
	CreateDynamicObject(3389, -48, -1393.0999755859, 851.09997558594, 0, 0, 0);
	CreateDynamicObject(3389, -48, -1391.6999511719, 851.09997558594, 0, 0, 180);
	CreateDynamicObject(1810, -29.10000038147, -1386.4000244141, 851.09997558594, 0, 0, 180);
	CreateDynamicObject(1810, -28.799999237061, -1398.6999511719, 851.09997558594, 0, 0, 2);
	CreateDynamicObject(1810, -46, -1394, 851.09997558594, 0, 0, 180);
	CreateDynamicObject(1810, -45.700000762939, -1390.9000244141, 851.09997558594, 0, 0, 0);
	CreateDynamicObject(14594, -49.2998046875, -1404.2998046875, 856.90002441406, 0, 0, 270);
	CreateDynamicObject(14593, -30.7998046875, -1396.099609375, 865, 0, 0, 179.99450683594);
	CreateDynamicObject(2528, -20.89999961853, -1372.1999511719, 845.29998779297, 0, 0, 180);
	CreateDynamicObject(2518, -19.60000038147, -1368.6999511719, 845.29998779297, 0, 0, 270);
	CreateDynamicObject(2528, -25, -1372.1999511719, 845.29998779297, 0, 0, 180);
	CreateDynamicObject(2518, -23.60000038147, -1368.5999755859, 845.29998779297, 0, 0, 270);
	CreateDynamicObject(1797, -66.2998046875, -1392.5, 856.90002441406, 0, 0, 270);
	CreateDynamicObject(1795, -66, -1393.19921875, 856.90002441406, 0, 0, 270);
	CreateDynamicObject(2323, -64.300003051758, -1396.0999755859, 856.90002441406, 0, 0, 270);
	CreateDynamicObject(1795, -71.300003051758, -1394.0999755859, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(1797, -71.300003051758, -1393.4000244141, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(2323, -73.199996948242, -1396.8000488281, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(1795, -61.900001525879, -1402.4000244141, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(1797, -66.300003051758, -1400.8000488281, 856.90002441406, 0, 0, 270);
	CreateDynamicObject(1797, -71.300003051758, -1401.8000488281, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(1795, -71.300003051758, -1402.4000244141, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(2323, -73.300003051758, -1405.5, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(2323, -64.300003051758, -1404.1999511719, 856.90002441406, 0, 0, 270);
	CreateDynamicObject(7191, -84.599998474121, -1408.8000488281, 858.90002441406, 0, 0, 270);
	CreateDynamicObject(640, -65.5, -1408.3000488281, 857.59997558594, 0, 0, 270);
	CreateDynamicObject(640, -70.800003051758, -1408.3000488281, 857.59997558594, 0, 0, 269.75);
	CreateDynamicObject(640, -76.099998474121, -1408.3000488281, 857.59997558594, 0, 0, 270);
	CreateDynamicObject(2866, -63.099998474121, -1396.6999511719, 857.90002441406, 0, 0, 0);
	CreateDynamicObject(2856, -74.300003051758, -1396.4000244141, 857.90002441406, 0, 0, 0);
	CreateDynamicObject(2768, -74.300003051758, -1405, 858, 0, 0, 0);
	CreateDynamicObject(7191, -34.099609375, -1389.2998046875, 858.90002441406, 0, 0, 90);
	CreateDynamicObject(2287, -46.900001525879, -1388.5999755859, 858.90002441406, 0, 0, 182);
	CreateDynamicObject(2283, -50.799999237061, -1389.0999755859, 858.90002441406, 0, 0, 180);
	CreateDynamicObject(3660, -51.3994140625, -1388.3994140625, 858.40002441406, 0, 0, 0);
	CreateDynamicObject(2282, -67.69921875, -1408.19921875, 858.90002441406, 0, 0, 179.99450683594);
	CreateDynamicObject(2281, -70.300003051758, -1408.1999511719, 858.29998779297, 0, 0, 180);
	CreateDynamicObject(2614, -54.900001525879, -1374.1999511719, 859.70001220703, 0, 0, 270);
	CreateDynamicObject(2504, -55, -1371.1999511719, 858.70001220703, 0, 0, 270);
	CreateDynamicObject(2503, -55, -1371.8000488281, 858.70001220703, 0, 0, 270);
	CreateDynamicObject(1984, -56.5, -1375.4000244141, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(1888, -63.599998474121, -1370.0999755859, 856.90002441406, 0, 0, 0);
	CreateDynamicObject(1887, -60.700000762939, -1370.0999755859, 856.90002441406, 0, 0, 0);
	CreateDynamicObject(1885, -58.700000762939, -1370.0999755859, 856.90002441406, 0, 0, 0);
	CreateDynamicObject(1883, -61.200000762939, -1373.5, 856.90002441406, 0, 0, 0);
	CreateDynamicObject(1883, -61.200000762939, -1375.4000244141, 856.90002441406, 0, 0, 0);
	CreateDynamicObject(2412, -55.299999237061, -1377.9000244141, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(2412, -55.299999237061, -1379.5999755859, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(1776, -71.300003051758, -1374.6999511719, 858, 0, 0, 90);
	CreateDynamicObject(1776, -71.300003051758, -1371.9000244141, 858, 0, 0, 90);
	CreateDynamicObject(18014, -57.099998474121, -1382.3000488281, 857.29998779297, 0, 0, 270);
	CreateDynamicObject(18014, -61.700000762939, -1382.3000488281, 857.29998779297, 0, 0, 270);
	CreateDynamicObject(18014, -66.300003051758, -1382.3000488281, 857.29998779297, 0, 0, 270);
	CreateDynamicObject(1594, -68.300003051758, -1372, 857.40002441406, 0, 0, 0);
	CreateDynamicObject(1594, -65.599998474121, -1374.3000488281, 857.40002441406, 0, 0, 0);
	CreateDynamicObject(1432, -68.5, -1375.8000488281, 856.90002441406, 0, 0, 0);
	CreateDynamicObject(2222, -68.400001525879, -1375.9000244141, 857.59997558594, 0, 0, 0);
	CreateDynamicObject(2814, -68.300003051758, -1372.0999755859, 857.79998779297, 0, 0, 0);
	CreateDynamicObject(2821, -65.5, -1374.3000488281, 857.79998779297, 0, 0, 0);
	CreateDynamicObject(1492, -54.400001525879, -1379.9000244141, 856.90002441406, 0, 0, 90);
	CreateDynamicObject(2737, -28.5, -1406.9000244141, 864.70001220703, 0, 0, 180);
	CreateDynamicObject(2115, -28.89999961853, -1402.5, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(2115, -28.89999961853, -1403.4000244141, 862.70001220703, 0, 0, 0);
	CreateDynamicObject(2115, -27.89999961853, -1402.5, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(2115, -28.89999961853, -1400.5999755859, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(2115, -27.89999961853, -1400.5999755859, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(1711, -28.299999237061, -1404.5999755859, 862.70001220703, 0, 0, 180);
	CreateDynamicObject(1705, -26.799999237061, -1401.5999755859, 862.70001220703, 0, 0, 270);
	CreateDynamicObject(1705, -26.799999237061, -1399.8000488281, 862.70001220703, 0, 0, 270);
	CreateDynamicObject(1705, -30, -1400.8000488281, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(1705, -30, -1402.5999755859, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(2115, -28.89999961853, -1397.5999755859, 862.70001220703, 0, 0, 270);
	CreateDynamicObject(2115, -27.89999961853, -1397.5999755859, 862.70001220703, 0, 0, 270);
	CreateDynamicObject(1705, -26.799999237061, -1397.6999511719, 862.70001220703, 0, 0, 270);
	CreateDynamicObject(1705, -30, -1398.8000488281, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(14867, -35.799999237061, -1409.5, 864.20001220703, 0, 0, 0);
	CreateDynamicObject(14867, -28, -1409.5, 864.20001220703, 0, 0, 0);
	CreateDynamicObject(1742, -31.10000038147, -1406.8000488281, 862.70001220703, 0, 0, 180);
	CreateDynamicObject(2007, -35.200000762939, -1401.3000488281, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(2007, -35.200000762939, -1402.3000488281, 862.70001220703, 0, 0, 90);
	CreateDynamicObject(2164, -32.599998474121, -1391.4000244141, 862.70001220703, 0, 0, 0);
	CreateDynamicObject(2167, -30.839992523193, -1391.4000244141, 862.70001220703, 0, 0, 0);
	CreateDynamicObject(2162, -29.930000305176, -1391.4000244141, 862.70001220703, 0, 0, 0);
	CreateDynamicObject(2161, -33.900001525879, -1391.4000244141, 862.70001220703, 0, 0, 0);
	CreateDynamicObject(1371, 1779.6667480469, -1937.0827636719, 13.333674430847, 0, 0, 140);
	CreateDynamicObject(1371, 1775.3641357422, -1936.6909179688, 13.334531784058, 0, 0, 126);
	CreateDynamicObject(1530, 1777.7115478516, -1944.4947509766, 13.538779258728, 0, 0, 0);
	CreateDynamicObject(3434, 1000.7333374023, -1214.6235351563, 30.232536315918, 0, 0, 0);
	CreateDynamicObject(3934, 996.76379394531, -1195.2739257813, 53.90625, 0, 0, 0);
	CreateDynamicObject(2936, 993.85894775391, -1207.5992431641, 54.356540679932, 0, 0, 0);
	CreateDynamicObject(744, 996.7275390625, -1205.7537841797, 53.90625, 0, 0, 0);
	CreateDynamicObject(2195, 965.80126953125, -1207.7807617188, 54.5234375, 0, 0, 0);
	CreateDynamicObject(2194, 965.88177490234, -1205.4039306641, 54.23722076416, 0, 0, 0);
	CreateDynamicObject(949, 965.56890869141, -1204.1693115234, 54.542533874512, 0, 0, 0);
	CreateDynamicObject(950, 965.49359130859, -1202.0548095703, 54.449333190918, 0, 0, 0);
	CreateDynamicObject(2011, 969.91741943359, -1200.4752197266, 54.906398773193, 0, 0, 0);
	CreateDynamicObject(2240, 966.42541503906, -1197.4796142578, 54.504467010498, 0, 0, 0);
	CreateDynamicObject(2001, 965.50506591797, -1194.4910888672, 53.90625, 0, 0, 0);
	CreateDynamicObject(1583, 965.96313476563, -1192.8359375, 53.90625, 0, 0, 95.999938964844);
	CreateDynamicObject(1584, 966.00860595703, -1190.0799560547, 53.90625, 0, 0, 272);
	CreateDynamicObject(1586, 965.99096679688, -1187.1583251953, 53.90625, 0, 0, 278);
	CreateDynamicObject(2985, 895.14654541016, -1236.0152587891, 50.150062561035, 0, 0, 0);
	CreateDynamicObject(2985, 971.46081542969, -1195.3796386719, 53.90625, 0, 0, 179.99993896484);
	CreateDynamicObject(2899, 982.75567626953, -1206.125, 54.023242950439, 0, 0, 0);
	CreateDynamicObject(2921, 1489.0528564453, -1750.9250488281, 20.161281585693, 0, 0, 326);
	CreateDynamicObject(7388, 1514.2641601563, -1715.0207519531, 13.046875, 0, 0, 0);
	CreateDynamicObject(3743, 872.38989257813, -1464.0539550781, 16.495855331421, 0, 0, 0);
	CreateDynamicObject(3743, 863.20233154297, -1464.1724853516, 16.536483764648, 0, 0, 0);
	CreateDynamicObject(3528, 1769.4859619141, -1918.0218505859, 15.447814941406, 0, 0, 0);
	CreateDynamicObject(970, 1779.7868652344, -1943.4377441406, 13.106732368469, 0, 0, 0);
	CreateDynamicObject(970, 1775.9571533203, -1943.49609375, 13.10851764679, 0, 0, 0);
	CreateDynamicObject(970, 1771.9604492188, -1943.4333496094, 13.11056137085, 0, 0, 0);
	CreateDynamicObject(970, 1768.1243896484, -1943.3984375, 13.11248588562, 0, 0, 0);
	CreateDynamicObject(970, 1764.2153320313, -1943.2567138672, 13.114603042603, 0, 0, 0);
	CreateDynamicObject(970, 1760.4197998047, -1943.0479736328, 13.123203277588, 0, 0, 0);
	CreateDynamicObject(8408, 1769.8876953125, -1891.2506103516, 19.749050140381, 0, 0, 86);
	CreateDynamicObject(2370, 2810.1000976563, -2438.3999023438, 11.800000190735, 0, 0, 0);
	CreateDynamicObject(2370, 2811.3000488281, -2438.3999023438, 11.89999961853, 0, 2, 0);
	CreateDynamicObject(2370, 2813.1999511719, -2438.3999023438, 12.10000038147, 0, 342, 0);
	CreateDynamicObject(2370, 2814.3000488281, -2438.5, 12.5, 0, 0, 0);
	CreateDynamicObject(2370, 2815.3999023438, -2438.5, 12.5, 0, 0, 0);
	CreateDynamicObject(2370, 2816.5, -2438.6000976563, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(2370, 2817.6000976563, -2438.6000976563, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(2370, 2818.6999511719, -2438.6000976563, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(2370, 2819.8000488281, -2438.6000976563, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(2370, 2820.8999023438, -2438.6000976563, 12.800000190735, 0, 0, 0);
	CreateObject(987, 772.5, -1384.6999511719, 12.699999809265, 0, 0, 0);
	Test1 = CreateObject(16775,785.955,-1151.830,26.597,0.0,0.0,90.000,150.0);
	Test2 = CreateObject(16773,665.361,-1311.114,16.460,0.0,0.0,0.0,150.0);
	Test3 = CreateObject(16773,659.946,-1225.762,19.093,0.0,0.0,-112.500,150.0);
	glxmaos = CreateObject(1508,1287.977,-1006.129,31.493,0.0,0.0,-90.000,150.0);
	Mapia1 = CreateObject(980,1245.597,-767.388,91.394,0.0,0.0,-180.000,150.0);
	rnsdls = CreateObject(980,344.778,1797.585,19.910,3.438,1.719,-145.245,150.0);
	rnsdls2 = CreateObject(971, 96.676987, 1920.462036, 20.771591, 0.0000, 359.1406, 269.7592,150.0);
	pdgate1 = CreateObject(971,1589.053344,-1638.123168,14.122960,0.000000,0.000000,180,150.0);
	pdgate2 = CreateObject(968,1544.700317,-1630.735717,13.096980,-1.000000,-91.000000,269.972869,150.0);
	milsu = CreateObject(10771, 3174.4167480469, -2595.8127441406, 0.99525451660156, 0, 0, 180,150.0);
	CreateObject(10771, -3447.3505859375, -2140.140625, 7.2184634208679, 0, 0, 0,150.0);
	CreateObject(11146, -3456.3359375, -2139.5205078125, 14.029165267944, 0, 0, 0,150.0);
	MMC[0] = CreateObject(2944, -3438.1901855469, -2142.0822753906, 20.502220153809, 0, 0, 89.999938964844,150.0);
	MMC[1] = CreateObject(1966, -3424.5390625, -2153.9677734375, 14.642660140991, 0, 0, 179.99450683594,150.0); 
	MMC[2] = CreateObject(2634, -3476.3793945313, -2145.2092285156, 5.3468780517578, 0, 0, 92,150.0); 
	MafiaJail1 = CreateObject(1495,1265.2000,-775.3448,1083.0078,0.0,0.0,0.0,150.0);
	MafiaJail2 = CreateObject(1495,1261.2000,-775.3448,1083.0078,0.0,0.0,0.0,150.0);
	rudckf1 = CreateObject(1566, 239.6180,119.1410,1003.7388, 0.0000, 0.0000, 270.0,150.0);
	rudckf2 = CreateObject(1566, 239.6180,116.0899,1003.7388, 0.0000, 0.0000, 90.0,150.0);
	rudckf3 = CreateObject(1566, 253.0753,110.6303,1003.7388, 0.0000, 0.0000, 270.0,150.0);
	rudckf4 = CreateObject(1566, 253.0753,107.5303,1003.7388, 0.0000, 0.0000, 90.0,150.0);
	taxi = CreateObject(975,923.502,-1226.253,17.651,0.0,0.0,-92.819,150.0); 
	taxi2 = CreateObject(975,923.960,-1217.359,17.651,0.0,0.0,-92.819,150.0);
	CreateObject(2942,-32.276363,-57.995586,1003.139953,0.000000,0.000000,179.915054,150.0);
	CreateObject(2942,374.718902,167.128982,1007.987304,0.000000,0.000000,179.674255,150.0);
	CreateObject(985, 239.4444,112.4137,1004.4141, 0.0000, 0.0000, 270.0,150.0);
	CreateObject(985, 253.1000,117.4626,1004.4141, 0.0000, 0.0000, 270.0,150.0);
	CreateObject(1502, 236.7581,119.2251,1002.2588, 0.0000, 0.0000, 0.0,150.0);
	CreateObject(1502, 233.0911,119.2251,1002.2588, 0.0000, 0.0000, 0.0,150.0);
	CreateObject(1502, 226.6012,115.9786,1002.2588, 0.0000, 0.0000, 180.0,150.0);
	CreateObject(2961, 239.8566,115.7818,1003.7188, 0.0000, 0.0000, 270.0,150.0);
	CreateObject(2961, 238.9427,116.0666,1003.7188, 0.0000, 0.0000, 0.0,150.0);
	CreateObject(2961, 252.9550,110.9832,1003.7188, 0.0000, 0.0000, 90.0,150.0);
	CreateObject(2961, 253.4758,110.7516,1003.7188, 0.0000, 0.0000, 270.0,150.0);
	ccc = CreateObject(2634, 253.1610,125.2933,1003.2188, 0.0000, 0.0000, 90.0000,150.0);
	ddd = CreateObject(2634, 239.2924,125.1652,1003.2188, 0.0000, 0.0000, 270.0000,150.0);
	fbi1 = CreateObject(2634, 228.2545,151.2652,1003.0234, 0.0000, 0.0000, 270.5583,150.0);
	fbi2 = CreateObject(2634, 228.2545,161.2077,1003.0234, 0.0000, 0.0000, 270.6917,150.0);
	fbi3 = CreateObject(971, 228.1794,171.6009,1003.0330, 0.0000, 0.0000, 270.9916,150.0);
	fbi4 = CreateObject(971, 238.6470,193.8610,1008.1719, 0.0000, 0.0000, 1.7391,150.0);
	fbi5 = CreateObject(971, 271.3773,191.2642,1008.1620, 0.0000, 0.0000, 269.6182,150.0);
    ryehans=CreateObject(980,469.526,-1957.514,4.744,0.0,0.0,0.0);
    CreateObject(2773,1942.205,-1767.315,13.158,0.0,0.0,0.0);
	CreateObject(2794,1635.486,-2335.922,15.180,0.0,0.0,-900.000);
	CreateObject(970,1942.298,-1767.877,13.720,0.0,0.0,-90.000);
	CreateObject(2773,1942.252,-1778.765,13.158,0.0,0.0,0.0);
	CreateObject(2773,1942.141,-1774.369,13.185,0.0,0.0,0.0);
	CreateObject(2773,1942.141,-1771.297,13.198,0.0,0.0,0.0);
	CreateObject(970,1942.240,-1770.769,13.549,0.0,0.0,-90.000);
	CreateObject(970,1942.219,-1773.814,13.438,0.0,0.0,-90.000);
	CreateObject(970,1942.331,-1777.867,13.443,0.0,0.0,-90.000);
	CreateObject(2773,1941.195,-1767.361,13.188,0.0,0.0,0.0);
	CreateObject(2773,1941.102,-1771.255,13.158,0.0,0.0,0.0);
	CreateObject(2773,1940.946,-1774.085,13.158,0.0,0.0,0.0);
	CreateObject(2773,1941.168,-1778.466,13.158,0.0,0.0,0.0);
	CreateObject(970,1940.882,-1768.097,13.168,0.0,0.0,-90.000);
	CreateObject(970,1940.927,-1772.023,13.192,0.0,0.0,-90.000);
	CreateObject(970,1940.895,-1775.129,13.314,0.0,0.0,-90.000);
	CreateObject(970,1941.116,-1778.179,13.243,0.0,0.0,-90.000);
MCAR[3][0]=	AddStaticVehicleEx(507,1328.004,-1189.955,23.528,89.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(507,1328.084,-1186.259,23.528,89.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(507,1327.898,-1182.444,23.528,89.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(507,1327.852,-1178.686,23.528,89.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(490,1305.013,-1173.664,24.104,271.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(490,1312.598,-1173.715,24.105,271.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(490,1310.443,-1178.324,24.021,271.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(461,1318.716,-1170.447,23.503,0.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(461,1318.647,-1167.788,23.503,0.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(461,1318.635,-1165.161,23.503,0.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(461,1318.541,-1162.662,23.503,0.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(487,1315.677,-1195.021,65.663,0.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(437,1315.143,-1124.882,24.087,179.0,0,0,RESPAWN_DELAY);
	AddStaticVehicleEx(437,1319.229,-1124.851,24.089,179.0,0,0,RESPAWN_DELAY);
MCAR[3][1]= AddStaticVehicleEx(487,1302.161,-1195.012,65.663,0.0,0,0,RESPAWN_DELAY);
	CreateObject(4597,1559.395,-1616.792,12.864,0.0,0.0,0.0);
	CreateObject(970,1550.285,-1617.818,13.098,0.0,0.0,0.0);
	CreateObject(970,1554.459,-1617.833,13.098,0.0,0.0,0.0);
	CreateObject(970,1558.639,-1617.832,13.098,0.0,0.0,0.0);
	CreateObject(970,1562.785,-1617.826,13.098,0.0,0.0,0.0);
	CreateObject(970,1566.939,-1617.827,13.098,0.0,0.0,0.0);
	CreateObject(970,1571.100,-1617.826,13.098,0.0,0.0,0.0);
	CreateObject(970,1575.263,-1617.820,13.098,0.0,0.0,0.0);
	CreateObject(3660,1550.773,-1603.901,15.036,0.0,0.0,0.0);
	CreateObject(3660,1570.232,-1603.509,15.036,0.0,0.0,0.0);
	CreateObject(3660,1589.970,-1603.964,15.061,0.0,0.0,0.0);
	CreateObject(3660,1597.967,-1603.934,15.046,0.0,0.0,-360.000);
	CreateObject(3660,1607.069,-1615.005,15.062,0.0,0.0,-90.000);
	CreateObject(3660,1607.082,-1622.987,15.047,0.0,0.0,-90.000);
//================================================
MCAR[1][0]= AddStaticVehicleEx(596,1599.8810,-1709.6396,5.6204,45.9812,0,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2251.6628,2476.9336,10.5663,180.0909,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2256.2026,2476.9402,10.5735,180.0875,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2260.4033,2476.9722,10.5805,180.0828,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2269.1191,2476.9849,10.5935,180.0776,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2273.1479,2476.9905,10.6054,180.0725,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2277.4429,2476.9951,10.5601,180.0781,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2281.6426,2477.0012,10.5862,180.0717,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2290.6987,2477.0120,10.5661,180.0816,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2291.1851,2443.2195,10.5915,357.9696,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2282.4468,2443.5295,10.5710,357.9711,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2278.1526,2443.6821,10.5855,357.9676,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2273.5369,2443.5132,10.5690,357.8343,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2269.2168,2443.6770,10.5662,357.8245,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2260.8879,2442.5303,10.6051,358.8027,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2256.4690,2442.6223,10.6048,358.8027,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(598,2251.6599,2442.7234,10.5728,358.8072,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2251.9326,2459.6868,10.3860,358.7137,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2259.5728,2459.5122,10.4048,358.7023,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2255.6421,2459.6011,10.4013,358.6879,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2268.4321,2459.3093,10.3866,358.6879,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2272.9492,2459.2058,10.3868,358.6879,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2276.6853,2459.1221,10.4209,358.6959,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(523,2281.7156,2459.0071,10.3875,358.6886,3,3,RESPAWN_DELAY);
	AddStaticVehicleEx(601,2292.4893,2444.0000,10.5797,178.4939,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(601,2292.9158,2460.2263,10.5791,178.4938,1,1,RESPAWN_DELAY);
MCAR[1][1]= AddStaticVehicleEx(525,1585.3445,-1667.6815,5.9489,269.7756,0,1,RESPAWN_DELAY);
//================================================
	CreateObject(974, 1814.5, -1406.3000488281, 15.199999809265, 0, 0, 0);
	CreateObject(974, 1807.8000488281, -1406.3000488281, 15.199999809265, 0, 0, 0);
	CreateObject(4642, 1809.8000488281, -1388.4000244141, 14.300000190735, 0, 0, 0);
	CreateObject(8041, 1835.6999511719, -1396.4000244141, 18.200000762939, 0, 0, 0);
	CreateObject(984, 1849.5, -1400.6999511719, 13, 0, 0, 0);
	CreateObject(984, 1849.5, -1387.9000244141, 13, 0, 0, 0);
	CreateObject(3578, 1829.9000244141, -1387.8000488281, 13.39999961853, 0, 0, 0);
	CreateObject(3578, 1819.5999755859, -1387.8000488281, 13.39999961853, 0, 0, 0);
	CreateObject(3578, 1812.1999511719, -1387.8000488281, 13.39999961853, 0, 0, 0);
	CreateObject(10183, 1565.6875, -1718.0504150391, 12.558817863464, 0, 0, 46);
	CreateObject(10183, 1575.7601318359, -1717.9334716797, 12.558825492859, 0, 0, 45.999755859375);
	CreateObject(2921, 1611.3834228516, -1741.3223876953, 21.416446685791, 0, 0, 354);
//==========================================================================================
MCAR[4][0]= AddStaticVehicleEx(416,2068.8547,2417.8330,11.0082,0.0552,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2068.3926,2401.4373,11.0086,357.1616,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2079.8594,2400.7004,11.0081,359.2479,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2079.0417,2417.6975,11.0064,357.3232,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2086.5200,2418.2244,11.0038,1.1499,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2086.7170,2406.5786,10.9603,0.8731,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2096.8896,2400.8794,11.0028,357.6998,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(416,2097.2974,2417.3899,11.0009,0.6291,3,1,RESPAWN_DELAY);
	AddStaticVehicleEx(407,2058.3928,2405.9329,11.0672,359.4676,4,4,RESPAWN_DELAY);
MCAR[4][1]= AddStaticVehicleEx(407,2058.2405,2394.3127,11.0780,0.7706,4,4,RESPAWN_DELAY);
//==============================================================================================
MCAR[2][0]=	AddStaticVehicleEx(528,1619.2507,1849.4591,10.8642,179.2915,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(528,1614.9773,1849.5122,10.8777,179.2924,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(528,1610.7279,1849.5648,10.8908,179.2930,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(528,1606.7024,1849.6147,10.9026,179.2937,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(528,1602.3087,1849.6691,10.9131,179.2929,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(528,1598.3275,1849.7181,10.9225,179.2922,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(528,1593.8834,1849.7732,10.9308,179.2929,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(437,1603.1793,1838.2542,10.9908,272.0721,5,5,RESPAWN_DELAY);
MCAR[2][1]=AddStaticVehicleEx(437,1603.3978,1832.2257,10.9170,272.0721,5,5,RESPAWN_DELAY);
//==============================================================================================
MCAR[99][0]=AddStaticVehicleEx(510,712.7499,-1594.5936,13.8869,177.9707,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.8168,-1358.4435,13.1475,88.5961,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.7720,-1360.2498,13.1634,88.6064,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.7233,-1362.2764,13.1528,88.5979,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.6768,-1364.1798,13.1450,88.5883,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.6215,-1366.3997,13.1573,88.5796,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.5746,-1368.3030,13.1526,88.5884,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.5253,-1370.3528,13.1597,88.6003,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,804.6769,-1372.1630,13.1820,88.5904,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1786.5686,-2294.3218,-2.9113,178.5999,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1783.7629,-2294.2515,-2.9005,178.5922,3,3,RESPAWN_DELAY); //
    AddStaticVehicleEx(462,1780.9806,-2294.1831,-2.9101,178.5922,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1778.2234,-2294.1155,-2.9202,178.5920,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(510,1778.0627,-2280.3416,-2.9100,0.0090,3,3,RESPAWN_DELAY); //
    AddStaticVehicleEx(510,1780.9437,-2280.3430,-2.8864,0.0173,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(510,1783.4836,-2280.3423,-2.8771,0.0173,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(510,1786.3646,-2280.3418,-2.8671,0.0174,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1560.9844,-2312.2607,13.1549,88.4863,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1560.9017,-2315.4072,13.1586,88.4786,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1560.8094,-2318.9209,13.1563,88.4906,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1560.7751,-2322.0713,13.1565,88.4906,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1561.1802,-2325.2795,13.1791,88.4797,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1561.1208,-2328.4277,13.1610,88.4795,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1561.0330,-2331.7954,13.1607,88.4725,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,1560.9504,-2334.9192,13.1611,88.4626,3,3,RESPAWN_DELAY); //
    AddStaticVehicleEx(462,1560.8600,-2338.2866,13.1611,88.4626,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(510,716.3485,-1594.7487,13.9669,178.0610,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(510,719.7381,-1594.9305,14.0367,181.0977,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(510,723.0529,-1595.0870,14.0371,178.8695,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,726.1640,-1594.8623,14.0182,178.2572,7,7,RESPAWN_DELAY); // 
	AddStaticVehicleEx(462,729.2498,-1595.0521,14.0169,179.0395,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,732.2731,-1595.1725,14.0036,180.2911,7,7,RESPAWN_DELAY); // 
	AddStaticVehicleEx(462,734.9501,-1594.9788,13.9968,184.9897,7,7,RESPAWN_DELAY); // 
	AddStaticVehicleEx(462,737.5742,-1594.9490,14.0027,178.1252,7,7,RESPAWN_DELAY); // 
	AddStaticVehicleEx(462,739.9160,-1595.0256,13.9972,178.1253,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(413,686.4791,-1571.7764,14.3254,179.5627,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(413,695.7450,-1571.9934,14.3365,177.9121,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(413,691.2404,-1571.6989,14.3214,178.9925,7,7,RESPAWN_DELAY); // 
	AddStaticVehicleEx(413,700.8660,-1572.1799,14.3364,177.9121,7,7,RESPAWN_DELAY); // 
	AddStaticVehicleEx(400,2149.0278,-1203.4449,23.9462,269.6673,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.0535,-1199.1028,24.0473,269.6673,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.0803,-1194.5568,23.9142,269.6536,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.1079,-1189.9126,23.9070,269.6537,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.1355,-1185.4208,23.9047,269.6537,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.1648,-1180.5387,23.9156,269.6538,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.1936,-1175.7538,23.9037,269.6537,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.2246,-1170.6532,23.9134,269.6537,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.2490,-1166.5986,23.9157,269.6537,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.2791,-1161.7175,23.9184,269.6534,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.3057,-1157.3496,23.9506,269.6534,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.3323,-1153.0199,24.0162,269.6654,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.3599,-1148.3760,24.5159,269.6730,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.3889,-1143.9089,24.9813,269.6851,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(400,2149.4172,-1138.6373,25.5620,269.6740,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.0713,-1143.6906,24.6098,90.6284,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.1216,-1148.1840,24.1903,90.6683,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.1760,-1152.7450,23.7510,90.7002,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.1438,-1157.9484,23.5635,90.9172,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.2249,-1162.8744,23.5702,90.9503,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.3096,-1167.9452,23.5970,90.9475,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.3872,-1172.6548,23.5636,90.9551,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.3010,-1177.7091,23.5685,90.9551,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.3821,-1182.5906,23.5619,90.9476,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.4580,-1187.1553,23.6081,90.9421,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.3191,-1192.0923,23.5701,90.9374,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(474,2161.1365,-1196.8733,23.6551,91.3996,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,-2762.0203,-2600.0886,2.3616,280.3677,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,-2762.2910,-2598.6511,2.4515,280.3836,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,-2762.4612,-2597.7429,2.5167,280.4187,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,-2762.7327,-2596.3049,2.5926,280.4341,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,-2762.9182,-2595.3225,2.6444,280.4537,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,-2763.0986,-2594.3633,2.6775,280.5005,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(539,403.2693,-2015.8015,7.0170,269.4995,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(539,403.2387,-2019.2683,7.0097,269.4995,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(539,403.2079,-2022.7865,7.0152,269.4995,7,7,RESPAWN_DELAY); //
MCAR[99][1]=AddStaticVehicleEx(400,2149.5503,-1134.1212,25.6614,266.4646,6,6,RESPAWN_DELAY); //
//==============================================================================================
JCAR[99][0]=AddStaticVehicleEx(426,1109.3676,1356.6384,10.5740,179.6319,7,7,RESPAWN_DELAY); 
	AddStaticVehicleEx(426,1116.4738,1356.5924,10.5730,179.6404,7,7,RESPAWN_DELAY); //
	AddStaticVehicleEx(426,1101.8964,1356.6085,10.5617,179.6450,7,7,RESPAWN_DELAY); //
JCAR[99][1]=AddStaticVehicleEx(426,1124.4070,1356.5425,10.5723,179.6479,7,7,RESPAWN_DELAY); //
//==============================================================================================
JCAR[3][0]=	AddStaticVehicleEx(462,2098.1128,-1792.9388,12.9739,179.8577,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2095.3293,-1792.9325,12.9893,179.8653,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2095.3169,-1798.1824,12.9809,179.8735,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2097.5381,-1798.1870,12.9945,179.8818,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2097.5083,-1812.7860,12.9660,179.8951,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2095.0911,-1812.7820,12.9818,179.9022,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2095.0815,-1818.3456,12.9799,179.8907,3,3,RESPAWN_DELAY); //
JCAR[3][1]=	AddStaticVehicleEx(462,2096.8621,-1818.3488,12.9918,179.8845,3,3,RESPAWN_DELAY); //
//==============================================================================================
JCAR[20][0]=AddStaticVehicleEx(438,1803.5723,-1902.2933,13.4487,269.4698,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(438,1803.4749,-1910.7515,13.3876,271.0667,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(438,1803.4803,-1914.8258,13.4480,269.5839,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(438,1803.4534,-1919.3506,13.3486,269.5498,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(438,1803.2333,-1923.8933,13.3406,267.1434,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(438,1803.0482,-1928.4255,13.3777,268.9120,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(438,1802.9868,-1933.1704,13.4182,269.9286,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(420,1798.8793,-1887.7904,13.1964,357.7107,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(420,1794.6425,-1887.6655,13.1901,359.4037,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(420,1790.3721,-1887.5389,13.1902,359.4340,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(420,1786.2976,-1887.5770,13.1834,0.9579,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(420,1781.6616,-1887.4735,13.1839,2.1594,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(420,1777.0688,-1887.4265,13.1806,358.7376,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(431,1780.4193,-1900.4025,13.4940,270.4188,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(431,1780.3920,-1906.7562,13.4637,271.0230,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(437,1780.1997,-1913.6744,13.5242,268.8122,6,6,RESPAWN_DELAY); //
JCAR[20][1]=AddStaticVehicleEx(438,1803.5743,-1906.4458,13.4246,267.6178,6,6,RESPAWN_DELAY); //
//==============================================================================================
MCAR[11][0]=AddStaticVehicleEx(525,2102.9312,942.9946,10.6993,268.4300,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(525,2102.8193,939.0145,10.7209,268.4340,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(525,2102.6921,934.4011,10.7325,268.4301,1,1,RESPAWN_DELAY); //
MCAR[11][1]=AddStaticVehicleEx(525,2102.5879,930.4238,10.7040,268.4328,1,1,RESPAWN_DELAY); //
//==============================================================================================
MCAR[12][0]=AddStaticVehicleEx(567,963.0062,2350.6589,10.6913,358.7587,71,72,RESPAWN_DELAY); //
	AddStaticVehicleEx(567,963.1895,2359.1082,10.6918,358.7587,71,72,RESPAWN_DELAY); //
MCAR[12][1]=AddStaticVehicleEx(567,963.4565,2371.4297,10.6898,358.7584,71,72,RESPAWN_DELAY); //
//------------------------------------------------------------------------------------
JCAR[13][0]=AddStaticVehicleEx(403,2460.7085,-2116.1406,14.1463,0.0647,8,8,RESPAWN_DELAY); //
	AddStaticVehicleEx(403,2651.3518,1083.8741,11.4028,89.3598,8,8,RESPAWN_DELAY); //
	AddStaticVehicleEx(403,2651.3818,1086.5842,11.4540,89.3597,8,8,RESPAWN_DELAY); //
	AddStaticVehicleEx(403,2651.4297,1090.8062,11.4049,89.3596,8,8,RESPAWN_DELAY); //
JCAR[13][1]=AddStaticVehicleEx(403,2651.4768,1095.0304,11.4568,89.3596,8,8,RESPAWN_DELAY); //
//==============================================================================================
MCAR[13][0]=AddStaticVehicleEx(567,1681.4155,2712.1968,10.6917,37.8378,6,6,RESPAWN_DELAY); //
	AddStaticVehicleEx(567,1677.6073,2719.7539,10.6840,8.8262,6,6,RESPAWN_DELAY); //
MCAR[13][1]=AddStaticVehicleEx(567,1689.7140,2706.4290,10.6887,65.6007,6,6,RESPAWN_DELAY); //
//==============================================================================================
MCAR[16][0]=AddStaticVehicleEx(567,1547.8678,786.6129,10.7112,179.8381,86,86,RESPAWN_DELAY); //
	AddStaticVehicleEx(567,1544.7915,786.6215,10.7225,179.8509,86,86,RESPAWN_DELAY); //
MCAR[16][1]=AddStaticVehicleEx(567,1541.6666,786.6304,10.6801,179.8223,86,86,RESPAWN_DELAY); //
//==============================================================================================
MCAR[5][0]=	AddStaticVehicleEx(567,2619.7625,2007.5217,10.7043,179.6592,79,79,RESPAWN_DELAY); //
	AddStaticVehicleEx(567,2623.1580,2007.5023,10.6794,179.6838,79,79,RESPAWN_DELAY); //
MCAR[5][1]=	AddStaticVehicleEx(567,2626.3330,2007.4840,10.7049,179.7015,79,79,RESPAWN_DELAY); //
//==============================================================================================
MCAR[17][0]=AddStaticVehicleEx(567,1001.8486,1526.2317,10.6123,0.6472,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(567,1001.8522,1535.1738,10.6180,0.3074,3,3,RESPAWN_DELAY); //
MCAR[17][1]=AddStaticVehicleEx(567,1001.9714,1546.8787,10.6200,359.5879,3,3,RESPAWN_DELAY); //
//==============================================================================================
MCAR[9][0]=	AddStaticVehicleEx(582,2040.0402,1358.1743,10.7295,180.5237,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2039.9520,1369.1168,10.7053,180.4747,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2039.8796,1378.2716,10.7265,180.4435,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2039.8018,1388.3342,10.7312,180.4436,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2040.2562,1328.5190,10.7279,0.6760,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2040.3585,1319.8300,10.7305,0.6760,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2040.1953,1308.4618,10.7513,0.7771,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(582,2040.3260,1298.8812,10.7322,0.7775,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(488,1870.1669,1382.2457,17.0997,270.1051,125,125,RESPAWN_DELAY); //
	AddStaticVehicleEx(488,1870.1481,1392.5975,17.1223,270.1057,125,125,RESPAWN_DELAY); //
MCAR[9][1]=	AddStaticVehicleEx(488,1854.3500,1392.5684,17.1336,270.1051,125,125,RESPAWN_DELAY); //
//==============================================================================================
MCAR[14][0]=AddStaticVehicleEx(409,717.7392,-1214.7928,17.9553,315.2656,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(421,689.9464,-1220.9401,16.2792,299.4407,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(421,694.4063,-1229.8842,16.2533,302.2452,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(421,704.2501,-1224.1624,16.9492,302.1658,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(421,700.1834,-1214.8055,17.0404,303.6353,1,1,RESPAWN_DELAY); //
MCAR[14][1]=AddStaticVehicleEx(487,763.8029,-1260.1204,13.7461,273.0726,1,1,RESPAWN_DELAY); //
//==============================================================================================
MCAR[15][0]=AddStaticVehicleEx(545,1100.3827,-1226.6654,15.6543,179.1904,3,3,RESPAWN_DELAY); // 
	AddStaticVehicleEx(516,1109.9026,-1227.1000,15.6640,180.0089,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(545,1099.6079,-1249.6860,15.6959,357.7831,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(487,1127.8878,-1241.5591,25.5370,270.0001,3,3,RESPAWN_DELAY); //
MCAR[15][1]=AddStaticVehicleEx(409,1094.6299,-1226.5479,15.6559,179.2119,3,3,RESPAWN_DELAY); //
//==============================================================================================
MCAR[21][0]=AddStaticVehicleEx(486,1269.1997,-1795.2407,13.6263,180.0686,1,1,RESPAWN_DELAY); // 
	AddStaticVehicleEx(406,1263.1138,-1796.1383,14.9450,180.0381,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(524,1274.8436,-1796.3361,14.2855,180.3621,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(530,1281.4166,-1835.9647,13.1454,90.6812,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(560,1280.2233,-1796.2697,13.0977,178.2347,1,1,RESPAWN_DELAY);
	AddStaticVehicleEx(530,1281.4546,-1834.1472,13.1461,90.3614,1,1,RESPAWN_DELAY); // C.D 없는데 ㅋ? 이거 추가하고 끝이야?ㅇㅇ ㅎ 이거 봐바,
MCAR[21][1]=AddStaticVehicleEx(530,1281.4585,-1832.2595,13.1472,90.5860,1,1,RESPAWN_DELAY); // C.D 이거 또 뭐냐 그 시동걸수 없다나오지! 모르겠어, 그냥 이렇게만 추가해놨고 또 할께 있나 너에ㅔㄱ 뭉러본거.
//==============================================================================================
MCAR[6][0]=	AddStaticVehicleEx(580,1255.0975,-805.0397,83.9374,179.5491,0,0,RESPAWN_DELAY); // 마피아 차량 155
	AddStaticVehicleEx(580,1248.9211,-804.9910,83.9413,179.5491,0,0,RESPAWN_DELAY); // 마피아 차량 156
	AddStaticVehicleEx(580,1243.0851,-804.9449,83.9450,179.5491,0,0,RESPAWN_DELAY); // 마피아 차량 157
	AddStaticVehicleEx(487,1291.0052,-788.3870,96.7831,359.9993,3,3,RESPAWN_DELAY); //
MCAR[6][1]=	AddStaticVehicleEx(409,1241.9115,-782.2499,90.3920,359.6682,0,0,RESPAWN_DELAY); // 마피아 리무진 158
//==============================================================================================
MCAR[28][0]= AddStaticVehicleEx(426,709.6530,-1436.8362,13.2828,88.2643,0,0,RESPAWN_DELAY); // Niggia Detective Family
	AddStaticVehicleEx(426,720.2120,-1437.1471,13.2786,88.3241,0,0,RESPAWN_DELAY); // Niggia Detective Family
	AddStaticVehicleEx(426,731.1660,-1437.4891,13.2803,88.1947,0,0,RESPAWN_DELAY); // Niggia Detective Family
MCAR[28][1]= AddStaticVehicleEx(426,740.3759,-1437.8005,13.2823,87.9936,0,0,RESPAWN_DELAY); //Niggia Detective Family
//==============================================================================================
MCAR[8][0]=	AddStaticVehicleEx(426,2564.0823,-1197.5680,60.9096,5.1410,168,168,RESPAWN_DELAY); // 페이데이로 팸카 161
	AddStaticVehicleEx(426,2555.1489,-1191.4091,61.0249,89.1438,186,186,RESPAWN_DELAY); // 페이데이로 팸카 162
	AddStaticVehicleEx(426,2537.4202,-1190.9861,58.8687,91.8589,186,186,RESPAWN_DELAY); // 페이데이 팸카 163
MCAR[8][1]=	AddStaticVehicleEx(487,2553.8403,-1202.2994,68.4827,85.7274,186,186,RESPAWN_DELAY); // 페이데이 헬기 165
//==============================================================================================
JCAR[16][0]=AddStaticVehicleEx(574,2187.1553,-1978.4484,14.1164,180.5523,26,26,RESPAWN_DELAY); // 청소 트럭 166
	AddStaticVehicleEx(574,2182.2568,-1978.5892,14.0943,179.1583,26,26,RESPAWN_DELAY); // 청소 트럭 167
	AddStaticVehicleEx(574,2176.4211,-1978.4919,14.1089,179.8351,26,26,RESPAWN_DELAY); // 청소 트럭 168 //
JCAR[16][1]=AddStaticVehicleEx(574,2134.3489,-1992.8173,14.0872,359.7808,26,26,RESPAWN_DELAY); // 청소차 추가 1
//==============================================================================================
MCAR[18][0]=AddStaticVehicleEx(409,287.8472,-1174.4110,80.7133,220.5246,13,13,RESPAWN_DELAY); // 해태차
	AddStaticVehicleEx(445,280.5175,-1163.3197,80.7891,224.1967,13,13,RESPAWN_DELAY); //
	AddStaticVehicleEx(445,283.1772,-1160.7336,80.7961,224.1966,13,13,RESPAWN_DELAY); //
	AddStaticVehicleEx(445,287.1165,-1156.9032,80.7885,224.1966,13,13,RESPAWN_DELAY); //
	AddStaticVehicleEx(445,290.8270,-1153.2950,80.7818,224.1966,13,13,RESPAWN_DELAY); //
MCAR[18][1]=AddStaticVehicleEx(487,276.4536,-1181.5701,80.3043,212.7104,13,13,RESPAWN_DELAY); // 해태차
//==============================================================================================
MCAR[23][0]=AddStaticVehicleEx(445,2158.9048,-1809.1284,13.2989,270.2567,6,6,RESPAWN_DELAY); // 동성로
	AddStaticVehicleEx(445,2158.8374,-1793.8950,13.2821,270.2565,6,6,RESPAWN_DELAY); //동성로
	AddStaticVehicleEx(445,2158.8533,-1797.4579,13.2895,270.2565,6,6,RESPAWN_DELAY); //동성로
	AddStaticVehicleEx(445,2158.8687,-1800.9993,13.2967,270.2565,6,6,RESPAWN_DELAY); //동성로
	AddStaticVehicleEx(445,2158.8867,-1805.0522,13.3047,270.2566,6,6,RESPAWN_DELAY); //동성로
MCAR[23][1]=AddStaticVehicleEx(409,2188.8059,-1804.3212,13.2771,358.7045,6,6,RESPAWN_DELAY); //동성로
//==============================================================================================
MCAR[22][0]=AddStaticVehicleEx(445,1011.0070,-656.9177,120.9220,33.4131,1,1,RESPAWN_DELAY); // 칠성파 센티넬1
	AddStaticVehicleEx(445,1008.5820,-679.2884,120.9624,32.5393,1,1,RESPAWN_DELAY); // 칠성파 센티넬2
	AddStaticVehicleEx(445,1022.7099,-633.0345,119.4129,288.1770,1,1,RESPAWN_DELAY); // 칠성파 센티넬3
MCAR[22][1]=AddStaticVehicleEx(445,1009.1658,-637.5791,120.4345,291.0693,1,1,RESPAWN_DELAY); // 칠성파 센티넬4
//==============================================================================================
MCAR[7][0]=AddStaticVehicleEx(409,2074.8398,1661.0984,10.4719,358.5117,5,5,RESPAWN_DELAY); //
	AddStaticVehicleEx(409,2075.0273,1674.2903,10.4719,0.1378,5,5,RESPAWN_DELAY); //
	AddStaticVehicleEx(409,2074.9963,1687.1852,10.4719,0.1338,5,5,RESPAWN_DELAY); //
	AddStaticVehicleEx(409,2074.9670,1699.6382,10.4719,0.1345,5,5,RESPAWN_DELAY); //
	AddStaticVehicleEx(409,2078.9639,1712.1678,10.4720,333.6695,5,5,RESPAWN_DELAY); //
	AddStaticVehicleEx(409,2089.0759,1732.6110,10.4735,333.6229,5,5,RESPAWN_DELAY); //
MCAR[7][1]=AddStaticVehicleEx(409,2096.2266,1747.0208,10.4719,333.6839,5,5,RESPAWN_DELAY); //
//==============================================================================================
MCAR[19][0]=AddStaticVehicleEx(521,736.0645,-1332.3284,13.1308,0.0939,3,3,RESPAWN_DELAY); // 코브라
	AddStaticVehicleEx(521,736.0645,-1332.3284,13.1308,0.0939,3,3,RESPAWN_DELAY); // 코브라
	AddStaticVehicleEx(521,737.5529,-1332.3253,13.1404,0.1010,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(521,738.6276,-1332.3235,13.1404,0.1009,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(521,739.6529,-1332.3224,13.1272,0.0925,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(463,741.3044,-1332.1250,13.1143,359.9594,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(463,742.3543,-1332.1256,13.0979,359.9594,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(463,743.5517,-1332.1271,13.1076,359.9525,3,3,RESPAWN_DELAY); //
	AddStaticVehicleEx(463,744.5283,-1332.1276,13.0933,359.9590,3,3,RESPAWN_DELAY); //
MCAR[19][1]=AddStaticVehicleEx(463,745.7260,-1332.1292,13.1000,359.9687,3,3,RESPAWN_DELAY); // 코브라끝
//==============================================================================================
MCAR[24][0]=AddStaticVehicleEx(426,1245.9832,-2044.1262,59.5695,268.9541,0,0,RESPAWN_DELAY); // 프리미어
	AddStaticVehicleEx(426,1246.1260,-2036.3655,59.5846,268.9492,0,0,RESPAWN_DELAY); //
	AddStaticVehicleEx(541,1245.3031,-2032.6737,59.4951,271.1645,0,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(482,1245.8868,-2029.0369,59.9286,270.1036,0,0,RESPAWN_DELAY); //
	AddStaticVehicleEx(490,1563.6527,-1556.0795,13.7050,-270.8777,-1,-1,RESPAWN_DELAY); ////SSDASDADASDASDASDSADASDSADA
    AddStaticVehicleEx(490,1563.6621,-1559.2396,13.7070,90.0000,-1,-1,RESPAWN_DELAY);
    AddStaticVehicleEx(490,1563.7411,-1562.3315,13.6152,90.0000,-1,-1,RESPAWN_DELAY);
MCAR[24][1]=AddStaticVehicleEx(426,1246.0509,-2040.4414,59.5869,268.9492,0,0,RESPAWN_DELAY); // 뷰리토
//==============================================================================================
MCAR[25][0]=AddStaticVehicleEx(409,2500.5356,-1946.5576,13.2885,90.6204,1,1,RESPAWN_DELAY); // 대명회 리무진 1
	AddStaticVehicleEx(426,2486.0667,-1952.9814,13.2098,0.1354,1,1,RESPAWN_DELAY); // 대명회 프리미어 1
	AddStaticVehicleEx(426,2492.4221,-1953.2322,13.2072,1.2470,1,1,RESPAWN_DELAY); // 대명회 프리미어 2
MCAR[25][1]=AddStaticVehicleEx(409,2479.8037,-1946.7910,13.2855,270.6770,1,1,RESPAWN_DELAY); // 대명회 리무진 2
//==============================================================================================
MCAR[26][0]=AddStaticVehicleEx(431,2219.5767,-1333.4991,24.0822,359.9449,1,1,RESPAWN_DELAY); // 버스
	AddStaticVehicleEx(492,2230.2356,-1345.3104,23.7662,271.6342,1,1,RESPAWN_DELAY); // 그린우드
	AddStaticVehicleEx(492,2230.1379,-1341.8374,23.7654,269.1185,1,1,RESPAWN_DELAY); // 그린우드
MCAR[26][1]=AddStaticVehicleEx(431,2215.3782,-1333.5657,24.0839,359.9748,1,1,RESPAWN_DELAY); // 버스
//==============================================================================================
MCAR[27][0]=AddStaticVehicleEx(409,1482.2247,-1492.7294,13.3503,89.0537,1,1,RESPAWN_DELAY); // 리무진
	AddStaticVehicleEx(445,1472.4343,-1501.9600,13.4219,89.9940,1,1,RESPAWN_DELAY); // 어드미럴 1
	AddStaticVehicleEx(445,1472.3843,-1492.5791,13.4249,89.3924,1,1,RESPAWN_DELAY); // 어드미럴 2
MCAR[27][1]=AddStaticVehicleEx(445,1482.1339,-1502.0310,13.4244,89.0605,1,1,RESPAWN_DELAY); // 어드미럴 3
//==============================================================================================
MCAR[29][0]=AddStaticVehicleEx(567,2547.2732,734.5187,10.6912,180.7922,5,5,RESPAWN_DELAY); // Uptown 424 Kilo Block
	AddStaticVehicleEx(567,2551.0320,734.5704,10.7159,180.7753,5,5,RESPAWN_DELAY); //
MCAR[29][1]=AddStaticVehicleEx(567,2554.0583,734.6111,10.7267,180.7888,5,5,RESPAWN_DELAY); //
//==============================================================================================
MCAR[30][0]=AddStaticVehicleEx(567,2206.7136,2786.3877,10.6887,180.0109,30,30,RESPAWN_DELAY); //MS13
	AddStaticVehicleEx(567,2209.7412,2786.3872,10.7123,179.9981,30,30,RESPAWN_DELAY); //MS13
MCAR[30][1]=AddStaticVehicleEx(567,2190.3064,2786.3870,10.7236,179.9871,30,30,RESPAWN_DELAY); //MS13
//==============================================================================================
MCAR[31][0]=AddStaticVehicleEx(426,856.0239,-1451.7296,13.3597,358.7188,0,0,RESPAWN_DELAY); // 대북 리무진
	AddStaticVehicleEx(580,860.3031,-1451.7589,13.4575,358.0894,0,0,RESPAWN_DELAY); //
	AddStaticVehicleEx(580,852.1975,-1451.8462,13.4428,355.6134,0,0,RESPAWN_DELAY); //
	AddStaticVehicleEx(426,848.1009,-1451.4323,13.3174,354.0751,0,0,RESPAWN_DELAY); //
MCAR[31][1]=AddStaticVehicleEx(409,883.4084,-1452.2161,13.3782,180.1050,0,0,RESPAWN_DELAY); //말할것 없이 상동
//==============================================================================================
MCAR[32][0]=AddStaticVehicleEx(470,956.1174,-1202.4219,17.0132,270.4100,1,1,RESPAWN_DELAY); //정부용병 시작
	AddStaticVehicleEx(400,2172.2048,1028.8615,10.8953,269.0739,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(401,2172.0930,1025.6205,10.5794,270.0107,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(402,2172.4224,1022.2339,10.6519,268.7670,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(404,2172.6440,1019.2883,10.5628,270.7248,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(405,2171.9941,1016.0892,10.7185,267.1505,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(410,2171.4402,1012.8381,10.4808,270.0792,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(412,2172.6089,1009.5657,10.6497,270.4077,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(409,2173.3843,1006.5186,10.6057,269.4738,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(413,2162.0408,1006.4481,10.8837,89.6727,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(415,2162.9224,1009.8093,10.6025,91.9892,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(418,2162.6724,1012.9846,10.9322,90.0882,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(419,2162.8989,1016.0687,10.6149,95.6743,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(421,2162.4258,1019.2822,10.6885,91.3540,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(422,2163.1514,1022.3200,10.8283,89.4587,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(424,2162.6262,1025.8175,10.5922,90.1964,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(426,2162.3933,1029.0692,10.5505,87.7591,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(434,2142.1987,1028.8562,10.7983,271.1805,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(442,2143.1016,1025.6460,10.6702,271.2043,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(439,2142.7002,1022.4598,10.7239,270.3869,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(440,2142.4307,1019.4018,10.9365,269.4767,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(467,2142.3735,1013.1312,10.5604,269.0113,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(445,2142.0623,1009.6961,10.7078,269.8154,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(436,2141.8208,1006.5386,10.5874,271.1944,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(461,2122.6687,987.2736,10.3982,357.8923,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(462,2125.9111,987.1548,10.4084,2.9702,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(463,2129.0613,987.2833,10.3536,357.5334,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(468,2132.2280,987.5423,10.4884,1.0187,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(469,2135.4692,988.2187,10.8621,177.5975,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(470,2148.2107,987.2144,10.8369,358.7958,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(500,2151.4590,986.9130,10.9502,359.3373,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(471,2154.6165,987.6987,10.3379,359.0368,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(502,2176.1809,988.3360,10.4878,0.0737,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(411,2179.4592,987.9121,10.5441,358.3718,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(505,2182.5420,988.1040,10.8965,0.0401,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(506,2185.9163,987.6501,10.5188,1.6278,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(507,2189.2234,988.2098,10.6481,359.6533,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(535,2157.8972,987.6678,10.5841,0.1210,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(536,2132.6738,1006.5167,10.5578,88.8847,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(540,2133.0486,1009.7003,10.6823,88.8638,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(522,2132.6404,1012.9595,10.3774,88.5702,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(521,2132.6865,1016.0087,10.3873,87.2390,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(526,2132.6274,1019.2693,10.6062,89.5918,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(527,2132.7900,1022.4037,10.5361,89.6428,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(529,2132.3447,1025.6782,10.4533,89.3979,1,1,RESPAWN_DELAY); //
	AddStaticVehicleEx(560,2132.7310,1028.9315,10.5258,88.9800,1,1,RESPAWN_DELAY); //
MCAR[32][1]=AddStaticVehicleEx(521,956.0016,-1181.0996,16.5109,89.8622,1,1,RESPAWN_DELAY); // 정부용병 끝

MCAR[33][0]=AddStaticVehicleEx(449,-1944.3750,113.7926,26.1223,0.0000,3,3,RESPAWN_DELAY); //
    AddStaticVehicleEx(449,-1944.3750,113.7926,26.1223,0.0000,3,3,RESPAWN_DELAY); //전차전
    AddStaticVehicleEx(449,818.1609,-1369.4263,-1.1275,48.3194,3,3,RESPAWN_DELAY); //전차후
    AddStaticVehicleEx(487,1765.9656,-2287.2722,26.9729,2.9014,3,3,RESPAWN_DELAY); //헬기입국후
    AddStaticVehicleEx(487,-1215.7780,43.9714,14.3431,314.4260,3,3,RESPAWN_DELAY); //헬기입국전
    AddStaticVehicleEx(553,-1289.9688,10.4252,15.4802,265.0782,3,3,RESPAWN_DELAY); //비행기
    AddStaticVehicleEx(454,720.4861,-1634.5352,0.1634,358.9134,3,3,RESPAWN_DELAY); //배
    AddStaticVehicleEx(452,-2775.2615,-2614.6338,0.0351,281.8044,7,7,RESPAWN_DELAY); //배
    AddStaticVehicleEx(452,-2885.1709,-2626.8699,-0.2269,198.1057,7,7,RESPAWN_DELAY); //배
MCAR[33][1]=AddStaticVehicleEx(454,-1719.4032,1436.0215,0.1757,357.9265,3,3,RESPAWN_DELAY); //

MCAR[34][0]=AddStaticVehicleEx(409,1242.7296,-1703.9384,13.3468,270.4831,0,0,RESPAWN_DELAY);//회사
	AddStaticVehicleEx(426,1259.9233,-1699.3112,13.2896,177.8806,0,0,RESPAWN_DELAY); //
	AddStaticVehicleEx(426,1265.9503,-1699.7694,13.2972,179.0556,0,0,RESPAWN_DELAY); //
	AddStaticVehicleEx(426,1262.8477,-1699.7179,13.3072,179.0473,0,0,RESPAWN_DELAY);//
	AddStaticVehicleEx(426,1227.5422,-1698.5665,13.2904,178.9080,0,0,RESPAWN_DELAY);//
	AddStaticVehicleEx(426,1223.6376,-1698.4922,13.2983,178.9140,0,0,RESPAWN_DELAY);//
	AddStaticVehicleEx(426,1220.3905,-1698.4304,13.3052,178.9190,0,0,RESPAWN_DELAY);//
	AddStaticVehicleEx(426,1218.2155,-1698.6333,13.3128,178.9248,0,0,RESPAWN_DELAY);//
MCAR[34][1]=AddStaticVehicleEx(409,1211.8917,-1688.3264,13.3465,358.4920,4,4,RESPAWN_DELAY);//회사끝

MCAR[35][0]=AddStaticVehicleEx(462,1491.2336,-1584.8246,13.1432,93.7277,3,3,RESPAWN_DELAY);//요리사
	AddStaticVehicleEx(462,1486.2330,-1584.9199,13.1443,88.7728,3,3,RESPAWN_DELAY); //
MCAR[35][1]=AddStaticVehicleEx(462,1502.6099,-1584.6195,13.1464,92.0009,3,3,RESPAWN_DELAY);//요리사

MCAR[36][0]=AddStaticVehicleEx(437,1110.8212,-1328.3253,13.4408,359.2737,3,3,RESPAWN_DELAY);//대
	AddStaticVehicleEx(409,1097.6161,-1328.9135,13.0573,358.9977,1,1,RESPAWN_DELAY); //대
MCAR[36][1]=AddStaticVehicleEx(437,1124.0571,-1328.4670,13.4648,359.3767,3,3,RESPAWN_DELAY);//대학교차

MCAR[37][0]=AddStaticVehicleEx(502,2696.7722,-1672.8787,9.3774,180.0919,3,4,RESPAWN_DELAY);//레
	AddStaticVehicleEx(502,2691.8901,-1672.8876,9.3739,180.0895,3,4,RESPAWN_DELAY);//레
	AddStaticVehicleEx(502,2686.9382,-1672.8958,9.3660,180.0872,3,4,RESPAWN_DELAY);//레
	AddStaticVehicleEx(502,2682.1545,-1672.9031,9.3462,180.0872,3,4,RESPAWN_DELAY);//레
	AddStaticVehicleEx(502,2677.0527,-1672.9097,9.3248,180.0872,3,4,RESPAWN_DELAY);//레
	AddStaticVehicleEx(503,2658.0068,-1692.0034,9.2265,268.9537,7,7,RESPAWN_DELAY);//레
	AddStaticVehicleEx(503,2657.9165,-1696.9105,9.2392,268.9504,7,7,RESPAWN_DELAY);//레
	AddStaticVehicleEx(503,2657.8264,-1701.8420,9.2107,268.9454,7,7,RESPAWN_DELAY);//레
	AddStaticVehicleEx(503,2657.7415,-1706.4547,9.2298,268.9505,7,7,RESPAWN_DELAY);//레
MCAR[37][1]=AddStaticVehicleEx(503,2657.6438,-1711.7788,9.2402,268.9550,7,7,RESPAWN_DELAY);//레이서차

OCAR = MCAR[37][1]+1; 

	for(new v=1;v<MAX_VEHICLES;v++)
	{
		if(v >= MCAR[1][0] && v <= MCAR[1][1])
		{
 			SetVehicleHealth(v,1500);
		}
		else if(v >= MCAR[2][0] && v <= MCAR[2][1])
		{
			SetVehicleHealth(v,1500);
		}
		else if(v >= MCAR[3][0] && v <= MCAR[3][1])
		{
			SetVehicleHealth(v,1500);
		}
	}

	for(new h=1; h<MAX_BUILDING; h++)
	{
		if(BuildingInfo[h][hCreated] != 0)
		{
			new pick;
			switch(BuildingInfo[h][hOwned])
			{
			case 1: pick=1239;
			case 0: pick=1273;
			}
			BuildingInfo[h][hPickupid] = AddStaticPickup(pick, 1, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]);
		}
	}

	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0)
		{
			AddStaticPickup(1272, 1, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			pickups++;
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			AddStaticPickup(1239, 1, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			pickups++;
		}
	}
	for(new i = 0; i < sizeof(BurgerDriveIn); i++)
	{
		BurgerPickUp[i] = CreatePickup(1239, 23, BurgerDriveIn[i][0], BurgerDriveIn[i][1], BurgerDriveIn[i][2]);
		pickups++;
	}
	for(new i = 0; i < sizeof(ChickenDriveIn); i++)
	{
		ChickenPickUp[i] = CreatePickup(1239, 23, ChickenDriveIn[i][0], ChickenDriveIn[i][1], ChickenDriveIn[i][2]);
		pickups++;
	}

	//픽업

	TextPickup(1239,1,2507.4119,1242.3574,10.8270,20,"(/타투)\n$1000\n기능을 다시 입력하면 타투는 사라집니다.");

	TextPickup(1239,1,209.7017,1887.5781,17.4923,20,"레이더실 입장");
	TextPickup(1239,1,222.7892,1931.3868,17.6406,20,"헬기착륙장입장");
	TextPickup(1239,1,222.3788,1933.1284,23.2422,20,"헬기착륙장퇴장");
	TextPickup(1239,1,2105.4360,1019.3893,10.8203,20,"(/차 판매목록)"); // 여기 원래 좌표가 어딘지? 이거여??ㄱㄷ 그 원래 잇던곳에서 면허소 뒤쪽으로 옴김
	TextPickup(1239,1,-68.9353,-1395.9962,857.9078,20,"(/입원)");
	TextPickup(1239,1,2947.2197,-2004.6283,9.3792,20,"(/얻기)");//
	TextPickup(1239,1,-34.5214,-1401.8560,863.6719,20,"관계자외출입금지!\n(/EMT)");
	TextPickup(1239,1,2101.6350,-104.7200,2.2769,20,"(/얻기)");
	TextPickup(1239,1,710.1224,-1595.6311,14.1933,20,"라스 벤츄라 택시호출");
	TextPickup(1239,1,716.9501,-1628.5004,2.4297,20,"배에 탑승하지마세요.");
	TextPickup(1239,1,708.3051,-1630.9192,3.4375,20,"라스 벤츄라에 오신걸 환영합니다.");
	TextPickup(1239,1,2119.7700,953.2288,10.8130,20,"/차 폐차");
	TextPickup(1239,1,1811.4646,-1889.3226,13.4075,20,"택시 회사");
	TextPickup(1239,1,773.3406,5.4519,1000.7802,20,"F를 누르시면 기술을 배울수 있습니다 근육80이상.");
	TextPickup(1239,1,1498.3195,-1581.8280,13.5498,20,"요리사");
	TextPickup(1239,1,-1719.1737,1436.8005,3.8995,20,"입국하기");//항구
	TextPickup(1239,1,-1946.2253,110.6274,25.7186,20,"입국하기");//전철
	TextPickup(1239,1,-1293.3732,12.8728,14.1484,20,"입국하기");//비행기
   	TextPickup(1239,1,-1216.1666,45.7708,14.1392,20,"들어가기");//헬기
   	TextPickup(1239,1,-1968.6156,109.9463,27.6875,20,"들어가기");//전철
    TextPickup(1239,1,-1262.6256,40.6802,14.1391,20,"들어가기");//비행기
   	TextPickup(1239,1,-1227.0057,54.9914,14.1322,20,"들어가기");//헬기
	TextPickup(1239,1,-791.3005,497.3792,1367.3672,20,"들어가지마세요.");
	TextPickup(1239,1,1924.9641,-1772.3605,18.7052,20,"주유소집");
	TextPickup(1239,1,237.3413,126.1473,1003.2188,5,"경찰서 CCTV 관리기계\n(/cctv)");
	TextPickup(1239,1,1833.5820,-1336.6525,-89.4539,5,"방송국 광고소\n(/광고)");
	TextPickup(1239,1,1730.35,-2237.53,-2.72,5,"");//릴리 도박장
	TextPickup(1239,1,1732.12,-2185.03,-11.50,5,"");//릴리 도박장
	TextPickup(1239,1,358.8579,168.9760,1008.3828,20,"(/국적변경)");
	TextPickup(2894,1,1173.0405,1349.0688,10.9219,20,"면허소 면허\n[F]키를 눌러주세요.");
	//=========================공중전화=================================
    TextPickup(1239,1,547.3547,-1498.1681,14.4980,20,"(/공중전화)");
    TextPickup(1239,1,1997.1864,-1440.5804,13.5646,20,"(/공중전화)");
    TextPickup(1239,1,1628.9464,-2334.8721,13.5398,20,"(/공중전화)");
    TextPickup(1239,1,355.7981,-1364.2434,14.4757,20,"(/공중전화)");
    TextPickup(1239,1,2166.3967,-1154.9603,24.8750,20,"(/공중전화d)");
    TextPickup(1239,1,1497.0654,-1667.9014,14.0469,20,"(/공중전화)");
    TextPickup(1239,1,2258.5352,-1213.1190,23.9688,20,"(/공중전화)");
    TextPickup(1239,1,1808.7996,-1600.6331,13.5469,20,"(/공중전화)");
    TextPickup(1239,1,726.8434,-1258.0876,13.5391,20,"(/공중전화)");
    TextPickup(1239,1,1711.2709,-1604.6990,13.5469,20,"(/공중전화)");
    TextPickup(1239,1,1726.8444,-1258.0195,13.5391,20,"(/공중전화)");
    TextPickup(1239,1,702.3674,-1594.9342,14.1346,20,"(/공중전화)")
	//========================================================
	TextPickup(1239,1,1910.9830,-1775.1710,465.1599,20,"(/금고)");
	TextPickup(1239,1,1271.5930,295.0219,20.6563,20,"(/얻기)");
	TextPickup(1239,1,2202.5347,2473.3333,10.8203,20,"/주유");
	TextPickup(1239,1,2210.7839,2475.5974,10.8203,20,"/주유");
	TextPickup(1239,1,2116.0803,922.4962,10.8203,20,"/주유");
	TextPickup(1239,1,2114.8464,911.7383,10.8203,20,"/주유");
	TextPickup(1318,1,2203.3596,2474.3584,10.8203,20,"/주유");
	TextPickup(1318,1,1468.1189,-1558.3823,13.5547,20,"게임머신 [F]를 누르세요");
	TextPickup(1318,1,1468.1451,-1555.9590,13.5547,20,"게임머신 [F]를 누르세요");
	TextPickup(1318,1,1869.9200,-1609.9800,-56.3340,20,"");
	TextPickup(1318,1,-1734.2653,1461.8420,7.1875,20,"들어가기");
	TextPickup(1318,1,1765.1221,-2272.1482,26.7960,20,"내려가기");
	TextPickup(1318,1,1766.2572,-2296.0698,-2.5837,20,"올라가기");
	TextPickup(1239,1,1765.5021,-1805.3235,772.1852,20,"(/도구)");
	TextPickup(1239,1,2149.0703,2747.9080,10.8203,20,"/주유");
	TextPickup(1239,1,-2901.5820,-2632.7107,4.1150,20,"들어가기");
	TextPickup(1239,1,2290.1050,2431.0547,10.8203,20,"경찰서");
	TextPickup(1239,1,-2901.6675,-2631.7847,4.1484,20,"나가기"); // 나가기
	TextPickup(1239,1,-2899.8435,-2628.1729,4.2013,20,"/업무"); // 업무
	TextPickup(1239,1,2098.4604,-1801.8510,13.3828,20,"/입사"); // 피자
	TextPickup(1239,1,-3000.2668,-2609.5378,15.2000,20,"들어가기"); // 들어가기
	TextPickup(1239,1,-36.2034,-1379.4122,863.7109,20,"옥상");//병원
	TextPickup(1239,1,2441.5891,1722.4738,10.8203,20,"도구점");//도구
	TextPickup(1239,1,1759.7456,-1804.0219,772.1852,20,"/로또");//병원
	TextPickup(1239,1,-2457.1096,-2419.8159,-42.0984,20,"나가기");
	TextPickup(1239,1,-3004.0908,-2639.1831,15.2000,20,"들어가기");
	TextPickup(1239,1,-20.8989,-1359.2627,846.2500,20,"병원[F]를누르세요");
	TextPickup(1239,1,1550.1035,-1810.5482,207.8976,20,"체육관2 입장");
	TextPickup(1239,1,1449.3732,-1836.0823,297.1156,20,"체육관2 퇴장");
	TextPickup(1239,1,-1227.0057,54.9914,14.1322,20,"들어가기");
	TextPickup(1239,1,1786.4120,-1299.9563,66.0877,20,"[F]를누르세요");
	TextPickup(1318,1,-2773.6501,-2614.5869,1.2454,20,"건너기");
	TextPickup(1318,1,-2884.5510,-2628.5151,1.4476,20,"건너기");
	TextPickup(1239,1,1786.7638,-1302.8759,13.6565,20,"[F]를 누르세요");
	TextPickup(1239,1,2054.8152,2418.6477,312.2635,20,"/런닝머신1");
	TextPickup(1239,1,2054.5815,2422.0693,312.2635,20,"/런닝머신2");
	TextPickup(1239,1,2054.9719,2432.5479,313.3567,20,"/싸이클1");
	TextPickup(1239,1,2055.0391,2435.3198,313.3567,20,"/싸이클2");
	TextPickup(1239,1,1951.9427,1342.9354,15.3746,20,"F [방송국]");
	TextPickup(1239,1,2507.4119,1242.3574,10.8270,20,"F [방송국]");
	TextPickup(1239,1,2074.8987,2403.5447,312.1950,20,"기술을 배우고싶으면'F'를 누르세요");
	TextPickup(1239,1,386.2978,173.8582,1008.3828,20,"[F]를 누르세요");
	TextPickup(1239,1,1359.6204,-1834.5201,867.6764,20,"대학교퇴장");
	TextPickup(1239,1,1352.0518,-1778.0063,47.1456,20,"대학교입장");
	TextPickup(1239,1,1173.1067,-1323.1831,15.3963,20,"대학교입장");
	TextPickup(1239,1,1381.2482,-1837.5260,867.6764,20,"대학교옥상");
	TextPickup(1239,1,1911.3960,-1782.3195,465.1537,20,"(주유소집퇴장)");
	TextPickup(1239,1,1759.6058,-1808.3375,772.1852,20,"(/불법지도구매)\n$2000");
	TextPickup(1239,1,2368.7285,-1119.9387,1050.8750,20,"(/페이무기)");
	TextPickup(1318,1,1422.3175,-1584.7778,-12.2102,20,"");
	TextPickup(1239,1,-1262.6256,40.6802,14.1391,20,"들어가기");
	TextPickup(1318,1,1928.5820,-1782.3179,13.5469,20,"");
	TextPickup(1239,1,358.7060,184.4863,1008.3828,20,"(/강제이혼)");
	TextPickup(1239,1,-2148.3818,-241.9343,36.5156,20,"불법대리점\n(/불법)");
	TextPickup(1239,1,362.2445,173.5942,1008.4747,20,"(/얻기 시민증)");
	TextPickup(1239,1,2639.3508,1097.6390,10.8203,20,"(/주유)\n$100");
	TextPickup(1239,1,2639.5574,1108.1146,10.8203,20,"(/주유)\n$100");
	TextPickup(1239,1,358.1170,173.5462,1008.4688,20,"(/공고)\n리더");
	TextPickup(1239,1,1294.6906,-1873.1201,14.7202,20,"(/네온)");
	TextPickup(1239,1,2233.9802,-1333.2562,23.9816,20,""); // 교회
	TextPickup(1239,1,2283.9487,-1325.0078,-22.6091,20,""); // 교회
	TextPickup(1239,1,347.4864,162.1591,1025.7891,20,"(/백악관무장)"); //시청
	TextPickup(1239,1,391.1463,-1757.3154,8.2380,20,"(/판매)"); //시청
	TextPickup(1239,1,-382.8919,-1438.9773,26.3300,20,"(/판매\n(/얻기))"); //시청
	TextPickup(1239,1,-438.7477,-1307.6089,35.0138,20,""); //심기 수확 자리
	TextPickup(1239,1,1003.5910,-1212.2166,16.9375,20,"(/업무)"); //정부용병
	TextPickup(1239,1,2063.3796,-2304.8845,8539.4199,20,"(/업무)"); //CIA
	TextPickup(1239,1,2782.3027,-2019.0826,13.5547,20,"/농구공구매");
	AddStaticPickup(1318, 1, 1903.4196,-1557.5585,-38.6750); // 빈민 옥상
	AddStaticPickup(1318, 1, 1852.8533,-1586.7365,29.0469); // 빈민 4층, 옥상
	AddStaticPickup(1318, 1, 1911.2097,-1776.2361,13.0898); // 하이카 튜닝장
	AddStaticPickup(1239, 1, -2148.3818,-241.9343,36.5156);
	AddStaticPickup(1239, 1, 358.9433,179.7492,1008.3828);
	AddStaticPickup(1318, 1, 1565.0088,-1684.4321,28.3956); // 경찰서옥상
	AddStaticPickup(1318, 1, 2127.3735,2379.5562,10.8203);//병원 입장
	AddStaticPickup(1318, 1, 2017.33,-1409.32,6.87);//병원 퇴장
	AddStaticPickup(1318, 1, 2033.4808,-1392.4335,6.8679);//병원 옥상 입장
	AddStaticPickup(1318, 1, 2140.2024,-1427.8402,413.0809);//구병원옥상퇴장
	AddStaticPickup(1318, 1, 2080.2363,2379.7473,60.8169);//병원 옥상 퇴장
	AddStaticPickup(1318, 1, 1743.0804,-1864.0182,13.5744);//면허소입장
	AddStaticPickup(1318, 1, 202.4471,1923.2218,17.6406);//군인입장
	AddStaticPickup(1239, 1, 317.4763,-161.8533,999.5938);//군무장
	AddStaticPickup(1239, 1, 1080.6841,-345.2799,73.9868);
	AddStaticPickup(1239, 1, -792.9693,500.5572,1367.3672);//Waiter uniform list
	AddStaticPickup(1239, 1, -779.3134,497.8989,1371.7490);//Waiter uniform list 2
	AddStaticPickup(1239, 1, 253.9280,69.6094,1003.6406); //Clear icon in Police Station
	AddStaticPickup(1318, 1, 2196.5688,1677.2721,12.3672); //시청
	AddStaticPickup(1239, 1, 1381.0413,-1088.8511,27.3906); //Bill Board (old Job Department)
	AddStaticPickup(371, 1, 1536.0, -1360.0, 1150.0); //LS towertop*/
	AddStaticPickup(1242, 1, 1527.5,-12.1,1002.0); // binco armor
	AddStaticPickup(1240, 1, 279.3000,1853.5619,8.7649); // area51 health
	AddStaticPickup(1239, 1, 379.1396,-114.2661,1001.4922); // 피자 픽업
	AddStaticPickup(1240, 1, 263.1702,76.4346,1001.0391); // Jail health
	AddStaticPickup(1239, 1, 248.2137,-55.0870,1.5776); // Drugs Farmer reg
	AddStaticPickup(1318, 1, 2347.9897,2261.7397,8.1478);//옷가게 입장
	AddStaticPickup(1239, 1, 2419.9941,-1509.5865,24.0000);//Cluckin bell under it
	AddStaticPickup(1239, 1, 2398.6240,-1899.2014,13.5469);//Cluckin bell next to 10 green
	AddStaticPickup(1239, 1, 810.4849,-1616.2451,13.5469);//Marina burger
	AddStaticPickup(1318, 1, 2755.9546,2476.6213,11.0625);//Pizzaboy
	AddStaticPickup(1318, 1, -2441.9749,754.0135,35.1786); // 24-7 Entrance
	AddStaticPickup(1239, 1, -25.1326,-141.0670,1003.5469); // 24-7 Exit
	AddStaticPickup(1318, 1, 1259.3800,-785.4168,92.0302);//마퍄입구
	AddStaticPickup(1318, 1, 914.37,-1004.63,37.98);//FBI입장
	AddStaticPickup(1318, 1, 1607.5199,1815.9969,10.8203);//FBI퇴장
	AddStaticPickup(1239, 1, 2472.7322,2034.4108,11.0625);//Jim's sticky ring 도넛
	AddStaticPickup(1239, 1, 349.5560,161.6693,1019.9912); //Heal me
	AddStaticPickup(1318, 1, 1828.1594,-1980.4380,13.5469); //로초크 HQ 입장
	AddStaticPickup(1318, 1, 2495.2979,-1690.7942,14.7656); //세빌 HQ 입장
	AddStaticPickup(1239, 1, 203.5140,-202.2578,1.5781); //Pizza stack at BlueBerry
	AddStaticPickup(1318, 1, 725.3624,-1276.2256,13.6484); // 야쿠자 HQ 입장
	AddStaticPickup(1318, 1, 1329.1578,-984.8067,33.8966); // 페이데이 HQ 입장
	AddStaticPickup(1318, 1, 1570.4733,-1334.1598,16.4844);//스타타워입장
	AddStaticPickup(1318, 1, 1548.7168,-1363.7445,326.2183);//스타타워퇴장
	AddStaticPickup(1314, 1, 1528.779,-1678.113,5.890625); //체포 Place
	AddStaticPickup(1314, 1, 277.1836,-1612.8965,26.6788); //체포 Place
	AddStaticPickup(1314, 1, 285.4912,-1614.8547,26.6788); //체포 Place
	AddStaticPickup(1314, 1, 286.7271,-1609.4861,26.6788); //체포 Place
	AddStaticPickup(1239, 1, 2049.0767,-1399.3845,6.8747); //입원시키는 장소
	AddStaticPickup(1314, 1, 278.7051,-1608.1757,26.6788); //체포 Place//
	AddStaticPickup(1239, 1, 242.7591,66.4315,1003.6406); // Inside PD elevator
	AddStaticPickup(1239, 1, 1524.5724,-1677.8043,6.2188); // PD Tunnel
	AddStaticPickup(1239, 1, 1557.7257,-1675.2711,28.3955); // PD roof
	AddStaticPickup(1279, 1, 523.6057,-1812.9794,6.5713); // Get Drugs Pickup
	AddStaticPickup(1279, 1, 1424.1729,-1317.9955,13.5547); // Get Drugs Pickup 2
	AddStaticPickup(1239, 1, 250.0484,66.2467,1003.6406); // Weapon Licenses Buyable
	AddStaticPickup(1239, 1, 253.6900,185.8692,1008.1719); // FBI 업무
	AddStaticPickup(1318, 1, 913.3898,-1021.0915,111.0547); // FBI 옥상 기지로
	AddStaticPickup(1318, 1, 288.9163,168.1715,1007.1719); // FBI 기지 옥상으로
	AddStaticPickup(1239, 1, 3267.72,-804.99,11.20); // 군인업무위치
	AddStaticPickup(1239, 1, 237.3877,121.7293,1003.2187); // NEW 경찰 업무위치
	AddStaticPickup(1318, 1, 1554.3844,-1687.8615,66.3586); // NEW 경찰 엘리베이터
	AddStaticPickup(1239, 1, 215.6517,114.6445,999.0156); // NEW 경찰 체포장소
	AddStaticPickup(1239, 1, 225.6018,121.7326,999.0681); // NEW 경찰 전과삭제 위치
	AddStaticPickup(1239, 1, 202.3695,157.5796,1003.0234); // FBI 체포위치
	AddStaticPickup(1239, 1, 196.8443,168.7334,1003.0234); // FBI 전과삭제
	AddStaticPickup(1239, 1, 1261.0224,-785.3953,1091.9062); // 마피아 정문
	AddStaticPickup(1239, 1, -273.0503,-1505.9250,4.9964); // 농부 심기 가능
	AddStaticPickup(1239, 1, -256.3690,-1366.7371,9.8769); // 농부 심기 가능
	AddStaticPickup(1239, 1, 2915.6428,2144.5879,1992.8464); // 군인무기얻는곳
	AddStaticPickup(1239, 1, 194.0201,178.0398,1003.0234); // 엡비체포아이콘
	AddStaticPickup(1239, 1, 1984.5571,-2140.5891,13.5469); // 밀수입 입사
	AddStaticPickup(1239, 1, 870.3893,-24.9174,63.9866); // 밀수입 구매
	AddStaticPickup(1239, 1, 2666.7095,-1474.1113,30.5938); // 밀수입 배달
	AddStaticPickup(1318, 1, 2474.4353,1023.4624,10.8203); //은행
	AddStaticPickup(1318, 1, 2473.9734,997.7219,14.2725); //체육관 입장
	AddStaticPickup(1318, 1, 1965.8329,1623.0983,12.8628); // 클럽 입구
	AddStaticPickup(1239, 1, 816.0797,-1386.8807,13.6081); // 재즈바 입구
	AddStaticPickup(1318, 1, 2546.6387,1972.2493,10.8203); //편의점1
	AddStaticPickup(1318, 1, 2452.3806,2064.4331,10.8203);// 편의점2 입장
	AddStaticPickup(1318, 1, 1937.2456,2307.2346,10.8203);// 편의점3 입장
	AddStaticPickup(1239, 2, 1588.3090,-1635.6660+5,13.3828);//견인된차 받는곳 픽업
	AddStaticPickup(1318, 1, 2015.1666,1106.4825,10.8203);//제퍼슨모텔 입구
	AddStaticPickup(1318, 1, 2228.0364,-1150.5570,1025.7969);//제퍼슨모텔 출구
	AddStaticPickup(1239, 1, 1928.5973,-1776.3507,13.5469);//정비사 편의점
	dlqtk3 = CreatePickup (1239, 1, 2752.2336,2478.6577,11.0625);//피자
	dlqtk4 = CreatePickup (1239, 1, 2770.8308,-1628.5758,12.1775);//마약딜러
	dlqtk5 = CreatePickup (1239, 1, 1074.4016,-1298.0721,17.0543);//노점상인
	dlqtk6 = CreatePickup (1239, 1, 2744.2468, -2453.8977, 13.8623); // 총기상
	dlqtk11 = CreatePickup (1239, 1, -382.9749,-1426.4969,26.3186);//농부
	dlqtk12 = CreatePickup (1239, 1, 413.3022,-1757.6086,8.2427);//어부
	dlqtk13 = CreatePickup (1239, 1, 2620.6934,1079.9821,10.8203);//트럭기사
	dlqtk16 = CreatePickup (1239, 1, 2194.3259,-1973.0719,13.5593);//환경미화원
	dlqtk20 = CreatePickup (1239, 1, 1810.7354,-1895.6010,13.5800); // 택시기사
	ghxpf = CreatePickup (1239, 1, 2216.6230,-1147.1450,1025.7969);//제퍼슨 모텔픽업

	pickups=pickups+71;
	new randa = random(sizeof(RandCars));
	randa = random(sizeof(RandCars));carselect[0] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[1] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[2] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[3] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[4] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[5] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[6] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[7] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[8] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[9] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[10] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[11] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[12] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[13] = RandCars[randa][0];
	randa = random(sizeof(RandLCars));carselect[14] = RandLCars[randa][0];
	AddStaticVehicleEx(carselect[14],1279.4,-1337.0,13.5,1.0,-1,-1,RESPAWN_DELAY);//long
	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		SetWorldTime(tmphour);
	}

	ManualVehicleEngineAndLights();

	SetTimer("SyncUp", 1000,true);
	SetTimer("SetPlayerUnjail", 1000,true);
	SetTimer("ChangePlayerNameTag", 1000,true);
	SetTimer("OtherTimer", 1000,true);
	SetTimer("CarCheck", 30000,true);
	SetTimer("CustomPickups", 1000,true);
	SetTimer("Spectator", 2000,true);
	SetTimer("Production", 300000,true); //5 mins (300000)
	SetTimer("SaveAccounts", 900000,true); //15 mins every account saved
	SetTimer("StoppedVehicle", RunOutTime,true);
	SetTimer("CheckCarHealth", 10000,true);
	SetTimer("TraceLastCall", 300000,true);
	SetTimer("PlayerUpdate", 1000,true);
	SetTimer("CheckGas", 17500,true); // 기름 다는 것
	SetTimer("HealthCheck", 1000,true);
	SetTimer("carbakum", 1000,true);
	SetTimer("FuckOffCheater",2000,1);//무기핵방지
	SetTimer("BloodHack", 1000, 1); //체력핵방지
	SetTimer("npchelp", 3000,true);
	SetTimer("sontimer1",300000,true);
	SetTimer("ATimer",2000,true);
	SetTimer("HackTimer", 2000, true);

	SetTimer("AutoRepiar",1000,1);
	SetTimer("EMLCheck",500,1);
	SetTimer("TalkTimer",5000,1);
	SetTimer("ReTurnJobCarCheck",1000,1);

	SetTimer("WaittingTimer",1000,1);

	return 1;
}


forward WaittingTimer();
public WaittingTimer()
{
	for(new i=0;i<M_P;i++)
	{
	    if(WaittingTime[i]!=0)
		{
			WaittingTime[i]--;
		}
	    if(WaittingTime[i]<0)
		{
			WaittingTime[i]=0;
		}
	}
}
forward ReTurnJobCarCheck();
public ReTurnJobCarCheck()
{
	for(new v=1;v<MAX_VEHICLES;v++)
	{
	    if(ReTurnJobCar[v]!=0)
	    {
			ReTurnJobCar[v]--;
			if(ReTurnJobCar[v]==0)
			{
				SetVehicleToRespawn(v);
			}
		}
	}
}

forward AutoRepiar();
public AutoRepiar()
{
    new Float:VH[MAX_VEHICLES];
    new engine, lights, alarm, doors, bonnet, boot, objective;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerInAnyVehicle(i))
	    {
			GetVehicleHealth(GetPlayerVehicleID(i),VH[GetPlayerVehicleID(i)]);
			GetVehicleParamsEx(GetPlayerVehicleID(i), engine, lights, alarm, doors, bonnet, boot, objective);
			if(VH[GetPlayerVehicleID(i)]>=800)
			{
				RepairVehicle(GetPlayerVehicleID(i));
			    SetVehicleParamsEx(GetPlayerVehicleID(i), engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleHealth(GetPlayerVehicleID(i),VH[GetPlayerVehicleID(i)]);
			}
		}
	}
}

forward TalkTimer();
public TalkTimer()
{
	Speaking++;
	if(Speaking==5)
	{
	    Speaking=0;
	}
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerNPC(i))
		{
			new npcname[MAX_PLAYER_NAME];
			GetPlayerName(i, npcname, sizeof(npcname));

			if(!strcmp(npcname,"Mangae",true))
			{
			    if(GetPlayerSkin(i)!=269)
			    {
					SetPlayerSkin(i, 269);
				}
				new Float:AngleNPC;
				GetPlayerFacingAngle(i,AngleNPC);
				if(AngleNPC!=90)
				{
					SetPlayerFacingAngle(i,90);
				}
				Anim(i,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
				switch(Speaking)
				{
				    case 0: { SetPlayerChatBubble(i," Mangae : \"안녕 입국자\"",COLOR_WHITE,15,5000); }
				    case 1: { SetPlayerChatBubble(i," Mangae : \"몬타나시티에 당도한걸 환영하오 낯선이여\"",COLOR_WHITE,15,5000); }
					case 2: { SetPlayerChatBubble(i," Mangae : \"당장꺼져\"",COLOR_WHITE,15,5000); }
					case 3: { SetPlayerChatBubble(i," Mangae : \"안꺼져?\"",COLOR_WHITE,15,5000); }
					case 4: { SetPlayerChatBubble(i," Mangae : \"뒤질래?\"",COLOR_WHITE,15,5000); }
			    }
			}

			if(!strcmp(npcname,"manga",true))
			{
				if(GetPlayerSkin(i)!=155)
			    {
					SetPlayerSkin(i, 155);
				}
				new Float:AngleNPC2;
				GetPlayerFacingAngle(i,AngleNPC2);
				if(AngleNPC2!=179)
				{
					SetPlayerFacingAngle(i,179);
				}
			}
		}
	}
	return 1;
}

forward EMLCheck(playerid);
public EMLCheck(playerid)
{
    new engine, lights, alarm, doors, bonnet, boot, objective;

	for(new v=1;v<MAX_VEHICLES;v++)
	{

		if(EML[v]==1)
		{
			GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, objective);
		    if(lights==1)
		    {
		    	SetVehicleParamsEx(v, engine, false, alarm, doors, bonnet, boot, objective);
			}else{
			    SetVehicleParamsEx(v, engine, true, alarm, doors, bonnet, boot, objective);
			}
		}
	}
}

public SyncUp()
{
	SyncTime();
	DollahScoreUpdate();
}

public SyncTime()
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;

		MoveShip();
		ExpUp();
		if (realtime)
		{
			if(tmphour==23)
			{
			    SetWorldTime(0);
				return 1;
			}
			SetWorldTime(tmphour+1);
		}
	}
	return 1;
}


public IsPlayerInTurf(playerid, turfid)
{
	if(IsPlayerConnected(playerid))
	{
		if(turfid == -1)
		{
			return 0;
		}
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(x >= TurfInfo[turfid][zMinX] && x < TurfInfo[turfid][zMaxX] && y >= TurfInfo[turfid][zMinY] && y < TurfInfo[turfid][zMaxY])
		{
			return 1;
		}
	}
	return 0;
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<M_P;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public Production()
{
	new string[256];
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pFishes] >= 5) { if(FishCount[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCount[i] += 1; } }
			if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; GameTextForPlayer(i, "~p~Drunk effect~n~~w~Gone", 3500, 1); }
			if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; }
			for(new k = 0; k < M_P; k++)
			{
				if(IsPlayerConnected(k))
				{
					if(gTeam[k] == 2 && CrimInRange(80.0, i,k))
					{
					}
					else
					{
						WantedPoints[i] -= 3;
						if(WantedPoints[i] < 0) { WantedPoints[i] = 0; }
						new points = WantedPoints[i];
						new wlevel;
						if(points > 0)
						{
							new yesno;
							if(points == 3) { if(WantedLevel[i] != 1) { WantedLevel[i] = 1; wlevel = 1; yesno = 1; } }
							else if(points >= 4 && points <= 5) { if(WantedLevel[i] != 2) { WantedLevel[i] = 2; wlevel = 2; yesno = 1; } }
							else if(points >= 6 && points <= 7) { if(WantedLevel[i] != 3) { WantedLevel[i] = 3; wlevel = 3; yesno = 1; } }
							else if(points >= 8 && points <= 9) { if(WantedLevel[i] != 4) { WantedLevel[i] = 4; wlevel = 4; yesno = 1; } }
							else if(points >= 10 && points <= 11) { if(WantedLevel[i] != 5) { WantedLevel[i] = 5; wlevel = 5; yesno = 1; } }
							else if(points >= 12 && points <= 13) { if(WantedLevel[i] != 6) { WantedLevel[i] = 6; wlevel = 6; yesno = 1; } }
							else if(points >= 14) { if(WantedLevel[i] != 10) { WantedLevel[i] = 10; wlevel = 10; yesno = 1; } }
							else if(points <= 0) { if(WantedLevel[i] != 0) { ClearCrime(i); WantedLevel[i] = 0; wlevel = 0; yesno = 1;} }
							if(yesno)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" 현재 수배 레벨은 %d입니다", wlevel);
								SCM(i, COLOR_ERROR, string);
							}
						}
					}
				}
			}
		}
	}
}


public LuX_SpeedoMeterUp()
{
    new Float:LPosX;
	new Float:LPosY;
	new Float:LPosZ;
	new Float:PlayerSpeedDistance;
	new value;
	new Float:L_VehHealth;

	for(new i=0; i<PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsPlayerInAnyVehicle(i))
			{
				 	GetPlayerPos(i, LPosX, LPosY, LPosZ);
					GetPlayerVehicleID(i);
					GetVehicleHealth(GetPlayerVehicleID(i), L_VehHealth);
					PlayerSpeedDistance = floatsqroot(floatpower(floatabs(floatsub(LPosX,LuX_ReadPlayerPosition[i][ReadX])),2)+floatpower(floatabs(floatsub(LPosY,LuX_ReadPlayerPosition[i][ReadY])),2)+floatpower(floatabs(floatsub(LPosZ,LuX_ReadPlayerPosition[i][ReadZ])),2));
					value = floatround(PlayerSpeedDistance * 5000);
					new LuxZone[MAX_ZONE_NAME];
					GetPlayer2DZone(i, LuxZone, MAX_ZONE_NAME);
					if(LuX_SpeedoMeter[i] == 0)
					{
						TextDrawShowForPlayer(i, Lmph[i]);
					    TextDrawShowForPlayer(i, LFunc[i]);
						LuX_SpeedoMeter[i] = 1;
					}
					new LMPH = floatround(value/1600);
					new LKPH = floatround(value/1000);

					format(lstring,sizeof(lstring),"~b~Car Name: ~w~%s~n~~b~Health: ~w~%.2f~n~~b~High: ~w~%.1f~n~~b~GPS Pos: ~w~%s~n~Gas: %d",LVehiclesName[GetVehicleModel(GetPlayerVehicleID(i))-400],L_VehHealth,LPosZ,LuxZone,Gas[GetPlayerVehicleID(i)]);
					TextDrawSetString(LFunc[i], lstring);

					format(lstr,sizeof(lstr),"%sMPH: ~w~%d  %sKM/H: ~w~%d",MPH_KPH_Color,LMPH,MPH_KPH_Color,LKPH);
					TextDrawSetString(Lmph[i], lstr);

					if(L_VehHealth <= 400)
					{
						format(lstring,sizeof(lstring),"%sCar Name: ~w~%s~n~%sHealth: ~w~~r~%.2f~n~%sHigh: ~w~%.1f~n~%GPS Pos: ~w~%s~n~~n~Gas: %d",CategoriesColor,LVehiclesName[GetVehicleModel(GetPlayerVehicleID(i))-400],CategoriesColor,L_VehHealth,CategoriesColor,LPosZ,CategoriesColor,LuxZone,Gas[GetPlayerVehicleID(i)]);
						TextDrawSetString(LFunc[i], lstring);
				    }
			   		if(LKPH >= VehicleMaxSpeed)
				    {
						TogglePlayerControllable(i,0);
						LUnFreeze = SetTimer("LuX_UnFreezeCar", 250, 1);
						format(lstr,sizeof(lstr),"~g~MPH: ~w~%d  ~g~KM/H: ~r~%d",LMPH,LKPH);
						TextDrawSetString(Lmph[i], lstr);
				    }
					LuX_ReadPlayerPosition[i][ReadX] = LPosX, LuX_ReadPlayerPosition[i][ReadY] = LPosY, LuX_ReadPlayerPosition[i][ReadZ] = LPosZ;
				}
				else //if(!IsPlayerInAnyVehicle(i))
				{
					TextDrawHideForPlayer(i, Lmph[i]);
					TextDrawHideForPlayer(i, LFunc[i]);
					LuX_SpeedoMeter[i] = 0;
				}
			}
		}
	}
forward LuX_UnFreezeCar(playerid);
public LuX_UnFreezeCar(playerid)
{
for(new i=0; i<PLAYERS; i++)
{
TogglePlayerControllable(playerid,1);
KillTimer(LUnFreeze);
}
return 1;
}

stock LuX_DistanceToPoint(vehicleid)
{
	new Float:LPlayerX, Float:LPlayerY, Float:LPlayerZ, Float:LReadPos;
	GetVehiclePos(vehicleid, LPlayerX, LPlayerY, LPlayerZ);
	LReadPos = floatsqroot(floatpower(floatabs(floatsub(LPlayerX, VehPosX[vehicleid])), 2)+floatpower(floatabs(floatsub(LPlayerY, VehPosY[vehicleid])), 2)+floatpower(floatabs(floatsub(LPlayerZ, VehPosZ[vehicleid])), 2));
	return floatround(LReadPos);
}
forward ExpUp();
public ExpUp()
{
	for(new i = 0; i < PLAYERS; i++)
	{
	new string[128];
	new account,interest;
	if(IsPlayerConnected(i))
	{
		if(PlayerInfo[i][pLevel] > 0)
		{
			if(PlayerInfo[i][pCash] < 0)
			{
				SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 빚진 돈을 다 갚지 못했습니다. 그러므로 감옥에 수감됩니다");
				GameTextForPlayer(i, "~r~Busted", 2000, 1);
				SetPlayerInterior(i, 10);
				PlayerInfo[i][pInt] = 10;
				SetPlayerPos(i,2103.3552,-2303.8884,8545.5400);
				PlayerInfo[i][pJailed] = 1;
				ResetPlayerWeapons(i);
				WantedPoints[i] = 0;
				PlayerInfo[i][pJailTime] = 240;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %d초 동안 감옥에 수감됩니다. (보석: 불가능)", PlayerInfo[i][pJailTime]);
				SetPlayerSkin(i,268);
				SCM(i, COLOR_ERROR, string);
			}
			Tax += TaxValue;
			new checks;
			if(PlayerInfo[i][pLevel] < 4)
			{
				checks += PlayerInfo[i][pLevel] * 100;
			}
			else
			{
				checks += PlayerInfo[i][pLevel] * 100;
			}
			checks += PlayerInfo[i][pPayCheck] ;

			new h=PlayerInfo[i][pRentHouse];
			BuildingInfo[h][hBank]+=BuildingInfo[h][hRentPrice];
			PlayerPlayMusic(i);
			PlayerInfo[i][pAccount] -= TaxValue;
			PlayerInfo[i][pAccount] += checks;
			if(PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pLeader] == 36 || PlayerInfo[i][pLeader] == 35 || PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pLeader] == 7 || PlayerInfo[i][pLeader] == 9 || PlayerInfo[i][pAdmin] == 1)//이건 그냥둬 정부군지원금아니야 이건  ri < 가 지원금이야 리더 지원금,
			{
				PlayerInfo[i][pAccount] += ri;
			}
			if(PlayerInfo[i][pMember]==1){PlayerInfo[i][pAccount] += fl;} // 경찰
			if(PlayerInfo[i][pMember]==2){PlayerInfo[i][pAccount] += fbi;}  // FBI
			if(PlayerInfo[i][pMember]==3){PlayerInfo[i][pAccount] += gnu;} // CIA
			if(PlayerInfo[i][pMember]==7){PlayerInfo[i][pAccount] += si;} // 시건가? 걍 복사했는데 이건 시청이잖아 ㅇㅇ,ris는?아 뭐야 ㅅㅂ
			if(PlayerInfo[i][pMember]==4){PlayerInfo[i][pAccount] += emt;} // 의사
			if(PlayerInfo[i][pNewbie]==1){PlayerInfo[i][pAccount] += goodnewbie;} // 뉴비팀
			if(PlayerInfo[i][pAdmin]){PlayerInfo[i][pAccount] += admin;} // 어드민 급료라네.
			if(PlayerInfo[i][pMember]==10){PlayerInfo[i][pAccount] += taxxi;} // 시건가? 걍 복사했는데 이건 시청이잖아 ㅇㅇ,ris는?아 뭐야 ㅅㅂ
			if(PlayerInfo[i][pMember]==9){PlayerInfo[i][pAccount] += bangsoso;} // 의사
			if(PlayerInfo[i][pMember]==32){PlayerInfo[i][pAccount] += bangsoso;} // 의사

			SCM(i, COLOR_WHITE, "Pay Day");
			SCM(i, COLOR_SUN, "━━━━━━━━━━━━━━━━");
			format(string, sizeof(string), "(급료) +$%d [세금: -$%d]", checks, TaxValue);
			SCM(i, COLOR_ERROR, string);
			format(string, sizeof(string), "(은행잔액) $%d (이자 소득) $%d ",account,interest);
			SCM(i, COLOR_ERROR, string);
			if(PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pLeader] == 10 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pLeader] == 7 || PlayerInfo[i][pLeader] == 9 || PlayerInfo[i][pAdmin] == 1 || PlayerInfo[i][pLeader] == 32 )//정부군아닌건 지웟어 뭔데 이걸 아 정부군아닌것도 리더지원금 넣어? ㅇㅇ,
			{
				checks += ri;
				format(string, sizeof(string), "(월급) +$%d [정부군 리더지원금]", ri);//이제 끝이지?밥먹어도돼지?
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 1) // 경찰
			{
				checks += fl;
				format(string, sizeof(string), "(월급) +$%d [LVPD 수당]", fl);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 2) // FBI
			{
				checks += fbi;
				format(string, sizeof(string), "(월급) +$%d [FBI 수당]", fbi);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 37) // CIA
			{
				checks += fbi;
				format(string, sizeof(string), "(월급) +$%d [CIA 수당]", fbi);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 3) // CIA
			{
				checks += gnu;
				format(string, sizeof(string), "(월급) +$%d [CIA 수당]", gnu);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 7) // 시청
			{
				checks += si;
				format(string, sizeof(string), "(월급) +$%d [공무원 수당]", si);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 4) // 의사
			{
				checks += emt;
				format(string, sizeof(string), "(월급) +$%d [의사 수당]", emt);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 38) // 교도관
			{
				checks += emt;
				format(string, sizeof(string), "(월급) +$%d [교도관 수당]", emt);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 9) // CIA
			{
				checks += bangsoso;
				format(string, sizeof(string), "(월급) +$%d [방송국 수당]", bangsoso);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 9) //
			{
				checks += bangsoso;
				format(string, sizeof(string), "(월급) +$%d [레이서 수당]", bangsoso);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pMember] == 32) // 용병
			{
				checks += bangsoso;
				format(string, sizeof(string), "(월급) +$%d [용병 수당]", bangsoso);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][pAdmin]) // 어드민
			{
				checks += admin;
				format(string, sizeof(string), "(월급) +$%d [어드민 보상]", admin);
				SCM(i, COLOR_ERROR, string);
			}
			if(PlayerInfo[i][premium] == 1) // 프리미엄
			{
				checks += PremiumMny;
				format(string, sizeof(string), "(프리미엄계정) +$%d", PremiumMny);
				SCM(i, COLOR_ERROR, string);
			}
			format(string, sizeof(string), "(총 합산 액수) $%d", checks-TaxValue);
			SCM(i, COLOR_SUC, string);
			SCM(i, COLOR_SUN, "━━━━━━━━━━━━━━━━");
			PlayerInfo[i][pExp]++;
			format(string, sizeof(string), "~y~PayDay~n~~g~Paycheck");
			GameTextForPlayer(i, string, 5000, 1);
			PlayerInfo[i][pPayDay] = 0;
			PlayerInfo[i][pPayCheck] = 0;
			PlayerInfo[i][pConnectTime] += 1;
			if(FarmerVar[i] == 0)
			{
				FarmerPickup[i][0] = 0;
			}
			if(SmugglerWork[i] == 0)
			{
				PayDaySecure[i] = 0;
			}
		}
		}
	}
	return 1;
}


public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
		if(strsrc[i]==delimiter || i==strlen(strsrc)){
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new string3[128];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "user/%s.ini", playername3);
		new File: hFile = fopen(string3, io_write);
		if (hFile)
		{
			strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
			new var[64];
			format(var, 64, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
			PlayerInfo[playerid][pCash] = GetMoney(playerid);
			format(var, 256, "AdminName=%s\n",AdminName[playerid]);fwrite(hFile, var);
			format(var, 64, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
			format(var, 64, "noneon=%d\r\n", PlayerInfo[playerid][noneon]);fwrite(hFile, var);
		//	format(var, 64, "Wanted=%s\n",PlayerInfo[playerid][pWanted]);fwrite(hFile, var);
			format(var, 64, "Newbie=%d\r\n",PlayerInfo[playerid][pNewbie]);fwrite(hFile, var);
			format(var, 64, "Baejin2=%d\r\n",PlayerInfo[playerid][pBaejin2]);fwrite(hFile, var);
			format(var, 64, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
			format(var, 64, "DonateRank=%d\n",PlayerInfo[playerid][pDonateRank]);fwrite(hFile, var);
			format(var, 64, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
			format(var, 64, "Driv=%d\n",PlayerInfo[playerid][pDriv]);fwrite(hFile, var);
			format(var, 64, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
			format(var, 64, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
			format(var, 64, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
			format(var, 64, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
			format(var, 64, "Origin=%d\n",PlayerInfo[playerid][pOrigin]);fwrite(hFile, var);
			format(var, 64, "Rmsdbr=%d\n",PlayerInfo[playerid][rmsdbr]);fwrite(hFile, var);
			format(var, 64, "Gimbob=%d\n",PlayerInfo[playerid][Gimbob]);fwrite(hFile, var);
			format(var, 64, "Tatoopen=%d\n",PlayerInfo[playerid][Tatoopen]);fwrite(hFile, var);
			format(var, 32, "Title=%s\n",nicks[playerid]);fwrite(hFile, var);
			format(var, 64, "CK=%d\n",PlayerInfo[playerid][pCK]);fwrite(hFile, var);
			format(var, 64, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
			format(var, 64, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
			format(var, 64, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
			format(var, 64, "Bank=%d\n",PlayerInfo[playerid][pAccount]);fwrite(hFile, var);
			format(var, 64, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
			format(var, 64, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
			format(var, 64, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
			format(var, 64, "Arrested=%d\n",PlayerInfo[playerid][pArrested]);fwrite(hFile, var);
			format(var, 32, "pWhyDie=%d\n",PlayerInfo[playerid][pWhyDie]);fwrite(hFile, var);//왜죽었는지부검
			format(var, 64, "Card=%d\n",PlayerInfo[playerid][pCard]);fwrite(hFile, var);
			format(var, 64, "WantedDeaths=%d\n",PlayerInfo[playerid][pWantedDeaths]);fwrite(hFile, var);
			format(var, 64, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
			format(var, 64, "pabcdefg=%d\n",PlayerInfo[playerid][pabcdefg]);fwrite(hFile, var);
			format(var, 64, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
			format(var, 64, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
			format(var, 64, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
			format(var, 64, "Job=%d\n",PlayerInfo[playerid][pJob]);fwrite(hFile, var);
			format(var, 64, "Paycheck=%d\n",PlayerInfo[playerid][pPayCheck]);fwrite(hFile, var);
			format(var, 64, "Paycheck2=%d\n",PlayerInfo[playerid][pPayCheck2]);fwrite(hFile, var);
			format(var, 64, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
			format(var, 64, "Result=%s\n", PlayerInfo[playerid][pResult]);fwrite(hFile, var);
			format(var, 64, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
			format(var, 64, "dudwkd=%d\n",PlayerInfo[playerid][pdudwkd]);fwrite(hFile, var);
			format(var, 64, "dudwkdt=%d\n",PlayerInfo[playerid][pdudwkdt]);fwrite(hFile, var);
			format(var, 64, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
			format(var, 64, "Materials=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
			format(var, 64, "Drugs=%d\n",PlayerInfo[playerid][pDrugs]);fwrite(hFile, var);
			format(var, 64, "Leader=%d\n",PlayerInfo[playerid][pLeader]);fwrite(hFile, var);
			format(var, 64, "Member=%d\n",PlayerInfo[playerid][pMember]);fwrite(hFile, var);
			format(var, 64, "FMember=%d\n",PlayerInfo[playerid][pFMember]);fwrite(hFile, var);
			format(var, 64, "Rank=%d\n",PlayerInfo[playerid][pRank]);fwrite(hFile, var);
			format(var, 64, "Char=%d\n",PlayerInfo[playerid][pChar]);fwrite(hFile, var);
			format(var, 64, "Taxi=%d\n",PlayerInfo[playerid][pMeter]);fwrite(hFile, var);
			format(var, 64, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
			format(var, 64, "JackSkill=%d\n",PlayerInfo[playerid][pJackSkill]);fwrite(hFile, var);
			format(var, 64, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
			//format(var, 64, "DrugsSkill=%d\n",PlayerInfo[playerid][pDrugsSkill]);fwrite(hFile, var);
			format(var, 64, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
			format(var, 64, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
			format(var, 64, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
			format(var, 64, "qntkd=%d\n",PlayerInfo[playerid][pqntkd]);fwrite(hFile, var);
			format(var, 64, "Int=%d\n",PlayerInfo[playerid][pInt]);fwrite(hFile, var);
			format(var, 64, "Local=%d\n",PlayerInfo[playerid][pLocal]);fwrite(hFile, var);
			format(var, 64, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
			format(var, 64, "Dnum=%d\n",Dnumber[playerid]);fwrite(hFile, var);
			format(var, 64, "Damo=%d\n",Dammo[playerid]);fwrite(hFile, var);
			format(var, 64, "Model=%d\n",PlayerInfo[playerid][pModel]);fwrite(hFile, var);
			format(var, 64, "SmartPh=%d\n",PlayerInfo[playerid][pSmart]);fwrite(hFile, var);
			format(var, 64, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
			format(var, 64, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
			
			format(var, 64, "BoomBox=%d\n", PlayerInfo[playerid][pLily]);fwrite(hFile, var);


			if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
			{
				PlayerInfo[playerid][pPos_x] = 2537.1;
				PlayerInfo[playerid][pPos_y] = -2257.6;
				PlayerInfo[playerid][pPos_z] = 3.1;
			}
			if(Spectate[playerid] != 255)
			{
				PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
				PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
				PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
				PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
				PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
			}
			format(var, 64, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
			format(var, 64, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
			format(var, 64, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
			format(var, 64, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
			format(var, 64, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
			format(var, 64, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
			format(var, 64, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
			format(var, 64, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
			format(var, 64, "CityLic=%d\n",PlayerInfo[playerid][pCityLic]);fwrite(hFile, var);

			GetPlayerArmour(playerid,PlayerInfo[playerid][pAmour]);
			format(var, 64, "Amour=%f\n",PlayerInfo[playerid][pAmour]);fwrite(hFile, var);

			format(var, 64, "Gun1=%d\n",PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
			format(var, 64, "Gun2=%d\n",PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
			format(var, 64, "Gun3=%d\n",PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
			format(var, 64, "Gun4=%d\n",PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
			format(var, 64, "Ammo1=%d\n",PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
			format(var, 64, "Ammo2=%d\n",PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
			format(var, 64, "eogudLic=%d\n",PlayerInfo[playerid][peogudLic]);fwrite(hFile, var);
			format(var, 64, "dmdrmqLic=%d\n",PlayerInfo[playerid][dmdrmqLic]);fwrite(hFile, var);
			format(var, 64, "diedie=%d\n",PlayerInfo[playerid][diedie]);fwrite(hFile, var);
			format(var, 64, "Ammo3=%d\n",PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
			format(var, 64, "Ammo4=%d\n",PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
			format(var, 64, "CarTime=%d\n",PlayerInfo[playerid][pCarTime]);fwrite(hFile, var);
			format(var, 64, "CarTime2=%d\n",PlayerInfo[playerid][pCarTime2]);fwrite(hFile, var);
			format(var, 64, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
			format(var, 64, "PayDayHad=%d\n",PlayerInfo[playerid][pPayDayHad]);fwrite(hFile, var);
			format(var, 64, "Watch=%d\n",PlayerInfo[playerid][pWatch]);fwrite(hFile, var);
			format(var, 64, "gktehrm=%d\n",PlayerInfo[playerid][pgktehrm]);fwrite(hFile, var);
			format(var, 64, "fkaus=%d\n",PlayerInfo[playerid][pfkaus]);fwrite(hFile, var);
			format(var, 64, "dkdltm=%d\n",PlayerInfo[playerid][pdkdltm]);fwrite(hFile, var);
			format(var, 64, "Crashed=%d\n",PlayerInfo[playerid][pCrashed]);fwrite(hFile, var);
			format(var, 64, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
			format(var, 64, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
			format(var, 64, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
			format(var, 64, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
			format(var, 64, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
			format(var, 64, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
			format(var, 64, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
			format(var, 64, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
			format(var, 64, "Mission=%d\n",PlayerInfo[playerid][pMissionNr]);fwrite(hFile, var);
			format(var, 64, "JuJu=%d\n",PlayerInfo[playerid][pJu]);fwrite(hFile, var);
			format(var, 64, "Warnings=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
			format(var, 64, "Warnings2=%d\n",PlayerInfo[playerid][pWarns2]);fwrite(hFile, var);
			format(var, 64, "VirWorld=%d\n",PlayerInfo[playerid][pVirWorld]);fwrite(hFile, var);
			format(var, 64, "Fuel=%d\n",PlayerInfo[playerid][pFuel]);fwrite(hFile, var);
			format(var, 64, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
			format(var, 64, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
			format(var, 64, "MarriedTo2=%s\n",PlayerInfo[playerid][pMarriedTo2]);fwrite(hFile, var);
			format(var, 64, "FishTool=%d\n",PlayerInfo[playerid][pFishTool]);fwrite(hFile, var);
			format(var, 64, "Note1=%s\n",PlayerInfo[playerid][pNote1]);fwrite(hFile, var);
			format(var, 64, "Note1s=%d\n",PlayerInfo[playerid][pNote1s]);fwrite(hFile, var);
			format(var, 64, "Note2=%s\n",PlayerInfo[playerid][pNote2]);fwrite(hFile, var);
			format(var, 64, "Note2s=%d\n",PlayerInfo[playerid][pNote2s]);fwrite(hFile, var);
			format(var, 64, "Note3=%s\n",PlayerInfo[playerid][pNote3]);fwrite(hFile, var);
			format(var, 64, "Note3s=%d\n",PlayerInfo[playerid][pNote3s]);fwrite(hFile, var);
			format(var, 64, "Note4=%s\n",PlayerInfo[playerid][pNote4]);fwrite(hFile, var);
			format(var, 64, "Note4s=%d\n",PlayerInfo[playerid][pNote4s]);fwrite(hFile, var);
			format(var, 64, "Note5=%s\n",PlayerInfo[playerid][pNote5]);fwrite(hFile, var);
			format(var, 64, "Note5s=%d\n",PlayerInfo[playerid][pNote5s]);fwrite(hFile, var);
			format(var, 64, "InvWeapon=%d\n",PlayerInfo[playerid][pInvWeapon]);fwrite(hFile, var);
			format(var, 64, "InvAmmo=%d\n",PlayerInfo[playerid][pInvAmmo]);fwrite(hFile, var);
			format(var, 64, "InvAmmo6=%d\n",PlayerInfo[playerid][pInvAmmo6]);fwrite(hFile, var);
			format(var, 64, "InvAmmo7=%d\n",PlayerInfo[playerid][pInvAmmo7]);fwrite(hFile, var);
			format(var, 64, "InvAmmo8=%d\n",PlayerInfo[playerid][pInvAmmo8]);fwrite(hFile, var);
			format(var, 64, "InvAmmo9=%d\n",PlayerInfo[playerid][pInvAmmo9]);fwrite(hFile, var);
			format(var, 64, "InvAmmo10=%d\n",PlayerInfo[playerid][pInvAmmo10]);fwrite(hFile, var);
			format(var, 64, "InvWeapon2=%d\n",PlayerInfo[playerid][pInvWeapon2]);fwrite(hFile, var);
			format(var, 64, "InvAmmo2=%d\n",PlayerInfo[playerid][pInvAmmo2]);fwrite(hFile, var);
			format(var, 64, "InvWeapon3=%d\n",PlayerInfo[playerid][pInvWeapon3]);fwrite(hFile, var);
			format(var, 64, "InvAmmo3=%d\n",PlayerInfo[playerid][pInvAmmo3]);fwrite(hFile, var);
			format(var, 64, "InvWeapon4=%d\n",PlayerInfo[playerid][pInvWeapon4]);fwrite(hFile, var);
			format(var, 64, "InvAmmo4=%d\n",PlayerInfo[playerid][pInvAmmo4]);fwrite(hFile, var);
			format(var, 64, "InvWeapon5=%d\n",PlayerInfo[playerid][pInvWeapon5]);fwrite(hFile, var);
			format(var, 64, "InvAmmo5=%d\n",PlayerInfo[playerid][pInvAmmo5]);fwrite(hFile, var);
			format(var, 64, "Lighter=%d\n",PlayerInfo[playerid][pLighter]);fwrite(hFile, var);
			format(var, 64, "Cigarettes=%d\n",PlayerInfo[playerid][pCigarettes]);fwrite(hFile, var);
			format(var, 64, "Locked=%d\n",PlayerInfo[playerid][pLocked]);fwrite(hFile, var);
			format(var, 64, "Chingchan=%d\n",PlayerInfo[playerid][pChingchan]);fwrite(hFile, var);
			format(var, 64, "Hotel1=%d\n",PlayerInfo[playerid][pHotel1]);fwrite(hFile, var);
			format(var, 64, "Gabang=%d\n",PlayerInfo[playerid][pGabang]);fwrite(hFile, var);//Float:pga
			format(var, 64, "armog=%d\n",PlayerInfo[playerid][pga]);fwrite(hFile, var);//Float:pga
			format(var, 64, "armog2=%d\n",PlayerInfo[playerid][pga2]);fwrite(hFile, var);//Float:pga
			format(var, 64, "Hotel2=%d\n",PlayerInfo[playerid][pHotel2]);fwrite(hFile, var);
			format(var, 64, "Hotel3=%d\n",PlayerInfo[playerid][pHotel3]);fwrite(hFile, var);
			format(var, 64, "Hotel4=%d\n",PlayerInfo[playerid][pHotel4]);fwrite(hFile, var);
			format(var, 64, "Hotel5=%d\n",PlayerInfo[playerid][pHotel5]);fwrite(hFile, var);
			format(var, 64, "Savelocations=%d\n",PlayerInfo[playerid][pSavelocations]);fwrite(hFile, var);
			format(var, 64, "Savelocations2=%d\n",PlayerInfo[playerid][pSavelocations2]);fwrite(hFile, var);
			format(var, 64, "Savelocations3=%d\n",PlayerInfo[playerid][pSavelocations3]);fwrite(hFile, var);
			format(var, 64, "pSaveinterior=%d\n",PlayerInfo[playerid][pSaveinterior]);fwrite(hFile, var);
			format(var, 64, "pVworld=%d\n",PlayerInfo[playerid][pVworld]);fwrite(hFile, var);
			format(var, 64, "Meal=%d\n",PlayerInfo[playerid][pMeal]);fwrite(hFile, var);
			format(var, 64, "HarvestMeal=%d\n",PlayerInfo[playerid][pHarvestMeal]);fwrite(hFile, var);
			format(var, 64, "Rice=%d\n",PlayerInfo[playerid][pRice]);fwrite(hFile, var);
			format(var, 64, "HarvestRice=%d\n",PlayerInfo[playerid][pHarvestRice]);fwrite(hFile, var);
			format(var, 64, "Radio=%d\n",PlayerInfo[playerid][pRadio]);fwrite(hFile, var);
			format(var, 64, "Pill=%d\n",PlayerInfo[playerid][pPill]);fwrite(hFile, var);
			format(var, 64, "Songpun=%d\n",PlayerInfo[playerid][pSongpun]);fwrite(hFile, var);
			format(var, 64, "Rope=%d\n",PlayerInfo[playerid][pRope]);fwrite(hFile, var);
			format(var, 64, "ShutupM=%d\n",PlayerInfo[playerid][pShutupMouse]);fwrite(hFile, var);
			format(var, 64, "Badge=%d\n",PlayerInfo[playerid][pBadge]);fwrite(hFile, var);
			GetPlayerArmour(playerid,PlayerInfo[playerid][pArmour]);
			format(var, 64, "pArmour=%.1f\n",PlayerInfo[playerid][pArmour]);fwrite(hFile, var);
			format(var, 64, "Line=%d\n",PlayerInfo[playerid][pLine]);fwrite(hFile, var);
			format(var, 64, "Demerit=%d\n",PlayerInfo[playerid][pDemerit]);fwrite(hFile, var);
			format(var, 64, "AD=%d\n",PlayerInfo[playerid][pAD]);fwrite(hFile, var);
			format(var, 32, "Boxing=%d\n",PlayerInfo[playerid][pBoxing]);fwrite(hFile, var);
			format(var, 32, "Kungfu=%d\n",PlayerInfo[playerid][pKungfu]);fwrite(hFile, var);
			format(var, 32, "Taek=%d\n",PlayerInfo[playerid][pTaek]);fwrite(hFile, var);
			format(var, 32, "Tatoo=%d\n",PlayerInfo[playerid][pTatoo]);fwrite(hFile, var);
			format(var, 32, "Pucking=%d\n",PlayerInfo[playerid][pPucking]);fwrite(hFile, var);
			format(var, 32, "Grabk=%d\n",PlayerInfo[playerid][pGrabk]);fwrite(hFile, var);
			format(var, 32, "Ellbow=%d\n",PlayerInfo[playerid][pEllbow]);fwrite(hFile, var);
			format(var, 32, "cModel=%d\n",PlayerInfo[playerid][pcModel]);fwrite(hFile, var);
			format(var, 32, "cX=%.1f\n",PlayerInfo[playerid][pcX]);fwrite(hFile, var);
			format(var, 32, "cY=%.1f\n",PlayerInfo[playerid][pcY]);fwrite(hFile, var);
			format(var, 32, "cZ=%.1f\n",PlayerInfo[playerid][pcZ]);fwrite(hFile, var);
			format(var, 32, "cAngle=%.1f\n",PlayerInfo[playerid][pcAngle]);fwrite(hFile, var);
			format(var, 32, "cColor1=%d\n",PlayerInfo[playerid][pcColor1]);fwrite(hFile, var);
			format(var, 32, "cColor2=%d\n",PlayerInfo[playerid][pcColor2]);fwrite(hFile, var);
			format(var, 32, "cLocked=%d\n",PlayerInfo[playerid][pcLocked]);fwrite(hFile, var);
			format(var, 32, "cOwned=%d\n",PlayerInfo[playerid][pcOwned]);fwrite(hFile, var);
			format(var, 32, "cPark=%d\n",PlayerInfo[playerid][pcPark]);fwrite(hFile, var);
			format(var, 32, "cModel2=%d\n",PlayerInfo[playerid][pcModel2]);fwrite(hFile, var);
			format(var, 32, "cX2=%.1f\n",PlayerInfo[playerid][pcX2]);fwrite(hFile, var);
			format(var, 32, "cY2=%.1f\n",PlayerInfo[playerid][pcY2]);fwrite(hFile, var);
			format(var, 32, "cZ2=%.1f\n",PlayerInfo[playerid][pcZ2]);fwrite(hFile, var);
			format(var, 32, "cAngle2=%.1f\n",PlayerInfo[playerid][pcAngle2]);fwrite(hFile, var);
			format(var, 32, "cColor12=%d\n",PlayerInfo[playerid][pcColor12]);fwrite(hFile, var);
			format(var, 32, "cColor22=%d\n",PlayerInfo[playerid][pcColor22]);fwrite(hFile, var);
			format(var, 32, "cLocked2=%d\n",PlayerInfo[playerid][pcLocked2]);fwrite(hFile, var);
			format(var, 32, "cOwned2=%d\n",PlayerInfo[playerid][pcOwned2]);fwrite(hFile, var);
			format(var, 32, "cPark2=%d\n",PlayerInfo[playerid][pcPark2]);fwrite(hFile, var);
			format(var, 32, "cSpo=%d\n",PlayerInfo[playerid][pcSpo]);fwrite(hFile, var);
			format(var, 32, "cHood=%d\n",PlayerInfo[playerid][pcHood]);fwrite(hFile, var);
			format(var, 32, "cRoof=%d\n",PlayerInfo[playerid][pcRoof]);fwrite(hFile, var);
			format(var, 32, "cSideS=%d\n",PlayerInfo[playerid][pcSideS]);fwrite(hFile, var);
			format(var, 32, "cLamp=%d\n",PlayerInfo[playerid][pcLamp]);fwrite(hFile, var);
			format(var, 32, "cNitro=%d\n",PlayerInfo[playerid][pcNitro]);fwrite(hFile, var);
			format(var, 32, "cExh=%d\n",PlayerInfo[playerid][pcExh]);fwrite(hFile, var);
			format(var, 32, "cWheel=%d\n",PlayerInfo[playerid][pcWheel]);fwrite(hFile, var);
			format(var, 32, "cStero=%d\n",PlayerInfo[playerid][pcStero]);fwrite(hFile, var);
			format(var, 32, "cHyd=%d\n",PlayerInfo[playerid][pcHyd]);fwrite(hFile, var);
			format(var, 32, "cFBum=%d\n",PlayerInfo[playerid][pcFBum]);fwrite(hFile, var);
			format(var, 32, "cRbum=%d\n",PlayerInfo[playerid][pcRbum]);fwrite(hFile, var);
			format(var, 32, "cVentR=%d\n",PlayerInfo[playerid][pcVentR]);fwrite(hFile, var);
			format(var, 32, "cVentL=%d\n",PlayerInfo[playerid][pcVentL]);fwrite(hFile, var);
			format(var, 32, "cSpo2=%d\n",PlayerInfo[playerid][pcSpo2]);fwrite(hFile, var);
			format(var, 32, "cHood2=%d\n",PlayerInfo[playerid][pcHood2]);fwrite(hFile, var);
			format(var, 32, "cRoof2=%d\n",PlayerInfo[playerid][pcRoof2]);fwrite(hFile, var);
			format(var, 32, "cSideS2=%d\n",PlayerInfo[playerid][pcSideS2]);fwrite(hFile, var);
			format(var, 32, "cLamp2=%d\n",PlayerInfo[playerid][pcLamp2]);fwrite(hFile, var);
			format(var, 32, "cNitro2=%d\n",PlayerInfo[playerid][pcNitro2]);fwrite(hFile, var);
			format(var, 32, "cExh2=%d\n",PlayerInfo[playerid][pcExh2]);fwrite(hFile, var);
			format(var, 32, "cWheel2=%d\n",PlayerInfo[playerid][pcWheel2]);fwrite(hFile, var);
			format(var, 32, "cStero2=%d\n",PlayerInfo[playerid][pcStero2]);fwrite(hFile, var);
			format(var, 32, "cHyd2=%d\n",PlayerInfo[playerid][pcHyd2]);fwrite(hFile, var);
			format(var, 32, "cFBum2=%d\n",PlayerInfo[playerid][pcFBum2]);fwrite(hFile, var);
			format(var, 32, "cRbum2=%d\n",PlayerInfo[playerid][pcRbum2]);fwrite(hFile, var);
			format(var, 32, "cVentR2=%d\n",PlayerInfo[playerid][pcVentR2]);fwrite(hFile, var);
			format(var, 32, "cVentL2=%d\n",PlayerInfo[playerid][pcVentL2]);fwrite(hFile, var);
			format(var, 32, "PhoneB1=%d\n",PlayerInfo[playerid][pPhoneB1]);fwrite(hFile, var);
			format(var, 32, "PhoneB2=%d\n",PlayerInfo[playerid][pPhoneB2]);fwrite(hFile, var);
			format(var, 32, "PhoneB3=%d\n",PlayerInfo[playerid][pPhoneB3]);fwrite(hFile, var);
			format(var, 32, "PhoneB4=%d\n",PlayerInfo[playerid][pPhoneB4]);fwrite(hFile, var);
			format(var, 32, "PhoneB5=%d\n",PlayerInfo[playerid][pPhoneB5]);fwrite(hFile, var);
			format(var, 64, "PhoneN1=%s\n",PlayerInfo[playerid][pPhoneN1]);fwrite(hFile, var);
			format(var, 64, "PhoneN2=%s\n",PlayerInfo[playerid][pPhoneN2]);fwrite(hFile, var);
			format(var, 64, "PhoneN3=%s\n",PlayerInfo[playerid][pPhoneN3]);fwrite(hFile, var);
			format(var, 64, "PhoneN4=%s\n",PlayerInfo[playerid][pPhoneN4]);fwrite(hFile, var);
			format(var, 64, "PhoneN5=%s\n",PlayerInfo[playerid][pPhoneN5]);fwrite(hFile, var);
			format(var, 64, "Neon1=%d\n",PlayerInfo[playerid][vNeon1]);fwrite(hFile, var);
			format(var, 64, "Neon2=%d\n",PlayerInfo[playerid][vNeon2]);fwrite(hFile, var);
			format(var, 64, "Neon3=%d\n",PlayerInfo[playerid][vNeon3]);fwrite(hFile, var);
			format(var, 64, "Neon4=%d\n",PlayerInfo[playerid][vNeon4]);fwrite(hFile, var);
			format(var, 64, "Neon5=%d\n",PlayerInfo[playerid][vNeon5]);fwrite(hFile, var);
			format(var, 64, "Neon6=%d\n",PlayerInfo[playerid][vNeon6]);fwrite(hFile, var);
			format(var, 64, "Neon7=%d\n",PlayerInfo[playerid][vNeon7]);fwrite(hFile, var);
			format(var, 64, "Neon8=%d\n",PlayerInfo[playerid][vNeon8]);fwrite(hFile, var);
			format(var, 64, "Neon9=%d\n",PlayerInfo[playerid][vNeon9]);fwrite(hFile, var);
			format(var, 64, "Neon10=%d\n",PlayerInfo[playerid][vNeon10]);fwrite(hFile, var);
			format(var, 64, "Neon11=%d\n",PlayerInfo[playerid][vNeon11]);fwrite(hFile, var);
			format(var, 64, "Item1=%d\n",PlayerInfo[playerid][Item1]);fwrite(hFile, var);
			format(var, 64, "TongJang=%d\n",PlayerInfo[playerid][TongJang]);fwrite(hFile, var);
			format(var, 64, "Quest=%d\n",PlayerInfo[playerid][Quest]);fwrite(hFile, var);
			format(var, 64, "Carkey=%d\n", PlayerInfo[playerid][Carkey]);fwrite(hFile, var);
			format(var, 64, "Wanted=%d\n", WantedLevel[playerid]);fwrite(hFile, var);
			format(var, 64, "Build=%d\n", PlayerInfo[playerid][pBuild]);fwrite(hFile, var);
			format(var, 64, "House=%d\n", PlayerInfo[playerid][pHouse]);fwrite(hFile, var);
			format(var, 64, "Package=%d\n", PlayerInfo[playerid][pPackage]);fwrite(hFile, var);
			format(var, 64, "Drug=%d\n", PlayerInfo[playerid][pDrug]);fwrite(hFile, var);
			format(var, 64, "SpawnChange=%d\n", SpawnChange[playerid]);fwrite(hFile, var);
			format(var, 64, "RentHouse=%d\n", PlayerInfo[playerid][pRentHouse]);fwrite(hFile, var);
			format(var, 64, "Byeong=%d\n", PlayerInfo[playerid][Byeong]);fwrite(hFile, var);
			format(var, 64, "ArmySP=%d\n", PlayerInfo[playerid][pArmysp]);fwrite(hFile, var);
			format(var, 64, "Cloth_1=%d\n", PlayerInfo[playerid][Cloth_1]);fwrite(hFile, var);
			format(var, 64, "Cloth_2=%d\n", PlayerInfo[playerid][Cloth_2]);fwrite(hFile, var);
			format(var, 64, "Cloth_3=%d\n", PlayerInfo[playerid][Cloth_3]);fwrite(hFile, var);

			format(var, 64, "GPS=%d\n", PlayerInfo[playerid][pGPS]);fwrite(hFile, var);
			format(var, 64, "Gido=%d\n", PlayerInfo[playerid][pGido]);fwrite(hFile, var);
			format(var, 64, "bandage=%d\n", PlayerInfo[playerid][pBandage]);fwrite(hFile, var);
			format(var, 64, "Bibun=%d\n", PlayerInfo[playerid][pBibun]);fwrite(hFile, var);

			format(var, 64, "AT1=%d\n", PlayerInfo[playerid][pHAt]);fwrite(hFile, var);
			format(var, 64, "AT1POS1=%4f\n", PlayerInfo[playerid][At1Pos1]);fwrite(hFile, var);
			format(var, 64, "AT1POS2=%4f\n", PlayerInfo[playerid][At1Pos2]);fwrite(hFile, var);
			format(var, 64, "AT1POS3=%4f\n", PlayerInfo[playerid][At1Pos3]);fwrite(hFile, var);
			format(var, 64, "AT1ROT1=%4f\n", PlayerInfo[playerid][At1Rot1]);fwrite(hFile, var);
			format(var, 64, "AT1ROT2=%4f\n", PlayerInfo[playerid][At1Rot2]);fwrite(hFile, var);
			format(var, 64, "AT1ROT3=%4f\n", PlayerInfo[playerid][At1Rot3]);fwrite(hFile, var);
			format(var, 64, "AT1SCALE1=%4f\n", PlayerInfo[playerid][At1Scale1]);fwrite(hFile, var);
			format(var, 64, "AT1SCALE2=%4f\n", PlayerInfo[playerid][At1Scale2]);fwrite(hFile, var);
			format(var, 64, "AT1SCALE3=%4f\n", PlayerInfo[playerid][At1Scale3]);fwrite(hFile, var);

			format(var, 64, "AT2=%d\n", PlayerInfo[playerid][pLAt]);fwrite(hFile, var);
			format(var, 64, "AT2POS1=%4f\n", PlayerInfo[playerid][At2Pos1]);fwrite(hFile, var);
			format(var, 64, "AT2POS2=%4f\n", PlayerInfo[playerid][At2Pos2]);fwrite(hFile, var);
			format(var, 64, "AT2POS3=%4f\n", PlayerInfo[playerid][At2Pos3]);fwrite(hFile, var);
			format(var, 64, "AT2ROT1=%4f\n", PlayerInfo[playerid][At2Rot1]);fwrite(hFile, var);
			format(var, 64, "AT2ROT2=%4f\n", PlayerInfo[playerid][At2Rot2]);fwrite(hFile, var);
			format(var, 64, "AT2ROT3=%4f\n", PlayerInfo[playerid][At2Rot3]);fwrite(hFile, var);
			format(var, 64, "AT2SCALE1=%4f\n", PlayerInfo[playerid][At2Scale1]);fwrite(hFile, var);
			format(var, 64, "AT2SCALE2=%4f\n", PlayerInfo[playerid][At2Scale2]);fwrite(hFile, var);
			format(var, 64, "AT2SCALE3=%4f\n", PlayerInfo[playerid][At2Scale3]);fwrite(hFile, var);

			format(var, 64, "AT3=%d\n", PlayerInfo[playerid][pRAt]);fwrite(hFile, var);
			format(var, 64, "AT3POS1=%4f\n", PlayerInfo[playerid][At3Pos1]);fwrite(hFile, var);
			format(var, 64, "AT3POS2=%4f\n", PlayerInfo[playerid][At3Pos2]);fwrite(hFile, var);
			format(var, 64, "AT3POS3=%4f\n", PlayerInfo[playerid][At3Pos3]);fwrite(hFile, var);
			format(var, 64, "AT3ROT1=%4f\n", PlayerInfo[playerid][At3Rot1]);fwrite(hFile, var);
			format(var, 64, "AT3ROT2=%4f\n", PlayerInfo[playerid][At3Rot2]);fwrite(hFile, var);
			format(var, 64, "AT3ROT3=%4f\n", PlayerInfo[playerid][At3Rot3]);fwrite(hFile, var);
			format(var, 64, "AT3SCALE1=%4f\n", PlayerInfo[playerid][At3Scale1]);fwrite(hFile, var);
			format(var, 64, "AT3SCALE2=%4f\n", PlayerInfo[playerid][At3Scale2]);fwrite(hFile, var);
			format(var, 64, "AT3SCALE3=%4f\n", PlayerInfo[playerid][At3Scale3]);fwrite(hFile, var);

			format(var, 64, "AT4=%d\n", PlayerInfo[playerid][pMouth]);fwrite(hFile, var);
			format(var, 64, "AT4POS1=%4f\n", PlayerInfo[playerid][At4Pos1]);fwrite(hFile, var);
			format(var, 64, "AT4POS2=%4f\n", PlayerInfo[playerid][At4Pos2]);fwrite(hFile, var);
			format(var, 64, "AT4POS3=%4f\n", PlayerInfo[playerid][At4Pos3]);fwrite(hFile, var);
			format(var, 64, "AT4ROT1=%4f\n", PlayerInfo[playerid][At4Rot1]);fwrite(hFile, var);
			format(var, 64, "AT4ROT2=%4f\n", PlayerInfo[playerid][At4Rot2]);fwrite(hFile, var);
			format(var, 64, "AT4ROT3=%4f\n", PlayerInfo[playerid][At4Rot3]);fwrite(hFile, var);
			format(var, 64, "AT4SCALE1=%4f\n", PlayerInfo[playerid][At4Scale1]);fwrite(hFile, var);
			format(var, 64, "AT4SCALE2=%4f\n", PlayerInfo[playerid][At4Scale2]);fwrite(hFile, var);
			format(var, 64, "AT4SCALE3=%4f\n", PlayerInfo[playerid][At4Scale3]);fwrite(hFile, var);

			for(new hc=0;hc<MAX_HVCAR;hc++)
			{
			    format(var, sizeof(var), "CarPlate_%d=%s\n",hc,PVPlate[playerid][hc]);fwrite(hFile, var);
				format(var, sizeof(var), "CarSign_%d=%s\n",hc,PVSign[playerid][hc]);fwrite(hFile, var);
				format(var, sizeof(var), "CarTowed_%d=%d\n",hc,PVTowed[playerid][hc]);fwrite(hFile, var);
			}
			fclose(hFile);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"  Server Login - (/가자 or /log) Register - (/입국 or /reg)");
		}
	}
	return 1;
}

public OnPlayerChangepassword(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		new string3[128];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(string3, sizeof(string3), "user/%s.ini", playername3);
		new File: hFile = fopen(string3, io_write);
		if (hFile)
		{
			strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
			new var[64];
			format(var, 64, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
			format(coordsstring, sizeof(coordsstring), "INFO : "#C_WHITE" 당신의 비밀번호가 성공적으로 변경되었습니다");
			SCM(playerid, COLOR_SUC,coordsstring);
		}
	}
	return 1;
}

public PlayerUpdate()
{
	SaveStuff();
	for(new i=0;i<M_P;i++)
	{
		if(PlayerSave[i]==true)
		{
	//		if(IsPlayerConnected(playerid))
	//		{
				PlayerSave[i]=true;
				if(gPlayerLogged[i])
				{
//					new Float:health;
//					new Float:Armour;
//					GetPlayerHealth(i, health);
//					PlayerInfo[i][pHealth] = health;
//					GetPlayerArmour(i, Armour);
//					PlayerInfo[i][pArmour] = Armour;
					PlayerInfo[i][pSaveinterior] = GetPlayerInterior(i);
					PlayerInfo[i][pInt] = GetPlayerInterior(i);
					PlayerInfo[i][pVworld] = GetPlayerVirtualWorld(i);
					GetPlayerPos(i, Savelocation[i][0],Savelocation[i][1],Savelocation[i][2]);
					PlayerInfo[i][pSavelocations] = floatround(Savelocation[i][0],floatround_round);
					PlayerInfo[i][pSavelocations2] = floatround(Savelocation[i][1],floatround_round);
					PlayerInfo[i][pSavelocations3] = floatround(Savelocation[i][2],floatround_round);

					new string3[128];
					new playername3[MAX_PLAYER_NAME];
					GetPlayerName(i, playername3, sizeof(playername3));
					format(string3, sizeof(string3), "user/%s.ini", playername3);
					new File: hFile = fopen(string3, io_write);
					if (hFile)
					{
						new var[64];
						format(var, 64, "Key=%s\n", PlayerInfo[i][pKey]);fwrite(hFile, var);
						PlayerInfo[i][pCash] = GetMoney(i);
						format(var, 256, "AdminName=%s\n",AdminName[i]);fwrite(hFile, var);//어드민이름
						format(var, 64, "pA=%.1f\r\n",PlayerInfo[i][pga]);fwrite(hFile, var);
						format(var, 64, "2pA=%.1f\r\n",PlayerInfo[i][pga2]);fwrite(hFile, var);
						format(var, 64, "Level=%d\n",PlayerInfo[i][pLevel]);fwrite(hFile, var);
						format(var, 64, "noneon=%d\r\n", PlayerInfo[i][noneon]);fwrite(hFile, var);
						format(var, 64, "Newbie=%d\r\n",PlayerInfo[i][pNewbie]);fwrite(hFile, var);
						format(var, 64, "Baejin2=%d\r\n",PlayerInfo[i][pBaejin2]);fwrite(hFile, var);
						format(var, 64, "AdminLevel=%d\n",PlayerInfo[i][pAdmin]);fwrite(hFile, var);
						format(var, 64, "DonateRank=%d\n",PlayerInfo[i][pDonateRank]);fwrite(hFile, var);
						format(var, 64, "UpgradePoints=%d\n",PlayerInfo[i][gPupgrade]);fwrite(hFile, var);
						format(var, 64, "ConnectedTime=%d\n",PlayerInfo[i][pConnectTime]);fwrite(hFile, var);
						format(var, 64, "Registered=%d\n",PlayerInfo[i][pReg]);fwrite(hFile, var);
						format(var, 64, "Sex=%d\n",PlayerInfo[i][pSex]);fwrite(hFile, var);
						format(var, 64, "Age=%d\n",PlayerInfo[i][pAge]);fwrite(hFile, var);
						format(var, 64, "Origin=%d\n",PlayerInfo[i][pOrigin]);fwrite(hFile, var);
						format(var, 64, "Rmsdbr=%d\n",PlayerInfo[i][rmsdbr]);fwrite(hFile, var);
						format(var, 64, "Gimbob=%d\n",PlayerInfo[i][Gimbob]);fwrite(hFile, var);
						format(var, 64, "Tatoopen=%d\n",PlayerInfo[i][Tatoopen]);fwrite(hFile, var);
						format(var, 32, "Title=%s\n",nicks[i]);fwrite(hFile, var);
						format(var, 64, "Driv=%d\n",PlayerInfo[i][pDriv]);fwrite(hFile, var);
						format(var, 64, "CK=%d\n",PlayerInfo[i][pCK]);fwrite(hFile, var);
						format(var, 64, "Muted=%d\n",PlayerInfo[i][pMuted]);fwrite(hFile, var);
						format(var, 64, "Respect=%d\n",PlayerInfo[i][pExp]);fwrite(hFile, var);
						format(var, 64, "Money=%d\n",PlayerInfo[i][pCash]);fwrite(hFile, var);
						format(var, 64, "Bank=%d\n",PlayerInfo[i][pAccount]);fwrite(hFile, var);
						format(var, 64, "Crimes=%d\n",PlayerInfo[i][pCrimes]);fwrite(hFile, var);
						format(var, 64, "Kills=%d\n",PlayerInfo[i][pKills]);fwrite(hFile, var);
						format(var, 64, "Deaths=%d\n",PlayerInfo[i][pDeaths]);fwrite(hFile, var);
						format(var, 64, "Arrested=%d\n",PlayerInfo[i][pArrested]);fwrite(hFile, var);
						format(var, 64, "WantedDeaths=%d\n",PlayerInfo[i][pWantedDeaths]);fwrite(hFile, var);
						format(var, 64, "Phonebook=%d\n",PlayerInfo[i][pPhoneBook]);fwrite(hFile, var);
						format(var, 64, "pabcdefg=%d\n",PlayerInfo[i][pabcdefg]);fwrite(hFile, var);
						format(var, 64, "LottoNr=%d\n",PlayerInfo[i][pLottoNr]);fwrite(hFile, var);
						format(var, 64, "Fishes=%d\n",PlayerInfo[i][pFishes]);fwrite(hFile, var);
						format(var, 64, "BiggestFish=%d\n",PlayerInfo[i][pBiggestFish]);fwrite(hFile, var);
						format(var, 64, "Job=%d\n",PlayerInfo[i][pJob]);fwrite(hFile, var);
						format(var, 64, "Paycheck=%d\n",PlayerInfo[i][pPayCheck]);fwrite(hFile, var);
						format(var, 64, "Paycheck2=%d\n",PlayerInfo[i][pPayCheck2]);fwrite(hFile, var);
						format(var, 64, "HeadValue=%d\n",PlayerInfo[i][pHeadValue]);fwrite(hFile, var);
						format(var, 64, "Result=%s\n", PlayerInfo[i][pResult]);fwrite(hFile, var);
						format(var, 64, "Jailed=%d\n",PlayerInfo[i][pJailed]);fwrite(hFile, var);
						format(var, 64, "dudwkd=%d\n",PlayerInfo[i][pdudwkd]);fwrite(hFile, var);
						format(var, 64, "dudwkdt=%d\n",PlayerInfo[i][pdudwkdt]);fwrite(hFile, var);
						format(var, 64, "JailTime=%d\n",PlayerInfo[i][pJailTime]);fwrite(hFile, var);
						format(var, 64, "Materials=%d\n",PlayerInfo[i][pMats]);fwrite(hFile, var);
						format(var, 64, "Drugs=%d\n",PlayerInfo[i][pDrugs]);fwrite(hFile, var);
						format(var, 64, "Leader=%d\n",PlayerInfo[i][pLeader]);fwrite(hFile, var);
						format(var, 64, "Member=%d\n",PlayerInfo[i][pMember]);fwrite(hFile, var);
						format(var, 64, "FMember=%d\n",PlayerInfo[i][pFMember]);fwrite(hFile, var);
						format(var, 64, "Rank=%d\n",PlayerInfo[i][pRank]);fwrite(hFile, var);
						format(var, 64, "Char=%d\n",PlayerInfo[i][pChar]);fwrite(hFile, var);
						format(var, 64, "eogudLic=%d\n",PlayerInfo[i][peogudLic]);fwrite(hFile, var);
						format(var, 64, "dmdrmqLic=%d\n",PlayerInfo[i][dmdrmqLic]);fwrite(hFile, var);
						format(var, 64, "diedie=%d\n",PlayerInfo[i][diedie]);fwrite(hFile, var);
						format(var, 64, "BoxSkill=%d\n",PlayerInfo[i][pBoxSkill]);fwrite(hFile, var);
						format(var, 64, "JackSkill=%d\n",PlayerInfo[i][pJackSkill]);fwrite(hFile, var);
						format(var, 64, "NewsSkill=%d\n",PlayerInfo[i][pNewsSkill]);fwrite(hFile, var);
						//format(var, 64, "DrugsSkill=%d\n",PlayerInfo[i][pDrugsSkill]);fwrite(hFile, var);
						format(var, 64, "CookSkill=%d\n",PlayerInfo[i][pCookSkill]);fwrite(hFile, var);
						format(var, 64, "FishSkill=%d\n",PlayerInfo[i][pFishSkill]);fwrite(hFile, var);
						format(var, 64, "pSHealth=%.1f\n",PlayerInfo[i][pSHealth]);fwrite(hFile, var);
						format(var, 64, "Int=%d\n",PlayerInfo[i][pInt]);fwrite(hFile, var);
						format(var, 64, "Local=%d\n",PlayerInfo[i][pLocal]);fwrite(hFile, var);
						format(var, 64, "Team=%d\n",PlayerInfo[i][pTeam]);fwrite(hFile, var);
						format(var, 64, "Model=%d\n",PlayerInfo[i][pModel]);fwrite(hFile, var);
						format(var, 64, "SmartPh=%d\n",PlayerInfo[i][pSmart]);fwrite(hFile, var);
						format(var, 64, "PhoneNr=%d\n",PlayerInfo[i][pPnumber]);fwrite(hFile, var);
						format(var, 64, "Taxi=%d\n",PlayerInfo[i][pMeter]);fwrite(hFile, var);
						format(var, 64, "Fuel=%d\n",PlayerInfo[i][pFuel]);fwrite(hFile, var);
						format(var, 64, "Dnum=%d\n",Dnumber[i]);fwrite(hFile, var);
						format(var, 64, "Damo=%d\n",Dammo[i]);fwrite(hFile, var);
						format(var, 32, "qntkd=%d\n",PlayerInfo[i][pqntkd]);fwrite(hFile, var);
						format(var, 64, "Bizz=%d\n",PlayerInfo[i][pPbiskey]);fwrite(hFile, var);
						if ((PlayerInfo[i][pPos_x]==0.0 && PlayerInfo[i][pPos_y]==0.0 && PlayerInfo[i][pPos_z]==0.0))
						{
							PlayerInfo[i][pPos_x] = 2537.1;
							PlayerInfo[i][pPos_y] = -2257.6;
							PlayerInfo[i][pPos_z] = 3.1;
						}
						if(Spectate[i] != 255)
						{
							PlayerInfo[i][pPos_x] = Unspec[i][sPx];
							PlayerInfo[i][pPos_y] = Unspec[i][sPy];
							PlayerInfo[i][pPos_z] = Unspec[i][sPz];
							PlayerInfo[i][pInt] = Unspec[i][sPint];
							PlayerInfo[i][pLocal] = Unspec[i][sLocal];
						}
						new Float:nell_x, Float:nell_y, Float:nell_z;
						GetPlayerPos(i,nell_x,nell_y,nell_z);
						PlayerInfo[i][pPos_x] = nell_x;
						PlayerInfo[i][pPos_y] = nell_y;
						PlayerInfo[i][pPos_z] = nell_z;
						format(var, 64, "Pos_x=%.1f\n",PlayerInfo[i][pPos_x]);fwrite(hFile, var);
						format(var, 64, "Pos_y=%.1f\n",PlayerInfo[i][pPos_y]);fwrite(hFile, var);
						format(var, 64, "Pos_z=%.1f\n",PlayerInfo[i][pPos_z]);fwrite(hFile, var);

						format(var, 64, "CarLic=%d\n",PlayerInfo[i][pCarLic]);fwrite(hFile, var);
						format(var, 64, "FlyLic=%d\n",PlayerInfo[i][pFlyLic]);fwrite(hFile, var);
						format(var, 64, "BoatLic=%d\n",PlayerInfo[i][pBoatLic]);fwrite(hFile, var);
						format(var, 64, "FishLic=%d\n",PlayerInfo[i][pFishLic]);fwrite(hFile, var);
						format(var, 64, "GunLic=%d\n",PlayerInfo[i][pGunLic]);fwrite(hFile, var);
						format(var, 64, "CityLic=%d\n",PlayerInfo[i][pCityLic]);fwrite(hFile, var);


		 				PlayerInfo[i][pGun1]=0;
						PlayerInfo[i][pAmmo1]=0;
						PlayerInfo[i][pGun2]=0;
						PlayerInfo[i][pAmmo2]=0;
						PlayerInfo[i][pGun3]=0;
						PlayerInfo[i][pAmmo3]=0;
						PlayerInfo[i][pGun4]=0;
						PlayerInfo[i][pAmmo4]=0;

						for(new slot = 0; slot != 12; slot++)
						{
							new wep, ammo;
							GetPlayerWeaponData(i, slot, wep, ammo);

							if(wep != 0 && ammo != 0)
							{
								if(PlayerInfo[i][pGun1] == 0&&PlayerInfo[i][pAmmo1]==0&&PlayerInfo[i][pGun2]!=wep&&PlayerInfo[i][pGun3]!=wep&&PlayerInfo[i][pGun4]!=wep) { PlayerInfo[i][pGun1] = wep; PlayerInfo[i][pAmmo1] = ammo; wep=0; ammo=0; PlayerInfo[i][pGun2]=0; PlayerInfo[i][pAmmo2]=0; PlayerInfo[i][pGun3]=0; PlayerInfo[i][pAmmo3]=0; PlayerInfo[i][pGun4]=0; PlayerInfo[i][pAmmo4]=0; }
								if(PlayerInfo[i][pGun2] == 0&&PlayerInfo[i][pAmmo2]==0&&PlayerInfo[i][pGun1]!=wep&&PlayerInfo[i][pGun3]!=wep&&PlayerInfo[i][pGun4]!=wep) { PlayerInfo[i][pGun2] = wep; PlayerInfo[i][pAmmo2] = ammo; wep=0; ammo=0; PlayerInfo[i][pGun3]=0; PlayerInfo[i][pAmmo3]=0; PlayerInfo[i][pGun4]=0; PlayerInfo[i][pAmmo4]=0;}
								if(PlayerInfo[i][pGun3] == 0&&PlayerInfo[i][pAmmo3]==0&&PlayerInfo[i][pGun2]!=wep&&PlayerInfo[i][pGun1]!=wep&&PlayerInfo[i][pGun4]!=wep) { PlayerInfo[i][pGun3] = wep; PlayerInfo[i][pAmmo3] = ammo; wep=0; ammo=0; PlayerInfo[i][pGun4]=0; PlayerInfo[i][pAmmo4]=0;}
								if(PlayerInfo[i][pGun4] == 0&&PlayerInfo[i][pAmmo4]==0&&PlayerInfo[i][pGun2]!=wep&&PlayerInfo[i][pGun3]!=wep&&PlayerInfo[i][pGun1]!=wep) { PlayerInfo[i][pGun4] = wep; PlayerInfo[i][pAmmo4] = ammo; wep=0; ammo=0; }
							}
						}

//						GetPlayerArmour(i,PlayerInfo[i][pAmour]);
						format(var, 64, "Amour=%f\n",PlayerInfo[i][pAmour]);fwrite(hFile, var);

						format(var, 64, "Gun1=%d\n",PlayerInfo[i][pGun1]);fwrite(hFile, var);
						format(var, 64, "Gun2=%d\n",PlayerInfo[i][pGun2]);fwrite(hFile, var);
						format(var, 64, "Gun3=%d\n",PlayerInfo[i][pGun3]);fwrite(hFile, var);
						format(var, 64, "Gun4=%d\n",PlayerInfo[i][pGun4]);fwrite(hFile, var);

						format(var, 64, "Ammo1=%d\n",PlayerInfo[i][pAmmo1]);fwrite(hFile, var);
						format(var, 64, "Ammo2=%d\n",PlayerInfo[i][pAmmo2]);fwrite(hFile, var);
						format(var, 64, "Ammo3=%d\n",PlayerInfo[i][pAmmo3]);fwrite(hFile, var);
						format(var, 64, "Ammo4=%d\n",PlayerInfo[i][pAmmo4]);fwrite(hFile, var);

						format(var, 64, "CarTime=%d\n",PlayerInfo[i][pCarTime]);fwrite(hFile, var);
						format(var, 64, "CarTime2=%d\n",PlayerInfo[i][pCarTime2]);fwrite(hFile, var);
						format(var, 64, "PayDay=%d\n",PlayerInfo[i][pPayDay]);fwrite(hFile, var);
						format(var, 64, "PayDayHad=%d\n",PlayerInfo[i][pPayDayHad]);fwrite(hFile, var);
						format(var, 64, "Watch=%d\n",PlayerInfo[i][pWatch]);fwrite(hFile, var);
						format(var, 64, "gktehrm=%d\n",PlayerInfo[i][pgktehrm]);fwrite(hFile, var);
						format(var, 64, "fkaus=%d\n",PlayerInfo[i][pfkaus]);fwrite(hFile, var);
						format(var, 64, "dkdltm=%d\n",PlayerInfo[i][pdkdltm]);fwrite(hFile, var);
						format(var, 64, "Crashed=%d\n",PlayerInfo[i][pCrashed]);fwrite(hFile, var);
						format(var, 64, "Wins=%d\n",PlayerInfo[i][pWins]);fwrite(hFile, var);
						format(var, 64, "Loses=%d\n",PlayerInfo[i][pLoses]);fwrite(hFile, var);
						format(var, 64, "AlcoholPerk=%d\n",PlayerInfo[i][pAlcoholPerk]);fwrite(hFile, var);
						format(var, 64, "DrugPerk=%d\n",PlayerInfo[i][pDrugPerk]);fwrite(hFile, var);
						format(var, 64, "JuJu=%d\n",PlayerInfo[i][pJu]);fwrite(hFile, var);
						format(var, 64, "MiserPerk=%d\n",PlayerInfo[i][pMiserPerk]);fwrite(hFile, var);
						format(var, 64, "PainPerk=%d\n",PlayerInfo[i][pPainPerk]);fwrite(hFile, var);
						format(var, 64, "TraderPerk=%d\n",PlayerInfo[i][pTraderPerk]);fwrite(hFile, var);
						format(var, 64, "Tutorial=%d\n",PlayerInfo[i][pTut]);fwrite(hFile, var);
						format(var, 64, "Mission=%d\n",PlayerInfo[i][pMissionNr]);fwrite(hFile, var);
						format(var, 64, "Warnings=%d\n",PlayerInfo[i][pWarns]);fwrite(hFile, var);
						format(var, 64, "Warnings2=%d\n",PlayerInfo[i][pWarns2]);fwrite(hFile, var);
						format(var, 64, "VirWorld=%d\n",PlayerInfo[i][pVirWorld]);fwrite(hFile, var);
						format(var, 64, "Fuel=%d\n",PlayerInfo[i][pFuel]);fwrite(hFile, var);
						format(var, 64, "Married=%d\n",PlayerInfo[i][pMarried]);fwrite(hFile, var);
						format(var, 64, "MarriedTo=%s\n",PlayerInfo[i][pMarriedTo]);fwrite(hFile, var);
						format(var, 64, "MarriedTo2=%s\n",PlayerInfo[i][pMarriedTo2]);fwrite(hFile, var);
						format(var, 64, "FishTool=%d\n",PlayerInfo[i][pFishTool]);fwrite(hFile, var);
						format(var, 64, "Note1=%s\n",PlayerInfo[i][pNote1]);fwrite(hFile, var);
						format(var, 64, "Note1s=%d\n",PlayerInfo[i][pNote1s]);fwrite(hFile, var);
						format(var, 64, "Note2=%s\n",PlayerInfo[i][pNote2]);fwrite(hFile, var);
						format(var, 64, "Note2s=%d\n",PlayerInfo[i][pNote2s]);fwrite(hFile, var);
						format(var, 64, "Note3=%s\n",PlayerInfo[i][pNote3]);fwrite(hFile, var);
						format(var, 64, "Note3s=%d\n",PlayerInfo[i][pNote3s]);fwrite(hFile, var);
						format(var, 64, "Note4=%s\n",PlayerInfo[i][pNote4]);fwrite(hFile, var);
						format(var, 64, "Note4s=%d\n",PlayerInfo[i][pNote4s]);fwrite(hFile, var);
						format(var, 64, "Note5=%s\n",PlayerInfo[i][pNote5]);fwrite(hFile, var);
						format(var, 64, "Note5s=%d\n",PlayerInfo[i][pNote5s]);fwrite(hFile, var);
						format(var, 64, "InvWeapon=%d\n",PlayerInfo[i][pInvWeapon]);fwrite(hFile, var);
						format(var, 64, "InvAmmo=%d\n",PlayerInfo[i][pInvAmmo]);fwrite(hFile, var);
						format(var, 64, "InvAmmo6=%d\n",PlayerInfo[i][pInvAmmo6]);fwrite(hFile, var);
						format(var, 64, "InvAmmo7=%d\n",PlayerInfo[i][pInvAmmo7]);fwrite(hFile, var);
						format(var, 64, "InvAmmo8=%d\n",PlayerInfo[i][pInvAmmo8]);fwrite(hFile, var);
						format(var, 64, "InvAmmo9=%d\n",PlayerInfo[i][pInvAmmo9]);fwrite(hFile, var);
						format(var, 64, "InvAmmo10=%d\n",PlayerInfo[i][pInvAmmo10]);fwrite(hFile, var);
						format(var, 64, "InvWeapon2=%d\n",PlayerInfo[i][pInvWeapon2]);fwrite(hFile, var);
						format(var, 64, "InvAmmo2=%d\n",PlayerInfo[i][pInvAmmo2]);fwrite(hFile, var);
						format(var, 64, "InvWeapon3=%d\n",PlayerInfo[i][pInvWeapon3]);fwrite(hFile, var);
						format(var, 64, "InvAmmo3=%d\n",PlayerInfo[i][pInvAmmo3]);fwrite(hFile, var);
						format(var, 64, "InvWeapon4=%d\n",PlayerInfo[i][pInvWeapon4]);fwrite(hFile, var);
						format(var, 64, "InvAmmo4=%d\n",PlayerInfo[i][pInvAmmo4]);fwrite(hFile, var);
						format(var, 64, "InvWeapon5=%d\n",PlayerInfo[i][pInvWeapon5]);fwrite(hFile, var);
						format(var, 64, "InvAmmo5=%d\n",PlayerInfo[i][pInvAmmo5]);fwrite(hFile, var);
						format(var, 64, "Lighter=%d\n",PlayerInfo[i][pLighter]);fwrite(hFile, var);
						format(var, 64, "Cigarettes=%d\n",PlayerInfo[i][pCigarettes]);fwrite(hFile, var);
						format(var, 64, "Locked=%d\n",PlayerInfo[i][pLocked]);fwrite(hFile, var);
						format(var, 64, "Chingchan=%d\n",PlayerInfo[i][pChingchan]);fwrite(hFile, var);
						format(var, 64, "Hotel1=%d\n",PlayerInfo[i][pHotel1]);fwrite(hFile, var);
						format(var, 64, "Hotel2=%d\n",PlayerInfo[i][pHotel2]);fwrite(hFile, var);
						format(var, 64, "Hotel3=%d\n",PlayerInfo[i][pHotel3]);fwrite(hFile, var);
						format(var, 64, "Hotel4=%d\n",PlayerInfo[i][pHotel4]);fwrite(hFile, var);
						format(var, 64, "pSaveinterior=%d\n",PlayerInfo[i][pSaveinterior]);fwrite(hFile, var);
						format(var, 64, "pVworld=%d\n",PlayerInfo[i][pVworld]);fwrite(hFile, var);
						format(var, 64, "Savelocations=%d\n",PlayerInfo[i][pSavelocations]);fwrite(hFile, var);
						format(var, 64, "Savelocations2=%d\n",PlayerInfo[i][pSavelocations2]);fwrite(hFile, var);
						format(var, 64, "Savelocations3=%d\n",PlayerInfo[i][pSavelocations3]);fwrite(hFile, var);
						format(var, 64, "Gabang=%d\n",PlayerInfo[i][pGabang]);fwrite(hFile, var);
						format(var, 64, "Gabang=%d\r\n",PlayerInfo[i][pGabang]);fwrite(hFile, var);
						format(var, 64, "pA=%.1f\r\n",PlayerInfo[i][pga]);fwrite(hFile, var);
						format(var, 64, "2pA=%.1f\r\n",PlayerInfo[i][pga2]);fwrite(hFile, var);
						format(var, 64, "Hotel5=%d\n",PlayerInfo[i][pHotel5]);fwrite(hFile, var);
						format(var, 64, "pA=%.1f\r\n",PlayerInfo[i][pga]);fwrite(hFile, var);
						format(var, 64, "2pA=%.1f\r\n",PlayerInfo[i][pga2]);fwrite(hFile, var);
						format(var, 64, "Meal=%d\n",PlayerInfo[i][pMeal]);fwrite(hFile, var);
						format(var, 64, "HarvestMeal=%d\n",PlayerInfo[i][pHarvestMeal]);fwrite(hFile, var);
						format(var, 64, "Rice=%d\n",PlayerInfo[i][pRice]);fwrite(hFile, var);
						format(var, 64, "HarvestRice=%d\n",PlayerInfo[i][pHarvestRice]);fwrite(hFile, var);
						format(var, 64, "Radio=%d\n",PlayerInfo[i][pRadio]);fwrite(hFile, var);
						format(var, 64, "Card=%d\n",PlayerInfo[i][pCard]);fwrite(hFile, var);
						format(var, 64, "Pill=%d\n",PlayerInfo[i][pPill]);fwrite(hFile, var);
						format(var, 64, "Songpun=%d\n",PlayerInfo[i][pSongpun]);fwrite(hFile, var);
						format(var, 64, "Rope=%d\n",PlayerInfo[i][pRope]);fwrite(hFile, var);
						format(var, 64, "ShutupM=%d\n",PlayerInfo[i][pShutupMouse]);fwrite(hFile, var);
						format(var, 64, "Badge=%d\n",PlayerInfo[i][pBadge]);fwrite(hFile, var);
//						GetPlayerArmour(i,PlayerInfo[i][pArmour]);
						format(var, 64, "pArmour=%.1f\n",PlayerInfo[i][pArmour]);fwrite(hFile, var);
						format(var, 64, "Line=%d\n",PlayerInfo[i][pLine]);fwrite(hFile, var);
						format(var, 64, "Demerit=%d\n",PlayerInfo[i][pDemerit]);fwrite(hFile, var);
						format(var, 64, "AD=%d\n",PlayerInfo[i][pAD]);fwrite(hFile, var);
						format(var, 32, "Boxing=%d\n",PlayerInfo[i][pBoxing]);fwrite(hFile, var);
						format(var, 32, "Kungfu=%d\n",PlayerInfo[i][pKungfu]);fwrite(hFile, var);
						format(var, 32, "Taek=%d\n",PlayerInfo[i][pTaek]);fwrite(hFile, var);
						format(var, 32, "Tatoo=%d\n",PlayerInfo[i][pTatoo]);fwrite(hFile, var);
						format(var, 32, "Grabk=%d\n",PlayerInfo[i][pGrabk]);fwrite(hFile, var);
						format(var, 32, "Ellbow=%d\n",PlayerInfo[i][pEllbow]);fwrite(hFile, var);
						format(var, 32, "cModel=%d\n",PlayerInfo[i][pcModel]);fwrite(hFile, var);
						format(var, 32, "cX=%.1f\n",PlayerInfo[i][pcX]);fwrite(hFile, var);
						format(var, 32, "cY=%.1f\n",PlayerInfo[i][pcY]);fwrite(hFile, var);
						format(var, 32, "cZ=%.1f\n",PlayerInfo[i][pcZ]);fwrite(hFile, var);
						format(var, 32, "cAngle=%.1f\n",PlayerInfo[i][pcAngle]);fwrite(hFile, var);
						format(var, 32, "cColor1=%d\n",PlayerInfo[i][pcColor1]);fwrite(hFile, var);
						format(var, 32, "cColor2=%d\n",PlayerInfo[i][pcColor2]);fwrite(hFile, var);
						format(var, 32, "cLocked=%d\n",PlayerInfo[i][pcLocked]);fwrite(hFile, var);
						format(var, 32, "cOwned=%d\n",PlayerInfo[i][pcOwned]);fwrite(hFile, var);
						format(var, 32, "cPark=%d\n",PlayerInfo[i][pcPark]);fwrite(hFile, var);
						format(var, 32, "cModel2=%d\n",PlayerInfo[i][pcModel2]);fwrite(hFile, var);
						format(var, 32, "cX2=%.1f\n",PlayerInfo[i][pcX2]);fwrite(hFile, var);
						format(var, 32, "cY2=%.1f\n",PlayerInfo[i][pcY2]);fwrite(hFile, var);
						format(var, 32, "cZ2=%.1f\n",PlayerInfo[i][pcZ2]);fwrite(hFile, var);
						format(var, 32, "cAngle2=%.1f\n",PlayerInfo[i][pcAngle2]);fwrite(hFile, var);
						format(var, 32, "cColor12=%d\n",PlayerInfo[i][pcColor12]);fwrite(hFile, var);
						format(var, 32, "cColor22=%d\n",PlayerInfo[i][pcColor22]);fwrite(hFile, var);
						format(var, 32, "cLocked2=%d\n",PlayerInfo[i][pcLocked2]);fwrite(hFile, var);
						format(var, 32, "cOwned2=%d\n",PlayerInfo[i][pcOwned2]);fwrite(hFile, var);
						format(var, 32, "cPark2=%d\n",PlayerInfo[i][pcPark2]);fwrite(hFile, var);
						PlayerInfo[i][pcSpo] = GetVehicleComponentInSlot(dudrnck[i], 0);
						format(var, 32, "cSpo=%d\n",PlayerInfo[i][pcSpo]);fwrite(hFile, var);
						PlayerInfo[i][pcHood] = GetVehicleComponentInSlot(dudrnck[i], 1);
						format(var, 32, "cHood=%d\n",PlayerInfo[i][pcHood]);fwrite(hFile, var);
						PlayerInfo[i][pcRoof] = GetVehicleComponentInSlot(dudrnck[i], 2);
						format(var, 32, "cRoof=%d\n",PlayerInfo[i][pcRoof]);fwrite(hFile, var);
						PlayerInfo[i][pcSideS] = GetVehicleComponentInSlot(dudrnck[i], 3);
						format(var, 32, "cSideS=%d\n",PlayerInfo[i][pcSideS]);fwrite(hFile, var);
						PlayerInfo[i][pcLamp] = GetVehicleComponentInSlot(dudrnck[i], 4);
						format(var, 32, "cLamp=%d\n",PlayerInfo[i][pcLamp]);fwrite(hFile, var);
						PlayerInfo[i][pcNitro] = GetVehicleComponentInSlot(dudrnck[i], 5);
						format(var, 32, "cNitro=%d\n",PlayerInfo[i][pcNitro]);fwrite(hFile, var);
						PlayerInfo[i][pcExh] = GetVehicleComponentInSlot(dudrnck[i], 6);
						format(var, 32, "cExh=%d\n",PlayerInfo[i][pcExh]);fwrite(hFile, var);
						PlayerInfo[i][pcWheel] = GetVehicleComponentInSlot(dudrnck[i], 7);
						format(var, 32, "cWheel=%d\n",PlayerInfo[i][pcWheel]);fwrite(hFile, var);
						PlayerInfo[i][pcStero] = GetVehicleComponentInSlot(dudrnck[i], 8);
						format(var, 32, "cStero=%d\n",PlayerInfo[i][pcStero]);fwrite(hFile, var);
						PlayerInfo[i][pcHyd] = GetVehicleComponentInSlot(dudrnck[i], 9);
						format(var, 32, "cHyd=%d\n",PlayerInfo[i][pcHyd]);fwrite(hFile, var);
						PlayerInfo[i][pcFBum] = GetVehicleComponentInSlot(dudrnck[i], 10);
						format(var, 32, "cFBum=%d\n",PlayerInfo[i][pcFBum]);fwrite(hFile, var);
						PlayerInfo[i][pcRbum] = GetVehicleComponentInSlot(dudrnck[i], 11);
						format(var, 32, "cRbum=%d\n",PlayerInfo[i][pcRbum]);fwrite(hFile, var);
						PlayerInfo[i][pcVentR] = GetVehicleComponentInSlot(dudrnck[i], 12);
						format(var, 32, "cVentR=%d\n",PlayerInfo[i][pcVentR]);fwrite(hFile, var);
						PlayerInfo[i][pcVentL] = GetVehicleComponentInSlot(dudrnck[i], 13);
						format(var, 32, "cVentL=%d\n",PlayerInfo[i][pcVentL]);fwrite(hFile, var);
						PlayerInfo[i][pcSpo2] = GetVehicleComponentInSlot(dudrnck[i], 0);
						format(var, 32, "cSpo2=%d\n",PlayerInfo[i][pcSpo2]);fwrite(hFile, var);
						PlayerInfo[i][pcHood2] = GetVehicleComponentInSlot(dudrnck[i], 1);
						format(var, 32, "cHood2=%d\n",PlayerInfo[i][pcHood2]);fwrite(hFile, var);
						PlayerInfo[i][pcRoof2] = GetVehicleComponentInSlot(dudrnck[i], 2);
						format(var, 32, "cRoof2=%d\n",PlayerInfo[i][pcRoof2]);fwrite(hFile, var);
						PlayerInfo[i][pcSideS] = GetVehicleComponentInSlot(dudrnck[i], 3);
						format(var, 32, "cSideS2=%d\n",PlayerInfo[i][pcSideS2]);fwrite(hFile, var);
						PlayerInfo[i][pcLamp2] = GetVehicleComponentInSlot(dudrnck[i], 4);
						format(var, 32, "cLamp2=%d\n",PlayerInfo[i][pcLamp2]);fwrite(hFile, var);
						PlayerInfo[i][pcNitro2] = GetVehicleComponentInSlot(dudrnck[i], 5);
						format(var, 32, "cNitro2=%d\n",PlayerInfo[i][pcNitro2]);fwrite(hFile, var);
						PlayerInfo[i][pcExh2] = GetVehicleComponentInSlot(dudrnck[i], 6);
						format(var, 32, "cExh2=%d\n",PlayerInfo[i][pcExh2]);fwrite(hFile, var);
						PlayerInfo[i][pcWheel2] = GetVehicleComponentInSlot(dudrnck[i], 7);
						format(var, 32, "cWheel2=%d\n",PlayerInfo[i][pcWheel2]);fwrite(hFile, var);
						PlayerInfo[i][pcStero2] = GetVehicleComponentInSlot(dudrnck[i], 8);
						format(var, 32, "cStero2=%d\n",PlayerInfo[i][pcStero2]);fwrite(hFile, var);
						PlayerInfo[i][pcHyd2] = GetVehicleComponentInSlot(dudrnck[i], 9);
						format(var, 32, "cHyd2=%d\n",PlayerInfo[i][pcHyd2]);fwrite(hFile, var);
						PlayerInfo[i][pcFBum2] = GetVehicleComponentInSlot(dudrnck[i], 10);
						format(var, 32, "cFBum2=%d\n",PlayerInfo[i][pcFBum2]);fwrite(hFile, var);
						PlayerInfo[i][pcRbum2] = GetVehicleComponentInSlot(dudrnck[i], 11);
						format(var, 32, "cRbum2=%d\n",PlayerInfo[i][pcRbum2]);fwrite(hFile, var);
						PlayerInfo[i][pcVentR2] = GetVehicleComponentInSlot(dudrnck[i], 12);
						format(var, 32, "cVentR2=%d\n",PlayerInfo[i][pcVentR2]);fwrite(hFile, var);
						PlayerInfo[i][pcVentL2] = GetVehicleComponentInSlot(dudrnck[i], 13);
						format(var, 32, "cVentL2=%d\n",PlayerInfo[i][pcVentL2]);fwrite(hFile, var);
						format(var, 32, "PhoneB1=%d\n",PlayerInfo[i][pPhoneB1]);fwrite(hFile, var);
						format(var, 32, "PhoneB2=%d\n",PlayerInfo[i][pPhoneB2]);fwrite(hFile, var);
						format(var, 32, "PhoneB3=%d\n",PlayerInfo[i][pPhoneB3]);fwrite(hFile, var);
					format(var, 32, "PhoneB4=%d\n",PlayerInfo[i][pPhoneB4]);fwrite(hFile, var);
					format(var, 32, "PhoneB5=%d\n",PlayerInfo[i][pPhoneB5]);fwrite(hFile, var);
						format(var, 64, "PhoneN1=%s\n",PlayerInfo[i][pPhoneN1]);fwrite(hFile, var);
						format(var, 64, "PhoneN2=%s\n",PlayerInfo[i][pPhoneN2]);fwrite(hFile, var);
						format(var, 64, "PhoneN3=%s\n",PlayerInfo[i][pPhoneN3]);fwrite(hFile, var);
						format(var, 64, "PhoneN4=%s\n",PlayerInfo[i][pPhoneN4]);fwrite(hFile, var);
						format(var, 64, "PhoneN5=%s\n",PlayerInfo[i][pPhoneN5]);fwrite(hFile, var);
						format(var, 64, "Item1=%d\n",PlayerInfo[i][Item1]);fwrite(hFile, var);
						format(var, 64, "TongJang=%d\n",PlayerInfo[i][TongJang]);fwrite(hFile, var);
						format(var, 64, "Quest=%d\n",PlayerInfo[i][Quest]);fwrite(hFile, var);
						format(var, 64, "Carkey=%d\n",PlayerInfo[i][Carkey]);fwrite(hFile, var);
						format(var, 64, "Wanted=%d\n", WantedLevel[i]);fwrite(hFile, var);
						format(var, 64, "Build=%d\n", PlayerInfo[i][pBuild]);fwrite(hFile, var);
						format(var, 64, "House=%d\n", PlayerInfo[i][pHouse]);fwrite(hFile, var);
						format(var, 64, "Package=%d\n", PlayerInfo[i][pPackage]);fwrite(hFile, var);
						format(var, 64, "Drug=%d\n", PlayerInfo[i][pDrug]);fwrite(hFile, var);
						format(var, 64, "SpawnChange=%d\n", SpawnChange[i]);fwrite(hFile, var);
						format(var, 64, "RentHouse=%d\n", PlayerInfo[i][pRentHouse]);fwrite(hFile, var);
						format(var, 64, "Byeong=%d\n", PlayerInfo[i][Byeong]);fwrite(hFile, var);
						format(var, 64, "Neon1=%d\n",PlayerInfo[i][vNeon1]);fwrite(hFile, var);
						format(var, 64, "Neon2=%d\n",PlayerInfo[i][vNeon2]);fwrite(hFile, var);
						format(var, 64, "Neon3=%d\n",PlayerInfo[i][vNeon3]);fwrite(hFile, var);
						format(var, 64, "Neon4=%d\n",PlayerInfo[i][vNeon4]);fwrite(hFile, var);
						format(var, 64, "Neon5=%d\n",PlayerInfo[i][vNeon5]);fwrite(hFile, var);
						format(var, 64, "Neon6=%d\n",PlayerInfo[i][vNeon6]);fwrite(hFile, var);
						format(var, 64, "Neon7=%d\n",PlayerInfo[i][vNeon7]);fwrite(hFile, var);
						format(var, 64, "Neon8=%d\n",PlayerInfo[i][vNeon8]);fwrite(hFile, var);
						format(var, 64, "Neon9=%d\n",PlayerInfo[i][vNeon9]);fwrite(hFile, var);
						format(var, 64, "Neon10=%d\n",PlayerInfo[i][vNeon10]);fwrite(hFile, var);
						format(var, 64, "Neon11=%d\n",PlayerInfo[i][vNeon11]);fwrite(hFile, var);
						format(var, 64, "ArmySP=%d\n", PlayerInfo[i][pArmysp]);fwrite(hFile, var);
						format(var, 64, "Cloth_1=%d\n", PlayerInfo[i][Cloth_1]);fwrite(hFile, var);
						format(var, 64, "Cloth_2=%d\n", PlayerInfo[i][Cloth_2]);fwrite(hFile, var);
						format(var, 64, "Cloth_3=%d\n", PlayerInfo[i][Cloth_3]);fwrite(hFile, var);
						format(var, 64, "GPS=%d\n", PlayerInfo[i][pGPS]);fwrite(hFile, var);
						format(var, 64, "Gido=%d\n", PlayerInfo[i][pGido]);fwrite(hFile, var);
						format(var, 64, "bandage=%d\n", PlayerInfo[i][pBandage]);fwrite(hFile, var);
						format(var, 64, "Bibun=%d\n", PlayerInfo[i][pBibun]);fwrite(hFile, var);

						format(var, 64, "BoomBox=%d\n", PlayerInfo[i][pLily]);fwrite(hFile, var);

						format(var, 64, "AT1=%d\n", PlayerInfo[i][pHAt]);fwrite(hFile, var);
						format(var, 64, "AT1POS1=%4f\n", PlayerInfo[i][At1Pos1]);fwrite(hFile, var);
						format(var, 64, "AT1POS2=%4f\n", PlayerInfo[i][At1Pos2]);fwrite(hFile, var);
						format(var, 64, "AT1POS3=%4f\n", PlayerInfo[i][At1Pos3]);fwrite(hFile, var);
						format(var, 64, "AT1ROT1=%4f\n", PlayerInfo[i][At1Rot1]);fwrite(hFile, var);
						format(var, 64, "AT1ROT2=%4f\n", PlayerInfo[i][At1Rot2]);fwrite(hFile, var);
						format(var, 64, "AT1ROT3=%4f\n", PlayerInfo[i][At1Rot3]);fwrite(hFile, var);
						format(var, 64, "AT1SCALE1=%4f\n", PlayerInfo[i][At1Scale1]);fwrite(hFile, var);
						format(var, 64, "AT1SCALE2=%4f\n", PlayerInfo[i][At1Scale2]);fwrite(hFile, var);
						format(var, 64, "AT1SCALE3=%4f\n", PlayerInfo[i][At1Scale3]);fwrite(hFile, var);

						format(var, 64, "AT2=%d\n", PlayerInfo[i][pLAt]);fwrite(hFile, var);
						format(var, 64, "AT2POS1=%4f\n", PlayerInfo[i][At2Pos1]);fwrite(hFile, var);
						format(var, 64, "AT2POS2=%4f\n", PlayerInfo[i][At2Pos2]);fwrite(hFile, var);
						format(var, 64, "AT2POS3=%4f\n", PlayerInfo[i][At2Pos3]);fwrite(hFile, var);
						format(var, 64, "AT2ROT1=%4f\n", PlayerInfo[i][At2Rot1]);fwrite(hFile, var);
						format(var, 64, "AT2ROT2=%4f\n", PlayerInfo[i][At2Rot2]);fwrite(hFile, var);
						format(var, 64, "AT2ROT3=%4f\n", PlayerInfo[i][At2Rot3]);fwrite(hFile, var);
						format(var, 64, "AT2SCALE1=%4f\n", PlayerInfo[i][At2Scale1]);fwrite(hFile, var);
						format(var, 64, "AT2SCALE2=%4f\n", PlayerInfo[i][At2Scale2]);fwrite(hFile, var);
						format(var, 64, "AT2SCALE3=%4f\n", PlayerInfo[i][At2Scale3]);fwrite(hFile, var);

						format(var, 64, "AT3=%d\n", PlayerInfo[i][pRAt]);fwrite(hFile, var);
						format(var, 64, "AT3POS1=%4f\n", PlayerInfo[i][At3Pos1]);fwrite(hFile, var);
						format(var, 64, "AT3POS2=%4f\n", PlayerInfo[i][At3Pos2]);fwrite(hFile, var);
						format(var, 64, "AT3POS3=%4f\n", PlayerInfo[i][At3Pos3]);fwrite(hFile, var);
						format(var, 64, "AT3ROT1=%4f\n", PlayerInfo[i][At3Rot1]);fwrite(hFile, var);
						format(var, 64, "AT3ROT2=%4f\n", PlayerInfo[i][At3Rot2]);fwrite(hFile, var);
						format(var, 64, "AT3ROT3=%4f\n", PlayerInfo[i][At3Rot3]);fwrite(hFile, var);
						format(var, 64, "AT3SCALE1=%4f\n", PlayerInfo[i][At3Scale1]);fwrite(hFile, var);
						format(var, 64, "AT3SCALE2=%4f\n", PlayerInfo[i][At3Scale2]);fwrite(hFile, var);
						format(var, 64, "AT3SCALE3=%4f\n", PlayerInfo[i][At3Scale3]);fwrite(hFile, var);

						format(var, 64, "AT4=%d\n", PlayerInfo[i][pMouth]);fwrite(hFile, var);
						format(var, 64, "AT4POS1=%4f\n", PlayerInfo[i][At4Pos1]);fwrite(hFile, var);
						format(var, 64, "AT4POS2=%4f\n", PlayerInfo[i][At4Pos2]);fwrite(hFile, var);
						format(var, 64, "AT4POS3=%4f\n", PlayerInfo[i][At4Pos3]);fwrite(hFile, var);
						format(var, 64, "AT4ROT1=%4f\n", PlayerInfo[i][At4Rot1]);fwrite(hFile, var);
						format(var, 64, "AT4ROT2=%4f\n", PlayerInfo[i][At4Rot2]);fwrite(hFile, var);
						format(var, 64, "AT4ROT3=%4f\n", PlayerInfo[i][At4Rot3]);fwrite(hFile, var);
						format(var, 64, "AT4SCALE1=%4f\n", PlayerInfo[i][At4Scale1]);fwrite(hFile, var);
						format(var, 64, "AT4SCALE2=%4f\n", PlayerInfo[i][At4Scale2]);fwrite(hFile, var);
						format(var, 64, "AT4SCALE3=%4f\n", PlayerInfo[i][At4Scale3]);fwrite(hFile, var);

						for(new hc=0;hc<MAX_HVCAR;hc++)
						{
						    format(var, sizeof(var), "CarPlate_%d=%s\n",hc,PVPlate[i][hc]);fwrite(hFile, var);
							format(var, sizeof(var), "CarSign_%d=%s\n",hc,PVSign[i][hc]);fwrite(hFile, var);
							format(var, sizeof(var), "CarTowed_%d=%d\n",hc,PVTowed[i][hc]);fwrite(hFile, var);
						}
						fclose(hFile);
					}
				}
			}
		}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
	//new tmp2[256];
	new string2[128];
	new playername2[256];
	GetPlayerName(playerid, playername2, sizeof(playername2));
	format(string2, sizeof(string2), "user/%s.ini", playername2);
	new File: UserFile = fopen(string2, io_read);
	if ( UserFile )
	{
		new PassData[256];
		new keytmp[256], valtmp[256];
		fread( UserFile , PassData , sizeof( PassData ) );
		keytmp = ini_GetKey( PassData );
		if( strcmp( keytmp , "Key" , true ) == 0 )
		{
			valtmp = ini_GetValue( PassData );
			strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 255);
		}
		if(strcmp(PlayerInfo[playerid][pKey],password, true ) == 0 )
		{
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
				if( strcmp( key , "AdminName" , true ) == 0 ){val = ini_GetValue( Data );strmid(AdminName[playerid], val, 0, strlen(val)-1, 255);if(!strlen(AdminName[playerid])){AdminName[playerid] = "";}}//어드민이름
				if( strcmp( key , "noneon" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][noneon] = strval( val ); }
				if( strcmp( key , "Newbie" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewbie] = strval( val ); }
				if( strcmp( key , "Baejin2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBaejin2] = strval( val ); }
				if( strcmp( key , "pA" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pga] = floatstr( val ); }
				if( strcmp( key , "2pA" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pga2] = floatstr( val ); }
				if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
				if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDonateRank] = strval( val ); }
				if( strcmp( key , "UpgradePoints" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][gPupgrade] = strval( val ); }
				if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
				if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
				if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
				if( strcmp( key , "Age" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAge] = strval( val ); }
				if( strcmp( key , "Card" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCard] = strval( val ); }
				if( strcmp( key , "Origin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pOrigin] = strval( val ); }
				if( strcmp( key , "Rmsdbr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][rmsdbr] = strval( val ); }
				if( strcmp( key , "Gimbob" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Gimbob] = strval( val ); }
				if( strcmp( key , "Tatoopen" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Tatoopen] = strval( val ); }
				if( strcmp( key , "Title" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(nicks[playerid], val, 0, strlen(val)-1, 255); if(!strlen(nicks[playerid])){nicks[playerid] = ""; } }
				if( strcmp( key , "CK" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCK] = strval( val ); }
				if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
				if( strcmp( key , "Respect" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
				if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
				if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAccount] = strval( val ); }
				if( strcmp( key , "Crimes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrimes] = strval( val ); }
				if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
				if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
				if( strcmp( key , "Driv" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDriv] = strval( val ); }
				if( strcmp( key , "Arrested" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pArrested] = strval( val ); }
				if( strcmp( key , "WantedDeaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWantedDeaths] = strval( val ); }
				if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneBook] = strval( val ); }
				if( strcmp( key , "pabcdefg" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pabcdefg] = strval( val ); }
				if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
				if( strcmp( key , "Fishes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishes] = strval( val ); }
				if( strcmp( key , "BiggestFish" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBiggestFish] = strval( val ); }
				if( strcmp( key , "Job" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJob] = strval( val ); }
				if( strcmp( key , "Paycheck" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayCheck] = strval( val ); }
				if( strcmp( key , "Paycheck2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayCheck2] = strval( val ); }
				if( strcmp( key , "HeadValue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValue] = strval( val ); }
				if( strcmp( key , "Result" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pResult], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
				if( strcmp( key , "dudwkd" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pdudwkd] = strval( val ); }
				if( strcmp( key , "dudwkdt" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pdudwkdt] = strval( val ); }
				if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
				if( strcmp( key , "Materials" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
				if( strcmp( key , "Drugs" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugs] = strval( val ); }
				if( strcmp( key , "Leader" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLeader] = strval( val ); }
				if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMember] = strval( val ); }
				if( strcmp( key , "eogudLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][peogudLic] = strval( val ); }
				if( strcmp( key , "dmdrmqLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][dmdrmqLic] = strval( val ); }
				if( strcmp( key , "diedie" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][diedie] = strval( val ); }
				if( strcmp( key , "FMember" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFMember] = strval( val ); }
				if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRank] = strval( val ); }
				if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pChar] = strval( val ); }
				if( strcmp( key , "BoxSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxSkill] = strval( val ); }
				if( strcmp( key , "pSaveinterior" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSaveinterior] = strval( val ); }
				if( strcmp( key , "pVworld" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVworld] = strval( val ); }
				if( strcmp( key , "Savelocations" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSavelocations] = strval( val ); }
				if( strcmp( key , "Savelocations2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSavelocations2] = strval( val ); }
				if( strcmp( key , "Savelocations3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSavelocations3] = strval( val ); }
				if( strcmp( key , "JackSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJackSkill] = strval( val ); }
				if( strcmp( key , "NewsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewsSkill] = strval( val ); }
				//if( strcmp( key , "DrugsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugsSkill] = strval( val ); }
				if( strcmp( key , "CookSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCookSkill] = strval( val ); }
				if( strcmp( key , "FishSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishSkill] = strval( val ); }
				if( strcmp( key , "pSHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHealth] = floatstr( val ); }
				if( strcmp( key , "Int" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInt] = strval( val ); }
				if( strcmp( key , "Local" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLocal] = strval( val ); }
				if( strcmp( key , "qntkd" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pqntkd] = strval( val ); }
				if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
				if( strcmp( key , "Model" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pModel] = strval( val ); }
				if( strcmp( key , "Gabang" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGabang] = strval( val ); }
			    if( strcmp( key , "pA" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pga] = floatstr( val ); }
			    if( strcmp( key , "2pA" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pga2] = floatstr( val ); }
				if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
				if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
				if( strcmp( key , "SmartPh" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSmart] = strval( val ); }
				if( strcmp( key , "Pos_x" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_x] = floatstr( val ); }
				if( strcmp( key , "Pos_y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_y] = floatstr( val ); }
				if( strcmp( key , "Pos_z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_z] = floatstr( val ); }
				if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
				if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
				if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
				if( strcmp( key , "FishLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishLic] = strval( val ); }
				if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
				if( strcmp( key , "CityLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCityLic] = strval( val ); }
				if( strcmp( key , "Carkey" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Carkey] = strval( val ); }

				if( strcmp( key , "Amour" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmour] = floatstr( val ); }

				if( strcmp( key , "Gun1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun1] = strval( val ); }
				if( strcmp( key , "Gun2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun2] = strval( val ); }
				if( strcmp( key , "Gun3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun3] = strval( val ); }
				if( strcmp( key , "Gun4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun4] = strval( val ); }
				if( strcmp( key , "Ammo1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo1] = strval( val ); }
				if( strcmp( key , "Ammo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo2] = strval( val ); }
				if( strcmp( key , "Ammo3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo3] = strval( val ); }
				if( strcmp( key , "Ammo4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo4] = strval( val ); }
				if( strcmp( key , "CarTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarTime] = strval( val ); }
				if( strcmp( key , "CarTime2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarTime2] = strval( val ); }
				if( strcmp( key , "PayDay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDay] = strval( val ); }
				if( strcmp( key , "PayDayHad" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDayHad] = strval( val ); }
				if( strcmp( key , "Watch" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWatch] = strval( val ); }
				if( strcmp( key , "gktehrm" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pgktehrm] = strval( val ); }
				if( strcmp( key , "fkaus" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pfkaus] = strval( val ); }
				if( strcmp( key , "dkdltm" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pdkdltm] = strval( val ); }
				if( strcmp( key , "Crashed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrashed] = strval( val ); }
				if( strcmp( key , "Wins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWins] = strval( val ); }
				if( strcmp( key , "Loses" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLoses] = strval( val ); }
				if( strcmp( key , "AlcoholPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAlcoholPerk] = strval( val ); }
				if( strcmp( key , "DrugPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugPerk] = strval( val ); }
				if( strcmp( key , "MiserPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMiserPerk] = strval( val ); }
				if( strcmp( key , "PainPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainPerk] = strval( val ); }
				if( strcmp( key , "JuJu" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJu] = strval( val ); }
				if( strcmp( key , "TraderPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTraderPerk] = strval( val ); }
				if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
				if( strcmp( key , "Mission" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMissionNr] = strval( val ); }
				if( strcmp( key , "Warnings" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns] = strval( val ); }
				if( strcmp( key , "Warnings2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns2] = strval( val ); }
				if( strcmp( key , "VirWorld" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVirWorld] = strval( val ); }
				if( strcmp( key , "Fuel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFuel] = strval( val ); }
				if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarried] = strval( val ); }
				if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "MarriedTo2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo2], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "FishTool" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishTool] = strval( val ); }
				if( strcmp( key , "Note1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote1], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Note1s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote1s] = strval( val ); }
				if( strcmp( key , "Note2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote2], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Note2s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote2s] = strval( val ); }
				if( strcmp( key , "Note3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote3], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Note3s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote3s] = strval( val ); }
				if( strcmp( key , "Note4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote4], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Note4s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote4s] = strval( val ); }
				if( strcmp( key , "Note5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pNote5], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Note5s" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNote5s] = strval( val ); }
				if( strcmp( key , "InvWeapon" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvWeapon] = strval( val ); }
				if( strcmp( key , "InvAmmo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo] = strval( val ); }
				if( strcmp( key , "InvAmmo6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo6] = strval( val ); }
				if( strcmp( key , "InvAmmo7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo7] = strval( val ); }
				if( strcmp( key , "InvAmmo8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo8] = strval( val ); }
				if( strcmp( key , "InvAmmo9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo9] = strval( val ); }
				if( strcmp( key , "InvAmmo10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo10] = strval( val ); }
				if( strcmp( key , "InvWeapon2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvWeapon2] = strval( val ); }
				if( strcmp( key , "InvAmmo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo2] = strval( val ); }
				if( strcmp( key , "InvWeapon3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvWeapon3] = strval( val ); }
				if( strcmp( key , "InvAmmo3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo3] = strval( val ); }
				if( strcmp( key , "InvWeapon4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvWeapon4] = strval( val ); }
				if( strcmp( key , "InvAmmo4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo4] = strval( val ); }
				if( strcmp( key , "InvWeapon5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvWeapon5] = strval( val ); }
				if( strcmp( key , "InvAmmo5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInvAmmo5] = strval( val ); }
				if( strcmp( key , "Lighter" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLighter] = strval( val ); }
				if( strcmp( key , "Cigarettes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCigarettes] = strval( val ); }
				if( strcmp( key , "Locked" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLocked] = strval( val ); }
				if( strcmp( key , "Chingchan" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pChingchan] = strval( val ); } // 칭찬
				if( strcmp( key , "Hotel1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHotel1] = strval( val ); }
				if( strcmp( key , "Hotel2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHotel2] = strval( val ); }
				if( strcmp( key , "Hotel3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHotel3] = strval( val ); }
				if( strcmp( key , "Hotel4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHotel4] = strval( val ); }
				if( strcmp( key , "Hotel5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHotel5] = strval( val ); }
				if( strcmp( key , "Meal" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMeal] = strval( val ); }
				if( strcmp( key , "HarvestMeal" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHarvestMeal] = strval( val ); }
				if( strcmp( key , "Rice" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRice] = strval( val ); }
				if( strcmp( key , "HarvestRice" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHarvestRice] = strval( val ); }
				if( strcmp( key , "Radio" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRadio] = strval( val ); }
				if( strcmp( key , "Pill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPill] = strval( val ); }
				if( strcmp( key , "Songpun" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSongpun] = strval( val ); }
				if( strcmp( key , "Rope" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRope] = strval( val ); }
				if( strcmp( key , "ShutupM" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pShutupMouse] = strval( val ); }
				if( strcmp( key , "Badge" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBadge] = strval( val ); }
				if( strcmp( key , "pArmour" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pArmour] = floatstr( val ); }
				if( strcmp( key , "Line" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLine] = strval( val ); }
				if( strcmp( key , "Demerit" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDemerit] = strval( val ); }
				if( strcmp( key , "AD" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAD] = strval( val ); }
				if( strcmp( key , "Boxing" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxing] = strval( val ); }
				if( strcmp( key , "Kungfu" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKungfu] = strval( val ); }
				if( strcmp( key , "Taek" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTaek] = strval( val ); }
				if( strcmp( key , "Tatoo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTatoo] = strval( val ); }
				if( strcmp( key , "Grabk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGrabk] = strval( val ); }
				if( strcmp( key , "Ellbow" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEllbow] = strval( val ); }
				if( strcmp( key , "cModel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcModel] = strval( val ); }
				if( strcmp( key , "Dnum" , true ) == 0 ) { val = ini_GetValue( Data ); Dnumber[playerid] = strval( val ); }
				if( strcmp( key , "Damo" , true ) == 0 ) { val = ini_GetValue( Data ); Dammo[playerid] = strval( val ); }
				if( strcmp( key , "cX" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcX] = floatstr( val ); }
				if( strcmp( key , "cY" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcY] = floatstr( val ); }
				if( strcmp( key , "cZ" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcZ] = floatstr( val ); }
				if( strcmp( key , "cAngle" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcAngle] = floatstr( val ); }
				if( strcmp( key , "cColor1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcColor1] = strval( val ); }
				if( strcmp( key , "cColor2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcColor2] = strval( val ); }
				if( strcmp( key , "cLocked" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcLocked] = strval( val ); }
				if( strcmp( key , "cOwned" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcOwned] = strval( val ); }
				if( strcmp( key , "cPark" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcPark] = strval( val ); }
				if( strcmp( key , "cModel2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcModel2] = strval( val ); }
				if( strcmp( key , "cX2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcX2] = floatstr( val ); }
				if( strcmp( key , "cY2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcY2] = floatstr( val ); }
				if( strcmp( key , "cZ2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcZ2] = floatstr( val ); }
				if( strcmp( key , "cAngle2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcAngle2] = floatstr( val ); }
				if( strcmp( key , "cColor12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcColor12] = strval( val ); }
				if( strcmp( key , "cColor22" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcColor22] = strval( val ); }
				if( strcmp( key , "cLocked2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcLocked2] = strval( val ); }
				if( strcmp( key , "cOwned2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcOwned2] = strval( val ); }
				if( strcmp( key , "cPark2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcPark2] = strval( val ); }
				if( strcmp( key , "cSpo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcSpo] = strval( val ); }
				if( strcmp( key , "cHood" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcHood] = strval( val ); }
				if( strcmp( key , "cRoof" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcRoof] = strval( val ); }
				if( strcmp( key , "cSideS" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcSideS] = strval( val ); }
				if( strcmp( key , "cLamp" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcLamp] = strval( val ); }
				if( strcmp( key , "cNitro" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcNitro] = strval( val ); }
				if( strcmp( key , "cExh" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcExh] = strval( val ); }
				if( strcmp( key , "cWheel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcWheel] = strval( val ); }
				if( strcmp( key , "cStero" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcStero] = strval( val ); }
				if( strcmp( key , "cHyd" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcHyd] = strval( val ); }
				if( strcmp( key , "cFBum" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcFBum] = strval( val ); }
				if( strcmp( key , "Taxi" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMeter] = strval( val ); }
				if( strcmp( key , "cRbum" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcRbum] = strval( val ); }
				if( strcmp( key , "cVentR" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcVentR] = strval( val ); }
				if( strcmp( key , "cVentL" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcVentL] = strval( val ); }
				if( strcmp( key , "cSpo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcSpo2] = strval( val ); }
				if( strcmp( key , "cHood2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcHood2] = strval( val ); }
				if( strcmp( key , "cRoof2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcRoof2] = strval( val ); }
				if( strcmp( key , "cSideS2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcSideS2] = strval( val ); }
				if( strcmp( key , "cLamp2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcLamp2] = strval( val ); }
				if( strcmp( key , "cNitro2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcNitro2] = strval( val ); }
				if( strcmp( key , "cExh2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcExh2] = strval( val ); }
				if( strcmp( key , "cWheel2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcWheel2] = strval( val ); }
				if( strcmp( key , "cStero2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcStero2] = strval( val ); }
				if( strcmp( key , "cHyd2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcHyd2] = strval( val ); }
				if( strcmp( key , "cFBum2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcFBum2] = strval( val ); }
				if( strcmp( key , "cRbum2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcRbum2] = strval( val ); }
				if( strcmp( key , "cVentR2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcVentR2] = strval( val ); }
				if( strcmp( key , "cVentL2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pcVentL2] = strval( val ); }
				if( strcmp( key , "PhoneB1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneB1] = strval( val ); }
				if( strcmp( key , "PhoneB2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneB2] = strval( val ); }
				if( strcmp( key , "PhoneB3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneB3] = strval( val ); }
				if( strcmp( key , "PhoneB4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneB4] = strval( val ); }
				if( strcmp( key , "PhoneB5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneB5] = strval( val ); }
				if( strcmp( key , "PhoneN1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPhoneN1], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "PhoneN2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPhoneN2], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "PhoneN3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPhoneN3], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "PhoneN4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPhoneN4], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "PhoneN5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pPhoneN5], val, 0, strlen(val)-1, 255); }
				if( strcmp( key , "Item1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Item1] = strval( val ); }
				if( strcmp( key , "TongJang" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][TongJang] = strval( val ); }
				if( strcmp( key , "Quest" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Quest] = strval( val ); }
				if( strcmp( key , "Wanted" , true ) == 0 ) { val = ini_GetValue( Data ); WantedLevel[playerid] = strval( val ); }
				if( strcmp( key , "Build" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBuild] = strval( val ); }
				if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHouse] = strval( val ); }
				if( strcmp( key , "Package" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPackage] = strval( val ); }
				if( strcmp( key , "Drug" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrug] = strval( val ); }
				if( strcmp( key , "SpawnChange" , true ) == 0 ) { val = ini_GetValue( Data ); SpawnChange[playerid] = strval( val ); }
				if( strcmp( key , "RentHouse" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRentHouse] = strval( val ); }
    			if( strcmp( key , "Byeong" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Byeong] = strval( val ); }
    			if( strcmp( key , "Neon1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon1] = strval( val ); }
    			if( strcmp( key , "Neon2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon2] = strval( val ); }
    			if( strcmp( key , "Neon3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon3] = strval( val ); }
    			if( strcmp( key , "Neon4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon4] = strval( val ); }
    			if( strcmp( key , "Neon5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon5] = strval( val ); }
    			if( strcmp( key , "Neon6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon6] = strval( val ); }
    			if( strcmp( key , "Neon7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon7] = strval( val ); }
    			if( strcmp( key , "Neon8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon8] = strval( val ); }
    			if( strcmp( key , "Neon9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon9] = strval( val ); }
    			if( strcmp( key , "Neon10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon10] = strval( val ); }
    			if( strcmp( key , "Neon11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][vNeon11] = strval( val ); }
    			if( strcmp( key , "ArmySP",true) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pArmysp] = strval( val );}
                if( strcmp( key , "Cloth_1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Cloth_1] = strval( val ); }
                if( strcmp( key , "Cloth_2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Cloth_2] = strval( val ); }
                if( strcmp( key , "Cloth_3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][Cloth_3] = strval( val ); }

				if( strcmp( key , "GPS" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGPS] = strval( val ); }
				if( strcmp( key , "Gido" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGido] = strval( val ); }
				if( strcmp( key , "bandage" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBandage] = strval( val ); }
				if( strcmp( key , "Bibun" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBibun] = strval( val ); }

    			if( strcmp( key , "AT1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHAt] = strval( val ); }
    			if( strcmp( key , "AT1POS1",true) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Pos1] = floatstr( val );}
                if( strcmp( key , "AT1POS2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Pos2] = floatstr( val ); }
                if( strcmp( key , "AT1POS3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Pos3] = floatstr( val ); }
                if( strcmp( key , "AT1ROT1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Rot1] = floatstr( val ); }
                if( strcmp( key , "AT1ROT2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Rot2] = floatstr( val ); }
				if( strcmp( key , "AT1ROT3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Rot3] = floatstr( val ); }
				if( strcmp( key , "AT1SCALE1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Scale1] = floatstr( val ); }
				if( strcmp( key , "AT1SCALE2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Scale2] = floatstr( val ); }
				if( strcmp( key , "AT1SCALE3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At1Scale3] = floatstr( val ); }

    			if( strcmp( key , "AT2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLAt] = strval( val ); }
    			if( strcmp( key , "AT2POS1",true) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Pos1] = floatstr( val );}
                if( strcmp( key , "AT2POS2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Pos2] = floatstr( val ); }
                if( strcmp( key , "AT2POS3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Pos3] = floatstr( val ); }
                if( strcmp( key , "AT2ROT1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Rot1] = floatstr( val ); }
                if( strcmp( key , "AT2ROT2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Rot2] = floatstr( val ); }
				if( strcmp( key , "AT2ROT3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Rot3] = floatstr( val ); }
				if( strcmp( key , "AT2SCALE1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Scale1] = floatstr( val ); }
				if( strcmp( key , "AT2SCALE2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Scale2] = floatstr( val ); }
				if( strcmp( key , "AT2SCALE3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At2Scale3] = floatstr( val ); }

    			if( strcmp( key , "AT3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRAt] = strval( val ); }
    			if( strcmp( key , "AT3POS1",true) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Pos1] = floatstr( val );}
                if( strcmp( key , "AT3POS2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Pos2] = floatstr( val ); }
                if( strcmp( key , "AT3POS3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Pos3] = floatstr( val ); }
                if( strcmp( key , "AT3ROT1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Rot1] = floatstr( val ); }
                if( strcmp( key , "AT3ROT2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Rot2] = floatstr( val ); }
				if( strcmp( key , "AT3ROT3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Rot3] = floatstr( val ); }
				if( strcmp( key , "AT3SCALE1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Scale1] = floatstr( val ); }
				if( strcmp( key , "AT3SCALE2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Scale2] = floatstr( val ); }
				if( strcmp( key , "AT3SCALE3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At3Scale3] = floatstr( val ); }

                if( strcmp( key , "BoomBox" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLily] = strval( val ); }

				if( strcmp( key , "AT4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMouth] = strval( val ); }
    			if( strcmp( key , "AT4POS1",true) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Pos1] = floatstr( val );}
                if( strcmp( key , "AT4POS2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Pos2] = floatstr( val ); }
                if( strcmp( key , "AT4POS3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Pos3] = floatstr( val ); }
                if( strcmp( key , "AT4ROT1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Rot1] = floatstr( val ); }
                if( strcmp( key , "AT4ROT2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Rot2] = floatstr( val ); }
				if( strcmp( key , "AT4ROT3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Rot3] = floatstr( val ); }
				if( strcmp( key , "AT4SCALE1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Scale1] = floatstr( val ); }
				if( strcmp( key , "AT4SCALE2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Scale2] = floatstr( val ); }
				if( strcmp( key , "AT4SCALE3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][At4Scale3] = floatstr( val ); }


				for(new hc=0;hc<MAX_HVCAR;hc++)
				{
					new string[256];
					format(string,sizeof(string),"CarPlate_%d",hc);if( strcmp( key , string , true ) == 0 ) {val = ini_GetValue( Data );strmid(PVPlate[playerid][hc],val,0,strlen(val)-1, 255);}
					format(string,sizeof(string),"CarSign_%d",hc);if( strcmp( key , string , true ) == 0 ) {val = ini_GetValue( Data );strmid(PVSign[playerid][hc],val,0,strlen(val)-1, 255);}
					format(string,sizeof(string),"CarTowed_%d",hc);if( strcmp( key , string , true ) == 0 ) {val = ini_GetValue( Data );PVTowed[playerid][hc]= strval( val );}
				}
			}//end while
			fclose(UserFile);//close the file after everything has been read in the while
		}
		else
		{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 비밀번호를 다시한번 확인해주십시오");
			fclose(UserFile);
			gPlayerLogTries[playerid] += 1;
			if(gPlayerLogTries[playerid] == 4 && !IsPlayerNPC(playerid)) { Kick(playerid); }
			return 1;
		}
		//GiveMoney(playerid, PlayerInfo[playerid][pCash]);
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 1;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pHealth] = 50.0;
			PlayerInfo[playerid][pAmour] = 0;
			PlayerInfo[playerid][pSaveinterior] = 0;
			PlayerInfo[playerid][pVworld] = 0;
			PlayerInfo[playerid][pSavelocations] = 0; // 이 부분들은 계정생성 되는곳에만.
			PlayerInfo[playerid][pSavelocations2] = 0;
			PlayerInfo[playerid][pSavelocations3] = 0;
			PlayerInfo[playerid][pModel] = 135;
			PlayerInfo[playerid][Carkey] = 0;
			new randphone = 100000 + random(899999);//minimum 1000  max 9999 //giving one at the start
			PlayerInfo[playerid][pPnumber] = randphone;
			PlayerInfo[playerid][pPbiskey] = 255;
			PlayerInfo[playerid][pReg] = 1;
			PlayerInfo[playerid][pGabang] = 0;
			PlayerInfo[playerid][pSmart] = 0;
			PlayerInfo[playerid][pBoxing] = 0;
			PlayerInfo[playerid][pKungfu] = 0;
			PlayerInfo[playerid][pTaek] = 0;
			PlayerInfo[playerid][pGrabk] = 0;
			PlayerInfo[playerid][pEllbow] = 0;
			PlayerInfo[playerid][pBuild]=0;
			PlayerInfo[playerid][pHouse]=0;
			PlayerInfo[playerid][pMaskuse] = 0;
		}
		if(PlayerInfo[playerid][pLocked] == 1 && !IsPlayerNPC(playerid)) // Auto-kick
		{
			ClearChatbox(playerid,10);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 계정은 잠겼습니다. 잠금해제를 요청하십시오");
			SCM(playerid, COLOR_ADMIN, "cafe.naver.com/rentocity");
			Kick(playerid);
		}
		if(PlayerInfo[playerid][pLevel] == -999 && !IsPlayerNPC(playerid)) //autoban
		{
			ClearChatbox(playerid,10);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 계정은 아이디밴 되었습니다. 밴해제를 요청하십시오");
			SCM(playerid, COLOR_ADMIN, "cafe.naver.com/rentocity");
			Kick(playerid);
			//Ban(playerid);
		}
		else if(PlayerInfo[playerid][pCK] > 0 && !IsPlayerNPC(playerid))
		{
			Kick(playerid);
		}
		ClearChatbox(playerid, 10);
		SCM(playerid, COLOR_ERROR," ");
		PlayerPlaySound(playerid,1039, 0.0, 0.0, 0.0);
		printf("INFO : "#C_WHITE" %s님이 로그인 하였습니다",playername2);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		SetTimerEx("UnsetFirstSpawn", 5000, false, "i", playerid)
		SetTimerEx("UnsetCrash", 5000, false, "i", playerid);
	}
	SetSpawnInfo(playerid, 1, PlayerInfo[playerid][pChar], PlayerInfo[playerid][pSavelocations], PlayerInfo[playerid][pSavelocations2], PlayerInfo[playerid][pSavelocations3], 1.0, -1, -1, -1, -1, -1, -1);
	gPlayerLogged[playerid] = 1;
	SpawnPlayer(playerid);
	if(PlayerInfo[playerid][pSavelocations] > 0.0 || PlayerInfo[playerid][pSavelocations2] > 0.0 || PlayerInfo[playerid][pSavelocations3] > 0.0)
	{
	    new Text:Textdraw0;
		MovingTimeCheck[playerid]=false;
		PlayerSave[playerid]=false;
		SaveTurnOn[playerid]=false;
	
		MovingTimeCheck[playerid]=false;
		PlayerSave[playerid]=false;
		SaveTurnOn[playerid]=false;

		new string[128];
		SetPlayerFreeze(playerid, true, 1);
		TogglePlayerControllable(playerid, 0);
		GameTextForPlayer(playerid, "Las Venturas", 4000, 4);
		SetTimerEx("Movingtime",8000,false,"i",playerid);
		PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "로그인에 성공하여 %s님의 계정파일을 불러오고 있습니다.\n 사용자의 사양에 따라 시간이 늦춰질수도 있습니다.", playername2);
		ShowPlayerDialog(playerid, MSGBOX_NONE, DIALOG_STYLE_MSGBOX, "로그인", string, "확인", "취소");

		Textdraw0 = TextDrawCreate(359.000000,433.000000,"The Seattle Role Playing Game");
		TextDrawAlignment(Textdraw0,0);
		TextDrawBackgroundColor(Textdraw0,0x000000ff);
		TextDrawFont(Textdraw0,3);
		TextDrawLetterSize(Textdraw0,0.499999,1.300000);
		TextDrawColor(Textdraw0,0x00ff00ff);
		TextDrawSetOutline(Textdraw0,1);
		TextDrawSetProportional(Textdraw0,1);
		TextDrawSetShadow(Textdraw0,1);

		new MusicRandom = random(3);
		switch(MusicRandom)
		{
		case 0:PlayerPlaySound(playerid, 1076, 0.0, 0.0, 0.0);
		case 1:PlayerPlaySound(playerid, 1185, 0.0, 0.0, 0.0);
		case 2:PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
		}
		if(PlayerInfo[playerid][pFMember] < 255)
		{
		    new tmp2[256];
			format(tmp2, sizeof(tmp2), "(정보) "#C_WHITE" 팩션 공지: %s", FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyMOTD]);
			SCM(playerid, COLOR_ERROR, tmp2);
		}
	}
	else
	{
		if(PlayerInfo[playerid][pTut]!=0)//듀토안볼때
		{
			new string[128];
			format(string, sizeof(string), "현재 %s님의 계정파일을 제대로 불러오지를 못했습니다.\n리붓 혹은 새로운 시작", playername2);
			ShowPlayerDialog(playerid, MSGBOX_NONE, DIALOG_STYLE_MSGBOX, "로그인", string, "확인", "취소");
			MovingTimeCheck[playerid]=true;
			PlayerSave[playerid]=true;
			SaveTurnOn[playerid]=true;
		}
	}
	new check=0;

	for(new v=1;v<MAX_VEHICLES;v++)
	{
		if(VehicleInfo[v][vLock] == 1)
		{
			SetVehicleParamsForPlayer(v,playerid, 0, 1);
		}
		if(c_strcmp(VehicleInfo[v][vOwner],BackupName[playerid])==1)
		{
			for(new hc=0;hc<MAX_HVCAR;hc++)
			{
				if(c_strcmp(PVSign[playerid][hc],VehicleInfo[v][vSign])==1)
				{
					PlayerVeh[playerid][hc]=v;
					check++;
				}
			}
		}
	}
	if(check==0)
	{
		for(new hc=0;hc<MAX_HVCAR;hc++)
		{
			if(c_strcmp(PVSign[playerid][hc],"no")==0)
			{
				if(PlayerVeh[playerid][hc]==0)
				{
					LoadVehicles(playerid,PVSign[playerid][hc],1);
				}
			}
		}
	}
	TextDrawHideForPlayer(playerid,ScreenMode1);
	TextDrawHideForPlayer(playerid,ScreenMode2);
	TextDrawHideForPlayer(playerid,ScreenMode3);



	SetTimerEx("sontimer2",900000,true,"i",playerid); // 15분마다 한번씩
	SetTimerEx("sontimer3",30000,true,"i",playerid); // 30초마다 한번씩

	return 1;
}

stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
	if ( strfind( line , "=" , true ) == -1 ) return keyRes;
	strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
	return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}
public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
			SBizzInfo[idx][sbOwned],
			SBizzInfo[idx][sbOwner],
			SBizzInfo[idx][sbMessage],
			SBizzInfo[idx][sbExtortion],
			SBizzInfo[idx][sbEntranceX],
			SBizzInfo[idx][sbEntranceY],
			SBizzInfo[idx][sbEntranceZ],
			SBizzInfo[idx][sbLevelNeeded],
			SBizzInfo[idx][sbBuyPrice],
			SBizzInfo[idx][sbEntranceCost],
			SBizzInfo[idx][sbTill],
			SBizzInfo[idx][sbLocked],
			SBizzInfo[idx][sbInterior],
			SBizzInfo[idx][sbProducts],
			SBizzInfo[idx][sbMaxProducts],
			SBizzInfo[idx][sbPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("script/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("script/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}




public BroadCast(color,const string[])
{
	SCMToAll(color, string);
	return 1;
}

public OOCOff(color,const string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!gOoc[i])
			{
				if(gPlayerLogged[i])
				{
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public OOCNEW(color,const string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!gNew[i])
			{
				SCM(i, color, string);
			}
		}
	}
}
public OOCNews(color,const string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!gNews[i])
			{
				SCM(i, color, string);
			}
		}
	}
}

public RadioNews(color,const string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!gNews[i] && VehicleRadio[GetPlayerVehicleID(i)] == 1 && IsPlayerInAnyVehicle(i))
			{
				SCM(i, color, string);
			}
		}
	}
}

public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == team)
			{
				SCM(i, color, string);
			}
		}
	}
}

public SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
			{
				SCM(i, color, string);
			}
		}
	}
}

public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJob] == job)
			{
				SCM(i, color, string);
			}
		}
	}
}

public SendNewFamilyMessage(family, color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pFMember] == family)
			{
				if(!gFam[i])
				{
					SCM(i, color, string);
				}
			}
		}
	}
}

public SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
			{
				if(!gFam[i])
				{
					SCM(i, color, string);
				}
			}
		}
	}
}


public beepcool(playerid)//호출됫뜸
{
if(beepcoolt[playerid] != 0)//i의 beepcoolt이 0이아닐경우
{
beepcoolt[playerid]--;//아 안되겟다
}
return 1;
}

public beepbeep(playerid, Float:xxx, Float:yyy, Float:zzz, Float:qjadnl, sound, number)
{//정리해보자
	for(new i = 0; i < M_P; i++)//반복문
	{
		if(PlayerToPoint(qjadnl,i,xxx,yyy,zzz))//
		{
		for(new j = 0; j<=number; j++)//for문을 돌린다 number만큼
		{
		if(beepcoolt[playerid] == 0)//
		{
		PlayerPlaySound(i, sound, 0.0, 0.0, 0.0);//
		beepcoolt[playerid] ++;//
		SetTimerEx("beepcoolt", 3000, 0, "d", playerid);
		}
		else
		{
  		j--;
		}
		}
		}
 }
return 1;
}


public SendTeamBeepMessage(team, color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == team)
			{
				SCM(i, color, string);
				RingTone[i] = 20;
			}
		}
	}
}

public SendEnemyMessage(color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] >= 3)
			{
				SCM(i, color, string);
			}
		}
	}
}
public Jk(playerid,giveplayerid,string[])
{
	new wanted[128];
	format(wanted, sizeof(wanted), "(시청알림) %s 이(가) %s 에게 [%s] 자격을 지급합니다",RPPlayerName(playerid),RPPlayerName(giveplayerid),string);
	SendFamilyMessage(7, COLOR_BLUE, wanted);
}
//==============================================================================
public SendAdminMessage(color, string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] >= 1)
			{
				SCM(i, color, string);
			}
		}
	}
}

public AdminDutyCast(color,const string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (oplisten[i] == 1)
			{
				SCM(i, color, string);
			}
		}
	}
	return 1;
}
public ABroadEarCast(color,const string[],level)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				if(BigEar[i] == 1)//아 나 병신인듯 뭐해이제
				{
					SCM(i, color, string);
					printf("%s", string);
				}
			}
		}
	}
	return 1;
}

public ABroadCast(color,const string[],level)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SCM(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
 // emtchat
public NewbieTeam2(color,const string[],level)
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pNewbie] >= level)
			{
				SCM(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public emtchat(color,const string[])
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pMember] >= 4)
			{
				SCM(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
//==============================================================================
public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

//---------------------------[DCMD Commands!!]--------------------------------------------
dcmd_specplayer(playerid, params[])
{
	new Giveplayerid, Name[256], String[256], Name2[256];
	if (PlayerInfo[playerid][pAdmin] >= 1)
	{
		if (sscanf(params, "d", Giveplayerid)) SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" /위성 [플레이어번호/이름의일부분]");
		else if (!IsPlayerConnected(Giveplayerid)) SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 접속하지 않은 플레이어 입니다.");
		else
		{
			if ( Specing[Giveplayerid] == 1 )
			{
				SCM(playerid, COLOR_RED, "   The person you have tried to spec is spectating someone else");
			}
			else
			{
				GetPlayerName(playerid, Name, 256);
				GetPlayerName(Giveplayerid, Name2, 256);
				format(String, 256, "[%i] %s is now spectating [%i] %s",playerid, Name,Giveplayerid, Name2);
				CallLocalFunction("ircRemoteSay", "iss", 1, "#FSE", String);
				Specing[playerid] = 1;
			}
			if ( !IsPlayerInAnyVehicle(Giveplayerid) )
			{
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, Giveplayerid);
				SetPlayerInterior(playerid,GetPlayerInterior(Giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(Giveplayerid));
				return 1;
			}
			else
			{
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(Giveplayerid));
				SetPlayerInterior(playerid,GetPlayerInterior(Giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(Giveplayerid));
				return 1;
			}
		}
	}
	return 1;
}

forward NoCmdHaeje(playerid, cmdid);
public NoCmdHaeje(playerid, cmdid)
{
	strmid(NoCmd[playerid][cmdid], "", 0, 255, 255);
	NoCmdCount[playerid][cmdid] = 0;
	KillTimer(NoCmdTimer[playerid][cmdid]);
}

dcmd_specoff(playerid, params[])
{
#pragma unused params
	TogglePlayerSpectating(playerid, 0);
	Specing[playerid] = 0;
	return 1;
}
//---------------------------<[ OnPlayerCommandText]>-------온플텍스트-------------------------------------------------
public OnPlayerCommandText(playerid, cmdtext[])
{
	dcmd(specplayer, 10, cmdtext);
	dcmd(specoff, 7, cmdtext);
	new string[256];
	new playermoney;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	new giveplayerid, moneys, idx;
	new idcar = GetPlayerVehicleID(playerid);
	new animationplayed;
	new id;
	new year, month, day;
	new specplayerid;
	cmd = strtok(cmdtext, idx);
	getdate(year, month, day);

	if(strcmp("/어드민카",cmdtext,true)==0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
 		{
			new myobject10 = CreateObject(18693,0,0,-1000,0,0,0,100);
			new myobject11 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject12 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject13 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject14 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject15 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject16 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject17 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject18 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject19 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject20 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject21 = CreateObject(19270,0,0,-1000,0,0,0,100);
			new myobject22 = CreateObject(18648,0,0,-1000,0,0,0,100);
			new myobject23 = CreateObject(18648,0,0,-1000,0,0,0,100);
			new myobject24 = CreateObject(18647,0,0,-1000,0,0,0,100);
			new myobject25 = CreateObject(18647,0,0,-1000,0,0,0,100);

			AttachObjectToVehicle(myobject10, GetPlayerVehicleID(playerid),       0.000000,0.000000,0.000000,43.200004,0.000000,0.000000);
			AttachObjectToVehicle(myobject11, GetPlayerVehicleID(playerid), -0.300000,-2.700001,-0.449999,89.099983,0.000000,0.000000);
			AttachObjectToVehicle(myobject12, GetPlayerVehicleID(playerid), 0.300000,-2.700001,-0.449999,89.099983,0.000000,0.000000);
			AttachObjectToVehicle(myobject13, GetPlayerVehicleID(playerid), -1.575000,-1.650000,-0.299999,83.699989,0.000000,0.000000);
			AttachObjectToVehicle(myobject14, GetPlayerVehicleID(playerid), 1.500000,-1.725000,-0.375000,94.499977,0.000000,0.000000);
			AttachObjectToVehicle(myobject15, GetPlayerVehicleID(playerid), 1.425000,1.725000,-0.375000,94.499977,0.000000,0.000000);
			AttachObjectToVehicle(myobject16, GetPlayerVehicleID(playerid), -1.500000,1.875000,-0.300000,91.799980,0.000000,0.000000);
			AttachObjectToVehicle(myobject17, GetPlayerVehicleID(playerid), 2.400000,0.000000,0.000000,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject18, GetPlayerVehicleID(playerid), -2.400000,0.000000,0.000000,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject19, GetPlayerVehicleID(playerid), 0.000000,3.450001,1.125000,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject20, GetPlayerVehicleID(playerid), -0.899999,-2.925001,1.049999,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject21, GetPlayerVehicleID(playerid), 0.749999,-2.925001,1.049999,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject22, GetPlayerVehicleID(playerid), 1.049999,0.000000,-0.449999,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject23, GetPlayerVehicleID(playerid), -1.049999,0.000000,-0.524999,0.000000,0.000000,0.000000);
			AttachObjectToVehicle(myobject24, GetPlayerVehicleID(playerid), 0.000000,-2.250000,-0.599999,0.000000,0.000000,89.099983);
			AttachObjectToVehicle(myobject25, GetPlayerVehicleID(playerid), 0.000000,2.175000,-0.899999,0.000000,0.000000,89.099983);
		}
		return 1;
	}
	for (new a = 0; a < MAX_NOCMDS; a++)
	{
	    if (strcmp(cmd, NoCmd[playerid][a], true) == 0 && strlen(NoCmd[playerid][a]) > 0 && NoCmdCount[playerid][a] > 0)
	    {
	        format(string, sizeof(string), "(정보) "#C_WHITE" 당신은 < %s > 명령어를 %d초간 사용 불가능합니다.", NoCmd[playerid][a], NoCmdCount[playerid][a]);
	        SCM(playerid, COLOR_BLUE, string);
	        return 1;
	    }
	}
	if (strcmp(cmd, "/명령어차단", true) == 0)
	{
	    if (!IsPlayerConnected(giveplayerid))
		{
		    SendClientMessage(playerid, COLOR_ERROR, "(정보) "#C_WHITE"접속중이지 않은 유저입니다.");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
		    SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
		    SCM(playerid, COLOR_ERROR, "(정보) "#C_WHITE" /명령어차단 [유저번호/이름의부분] [차단시간(초)] [명령어]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
		    SCM(playerid, COLOR_ERROR, "(정보) "#C_WHITE" /명령어차단 [유저번호/이름의부분] [차단시간(초)] [명령어]");
			return 1;
		}
		new count = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
		    SCM(playerid, COLOR_ERROR, "(정보) "#C_WHITE" /명령어차단 [유저번호/이름의부분] [차단시간(초)] [명령어]");
			return 1;
		}
		for (new a = 0; a < MAX_NOCMDS; a++)
		{
		    if (strlen(NoCmd[giveplayerid][a]) < 1)
		    {
		        strmid(NoCmd[giveplayerid][a], tmp, 0, 255, 255);
		        NoCmdCount[giveplayerid][a] = count;
		        NoCmdTimer[giveplayerid][a] = SetTimerEx("NoCmdHaeje", count*1000, false, "dd", giveplayerid, a);
		        format(string, sizeof(string), "(정보) "#C_WHITE" 관리자가 %s(%d)님의 < %s > 명령어 사용을 %d초간 차단하였습니다.", GetName(giveplayerid), giveplayerid, tmp, count);
                SCMToAll(COLOR_ADMIN, string);
                format(string, sizeof(string), "믿어주시오!!(어드민메시지) : "#C_WHITE" %s님이 차단했소!! 정말 난 안했단 말이오!!  ㅠㅠ", AdminName[playerid]);
				SendAdminMessage(COLOR_WHITE, string);
				return 1;
			}
		}
		SCM(playerid, COLOR_ERROR, "(정보) "#C_WHITE" 해당 유저의 차단된 명령어 갯수가 최대치를 초과하였습니다.");
	}
	if (strcmp(cmd, "/명령어차단해제", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
		    SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
		    SCM(playerid, COLOR_ERROR, "(정보) "#C_WHITE" /명령어차단해제 [유저번호/이름의부분] [명령어]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid))
		{
		    SendClientMessage(playerid, COLOR_ERROR, "(정보) "#C_WHITE"접속중이지 않은 유저입니다.");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
		    SCM(playerid, COLOR_ERROR, "(정보) "#C_WHITE" /명령어차단해제 [유저번호/이름의부분] [명령어]");
			return 1;
		}
		for (new a = 0; a < MAX_NOCMDS; a++)
		{
		    if (strcmp(NoCmd[giveplayerid][a], tmp, true) == 0)
		    {
		        strmid(NoCmd[giveplayerid][a], "", 0, 255, 255);
		        NoCmdCount[giveplayerid][a] = 0;
		        KillTimer(NoCmdTimer[giveplayerid][a]);
		        format(string, sizeof(string), "(정보) "#C_WHITE" 관리자 %s님께서 %s(%d)님의 < %s > 명령어 사용을 차단해제하였습니다.", AdminName[playerid], GetName(giveplayerid), giveplayerid, tmp);
                SendAdminMessage(COLOR_WHITE, string);
				SCM(giveplayerid, COLOR_WHITE, string);
				return 1;
			}
		}
		format(string, sizeof(string), "(정보) "#C_WHITE" 해당 유저는 < %s > 명령어가 차단되지 않았습니다.");
		SCM(playerid, COLOR_ERROR, string);
	}
	if(strcmp(cmd, "/공지시작", true) == 0)
	{
	if(PlayerInfo[playerid][pAdmin] < 3)
	{
	SCM(playerid, COLOR_GRAD1, " 당신은 권한이 없습니다.");
	return 1;
	}
	format(string, sizeof(string), "[공지] (%d) %s : Las Venturas Role Playing Games 에서 알려드립니다.", playerid, PlayerInfo[playerid][pAdmin]);
	SendClientMessageToAll(0x32D8BBFF, string);
	for(new i=0; i<M_P; i++)
	{
	if(IsPlayerConnected(i))
	{
	PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
	}
	}
	return 1;
	}
	if(strcmp(cmd, "/공지끝", true) == 0)
	{
	if(PlayerInfo[playerid][pAdmin] < 3)
	{
	SCM(playerid, COLOR_GRAD1, " 당신은 권한이 없습니다.");
	return 1;
	}
	format(string, sizeof(string), "[공지] (%d) %s : 이상 Las Venturas Role Playing Games 에서 알려드렸습니다.", playerid, PlayerInfo[playerid][pAdmin]);
	SendClientMessageToAll(0x32D8BBFF, string);
	for(new i=0; i<M_P; i++)
	{
	if(IsPlayerConnected(i))
	{
	PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
	}
	}
	return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0 || strcmp(cmd, "/관리접", true) == 0 || strcmp(cmd, "/관접", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SCM(playerid, COLOR_SUN, "Las Venturas Role Playing Game 관리자 목록");
			for(new i = 0; i < PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pAdmin] >= 1)
					{
						GetPlayerName(i, sendername, sizeof(sendername));
						if(AdminDuty[i] == 0)
						{
							format(string, 256, "%s", AdminName[i]);
							SCM(playerid, COLOR_ERROR, string);
						}
						else if(AdminDuty[i] == 1)
						{
							format(string, 256, "%s (관리 업무중)", AdminName[i]);
							SCM(playerid, COLOR_ADMIN, string);
						}
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/톨잠금", true) == 0 || strcmp(cmd, "/톨게이트잠금", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
				return 1;
			}
		    tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
			    SCM(playerid, COLOR_GREEN, "|_________ Tolls Controler _________|");
			    SCM(playerid, COLOR_INFO, " 1 - Richman 톨게이트");
			    SCM(playerid, COLOR_INFO, " 2 - Flint County 톨게이트");
			    SCM(playerid, COLOR_INFO, " 3 - LV 톨게이트");
			    SCM(playerid, COLOR_INFO, " 4 - 모든 톨게이트(잠금)");
			    SCM(playerid, COLOR_INFO, " 5 - 모든 톨게이트(열음)");
			}
			new member = PlayerInfo[playerid][pMember];
   			new rank = PlayerInfo[playerid][pRank];
			if(c_strcmp(tmp, "1") == 1)
			{
			    if(aTolls[FlintToll][E_tLocked] == 0)
			    {
				    aTolls[RichmanToll][E_tLocked] = 1;
					Toll_CloseToll(RichmanToll);
					format(string, sizeof(string), "** HQ: %s %s(이)가 Richman 톨게이트를 잠궜습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
					SendFamilyMessage(1,0x014DFEFF, string);
				}
				else
				{
				    aTolls[RichmanToll][E_tLocked] = 0;
					format(string, sizeof(string), "** HQ: %s %s(이)가 Richman 톨게이트를 열었습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
					SendFamilyMessage(1,0x014DFEFF, string);
				}
			}
			if(c_strcmp(tmp, "2") == 1)
			{
			    if(aTolls[FlintToll][E_tLocked] == 0)
			    {
			        aTolls[FlintToll][E_tLocked] = 1;
				    Toll_CloseToll(FlintToll);
					format(string, sizeof(string), "** HQ: %s %s(이)가 Flint County 톨게이트를 잠궜습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
					SendFamilyMessage(1,0x014DFEFF, string);
			    }
			    else
			    {
			    	aTolls[FlintToll][E_tLocked] = 0;
					format(string, sizeof(string), "** HQ: %s %s(이)가 Flint County 톨게이트를 열었습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
					SendFamilyMessage(1,0x014DFEFF, string);
			    }
			}
			if(c_strcmp(tmp, "3") == 1)
			{
			    if(aTolls[LVToll][E_tLocked] == 0)
			    {
			        aTolls[LVToll][E_tLocked] = 1;
					Toll_CloseToll(LVToll);
					format(string, sizeof(string), "** HQ: %s %s(이)가 LV Highway 톨게이트를 잠궜습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
					SendFamilyMessage(1,0x014DFEFF, string);
			    }
			    else
			    {
			        aTolls[LVToll][E_tLocked] = 0;
					format(string, sizeof(string), "** HQ: %s %s(이)가 LV Highway 톨게이트를 열었습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
					SendFamilyMessage(1,0x014DFEFF, string);
			    }
			}
			if(c_strcmp(tmp, "4") == 1)
			{
			    aTolls[FlintToll][E_tLocked] = 1;
			    aTolls[RichmanToll][E_tLocked] = 1;
			    aTolls[LVToll][E_tLocked] = 1;
			    Toll_CloseToll(FlintToll);
			    Toll_CloseToll(RichmanToll);
				Toll_CloseToll(LVToll);
				SetTimer("CloseToll", 1000, 0);
				format(string, sizeof(string), "** HQ: %s %s(이)가 모든 톨게이트를 잠궜습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
				SendFamilyMessage(1,0x014DFEFF, string);
			}
			if(c_strcmp(tmp, "5") == 1)
			{
			    aTolls[FlintToll][E_tLocked] = 0;
			    aTolls[RichmanToll][E_tLocked] = 0;
			    aTolls[LVToll][E_tLocked] = 0;
				format(string, sizeof(string), "** HQ: %s %s(이)가 모든 톨게이트를 열었습니다. **", GetRankName(member, rank), RPPlayerName(playerid));
				SendFamilyMessage(1,0x014DFEFF, string);
			}
		}
		return 1;
	}
	//==========================================================================
	if (strcmp("/톨게이트", cmdtext, true, 6) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new L_i_TollID;
  			if(IsPlayerInRangeOfPoint(playerid, 10.0, 623.9500, -1183.9774, 19.2260) || IsPlayerInRangeOfPoint(playerid, 10.0, 607.9684, -1194.2866, 19.0043)) // Richman tolls
			{
                L_i_TollID = RichmanToll;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10.0, 39.7039, -1522.9891, 5.1995) || IsPlayerInRangeOfPoint(playerid, 10.0, 62.7378, -1539.9891, 5.0639)) // Flint tolls
			{
			    L_i_TollID = FlintToll;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1795.9447, 704.2550, 15.0006) || IsPlayerInRangeOfPoint(playerid, 10.0, 1778.9886, 702.6728, 15.2574)) // LV tolls
			{
			    L_i_TollID = LVToll;
			}
			if(!OnDuty[playerid])
			{
				if(GetMoney(playerid) <= TollCost)
				{
				    SCM(playerid, COLOR_INFO, "[!] 당신은 충분한 소지금을 소지하고 있지않습니다.");
				    return 1;
				}
   				if(!aTolls[L_i_TollID][E_tLocked])
			    {
					Toll_OpenToll(L_i_TollID, playerid);
					GiveMoney(playerid, -TollCost);
					SCM(playerid, COLOR_INFO, "[!] 톨게이트 문이 열렸고, 요금으로 $50가 부과되었습니다.");
				}
				else
				{
				    SCM(playerid, COLOR_INFO, "[!] 톨게이트는 현재 잠겨있습니다.");
				}
			}
			else if(OnDuty[playerid])
			{
			    Toll_OpenToll(L_i_TollID, playerid);
			    SCM(playerid, COLOR_INFO, "[!] 톨게이트 문이 열렸습니다, 당신은 경관이라 요금이 부과되지 않습니다.");
			}
		}
		return 1;
	}
	if (strcmp("/모두소환", cmdtext, true, 6) == 0)
	{
	if( IsPlayerConnected( playerid ) )
	{
    if((IsPlayerAdmin(playerid)) || PlayerInfo[playerid][pAdmin] >=6)
    {
	new Float:Pos[3]; // 실수형 변수 Pos 의 배열 3개를 선언해줍니다
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]); // 플레이어의 위치를 구해 각각 저장
	for( new i = 0; i < GetMaxPlayers(); i++ ) // i 값이 0부터 최대 플레이어까지 증가합니다
	if( IsPlayerConnected( i ) )
	SetPlayerPos(i, Pos[0], Pos[1], Pos[2]); // 플레이어의 좌표를 이동
	}
	else
	return SCM(playerid, COLOR_ERROR, "*ERROR* 당신은 어드민이 아닙니다");
	}
	return 1;
	}
	if (strcmp("/농구공구매", cmdtext, true, 6) == 0)
	{
		if(!PlayerToPoint(10, playerid,2782.3027,-2019.0826,13.5547))
		{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농구 구매장에 있지 않습니다");
		return 1;
		}
		GiveMoney(playerid, -50);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		DestroyObject(Ball);
		SendClientMessage(playerid,0xC2A2DAAA,"농구공을 구매했습니다. 농구공 값으로 50달러를 지불합니다.");
		Ball = CreateObject(2114, x+random(3), y+random(3), z-0.8, 0, 0, 96);
		return 1;
	}
	if (strcmp("/농구시작", cmdtext, true, 10) == 0)
	{
		if(Bstart[playerid] == 1)
		{
		SendClientMessage(playerid,0xC2A2DAAA,"농구를 이미 시작했습니다.");
		return 1;
		}
		else
		{
		Bstart[playerid] = 1;
		SendClientMessage(playerid,0xC2A2DAAA,"농구를 시작합니다.");
		}
		return 1;
	}
	if (strcmp("/농구끝", cmdtext, true, 10) == 0)
	{
		if(Bstart[playerid] == 0)
		{
	    SendClientMessage(playerid,0xC2A2DAAA,"농구를 이미 중지했습니다.");
		return 1;
		}
		else
		{
		Bstart[playerid] = 0;
		SendClientMessage(playerid,0xC2A2DAAA,"농구를 중지합니다.");
		}
		return 1;
	}
	if (strcmp("/농구위치", cmdtext, true, 10) == 0)
	{
	SetPlayerCheckpoint(playerid,2782.3027,-2019.0826,13.5547,15.0);
	SendClientMessage(playerid,0xC2A2DAAA,"농구위치가 미니맵에 표시되었습니다.");
	return 1;
	}
		if (strcmp(cmd, "/비번변경") ==0 || strcmp(cmd, "/비번교체") ==0)
		{
		    if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "user/%s.ini", sendername);
				new tmppass[64];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /비번변경 [비밀번호] ");
					return 1;
				}
				strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
				Encrypt(tmppass);
				OnPlayerChangepassword(playerid,tmppass);
                //Changepass[playerid] = 0;
			}
			return 1;
		}
	//__________________________________________________________________________//
	if(strcmp(cmd, "/불법지도구매", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (!PlayerToPoint(5, playerid,1759.6058,-1808.3375,772.1852))//centerpoint 24-7
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 물품 지역 구매 장소에 있지 않습니다.");
				return 1;
			}
		   	if(GetPlayerMoney(playerid) < 2000)
			{
		    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 $2000의 금액을 소지하고 있지 않습니다.");
		    	return 1;
			}
			if(PlayerInfo[playerid][pGido] == 1)
			{
		    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 불법지도를 소지하고 있습니다.");
				return 1;
	     	}
	        if(PlayerToPoint(5.0, playerid, 1759.6058,-1808.3375,772.1852))
	        {
		        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 불법지도를 구매하셨습니다.");
		        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/불법지도)");
		        GiveMoney(playerid, -2000);
		        PlayerInfo[playerid][pGido] = 1;
			}
		}
		return 1;
	}
		  if(strcmp(cmd,"/붐박스",true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
				if(PlayerInfo[playerid][pLily] != 1)
				{
				    SCM(playerid,COLOR_RED,"INFO : "#C_WHITE"당신은 붐박스가 없습니다");
				    return 1;
				}
		        tmp = strtok(cmdtext,idx);
		        if(!strlen(tmp))
		        {
		            SCM(playerid,COLOR_HINT,"INFO : "#C_WHITE" /붐박스 [기능]");
		            SCM(playerid,COLOR_INFO,"ㅡㅡㅡ붐박스ㅡㅡㅡ");
		            SCM(playerid,COLOR_ERROR,"설정 들기");
		            return 1;
				}
				if(strcmp(tmp,"들기",true) == 0)
				{
					if(Audioonf[playerid] == 1)
					{
						if(Audiogo[playerid] == 0)
						{
							SCM(playerid,COLOR_RED,"INFO : "#C_WHITE" 당신은 이미 붐박스를 재생시켰습니다. 붐박스를 제거해주세요");
							return 1;
						}
						Audiogo[playerid] = 0;
			            Audioonf[playerid] = 0;
			            Audiosece[playerid] = 0;
			            Audiosec[playerid] = 0;
			            Audiomusic[playerid] = 0;
			            DestroyObject(Audioobj[playerid]);
				    	Audioobj[playerid] = 999;
				    	RemovePlayerAttachedObject(playerid,3);
					}
				    Audiogo[playerid] = 1;
				    new szTemp[2048];
					new szText[2048];
				    for(new i=0; i<MAX_AUDIOS; i++)
				    {
				        if(i == 0)
				        {
				    		format(szTemp, sizeof(szTemp), "%s \n", Audiosee[i]);
				    		strcat(szText, szTemp);
			    		}
			    		else
			    		{
			    		    format(szTemp, sizeof(szTemp), "%s \n", Audiosee[i]);
				    		strcat(szText, szTemp);
			    		}
			    	}
					ShowPlayerDialog(playerid, SET_BOOMBOX, DIALOG_STYLE_LIST, "붐박스 설정", szText,"확인","취소");
					return 1;
				}
				if(strcmp(tmp,"설정",true) == 0)
				{
                    ShowPlayerDialog(playerid, SET_BOOMBOX2, DIALOG_STYLE_LIST, "붐박스 설정","재생\n변경\n제거", "확인", "취소");
                    return 1;
				}
			}
			return 1;
		}

	if(strcmp(cmd, "/불법지도", true) == 0)
	{
		if(Work[playerid] != 0)
		{
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 일 중에는 사용할 수 없습니다. 일을 끝내고 사용이 가능합니다.");
			return 1;
		}
		if(PlayerInfo[playerid][pGido] != 1)
		{
 			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 불법지도가 없으십니다.");
			return 1;
 		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /불법지도 [위치]");
			SCM(playerid,COLOR_SUN,"━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
			SCM(playerid,COLOR_SUN,"(불법대리점) 릴도[릴리도박장] 밀수항구[1~2] 마약입사 총기입사 마약밀수");
			SCM(playerid,COLOR_SUN,"━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
			return 1;
		}
		if(strcmp(tmp,"릴도",true) ==0)
 		{
   			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2162.3706,2169.4512,10.8203,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [릴리 도박장]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		if(strcmp(tmp,"불법대리점",true) ==0)
		{
	  		ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,-2148.3818,-241.9343,36.5156,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [불법대리점]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		if(strcmp(tmp,"밀수항구1",true) ==0)
		{
	  		ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2947.2197,-2004.6283,9.3792,10.0);
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [밀수항구1]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1;
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		if(strcmp(tmp,"밀수항구2",true) ==0)
		{
  			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2101.6350,-104.7200,2.2769,10.0);
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [밀수항구2]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1;
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		if(strcmp(tmp,"마약밀수",true) ==0)
		{
  			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1271.5930,295.0219,20.6563,10.0);
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [마약밀수장소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1;
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		if(strcmp(tmp,"마약입사",true) ==0)
		{
  			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2770.8308,-1628.5758,12.1775,10.0);
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [마약입사장소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1;
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		if(strcmp(tmp,"총기입사",true) ==0)
		{
  			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2744.2468, -2453.8977, 13.8623,10.0);
			SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 지도(미니맵) [총기입사장소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1;
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
		}
		return 1;
	}
			if(strcmp(cmd,"/폰",true) == 0)
		{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		     	SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /폰 [내용]");
		     	SCM(playerid, COLOR_ERROR, "[내용] : (전원) (번호) [/길찾기어플] (위치전송) (추적)");
		     	return 1;
		    }
		    if(strcmp(tmp, "위치전송", true) == 0)
		    {
        		if(IsPlayerConnected(playerid))
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_YELLOW, "SYSTEM :"#C_WHITE" /폰 위치전송 [핸드폰번호], $25");
						return 1;
					}
					if(PlayerInfo[playerid][pGPS] < 1)
					{
					    SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신의 핸드폰에는 GPS가 장착되어 있지 않습니다.");
					    return 1;
					}
					if(PlayerInfo[playerid][pSmart] == 0)
					{
					    SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 핸드폰을 보유하고 있지 않습니다.");
					    return 1;
					}
					new phonenumb = strval(tmp);
					if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 자기 자신을 위치전송할 수는 없습니다.");
						return 1;
					}
					if(GetPlayerMoney(playerid) < 25)
				    {
			    		SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 위성비용 $25를 소지하고 있지 않습니다.");
			    		return 1;
					}
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    GetPlayerName(playerid, sendername, sizeof(sendername));
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								giveplayerid = i;
								if(PhoneOnline[giveplayerid] == 1)
								{
									SCM(playerid,COLOR_YELLOW, "SYSTEM :"#C_WHITE" 상대방의 핸드폰 전원이 꺼져있어 위치전송이 불가능합니다.");
									return 1;
								}
								new zone[MAX_ZONE_NAME];
								GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
								new string_n[256];
								format(string_n, sizeof(string_n), "SYSTEM :"#C_WHITE" %s 이(가) 당신에게 위치를 전송시켰습니다. (/체크제거) (위치: %s)",sendername,zone);
								SCM(giveplayerid,COLOR_YELLOW,string_n);
								format(string_n, sizeof(string_n), "SYSTEM :"#C_WHITE" 당신은 그의 핸드폰에 위치전송을 성공하였습니다.",giveplayer);
								SCM(playerid,COLOR_YELLOW,string_n);
								format(string, sizeof(string), "* %s 이(가) 무엇인가를 손으로 누르며 작동시킨다.", RPPlayerName(playerid));
			                    ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "* 핸드폰 액정이 켜지면서 진동합니다. ((%s))", giveplayerid);
			                    ProxDetector(10.0, giveplayerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			                    DisablePlayerCheckpoint(giveplayerid);
 								new Float:X,Float:Y,Float:Z;
								GetPlayerPos(playerid, X, Y, Z);
								SetPlayerCheckpoint(giveplayerid, X, Y, Z, 5);
								GiveMoney(playerid, -25);
								return 1;
							}
						}
					}
				}
			}
			if(strcmp(tmp, "전원", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new string_n[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					format(string_n, sizeof(string_n), "* %s 이(가) 핸드폰을 전원을 끈다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string_n, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신의 핸드폰이 오프라인 됩니다.");
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					format(string_n, sizeof(string_n), "* %s 이(가) 핸드폰 전원을 켠다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string_n, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신의 핸드폰이 온라인 됩니다.");
				}
			}
			return 1;
		}
		if(strcmp(tmp, "번호", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pSmart] == 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /폰 번호 [플레이어의번호/이름의부분]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								format(string, 256, "이름: %s, ☎: %d",GetName(giveplayerid),PlayerInfo[giveplayerid][pPnumber]);
								SCM(playerid, COLOR_ERROR, string);
							    format(string, sizeof(string), "* %s 이(가) 전화번호부를 뒤적인다.", RPPlayerName(playerid));
			                    ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
					}
					else
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 스마트폰이 없습니다.");
				}
			}
			return 1;
			}
        	if(strcmp(tmp, "추적", true) == 0)
        	{
        		if(IsPlayerConnected(playerid))
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_YELLOW, "SYSTEM :"#C_WHITE" /폰 추적 [핸드폰번호], $50");
						return 1;
					}
					if(PlayerInfo[playerid][pGPS] < 1)
					{
					    SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신의 핸드폰에는 GPS가 장착되어 있지 않습니다.");
					    return 1;
					}
					if(PlayerInfo[playerid][pSmart] == 0)
					{
					    SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 핸드폰을 보유하고 있지 않습니다.");
					    return 1;
					}
					new phonenumb = strval(tmp);
					if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 자기 자신을 추적할 수는 없습니다.");
						return 1;
					}
					if(GetPlayerMoney(playerid) < 50)
				    {
			    		SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 위성비용 $100를 소지하고 있지 않습니다.");
			    		return 1;
					}
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								giveplayerid = i;
								if(PhoneOnline[giveplayerid] == 1)
								{
								SCM(playerid,COLOR_YELLOW, "SYSTEM :"#C_WHITE" 상대방의 핸드폰 전원이 꺼져있어 추적할 수 없습니다.");
								return 1;
								}
								new zone[MAX_ZONE_NAME];
								GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
								new string_n[256];
								format(string_n, sizeof(string_n), "SYSTEM :"#C_WHITE" 대상의 위치가 레이더에 잡혔습니다. (위치: %s)",zone);
								SCM(playerid,COLOR_YELLOW,string_n);
								SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 (/추적종료)로 GPS 추적을 종료시킬 수 있습니다.");
								format(string, sizeof(string), "* %s 이(가) 무엇인가를 작동시킨다.", RPPlayerName(playerid));
			                    ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								cnwjr[playerid] = 1;
								cnwjreotkd[playerid] = giveplayerid;
								UsedFind[playerid] = 1;
								GiveMoney(playerid, -50);
								return 1;
							}
						}
					}
				}
			}
		}
		return 1;
	}
	//__________________________________________________________________________//
	if(strcmp(cmd, "/gps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		     	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /GPS [내용] [핸드폰번호]");
		     	SCM(playerid, COLOR_ERROR, "[내용] : 위치전송 추적");
		     	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" GPS를 사용할 시에는 위성 관측비로 $100 소비됩니다.");
		     	return 1;
		    }
		    if(strcmp(tmp, "위치전송", true) == 0)
		    {
        		if(IsPlayerConnected(playerid))
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /gps 위치전송 [핸드폰번호]");
						return 1;
					}
					if(PlayerInfo[playerid][pGPS] < 1)
					{
					    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 GPS를 보유하고 있지 않습니다.");
					    return 1;
					}
					new phonenumb = strval(tmp);
					if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 추적할 수는 없습니다");
						return 1;
					}
					if(GetPlayerMoney(playerid) < 100)
				    {
			    		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 추적이 가능한 돈을 소지하고 있지않습니다.");
			    		return 1;
					}
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    GetPlayerName(playerid, sendername, sizeof(sendername));
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								giveplayerid = i;
								if(PhoneOnline[giveplayerid] == 1)
								{
									SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 상대방의 핸드폰 전원이 꺼져있어 위치전송이 불가능합니다.");
									return 1;
								}
								new zone[MAX_ZONE_NAME];
								GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
								new string_n[256];
								format(string_n, sizeof(string_n), "INFO : "#C_WHITE" %s 이(가) 당신에게 위치를 전송시켰습니다. (/체크제거) (위치: %s)",sendername,zone);
								SCM(giveplayerid,COLOR_ERROR,string_n);
								format(string_n, sizeof(string_n), "INFO : "#C_WHITE" 당신은 그의 핸드폰에 위치전송을 성공하였습니다.",giveplayer);
								SCM(playerid,COLOR_ERROR,string_n);
								format(string, sizeof(string), "* %s 무엇인가를 손으로 누르며 작동시킨다.", RPPlayerName(playerid));
			                    ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "* %s 무엇인가를 손으로 누르며 작동이 된다.", giveplayerid);
			                    ProxDetector(10.0, giveplayerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			                    DisablePlayerCheckpoint(giveplayerid);
 								new Float:X,Float:Y,Float:Z;
								GetPlayerPos(playerid, X, Y, Z);
								SetPlayerCheckpoint(giveplayerid, X, Y, Z, 5);
								GiveMoney(playerid, -100);
								return 1;
							}
						}
					}
				}
			}
        	if(strcmp(tmp, "추적", true) == 0)
        	{
        		if(IsPlayerConnected(playerid))
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /gps 추적 [핸드폰번호]");
						return 1;
					}
					if(PlayerInfo[playerid][pGPS] < 1)
					{
					    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 GPS를 보유하고 있지 않습니다.");
					    return 1;
					}
					new phonenumb = strval(tmp);
					if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 추적할 수는 없습니다");
						return 1;
					}
					if(GetPlayerMoney(playerid) < 100)
				    {
			    		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 추적이 가능한 돈을 소지하고 있지않습니다.");
			    		return 1;
					}
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								giveplayerid = i;
								if(PhoneOnline[giveplayerid] == 1)
								{
								SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 상대방의 핸드폰 전원이 꺼져있어 추적할 수 없습니다");
								return 1;
								}
								new zone[MAX_ZONE_NAME];
								GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
								new string_n[256];
								format(string_n, sizeof(string_n), "INFO : "#C_WHITE" 상대방의 위치가 레이더에 잡혔습니다. (위치: %s)",zone);
								SCM(playerid,COLOR_ERROR,string_n);
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (/추적종료)로 GPS 추적을 종료시킬 수 있습니다.");
								format(string, sizeof(string), "* %s 무엇인가를 작동시킨다.", RPPlayerName(playerid));
			                    ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								cnwjr[playerid] = 1;
								cnwjreotkd[playerid] = giveplayerid;
								UsedFind[playerid] = 1;
								GiveMoney(playerid, -100);
								return 1;
							}
						}
					}
				}
			}
		}
		return 1;
	}
	//__________________________________________________________________________//
	if(strcmp(cmd, "/불법", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerToPoint(50.0, playerid, -2148.3818,-241.9343,36.5156))
	        {
				ShowPlayerDialog(playerid, DIALOG_18, DIALOG_STYLE_LIST, "불법 대리점", "GPS($1000)","확인","취소");
			}
		}
		return 1;
	}
	//__________________________________________________________________________//
	if(strcmp(cmd, "/강제이혼", true) == 0 || strcmp(cmd, "/개인이혼", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerToPoint(50.0, playerid, 358.7060,184.4863,1008.3828))
			{
			    if(GetPlayerMoney(playerid) < 10000)
			    {
			    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이혼을 할만한 금액을 소지하고 있지 않습니다.");
			    	return 1;
				}
				if(PlayerInfo[playerid][pMarried] < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 결혼하지 않았습니다");
					return 1;
				}
			        new string2[158];
					ClearMarriage(playerid);
					ClearMarriage(DivorceOffer[playerid]);
					PlayerInfo[playerid][pPhousekey] = 255;
					PlayerInfo[playerid][pPbiskey] = 255;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이혼을 하셨습니다 !");
					format(string2, sizeof(string2), "* %s 서류에 이혼도장을 찍는다.", RPPlayerName(playerid))
					ProxDetector(10.0, playerid, string2, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					GiveMoney(playerid, -10000);
			}
		}
		return 1;
	}
	//__________________________________________________________________________//
	if(strcmp(cmdtext, "/악세목록", true) == 0 || strcmp(cmdtext, "/악세보기", true) == 0)
	{
		new ShowText[4][150];
		if(PlayerInfo[playerid][pHAt]!=0)
		{
		    ShowText[0]="모자 : 있음";
		}else{
		    ShowText[0]="모자 : 없음";
		}
		if(PlayerInfo[playerid][pLAt]!=0)
		{
		    ShowText[1]="안경 : 있음";
		}else{
		    ShowText[1]="안경 : 없음";
		}
		if(PlayerInfo[playerid][pRAt]!=0)
		{
		    ShowText[2]="손 : 있음";
		}else{
		    ShowText[2]="손 : 없음";
		}
		if(PlayerInfo[playerid][pMouth]!=0)
		{
		    ShowText[3]="마스크 : 있음";
		}else{
		    ShowText[3]="마스크 : 없음";
		}
	    SCM(playerid, COLOR_YELLOW2, "악세사리 목록");
		for(new i=0;i<=3;i++)
		{
		    format(string,sizeof(string), " %s ", ShowText[i]);
		    SCM(playerid, COLOR_ERROR, string);
		}
	    SCM(playerid, COLOR_YELLOW2, "====================");
	    return 1;
	}
	//__________________________________________________________________________//
		if(strcmp(cmd, "/앞", true) == 0)
		{
 		   if(IsPlayerConnected(playerid))
 		   {
		    	if(AtSetting[playerid])
				{
		  			SetPlayerCameraPos(playerid,2241.6987,-1676.1122,22.5460);
					SetPlayerCameraLookAt(playerid,2241.6987,-1676.1122,22.5460);

					SetPlayerPos(playerid,2246.7620,-1676.1641,21.0313);
					SetPlayerFacingAngle(playerid,78.1776);
				}
		    }
		    return 1;
		}
		if(strcmp(cmd, "/뒤", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
		    	if(AtSetting[playerid])
				{
		  			SetPlayerCameraPos(playerid,2241.6987,-1676.1122,22.5460);
					SetPlayerCameraLookAt(playerid,2241.6987,-1676.1122,22.5460);

					SetPlayerPos(playerid,2246.7620,-1676.1641,21.0313);
					SetPlayerFacingAngle(playerid,270.0);
				}
		    }
		    return 1;
		}
		if(strcmp(cmd, "/옆", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
		    	if(AtSetting[playerid])
				{
		  			SetPlayerCameraPos(playerid,2241.6987,-1676.1122,22.5460);
					SetPlayerCameraLookAt(playerid,2241.6987,-1676.1122,22.5460);

					SetPlayerPos(playerid,2246.7620,-1676.1641,21.0313);
					SetPlayerFacingAngle(playerid,0.0);
				}
		    }
		    return 1;
		}

	if(strcmp(cmd, "/악세착용", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /악세착용 [슬롯1~3]");
				return 1;
			}
			new atslot = strval(tmp);
			if(atslot == 1)
			{
				if(PlayerInfo[playerid][pHAt]!=0)
				{
		  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 착용완료");
				}
			}
			if(atslot == 2)
			{
				if(PlayerInfo[playerid][pLAt]!=0)
				{
		  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 착용완료");
				}
			}
			if(atslot == 3)
			{
				if(PlayerInfo[playerid][pRAt]!=0)
				{
		   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 착용완료");
				}
			}
			if(atslot == 4)
			{
				if(PlayerInfo[playerid][pMouth]!=0)
				{
		   			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
					SCM(playerid,COLOR_ERROR,""#C_RED"(INFO) "#C_WHITE": 착용완료");
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/악세해제", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /악세해제 [슬롯1~3]");
				return 1;
			}
			new atslot = strval(tmp);
			if(atslot == 1)
			{
				if(PlayerInfo[playerid][pHAt]!=0)
				{
					RemovePlayerAttachedObject(playerid,1);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 해제완료");
				}
			}
			if(atslot == 2)
			{
				if(PlayerInfo[playerid][pLAt]!=0)
				{
                    RemovePlayerAttachedObject(playerid,2);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 해제완료");
				}
			}
			if(atslot == 3)
			{
				if(PlayerInfo[playerid][pRAt]!=0)
				{
					RemovePlayerAttachedObject(playerid,3);
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 해제완료");
				}
			}
			if(atslot == 4)
			{
				if(PlayerInfo[playerid][pMouth]!=0)
				{
					RemovePlayerAttachedObject(playerid,4);
					SCM(playerid,COLOR_ERROR,""#C_RED"(INFO) "#C_WHITE": 해제완료");
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext,"/악세도움말",true)==0)
	{
		SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 악세사리 수정 "#C_SUC"━━━━━");
		SendClientMessage(playerid, COLOR_YELLOW2,"");
		SCM(playerid,COLOR_ERROR," 위치 변경 [Ctrl], 각도 변경 [Shift], 크기 변경 [Alt]");
		SCM(playerid,COLOR_ERROR," 악세사리 좌표 수정 [ 키패드 [4]:(X), [6]:(Y), [C]:(Z) ]");
		SCM(playerid,COLOR_ERROR," /앞 /뒤 /옆 [머리 정면 고정 : /HEADMOVE]");
		SCM(playerid,COLOR_ERROR," 악세사리 구매 : [Space Bar]");
		SCM(playerid,COLOR_ERROR," /악세목록 /악세착용 /악세해제");
		return 1;
	}
	//__________________________________________________________________________//
	if(strcmp(cmd, "/악세취소", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(AtSetting[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 악세사리를 맞추고 있지 않습니다.");
				return 1;
			}
			RemovePlayerAttachedObject(playerid,0);
			RemovePlayerAttachedObject(playerid,1);
			RemovePlayerAttachedObject(playerid,2);
			RemovePlayerAttachedObject(playerid,3);
			ToggleSetting[playerid]=0;
			AtSetting[playerid]=0;
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 악세사리 취소가 완료 되었습니다.");
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid,207.2564,-106.0976,1005.1328);
			SetPlayerInterior(playerid,15);
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
		}
		return 1;
	}
		if(strcmp(cmd, "/악세사리", true) == 0)
		{
		    if(IsAtClothShop(playerid))
			{
			    if(PlayerInfo[playerid][pCash] < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 1달러가 없습니다.");
					return 1;
				}
				if(AtSetting[playerid]!=0)
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 설정중입니다. 설정을 완료해주세요.");
				    return 1;
				}
				ShowPlayerDialog(playerid,DIALOG_15,DIALOG_STYLE_LIST,"악세사리","모자\n안경\n손\n마스크","확인","취소");
				SCM(playerid,COLOR_ERROR," 위치 변경 [Ctrl], 각도 변경 [Shift], 크기 변경 [Alt]");
			    SCM(playerid,COLOR_ERROR," 악세사리 좌표 수정 [ 키패드 [4]:(X), [6]:(Y), [C]:(Z) ]");
			    SCM(playerid,COLOR_ERROR," /앞 /뒤 /왼 /오른 [머리 정면 고정 : /HEADMOVE]");
			    SCM(playerid,COLOR_ERROR," 악세사리 구매 : [Space Bar]");
			    SCM(playerid,COLOR_ERROR," /악세목록 /악세착용 /악세해제 /악세취소");
			   	return 1;
			}
			else
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 옷가게에 있지 않습니다.");
			    return 1;
			}
		}

	//____________________________________________________________________________//
		if(strcmp(cmd, "/발신자통화", true) == 0 )
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /발신자통화 [전화번호]");
					return 1;
				}
				new phonenumb = strval(tmp);
				if(PlayerInfo[playerid][pSmart] == 0)
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 스마트폰이 있지 않습니다.");
					return 1;
				}
				if(PhoneOnline[playerid] == 1)
				{
					SCM(playerid,COLOR_YELLOW, "SYSTEM :"#C_WHITE" 핸드폰 전원이 꺼져있어 통화가 불가능합니다.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 스마트폰을 엽니다.", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				AP
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
						{
							giveplayerid = i;
							Mobile[playerid] = giveplayerid; //caller connecting
							if(IsPlayerConnected(giveplayerid))
							{
								if(giveplayerid != INVALID_PLAYER_ID)
								{
									if(PhoneOnline[giveplayerid] > 0)
									{
										SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 폰전원이 꺼져있습니다.");
										return 1;
									}
									if(Mobile[giveplayerid] == 255)
									{
										if(PlayerInfo[giveplayerid][pJailed] == 1 || PlayerInfo[giveplayerid][pJailed] == 2 || PlayerInfo[giveplayerid][pJailed] == 3)
										{
											SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 전화기에서는 아무 응답도 들리지 않습니다.");
										    return 1;
										}
										format(string, sizeof(string), "SYSTEM :"#C_WHITE" 전화벨이 울리기 시작했습니다 (/받기) (발신자표시제한)");
										SCM(giveplayerid, COLOR_ERROR, string);
										GetPlayerName(giveplayerid, sendername, sizeof(sendername));//어쫄까
										RingTone[giveplayerid] = 10;
										format(string, sizeof(string), "* %s의 휴대 전화기가 울린다.", RPPlayerName(giveplayerid));
										SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 이제 T 버튼으로 말을 할 수 있습니다. (/끊기)로 전화를 끊을 수 있습니다.");
										ProxDetector(10.0, i, string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
										UnknownPhoneNum[playerid] = true;
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
										CellTime[playerid] = 1;
										return 1;
									}
								}
							}
						}
					}
				}
				SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 전화기에서는 아무 응답도 들리지 않습니다.");
			}
			return 1;
		}


	if(strcmp(cmd,"/국적변경", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	   		if(PlayerToPoint(50.0,playerid,379.1414,174.2047,1008.3828))
			{
				if(GetPlayerMoney(playerid) >= 5000)
				{
	        		ShowPlayerDialog(playerid,DIALOG_14,DIALOG_STYLE_LIST,"국적 변경","한국\n미국\n중국\n일본\n프랑스\n이탈리아\n스페인\n러시아","변경","취소");
  				}
  				else
  				{
  					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그만한 돈이 없습니다");
  					return 1;
  				}
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(strcmp(cmd, "/관리자", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(AdminTime[playerid] > 0)
			{
				SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 연속적으로 불가능합니다. 장문으로 한번에 입력해주세요.");
				return 1;
			}
			if(norhks==1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 관리자 질문채널이 닫혀있습니다");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /관리자 [메시지/사유]");
				return 1;
			}
			AdminTime[playerid] = 10;
			PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "[%d]%s님의 질문: %s", playerid,RPPlayerName(playerid),(result));
			ABroadCast(0x51C451AA,string,1);
			SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 관리자는 바쁠수도 있어서 답변이 없거나 지연될수 있습니다.");
			SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 인내심을 가지고 조금만 기다려주세요.");
  			SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 관리자에게 대하는 태도를 보고 관리자도 똑같이 해드립니다.");
   			SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 그리고 관리자 도움을 요청하실때 꼭 사유도 꼭 써주시길 바랍니다.");
     		SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 이유 미기제시 답변이나 도움이 안올수도 있습니다.");
		}
		return 1;
	}
	//====================================================================================
	if(strcmp(cmd, "/n", true) == 0 || strcmp(cmd, "/질문", true) == 0)
	{
		if(IsPlayerConnected(playerid))//질문이돼 답변이돼?질문이되, 컬러 그린 넣어서 그런거 아니야?
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 로그인 하지 않았습니다");
				return 1;
			}
			if(newnoooc==1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 질문채널이 관리자에 의해 불가능하게 되었습니다");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다1.");
				return 1;
			}
			if(QandATime[playerid] > 0)
			{
				SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 연속적으로 불가능합니다. 장문으로 한번에 입력해주세요.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /n [질문할 내용]");
				return 1;
			}
			QandATime[playerid] = 10;
			format(string, sizeof(string), "* Question %s(%d) : %s",sendername, playerid, result);
			OOCNEW(0x21E916FF,string);
		}
		return 1;
	}
	if(strcmp(cmd, "/nn", true) == 0 || strcmp(cmd, "/도움", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 로그인 하지 않았습니다");
				return 1;
			}
			if(newnoooc==1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 질문채널이 관리자에 의해 불가능하게 되었습니다");
				return 1;
			}
			if(QandATime[playerid] > 0)
			{
				SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 연속적으로 불가능합니다. 장문으로 한번에 입력해주세요.");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /nn [답변할 내용]");
				return 1;
			}
			new newtext[64];
			QandATime[playerid] = 10;
			if(PlayerInfo[playerid][pNewbie] != 0) { newtext = " (Newbie Team)"; }
			format(string, sizeof(string), "*%s %s(%d): %s", newtext,RPPlayerName(playerid),playerid, result);
			OOCNEW(0xBDE718FF,string);
		}
		return 1;
	}
	if (strcmp(cmd, "/가자") ==0 || strcmp(cmd, "/log") ==0 || strcmp(cmd, "/login") ==0)
	{
		if(IsPlayerConnected(playerid))
		{
			new tmppass[64];
			if(gPlayerAccount[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 닉네임으로 가입된 계정이 없습니다");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가입은 (/입국 [비밀번호])또는 (/reg [비밀번호])를 입력하세요");
				return 1;
			}
			if(gPlayerLogged[playerid] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 로그인 되어 있습니다");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/가자 [비밀번호])또는 (/log [비밀번호])를 입력하세요");
				return 1;
			}
			if(WaittingTime[playerid]!=0)
			{
			    format(string,sizeof(string),"INFO : "#C_WHITE" 맵 데이터를 받아오고 있습니다. %d 초후에 로그인이 가능합니다.",WaittingTime[playerid]);
			    SCM(playerid, COLOR_ERROR, string);
			    StopAudioStreamForPlayer(playerid);
			    return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			Encrypt(tmppass);
			OnPlayerLogin(playerid,tmppass);
			printf("INFO : "#C_WHITE" %s의 비밀번호: %s " ,sendername, PlayerInfo[playerid][pKey]);
			if(PlayerInfo[playerid][pcOwned] == 1 && PlayerInfo[playerid][pcPark] == 1)
			{
				dudrnck[playerid] = CreateVehicle(PlayerInfo[playerid][pcModel], PlayerInfo[playerid][pcX], PlayerInfo[playerid][pcY], PlayerInfo[playerid][pcZ], PlayerInfo[playerid][pcAngle], PlayerInfo[playerid][pcColor1], PlayerInfo[playerid][pcColor2], 30000);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcSpo]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcHood]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcRoof]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcSideS]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcLamp]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcNitro]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcExh]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcWheel]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcStero]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcHyd]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcFBum]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcRbum]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcVentR]);
				AddVehicleComponent(dudrnck[playerid], PlayerInfo[playerid][pcVentL]);
				return 1;
			}
			else if(PlayerInfo[playerid][pcOwned2] == 1 && PlayerInfo[playerid][pcPark2] == 1)
			{
				dudrnck2[playerid] = CreateVehicle(PlayerInfo[playerid][pcModel2], PlayerInfo[playerid][pcX2], PlayerInfo[playerid][pcY2], PlayerInfo[playerid][pcZ2], PlayerInfo[playerid][pcAngle2], PlayerInfo[playerid][pcColor12], PlayerInfo[playerid][pcColor22], 30000);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcSpo2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcHood2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcRoof2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcSideS2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcLamp2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcNitro2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcExh2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcWheel2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcStero2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcHyd2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcFBum2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcRbum2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcVentR2]);
				AddVehicleComponent(dudrnck2[playerid], PlayerInfo[playerid][pcVentL2]);
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/입국") == 0 || strcmp(cmd, "/reg") ==0 || strcmp(cmd, "/register") ==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerAccount[playerid] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 계정이 이미 존재합니다. (/가자 [비밀번호])또는 (/log [비밀번호])를 입력하세요");
				return 1;
			}
			if(gPlayerLogged[playerid] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 로그인 되어 있습니다.");
				return 1;
			}
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 닉네임으로 가입된 계정이 이미 존재합니다.");
				fclose(hFile);
				return 1;
			}
			if(WaittingTime[playerid]!=0)
			{
			    format(string,sizeof(string),"INFO : "#C_WHITE" 맵 데이터를 받아오고 있습니다. %d 초후에 가입이 가능합니다.",WaittingTime[playerid]);
			    SCM(playerid, COLOR_ERROR, string);
			    return 1;
			}
			new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/입국 [비밀번호])또는 (/reg [비밀번호])를 입력하세요");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if(strcmp(cmd,"/스타일",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
		    tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				new text1[20];
				new text2[20];
				new text3[20];
				new text4[20];
				new text5[20];
				if(PlayerInfo[playerid][pBoxing]) { text1 = "배움"; } else { text1 = "안배움"; }
				if(PlayerInfo[playerid][pKungfu]) { text4 = "배움"; } else { text4 = "안배움"; }
				if(PlayerInfo[playerid][pTaek]) { text2 = "배움"; } else { text2 = "안배움"; }
				if(PlayerInfo[playerid][pGrabk]) { text3 = "배움"; } else { text3 = "안배움"; }
				if(PlayerInfo[playerid][pEllbow]) { text5 = "배움"; } else { text5 = "안배움"; }
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
				format(string, sizeof(string), "(정보) 복싱: %s", text1);
				SCM(playerid, COLOR_INFO, string);
				format(string, sizeof(string), "(정보) 쿵후: %s", text4);
				SCM(playerid, COLOR_INFO, string);
				format(string, sizeof(string), "(정보) 태권도: %s", text2);
				SCM(playerid, COLOR_INFO, string);
				format(string, sizeof(string), "(정보) 그랩킥: %s", text3);
				SCM(playerid, COLOR_INFO, string);
				format(string, sizeof(string), "(정보) 엘보우: %s", text5);
				SCM(playerid, COLOR_INFO, string);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_HINT, "(힌트) /스타일 [이름]");
				SCM(playerid, COLOR_HINT, "(힌트) 기본 복싱 쿵후 태권도 그랩킥 엘보우");
			}
			if(c_strcmp(tmp,"기본")==1)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				SCM(playerid, COLOR_INFO, "(정보) 스타일이 기본기로 설정되었습니다.");
			}
			if(c_strcmp(tmp,"복싱")==1)
			{
				if(PlayerInfo[playerid][pBoxing] == 1)
				{
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
					SCM(playerid, COLOR_INFO, "(정보) 스타일이 복싱으로 설정되었습니다.");
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(에러) 그 스타일을 갖고 있지 않습니다 (/스타일)로 확인하세요");
				}
			}
			if(c_strcmp(tmp,"쿵후")==1)
			{
				if(PlayerInfo[playerid][pKungfu] == 1)
				{
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
					SCM(playerid, COLOR_INFO, "(정보) 스타일이 쿵후로 설정되었습니다.");
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(에러) 그 스타일을 갖고 있지 않습니다 (/스타일)로 확인하세요");
				}
			}
			if(c_strcmp(tmp,"태권도")==1)
			{
				if(PlayerInfo[playerid][pTaek] == 1)
				{
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
					SCM(playerid, COLOR_INFO, "(정보) 스타일이 태권도로 설정되었습니다.");
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(에러) 그 스타일을 갖고 있지 않습니다 (/스타일)로 확인하세요");
				}
			}
			if(c_strcmp(tmp,"그랩킥")==1)
			{
				if(PlayerInfo[playerid][pGrabk] == 1)
				{
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
					SCM(playerid, COLOR_INFO, "(정보) 스타일이 그랩킥으로 설정되었습니다.");
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(에러) 그 스타일을 갖고 있지 않습니다 (/스타일)로 확인하세요");
				}
			}
			if(c_strcmp(tmp,"엘보우")==1)
			{
				if(PlayerInfo[playerid][pEllbow] == 1)
				{
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
					SCM(playerid, COLOR_INFO, "(정보) 스타일이 엘보우로 설정되었습니다.");
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(에러) 그 스타일을 갖고 있지 않습니다 (/스타일)로 확인하세요");
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/강",true) == 0 || strcmp(cmd, "/강제",true) == 0|| strcmp(cmd, "/타",true) == 0 || strcmp(cmd, "/타라",true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp))
				return SCM(playerid, COLOR_HINT,"INFO : "#C_WHITE" (/강)제 [플레이어번호/이름의일부분] [앉을번호]");
				SCM(playerid, COLOR_RED,"INFO : "#C_WHITE" 2인승 차량은 [앉을번호 1번만] 4인승 차량은 [앉을번호 1~3번까지]");
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp))
				return SCM(playerid, COLOR_RED,"INFO : "#C_WHITE" 차량에 탑승 인원이 꽉 찾는데 기능을 쓸 경우 상대방은 팅깁니다.");
				new seat = strval(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(seat < 1 || seat > 3)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 앉을번호는 '1~3' 까지 입니다");
							return 1;
						}
						if(IsPlayerInAnyVehicle(giveplayerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 이미 차량에 타고 있습니다");
							return 1;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 쓸수 없습니다"); return 1; }
							if(PlayerCuffed[giveplayerid] == 2 || PlayerTied[giveplayerid] == 1  || PlayerInfo[giveplayerid][pJailed] == 3)
							{
								new newcar = GetPlayerVehicleID(playerid);
								new Float:DPositions[3][3];
								GetPlayerPos( playerid, DPositions[0][0], DPositions[0][1], DPositions[0][2]);
								GetPlayerPos( giveplayerid, DPositions[1][0], DPositions[1][1], DPositions[1][2]);
								GetVehiclePos( newcar, DPositions[2][0], DPositions[2][1], DPositions[2][2]);
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에 의해서 강제적으로 차로 옮겨지셨습니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_INFO, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s을 강제적으로 차로 옮기셨습니다", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_INFO, string);
								format(string, sizeof(string), "* %s(이)가 %s(을)를 강제적으로 차에 태웠습니다.", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								GameTextForPlayer(giveplayerid, "~r~Detained", 2500, 3);
								ClearAnimations(giveplayerid);
								SetPlayerFreeze(giveplayerid, true, 2);
								TogglePlayerControllable(giveplayerid, 0);
								PutPlayerInVehicle(giveplayerid,newcar,seat);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 줄로 묶이거나 수갑에 차여있지 않습니다.");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방을 옮길 차량이 없습니다.");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어입니다");
					return 1;
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승하신 후에 사용해주세요");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/도우미호출", true) == 0 || strcmp(cmd, "/뉴출", true) == 0) // 이걸 개조중. 그 번호가 Playerid 던가요? 모름,
	{
		if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "(도우미알림)(Newbie)%s(%d)유저분이 도우미팀에 호출을 원합니다.", RPPlayerName(playerid),playerid);
			NewbieTeam2(0x51C451AA,string,1)
			GetPlayerName(playerid, sendername, sizeof(sendername));
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정상적으로 도우미팀에게 호출을 하였습니다.");
			return 1;
		}
	}
	if(strcmp(cmd, "/이벤트주사위", true) == 0)
	{
	 	if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			new string2[256];
			new string3[256];
			new randoo=random(6+1);
			switch(randoo)
			{
				case 0:string2="주사위를 굴려 1이 나왔습니다.";// 저 사퇴한게아니라 짤린거고, 저 수정 안한다고 짤림 ㅋㅋㅋㅋㅋㅋㅋ실력도 있으
				case 1:string2="주사위를 굴려 2가 나왔습니다.";
				case 2:string2="주사위를 굴려 3이 나왔습니다.";
				case 3:string2="주사위를 굴려 4가 나왔습니다.";
				case 4:string2="주사위를 굴려 5가 나왔습니다.";//당연하죠 누가만든건데
				case 5:string2="주사위를 굴려 6이 나왔습니다.";
			}
			format(string3, sizeof(string3), "어드민 %s 이(가) %s", AdminName[playerid], string2);
			SCMToAll(COLOR_WHITE, string3);

	 	}
	 	else
	 	{
	 	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 어드민이 아닙니다. ");
	 	return 1;
	 	}
		return 1;
	}
	if(strcmp(cmd, "/곱더", true) == 0)
	{
	 	if(PlayerInfo[playerid][pAdmin] >= 6)
	 	{
			new string2[256];
			new string3[256];
			new randoo=random(5+1);
			switch(randoo)
			{
				case 0:string2="나온 숫자를 뺏습니다.";// 저 사퇴한게아니라 짤린거고, 저 수정 안한다고 짤림 ㅋㅋㅋㅋㅋㅋㅋ실력도 있으
				case 1:string2="나온 숫자를 더하였습니다.";
				case 2:string2="나온 숫자를 나누었습니다.";
				case 3:string2="나온 숫자를 곱했습니다.";
				case 4:string2="나온 숫자를 무효화 시켰습니다.";//당연하죠 누가만든건데
				case 5:string2="나온 숫자를 다음 이벤트를 무효화 시켰습니다.";//당연하죠 누가만든건데
			}
			format(string3, sizeof(string3), "어드민 %s 이(가) %s", AdminName[playerid], string2);
			SCMToAll(COLOR_WHITE, string3);

	 	}
	 	else
	 	{
	 	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 어드민이 아닙니다. ");
	 	return 1;
	 	}
		return 1;
	}
    if(strcmp(cmd,"/제작",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			new x_job[256];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job))
			{
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "제작 목록");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /제작 [이름]");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마약");
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
				return 1;
			}
			if(strcmp(x_job,"마약",true) == 0)
			{
				if(PlayerInfo[playerid][pMeal] < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밀의 갯수가 부족합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pJob] != 11)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농부가 아닙니다.");
					return 1;
				}
				new jaru, price1;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /제작 마약 [얻을 분량(g)]");
					return 1;
				}
				jaru = strval(tmp);
				if(jaru < 1 || jaru > 30){SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밀 한개당 1g 입니다. 최대 30g 까지 제작하실 수 있습니다."); return 1;}
                price1=jaru*1;
			    if(PlayerInfo[playerid][pMeal] >= price1)
				{
				PlayerInfo[playerid][pDrugs]+=jaru;
				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pMeal]-=jaru;
				Anim(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 마약을 제작 했습니다. (/마약투여)");
				}
			}
			else { return 1; }
		}
		return 1;
	}
	if(strcmp(cmd, "/버스도움말", true) == 0 || strcmp(cmd, "/bushelp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 5);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	     	SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 버스 도움말 "#C_SUC"━━━━━");
			SendClientMessage(playerid, COLOR_YELLOW2,"");
	        SCM(playerid, COLOR_WHITE,"/노선");
		}
		return 1;
	}
	if(strcmp(cmd, "/티티알알피", true) == 0 || strcmp(cmd, "/TTRRP", true) == 0 || strcmp(cmd, "/TTR", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 5);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	     	SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" Transgress The Rule "#C_SUC"━━━━━");
			SendClientMessage(playerid, COLOR_YELLOW2,"");
	        SCM(playerid, COLOR_WHITE,"TTR RP는 Las Venturas 에서 만들어진 규칙입니다.");
		    SCM(playerid, COLOR_WHITE,"[구]규칙 이었던 논 알피 베드알피 모두를 합친것이 바로 티티알 알피입니다.");
		}
		return 1;
	}
	if(strcmp(cmd, "/도움말", true) == 0 || strcmp(cmd, "/help", true) == 0 || strcmp(cmd, "/?", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 5);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	     	SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 도움말 목록  "#C_SUC"━━━━━");
			SendClientMessage(playerid, COLOR_YELLOW2,"");
	        SCM(playerid, COLOR_WHITE,"| 도움말 | /비번변경 /저장 /레벨업 /업글 /업글리셋 /스탯");
		    SCM(playerid, COLOR_WHITE,"| 도움말 | /기본규칙 /카페 /관리자 /업데이트 /명령어 /어팀도움말");
		    SCM(playerid, COLOR_WHITE,"| 도움말 | [/직업도움말] [/전화도움말] [/건물도움말] [/뉴비도움말]");
  	        SCM(playerid, COLOR_WHITE,"| 도움말 | [/운동도움말] [/채팅도움말] [/채널도움말] [/차량도움말] [/서버규칙]");
         	SCM(playerid, COLOR_WHITE,"| 도움말 | [/노트도움말] [/은행도움말] [/악세도움말] [/ANIMHELP] [/버스도움말] [/농구도움말]");
		}
		return 1;
	}
	if(strcmp(cmd, "/어팀도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 5);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	     	SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE"어드민 팀 도움말"#C_SUC"━━━━━");
			SendClientMessage(playerid, COLOR_YELLOW2,"");
	        SCM(playerid, COLOR_WHITE,"A 팀 총관리자나 대총관리자를 상징한다,");
		    SCM(playerid, COLOR_WHITE,"B 팀 모드메이커,서버돌리미,오브젝트메이커를 상징한다.");
		    SCM(playerid, COLOR_WHITE,"C 팀 유저관리를 한다, OOC분쟁,유저 관리자 질문 답변 등 ");
		}
		return 1;
	}
    if(strcmp(cmd,"/길찾기어플", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			ShowPlayerDialog(playerid, 26000, DIALOG_STYLE_LIST, "Lily 길찾기 어플", "이 어플을 키면 3G 값으로 1 달러가 감소 됩니다.", "확인", "닫기");
			return 1;
		}
		GiveMoney(playerid, -1);
		format(string, sizeof(string), "* %s 이(가) Lily 길찾기 어플을 킨다.", RPPlayerName(playerid));
		ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
		return 1;
	}
	if(strcmp(cmd,"/서버규칙",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
			    SCM(playerid, COLOR_WHITE,"INFO : /서버규칙 드라이브바이 구인구직 공총사");
			    SCM(playerid, COLOR_WHITE,"INFO : /서버규칙 스턴트 추격유도 비리 해양도주");
			    return 1;
			}
			if(strcmp(tmp,"드라이브바이",true) == 0)
			{
				ClearChatbox(playerid,10);
				SCM(playerid,COLOR_WHITE,"드라이브 바이 ");
				SCM(playerid,COLOR_SUC,"차량에 G키를 눌러 보조석이나 뒷자석에 앉아서 [H],[Caps Lock]를 눌러 차량에서 총기를 사용 합니다.");
				SCM(playerid,COLOR_SUC,"갱/조직 드라이브 바이는 [근육량 : 120] 이상이어야만 가능합니다.");
				SCM(playerid,COLOR_SUC,"정부군 드라이브 바이는 [근육량 : 100] 이상이어야만 가능합니다.");
				SCM(playerid,COLOR_SUC,"직업이 없는 사람은 드라이브 바이가 불가능하며, 사설 당파는 드라이브 바이가 금지되어 있습니다.");
				return 1;
			}
			if(strcmp(tmp,"광고",true) == 0)
			{
			    ClearChatbox(playerid,10);
				SCM(playerid,COLOR_WHITE,"구인구직");
				SCM(playerid,COLOR_SUC,"공고/광고 에서 직업을 구하는 것이나 [사람]인재를 구합니다.");
				SCM(playerid,COLOR_SUC,"구인구직은 관리자가 허락한 기간에만 가능하게 되어 있습니다.");
				SCM(playerid,COLOR_SUC,"그외 구인구직은 금지 되어 있습니다.");
				return 1;
			}
			if(strcmp(tmp,"공총사",true) == 0)
			{
			    ClearChatbox(playerid,10);
				SCM(playerid,COLOR_WHITE,"공공장소 총기 사용");
				SCM(playerid,COLOR_SUC,"공공장소에서 총기를 사용합니다. [ 공총사 기준은 탄약을 발포 안했을 경우에도 해당됩니다.]");
				SCM(playerid,COLOR_SUC,"공총사는 당파원 2명과 [매우]타당한 이유가 있어야 합니다. ");
				SCM(playerid,COLOR_SUC,"그외 공총사는 금지 되어 있습니다.");
   				SCM(playerid,COLOR_SUC,"사설장소에서도 마찬가지로 당파원 2명이 있어야합니다.");
			    return 1;
			}
			if(strcmp(tmp,"스턴트",true) == 0)
			{
			    ClearChatbox(playerid,10);
				SCM(playerid, COLOR_WHITE,"스턴트");
			    SCM(playerid, COLOR_SUC,"탈것의 종류로 계단을 이용하거나 묘기를 부립니다.");
				SCM(playerid, COLOR_SUC,"스턴트는 추격전이거나 묘기 RP때에만 가능합니다.");
				SCM(playerid, COLOR_SUC,"계단을 탈것으로 이동한다거나 아무 이유없이 스턴트는 금지 되어 있습니다.");
			    return 1;
			}
			if(strcmp(tmp,"추격유도",true) == 0)
			{
                ClearChatbox(playerid,10);
				SCM(playerid, COLOR_WHITE,"추격전 유도");
                SCM(playerid, COLOR_SUC,"탈것으로 추격전을 유도합니다.");
                SCM(playerid, COLOR_SUC,"추격전 유도는 범죄RP가 성사 되야 가능합니다.");
                SCM(playerid, COLOR_SUC,"살인및 절도범죄 만 가능합니다.");
				return 1;
			}
			if(strcmp(tmp,"비리",true) == 0)
			{
			    ClearChatbox(playerid,10);
				SCM(playerid, COLOR_WHITE,"비리");
				SCM(playerid, COLOR_SUC,"비리의 예는 여러가지가 있습니다.");
				SCM(playerid, COLOR_SUC,"정부군이 민간인/갱/조직에게 정부군의 총기를 판매 합니다.");
				SCM(playerid, COLOR_SUC,"조직&갱/정부군이 손을 잡습니다.");
				SCM(playerid, COLOR_SUC,"비리[부패]는 금지 되어 있습니다.");
				SCM(playerid, COLOR_SUC,"조직원의 복수로 스파이 알피로 부패 정부군은 가능합니다.[스파이RP]");
			    return 1;
			}
			if(strcmp(tmp,"해양도주",true) == 0)
			{
			    ClearChatbox(playerid,10);
				SCM(playerid, COLOR_WHITE,"해양도주");
				SCM(playerid, COLOR_SUC,"조직/갱/정부에게 쫒겨 해양[바다]로 도주하는것 입니다.");
				SCM(playerid, COLOR_SUC,"해양도주는 전투RP를 성사해야 가능합니다.");
				SCM(playerid, COLOR_SUC,"해양에는 보트를 타야지만 도주가 가능합니다. ");
				SCM(playerid, COLOR_SUC,"맨몸으로 뛰어 들면 30초 이내로 나와야 합니다.");
			    return 1;
			}
		}
		return 1;
	}
		if(strcmp(cmd,"/처벌내용",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
			    SCM(playerid, COLOR_WHITE,"INFO : /처벌내용 1 ~ 2");
			    return 1;
			}
			if(strcmp(tmp,"1",true) == 0)
			{
				ClearChatbox(playerid,10);
				SCM(playerid,COLOR_SUC,"반성문 [카페에 반성문 메뉴에 띄어 쓰기 없이 자기가 무엇을 잘못했는지 씁니다.]");
				SCM(playerid,COLOR_SUC,"영구히 밴 [서버에서 추방되어 다시 들어오는게 불가능합니다.]");
				SCM(playerid,COLOR_SUC,"드모르간 [드모르간이라는 곳에 갇혀서 자신이 무엇을 잘못했는지 자숙하는 시간을 갖습니다.]");
				SCM(playerid,COLOR_SUC,"돌나르기(추가 예정) [A구간에서 F로 돌을 들고 B로 향해서 B에 돌을 놓는것을 반복합니다.]");
				SCM(playerid,COLOR_SUC,"경고 [경고를 줍니다. 총 경고 횟수 8 회 입니다. 8회 누적시 아이디 밴 이 됩니다.]");
				SCM(playerid,COLOR_SUC,"강제 튜토리얼 [강제로 다시 튜토리얼을 보게 합니다. 튜토리얼 후 나오는 초기자금은 압수합니다.]");
				return 1;
			}
			if(strcmp(tmp,"2",true) == 0)
			{
				ClearChatbox(playerid,10);
				SCM(playerid,COLOR_SUC,"Non - RP [반성문 2줄 , 경고 1회]");
				SCM(playerid,COLOR_SUC,"Bad - RP [반성문 2줄 , 경고 1회]");
				SCM(playerid,COLOR_SUC,"메타/파워 게이밍 [반성문 1줄 , 경고 1회 , 강제 튜토리얼]");
				SCM(playerid,COLOR_SUC,"버니 합핑 - [반성문 1 줄 , 경고 1회 , 강제 튜토리얼]");
				SCM(playerid,COLOR_SUC,"모욕 - [반성문 4 줄 , 경고 4회 , 드모르간 10분]");
				SCM(playerid,COLOR_SUC,"OOC 유도 - [반성문 2줄 , 경고 1회]");
				SCM(playerid,COLOR_SUC,"타섭 발언,유도 - [영구히 밴]");
				SCM(playerid,COLOR_SUC,"관리자에게 /OW[귓속말] [경고 1회]");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/제작자", true) == 0 || strcmp(cmd, "/Server", true) == 0 || strcmp(cmd, "/서버정보", true) == 0 || strcmp(cmd, "/서버", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 5);
			SCM(playerid, COLOR_SUC,"................Las Venturas ROLE PLAYING GAME Server");
			SCM(playerid, COLOR_WHITE,"Server OPEN : */*/*");
			SCM(playerid, COLOR_WHITE,"Server NAME :  (NLC:RPG) Las Venturas ROLE PLAYING GAME Server");
			SCM(playerid, COLOR_WHITE,"Server FORUM : http://cafe.naver.com/rentocity  ");
			SCM(playerid, COLOR_WHITE,"");
			SCM(playerid, COLOR_SUC,"Server MODE MAKER : Max☆ / Kelly_Nick / [GM]만개");
			SCM(playerid, COLOR_SUC,"Server CAFE MAKER : [GM]섬잭 ");
			SCM(playerid, COLOR_SUC,"Server ADAPTER MAKER : [GM]텐마 ");
		}
		return 1;
	}
	if(strcmp(cmd, "/지우개", true) == 0 || strcmp(cmd, "/정리", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 20);
		}
		return 1;
	}
	if(strcmp(cmd, "/뉴비도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 도움말 목록  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /도우미 /도우미접 /도우미호출 /초보도움말");
		}
		return 1;
	}
	if(strcmp(cmd, "/도색도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 도색 목록  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_ERROR,"0:검정      1:흰색             2:파랑          3:빨강    4:초록         5:보라        6:오렌지 7:하늘 8:회색 9:진한회색");
			SCM(playerid, COLOR_ERROR,"10:진한하늘 11:진한회색       12:옅은초록     13:회색   14:짙은흰색     15:회색      16:연두");
			SCM(playerid, COLOR_ERROR,"17:빨강     18:약간옅은빨강   19:회색         20:파랑   21:분홍         22:진분홍    23:회색");
			SCM(playerid, COLOR_ERROR,"24:회색     25:진회색         26:밝은회색     27:회색   28:파랑         29:짙은 흰색 30:갈색   31:옅은갈색");
			SCM(playerid, COLOR_ERROR,"32:하늘     33:회색           34:진회색       35:진회색 36:많이진한회색 37:옅은초록  38:하늘");
			SCM(playerid, COLOR_ERROR,"39:옅은하늘 40:진한초록       41:회색         42:진분홍 43:진빨강       44:진초록    45:진분홍");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 그 외의 색깔들은 직접 찾아보시면 됩니다.");
		}
		return 1;
	}
	if(strcmp(cmd, "/피핵도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_SUC,"INFO : "#C_WHITE" 소비에트(핵)를 쓰는 유저중에서 피핵을 잡는 방법");
			SCM(playerid, COLOR_ERROR,"1. 신고가 들어오면 대상자 유저를 (/위성)으로 확인한다.");
			SCM(playerid, COLOR_ERROR,"2. 확인을 하고 대상자의 체력을 (/체력 번호 100) 으로 올려준다.");
			SCM(playerid, COLOR_ERROR,"이유 = 피를 올려주지 않고 피핵을 검사하면 유저분이 죽어서 알피가 끊킬 수가 있습니다.");
			SCM(playerid, COLOR_ERROR,"3. 피를 올려주는 즉시 (/피핵)의 기능을 써서, 유저가 체력이 50이 떨어지면 피핵이 아니고..");
			SCM(playerid, COLOR_ERROR,"체력 50이 떨어지지 않으면 피핵이다.");
			SCM(playerid, COLOR_RED,"주의! 상대방이 줄에 묶여 있거나 잠수를 타면 체력이 안답니다.");
		}
		return 1;
	}
	if(strcmp(cmd, "/업데이트", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 업데이트 정보  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 카페에 참조 해주시길 바랍니다.");
		}
		return 1;
	}
	if(strcmp(cmd, "/농부도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 농부 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_WHITE,"1.농부는 밭에 씨앗을 심어서 밀을 수확해서 돈을 법니다.");
			SCM(playerid, COLOR_WHITE,"2.씨앗을 구매하고 주변 밭에 아이콘이 있는 곳을 가서, ");
			SCM(playerid, COLOR_WHITE,"3.씨앗을 심고 밀을 수확해서 다시 창고로 와서 주인 아씨에게 판매합니다.");
			SCM(playerid, COLOR_SUC,"TIP:씨앗 10개를 심고 밀을 10개를 한번에 수확해서 판매를 합니다.");
			SCM(playerid, COLOR_SUC,"TIP:차량이나 렌트카를 이용해서 하면 더 빠르게 돈을 벌 수가 있습니다.");
		}
		return 1;
	}
	if(strcmp(cmd, "/밀수도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 밀수 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_WHITE,"1.밀수는 조용하고 민첩하게 행동해야한다.");
			SCM(playerid, COLOR_WHITE,"2.항상 차량을 가지고 다니고 트렁크에 총기를 넣어둬라.");
			SCM(playerid, COLOR_WHITE,"3.밀수는 경찰이 없는 밤을 많이 이용해라.");
			SCM(playerid, COLOR_WHITE,"4.주위를 미리 탐색을 하고 정찰병을 고용해서 하나 배치해두자.");
			SCM(playerid, COLOR_SUC,"TIP:정각에 맞게 밀수를 끝내고 패키지를 분해하고 총기를 판매한다.");
			SCM(playerid, COLOR_SUC,"TIP:(/불법지도) -> 밀수항구[1~2]");
		}
		return 1;
	}
	if(strcmp(cmd, "/노점도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 노점 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_WHITE,"1.한가지 품목의 메뉴로 가지 말고 여러가지 메뉴로 가는게 좋다.");
			SCM(playerid, COLOR_WHITE,"2.노점상의 자리는 사람들이 많고 시끌벅적한 자리가 좋다.");
			SCM(playerid, COLOR_WHITE,"3.자신만의 기술을 만들어서 묘기로 시선을 끌어 그에게 만들어준다.");
			SCM(playerid, COLOR_SUC,"TIP:주위에 광고판을 설치하고 이동을 하며 음식을 팔아보자.");
			SCM(playerid, COLOR_SUC,"TIP:단골손님을 만들라.");
		}
		return 1;
	}
	if(strcmp(cmd, "/트럭도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 트럭 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_WHITE,"1.트럭기사 다른 직업에 비해 힘든 직업입니다.");
			SCM(playerid, COLOR_WHITE,"2.자격증이 필요하고 없을시에는 불이익을 받을 수가 있습니다.");
			SCM(playerid, COLOR_WHITE,"3.트럭은 힘든 만큼 다른 직업에 비해 더 많이 이익이 들어옵니다.");
			SCM(playerid, COLOR_WHITE,"4.라스벤츄라까지 자신만의 길을 터득해서 빠르게 이동하십시요.");
		}
		return 1;
	}
	if(strcmp(cmd, "/청소도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 청소 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_WHITE,"1.청소의 갈래길은 두가지로 나눠진다. 이지와 하드");
			SCM(playerid, COLOR_WHITE,"2.차량이 느린 만큼 인내심이 필요한 직업.");
			SCM(playerid, COLOR_WHITE,"3.자신의 유리한 길을 터득하여 빠르게 이동하십시요.");
		}
		return 1;
	}
	if(strcmp(cmd, "/어부도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"━━━━━"#C_WHITE" 어부 도움말  "#C_SUC" ━━━━━");
			SCM(playerid, COLOR_SUC,"");
			SCM(playerid, COLOR_WHITE,"1.낚시면허증이 필요합니다. 없어도 가능하지만 경찰 주의");
			SCM(playerid, COLOR_WHITE,"2.도구점에서 낚시도구를 구매해주세요.");
			SCM(playerid, COLOR_WHITE,"3.잡은 물고기를 팔러 가야 되서 렌트카나 차량을 준비하세요.");
			SCM(playerid, COLOR_WHITE,"4.(/기술) < 낚시 기술을 올려봅시다.");
			SCM(playerid, COLOR_WHITE,"5.물고기 판매는 20파운드 이상부터 가능합니다.");
			SCM(playerid, COLOR_WHITE,"6.자전거나 오토바이 차량을 이용하며, 낚고 팔고를 반복합니다.");
			SCM(playerid, COLOR_SUC,"취미직업 이다 보니깐 돈을 벌기가 쉽지는 않을 것 입니다.");
			SCM(playerid, COLOR_SUC,"노력하며 기술을 올리고 파운드가 높은 것을 낚아서 팔아보며 생활합니다.");
		}
		return 1;
	}
	if(strcmp(cmd, "/경찰특공대", true) == 0 || strcmp(cmd, "/경특", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 6.0,237.3413,126.1473,1003.2188))
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 업무장소에 있지 않습니다.");
				}
				if(OnDuty[playerid]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/업무) 상태에서만 사용 가능합니다.");
				}
				if(PlayerInfo[playerid][pGunLic]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무기면허증이 없습니다.");
			 	}
				if(PlayerInfo[playerid][pRank] <= 6)
				{
			 		return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 계급이 낮아 사용할 수 없습니다.");
			 	}
				if(SWAT[playerid]==false)
				{
					ResetPlayerWeapons(playerid);
					GiveWeapon(playerid, 31, 300);
					GiveWeapon(playerid, 24, 70);
					GiveWeapon(playerid, 46, 1);
					GiveWeapon(playerid, 16, 3);
					SetPlayerSkin(playerid, 285);
					format(string, sizeof(string), "* %s 특공대 파견 무기을(를) 장착한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(SWAT[playerid]==true)
				{
					ResetPlayerWeapons(playerid);
					format(string, sizeof(string), "* %s 특공대 파견 무기을(를) 007가방에 넣는다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
			else
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다.");
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------------------------
	if(strcmp(cmd, "/고위급업무", true) == 0 || strcmp(cmd, "/고업", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 6.0,237.3413,126.1473,1003.2188))
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 업무장소에 있지 않습니다.");
				}
				if(OnDuty[playerid]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/업무) 상태에서만 사용 가능합니다.");
				}
				if(PlayerInfo[playerid][pGunLic]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무기면허증이 없습니다.");
			 	}
				if(PlayerInfo[playerid][pRank] <= 9)
				{
			 		return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 계급이 낮아 사용할 수 없습니다.");
			 	}
				if(SWAT[playerid]==false)
				{
					ResetPlayerWeapons(playerid);
					GiveWeapon(playerid, 31, 300);
					GiveWeapon(playerid, 24, 70);
					GiveWeapon(playerid, 41, 500);
					GiveWeapon(playerid, 17, 5);
					format(string, sizeof(string), "* %s 고위급 업무 무기를 장착한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(SWAT[playerid]==true)
				{
					ResetPlayerWeapons(playerid);
					format(string, sizeof(string), "* %s 고위급 업무 무기를 사물함에 집어 넣는다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
			else
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다.");
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------------------------
	if(strcmp(cmd, "/스왓", true) == 0 || strcmp(cmd, "/스왓무장", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 6.0,237.3413,126.1473,1003.2188))
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 업무장소에 있지 않습니다.");
				}
				if(OnDuty[playerid]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/업무) 상태에서만 사용 가능합니다.");
				}
				if(PlayerInfo[playerid][pGunLic]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무기면허증이 없습니다.");
			 	}
				if(PlayerInfo[playerid][pRank] <= 5)
				{
			 		return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 계급이 낮아 사용할 수 없습니다.");
			 	}
				if(SWAT[playerid]==false)
				{
					ResetPlayerWeapons(playerid);
					GiveWeapon(playerid, 31, 250);
					GiveWeapon(playerid, 17, 5);
					SetPlayerSkin(playerid, 285);
					format(string, sizeof(string), "* %s 스왓으로 무장을 장착한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(SWAT[playerid]==true)
				{
					ResetPlayerWeapons(playerid);
					format(string, sizeof(string), "* %s 스왓으로 무장을 해제한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
			else
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/의료자격증발급", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] == 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /의료자격증발급 [플레이어번호/이름의일부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(PlayerToPoint(5, playerid, x, y, z))
						{
					        if(giveplayerid==playerid) { return 1; }
							format(string, sizeof(string), "* %s %s에게 의료자격증을 건낸다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
							ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
                            SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의료자격증을 발급했습니다.");
                            SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 의료자격증을 발급받으셨습니다.");
							PlayerInfo[giveplayerid][dmdrmqLic] = 1;
						}
						else
						{
						    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 주변에 없습니다");
						}
					}
				}
			}
			else
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/배탈치료", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /배탈치료 [플레이어번호/이름의일부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(PlayerToPoint(5, playerid, x, y, z))
						{
						    if(PlayerInfo[giveplayerid][Byeong]!=0)
						    {
						        if(giveplayerid==playerid) { return 1; }
						        format(string, sizeof(string), "* %s 이(가) %s님의 상태를 본다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
								ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								if(PlayerInfo[giveplayerid][Byeong]==2) { format(string, sizeof(string), " %s 님은 배탈이 났습니다", RPPlayerName(giveplayerid)); }
								else if(PlayerInfo[giveplayerid][Byeong]==5) { format(string, sizeof(string), " %s 님은 지극히 정상입니다", RPPlayerName(giveplayerid)); return 1; }//정상이라 아래를 실행하지않는다
								ProxDetector(10.0, giveplayerid, string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
								format(string, sizeof(string), "* %s 이(가) %s의 문제점을 찾아 치료한다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
								ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								Anim(playerid,"WUZI","Wuzi_Greet_Wuzi",4.1,0,1,1,1,1);
	                            PlayerInfo[giveplayerid][Byeong] = 0;
							}
							else
							{
							    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 어떠한 질병에도 걸리지 않았습니다");
							}
						}
						else
						{
						    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 주변에 없습니다");
						}
					}
				}
			}
			else
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다");
			}
		}
		return 1;
	}

		if(strcmp(cmd, "/영장보", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pdudwkd] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /영장보 [플레이어번호/이름의일부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					    new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(PlayerToPoint(5, playerid, x, y, z))
						{
							format(string, sizeof(string), " * %s %s에게 영장을 보여준다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
							ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
                            SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 경찰이 당신에게 영장을 보여줬습니다.");
						SCM(giveplayerid, COLOR_BLUE, "━━━━━━━━━━━━━━━━L━S━P━D━━━━━━━━━━━━━━━━━━━━━");
						SCM(giveplayerid, COLOR_WHITE,"                              체포, 수색영장");
						SCM(giveplayerid, COLOR_ERROR, "  				*본 영장은 LVPD서장만이 발급할 수 있습니다");
						format(string, sizeof(string), "                       %s에게 수사권이 있음을 증명함", RPPlayerName(playerid));
						SCM(giveplayerid, COLOR_ERROR, string);
						SCM(giveplayerid, COLOR_ERROR, "본 영장을 가지고 있을시엔, 관할밖, 관할내의 체포, 수사, 수색이 이루어 질 수 있습니다.");
						SCM(giveplayerid, COLOR_ERROR, " 만약 이 영장을 보고 협조를 하지 않을시엔 불이익이 있을 수 있습니다.");
						SCM(giveplayerid, COLOR_RED, "  *당신은 묵비권을 행사할 수 있으며 때에 따라 변호사를 섭외할 수 있습니다. ");//이건 법이라 넣어야됌
						format(string, sizeof(string), " 본 영장의 유효기한 : (%d/10800)", PlayerInfo[playerid][pdudwkdt]);
						SCM(giveplayerid, COLOR_ERROR, string);
						SCM(giveplayerid, COLOR_BLUE, "━━━━━━━━━━━━━━━LVPD 서장 (인)━━━━━━━━━━━━━━━━━━");
						}
						else
						{
						    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 주변에 없습니다");
						}
				}
			}
			else
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 영장을 가지고있지않습니다.");
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/영장", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /영장 [플레이어번호/이름의일부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(PlayerToPoint(5, playerid, x, y, z))
						{
							format(string, sizeof(string), " Captain %s %s에게 영장을 발급한다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
							ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
                            SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 영장을 배부했습니다.");
                            SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 영장을 발급받았습니다 당신은 이제 체포할 수 있습니다 [/영장보].");
							PlayerInfo[giveplayerid][pdudwkd] = 1;
							PlayerInfo[giveplayerid][pdudwkdt] = 1;
						}
						else
						{
						    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 주변에 없습니다");
						}
					}
				}
			}
			else
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 PD서장이 아닙니다");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/반지보", true) == 0 || strcmp(cmd, "/반지보여주기", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMarried] != 1)
			{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 반지가 없습니다. "); }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/반지보)여주기 [플레이어번호/이름의일부분]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					new married[20];
					strmid(married, PlayerInfo[playerid][pMarriedTo], 0, strlen(PlayerInfo[playerid][pMarriedTo]), 255);
					format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 반지를 보여줍니다. 배우자:[%s]", RPPlayerName(playerid), married);
					SCM(giveplayerid, COLOR_ERROR, string);
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님에게 반지를 보여줍니다", RPPlayerName(giveplayerid));
					SCM(playerid, COLOR_ERROR, string);
					format(string, sizeof(string), "* %s %s님에게 반지를 보여준다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else
				{

				}
			}
			else
			{

			}
		}
		return 1;
	}
	if(strcmp(cmd, "/삽조립", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] != 21)
			{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 건설회사의 총 책임자가 아닙니다"); }
			if(GetMoney(playerid) < 50)
			{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 삽을 조립 하려면 10$만큼이 필요합니다"); }
			GiveMoney(playerid, -10);
			GiveWeapon(playerid, 6, 1);
			format(string, sizeof(string), "* %s 건설회사의 삽을 조립한다.", RPPlayerName(playerid));
			ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
		}
		return 1;
	}

	if(strcmp(cmd, "/밀수배", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLeader] != 24 || PlayerInfo[playerid][pMember] != 24)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" NGS 가 아닙니다. or 리더가 아닙니다.");
				return 1;
			}
			MoveShip();//
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 밀수항구1 장소에 밀수배를 불렀습니다.");
		}
		return 1;
	}

	if(strcmp(cmd, "/오류해결", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오류가 해결되었습니다. 아직 해결이 되지 않았다면 (/오류해결2)를 이용해 주세요");
		}
		return 1;
	}

	if(strcmp(cmd, "/오류해결2", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SpawnChange[playerid] = 0;
			PlayerUpdate();
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오류가 해결되었습니다. 아직 해결이 되지 않았다면 (/관리자)를 이용해 주세요");
		}
		return 1;
	}

	if(strcmp(cmd, "/명령어", true) == 0 || strcmp(cmd, "/cmd", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 3);
			SCM(playerid, COLOR_ERROR,"━━━━ Command ━━━━");
			SCM(playerid, COLOR_SUN, "");
			SCM(playerid, COLOR_ERROR,"[/비번변경] [/저장] [/업글] [/업글리셋] [/오류해결]");
			SCM(playerid, COLOR_ERROR,"[/스탯] [/가방] [/소지품] [/기술] [/시계] [/몸상태]");
			SCM(playerid, COLOR_ERROR,"[/주기] [/지불] [/동의] [/취소] [/구매] [/음식먹기]");
			SCM(playerid, COLOR_ERROR,"[/옷]  [/퀘스트] [/반지보] /주유] [/명함보] [/구걸] [/마약버리기]");
			SCM(playerid, COLOR_ERROR,"[/마심] [/총버림] [/모든총버림] [/총기재료버리기] [/지갑찾기] [/지갑보]");
		}
		return 1;
	}
	if(c_strcmp(cmd, "/네온") == 1 || c_strcmp(cmd, "/네온") == 1)
	{
		if(IsPlayerConnected(playerid))
		{
		if(!IsAnInstructor(playerid))
		{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 하이카가 아닙니다.");
		return 1;
		}
		if(!PlayerToPoint(10, playerid,1294.6906,-1873.1201,14.7202))//centerpoint 24-7
		{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 네온을 설치할 장비가 있는 위치가 아닙니다.");
		return 1;
		}
		if(IsPlayerInAnyVehicle(playerid))
		 {
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차 내부에서는 네온달기가 불가능합니다.");
		 return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /네온 [플레이어번호/이름의 부분] [가격]");
		return 1;
		}
		new playa;
		new money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(money < 2000 || money > 10000) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가격은 2000~10000까지만 가능합니다!"); return 1; }
		if(IsPlayerConnected(playa))
		{
			if(playa != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
				{
					if(playa == playerid)
					{
						SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 자신에겐 달아줄 수 없습니다."); return 1; }
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "INFO : "#C_WHITE" %s에게 네온을 설치할 것을 권유 했습니다. 값: $%d .",giveplayer,money);
						SCM(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "INFO : "#C_WHITE" 차량 정비사 %s님이 당신의 차에 네온을 $%d에 설치할 것을 권유합니다. (/동의 네온)",sendername,money);
						SCM(playa, COLOR_ERROR, string);
						RefillNeon[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 근처에 있지 않습니다 / 차에 있지 않습니다.");
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/채널", true) == 0 || strcmp(cmd, "/채널도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 채널 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"＊[/togooc /뉴스채널 /귓속말채널 /질문채널 /조직채널]");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}

	if(strcmp(cmd, "/옷도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 옷 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /옷 /옷가방 /옷입기 /옷벗기 /옷버리기");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}

	if(strcmp(cmd, "/운동도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 운동 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /싸이클(1~3) /런닝머신(1~3)/운동취소 /몸상태");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 체육관에가 가서 운동을 합시다. 가벼운 달리기도 운동이 될수 있습니다");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
	    }
	return 1;
  }

	if(strcmp(cmd, "/은행도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 은행 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_YELLOW" /통장 /통장만들기 /잔액 /입금 /출금 /송금 /ATM");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}

	if(strcmp(cmd, "/카페", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_YELLOW" 카페 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"카페 : http://cafe.naver.com/rentocity ");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}
	if(strcmp(cmd, "/건물도움말", true) == 0 || strcmp(cmd, "/임대도움말", true) == 0 || strcmp(cmd, "/전세도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 5);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 건물 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /집 /사업장");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
			
		}
		return 1;
	}
	if(strcmp(cmd, "/전화도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pPnumber] > 0)
			{
				SCM(playerid, COLOR_YELLOW,"SYSTEM :"#C_WHITE" /통화 /문자 /폰전원 /폰버리기");
				SCM(playerid, COLOR_YELLOW,"SYSTEM :"#C_WHITE" /받기 /끊기 /폰번호 /스피커 /공중전화 /발신자통화 /발신자문자 ");
			}
			else
			{
				SCM(playerid, COLOR_YELLOW,"SYSTEM :"#C_WHITE" 편의점에서 스마트폰부터 구입해주세요. (/구매)를 입력하세요");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/노트도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 노트 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /노트 /노트삭제 /노트작성 /노트주기");
			SCM(playerid, COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}

	if(strcmp(cmd, "/리더도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pLeader] >= 1 )
			{
				ClearChatbox(playerid, 7);
				SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 리더 도움말  "#C_SUC"━━━━━");
				SCM(playerid,COLOR_SUN,"");
				if(PlayerInfo[playerid][pLeader] != 7 )
				{
					SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /초대 /해고 /계급");
				}
				if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 16)
				{
					SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /기지잠금");
				}
				if(PlayerInfo[playerid][pLeader] == 7)
				{
					SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /초대 /해고 /계급 /세금 /정부군해고 /정부군직원해고");
					SCM(playerid, COLOR_SUN,"");
					SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━");
				}
			}
			else
			{
				SCM(playerid, COLOR_RED,"(INFO) :"#C_ERROR" 당신은 리더가 아닙니다");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/차량도움말", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 7);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 차량 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /차 [입력] /네온도움말");
			SCM(playerid, COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}

	if(strcmp(cmd, "/채팅", true) == 0 || strcmp(cmd, "/채팅도움말", true) == 0)//
	{
		if(IsPlayerConnected(playerid))
		{
			ClearChatbox(playerid, 6);
			SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 채팅 도움말  "#C_SUC"━━━━━");
			SCM(playerid,COLOR_SUN,"");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /주파수 /채팅모드(/cm) 무전모드(/rm) 대상행동(/mw) (전체채팅)/o /지우개");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /c(작게말함) /s(외침) /b(OOC) /me* /st* /so(효과음) /v(노래) /r(랩) /z(무전)");
			SCM(playerid, COLOR_ERROR,"INFO : "#C_WHITE" /chs(중국어) /jap(일본어) /ita(이탈리아어) /spa(스페인어) /kor(한국어) /rus(러시아어)");
			SCM(playerid, COLOR_SUN,"");
			SCM(playerid, COLOR_SUC,"━━━━━━━━━━━━━━━━━");
		}
		return 1;
	}
	if(strcmp(cmd, "/시동", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				new engine, lights, alarm, doors, bonnet, boot, objective;

				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(AdminDuty[playerid] == 1)
					{
					    if(!CarInfo[idcar][cStarted])
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
							ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
							GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
							CarInfo[idcar][cStarted]=true;
							return 1;
						}
						else if(CarInfo[idcar][cStarted])
						{
							GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
						   	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, false, alarm, doors, bonnet, boot, objective);

							SetPlayerFreeze(playerid, true, 2);
							CarInfo[idcar][cStarted]=false;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							return 1;
						}
					}
				}

				new Float:health;
				GetVehicleHealth(GetPlayerVehicleID(playerid),health);
				if (health <= 400)
				{
					format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
					ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
					CarInfo[idcar][cStarted]=false;
					SetTimerEx("ERRORENG",4500,0,"i",playerid);
					return 1;
				}
				if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER){return 1;}
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자전거는 시동을 걸 수 없습니다.");
					return 1;
				}
				if(idcar < OCAR)
				{// 서버차
				    if(idcar >= JCAR[20][0] && idcar <= JCAR[20][1])
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 택시회사의 차량이므로 일방적인 시동을 걸 수 없습니다. [/운임비]를 이용해주세요");
						return 1;
					}
					if(idcar >= JCAR[PlayerInfo[playerid][pJob]][0] && idcar <= JCAR[PlayerInfo[playerid][pJob]][1])
					{
					    if(!CarInfo[idcar][cStarted])
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
							ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
							GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
							CarInfo[idcar][cStarted]=true;
							return 1;
						}
						else if(CarInfo[idcar][cStarted])
						{
							GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
						   	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, false, alarm, doors, bonnet, boot, objective);

							SetPlayerFreeze(playerid, true, 2);
							CarInfo[idcar][cStarted]=false;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							return 1;
						}
					}
					else if(idcar >= JCAR[99][0] && idcar <= JCAR[99][1])
					{
						if(DTCT[playerid] >= 1)
	           	 		{
	           	 		    if(!CarInfo[idcar][cStarted])
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
								GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
								CarInfo[idcar][cStarted]=true;
								return 1;
							}
							else if(CarInfo[idcar][cStarted])
							{
								GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
							   	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, false, alarm, doors, bonnet, boot, objective);

								SetPlayerFreeze(playerid, true, 2);
								CarInfo[idcar][cStarted]=false;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								return 1;
							}
	           	 		}
           	 		}
					else if(idcar >= MCAR[PlayerInfo[playerid][pMember]][0] && idcar <= MCAR[PlayerInfo[playerid][pMember]][1])
					{
					    if(!CarInfo[idcar][cStarted])
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
							ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
							GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
							CarInfo[idcar][cStarted]=true;
							return 1;
						}
						else if(CarInfo[idcar][cStarted])
						{
							GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
						   	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, false, alarm, doors, bonnet, boot, objective);

							SetPlayerFreeze(playerid, true, 2);
							CarInfo[idcar][cStarted]=false;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							return 1;
						}
					}
					else if(idcar >= MCAR[99][0] && idcar <= MCAR[99][1])
					{
					    if(idcar == HireCar[playerid])
					    {
					        if(!CarInfo[idcar][cStarted])
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
								GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
								CarInfo[idcar][cStarted]=true;
								return 1;
							}
							else if(CarInfo[idcar][cStarted])
							{
								GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
							   	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, false, alarm, doors, bonnet, boot, objective);

								SetPlayerFreeze(playerid, true, 2);
								CarInfo[idcar][cStarted]=false;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								return 1;
							}
					    }
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신이 시동을 거실 수 있는 차량이 아닙니다 .");
						return 1;
					}
				}
				else if(idcar >= OCAR)
				{// 영구차
					if(!CarInfo[idcar][cStarted])
					{
						if(VehicleInfo[idcar][vAlarmOff]==1)
						{
							CarInfo[idcar][cStarted]=true;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
							ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
							GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
						}
						else if(VehicleInfo[idcar][vAlarmOff]==0)
						{
							if(VehicleInfo[idcar][vFaction] > 0)
							{
							    if(PI(playerid,pFMember) == VehicleInfo[idcar][vFaction])
							    {
									CarInfo[idcar][cStarted]=true;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
									ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
									GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
									return 1;
							    }
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신이 속한 팩션의 차량이 아닙니다.");
									return 1;
								}
							}
							if(IsCarOwner(playerid, idcar))
							{
								CarInfo[idcar][cStarted]=true;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
								GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신이 시동을 거실 수 없는 차량입니다.");
							}
						}
					}
					else if(CarInfo[idcar][cStarted])
					{
						GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
					   	SetVehicleParamsEx(GetPlayerVehicleID(playerid), false, false, alarm, doors, bonnet, boot, objective);

						CarInfo[idcar][cStarted]=false;
						SetPlayerFreeze(playerid, true, 2);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
				}
			}
		}
		return 1;
	}
	if(c_strcmp(cmd, "/차") == 1||c_strcmp(cmd, "/veh") == 1)
	{
		tmp=strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
		    SendClientMessage(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" Role Playing "#C_SUC"━━━━━");
		   	SCM(playerid,COLOR_SUN,"");
			SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 [기능]");
			SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 소유 위치 경보 잠금 주차 폐차 창고 받기");
		   	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 비상등 라이트 본넷 트렁크 속도설정");
			SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 판매목록 구매 판매 오류해결");
			if(PlayerInfo[playerid][pAdmin] == 7)
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 추가");
			}
			return 1;
		}
		if(c_strcmp(tmp,"소유")==1)
		{
			showcar(playerid,playerid,2);
			return 1;
		}
		else if(c_strcmp(tmp,"판매목록")==1)
		{
			if(IsAtVehPlace(playerid)==999)
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 차량 판매소에 있지 않습니다.");
				return 1;
			}
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 판매목록 [1-20] /차 구매");
				return 1;
			}
			new page=strval(tmp);
			if(page<1){return 1;}
			new place=IsAtVehPlace(playerid);
			showcarlist(playerid,page,place);
			return 1;
		}
		else if(c_strcmp(tmp,"잠금")==1)
		{
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 잠금 [차번호]");
				showcar(playerid,playerid,2);
				return 1;
			}
			new hc=strval(tmp)-1;
			if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 잠금 [차번호]");
				showcar(playerid,playerid,2);
				return 1;
			}
			new pv=PlayerVeh[playerid][hc];
			new Float:x,Float:y,Float:z;
			GetVehiclePos(pv,x,y,z);
			if(PlayerToPoint(5.0,playerid,x,y,z))
			{
				if(VehicleInfo[pv][vLock]==0)
				{
					LockCar(pv);
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 차량 잠금 !");
				}
				else
				{
					UnLockCar(pv);
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 차량 열음 !");
				}
			}
			else
			{
				return SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신의 차량 가까이에서 해주세요 ");
			}
			new Float:SX,Float:SY,Float:SZ;
			GetPlayerPos(playerid,SX,SY,SZ);
			PlayerPlaySound(playerid,1145,SX,SY,SZ);
			SaveVehicle(pv);
			return 1;
		}
		else if(c_strcmp(tmp,"받기")==1)
		{
			if(!PlayerToPoint(5.0,playerid,1588.3090,-1635.6660+5,13.3828))
			{
				if(UsingCP[playerid]==0)
				{
					SetPlayerCheckpoint(playerid,1588.3090,-1635.6660+5,13.3828,5.0);
					UsingCP[playerid]=1;
					SendClientMessage(playerid, COLOR_ERROR, "＊INFO : "#C_WHITE" 견인지역으로 가면 차량이 견인될 것입니다.");
					return 1;
				}
			}
			else
			{
				new hccheck=MAX_HVCAR;
				for(new hc=0;hc<MAX_HVCAR;hc++)
				{
					if(PVTowed[playerid][hc]==1)
					{
						hccheck=hc;
						break;
					}
				}
				if(hccheck==MAX_HVCAR)
				{
					SendClientMessage(playerid, COLOR_SUC,"＊INFO : "#C_WHITE" "#C_ERROR"견인된 차량이 없습니다 !");
					return 1;
				}
				if(GetMoney(playerid) <= 100)
				{
					SendClientMessage(playerid, COLOR_SUC,"＊INFO : "#C_WHITE" "#C_ERROR"당신은 차량을 받기 위한 돈이 부족합니다(100달러) !");
					return 1;
				}
				SendClientMessage(playerid, COLOR_SUC,"＊INFO : "#C_WHITE" "#C_ERROR"벌금은 100달러입니다.");
				SendClientMessage(playerid, COLOR_SUC,"＊INFO : "#C_WHITE" "#C_ERROR"앞으로는 꼭 주차 해 주세요!");
				GiveMoney(playerid, -100);
				Tax += 100;
				LoadVehicles(playerid,PVSign[playerid][hccheck],2);
				PVTowed[playerid][hccheck]=0;
				return 1;
			}
			return 1;
		}
		else if(c_strcmp(tmp,"주차")==1)
		{
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 이 명령어는 운전석에서만 할 수 있습니다 !");
				return 1;
			}
			new gvi=GetPlayerVehicleID(playerid);
			if(IsCarOwner(playerid,gvi))
			{
				GetVehiclePos(gvi,VehicleInfo[gvi][vPark_x],VehicleInfo[gvi][vPark_y],VehicleInfo[gvi][vPark_z]);
				GetVehicleZAngle(gvi,VehicleInfo[gvi][vPark_r]);
				VehicleInfo[gvi][vVir]=GetVehicleVirtualWorld(gvi);
				VehicleInfo[gvi][vVir]=GetVehicleVirtualWorld(gvi);
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 차량이 주차되었습니다.");
				SaveVehicle(gvi);
				return 1;
			}
			else if(AdminDuty[playerid] == 1)
			{
			    GetVehiclePos(gvi,VehicleInfo[gvi][vPark_x],VehicleInfo[gvi][vPark_y],VehicleInfo[gvi][vPark_z]);
				GetVehicleZAngle(gvi,VehicleInfo[gvi][vPark_r]);
				VehicleInfo[gvi][vVir]=GetVehicleVirtualWorld(gvi);
				VehicleInfo[gvi][vVir]=GetVehicleVirtualWorld(gvi);
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 업무중인 관리자라서 주차를 합니다");
				SaveVehicle(gvi);
			    return 1;
			}
			else if(OnDuty[playerid] == 1)// 경찰이 업무중이라는 문장
			{
			    GetVehiclePos(gvi,VehicleInfo[gvi][vPark_x],VehicleInfo[gvi][vPark_y],VehicleInfo[gvi][vPark_z]);
				GetVehicleZAngle(gvi,VehicleInfo[gvi][vPark_r]);
				VehicleInfo[gvi][vVir]=GetVehicleVirtualWorld(gvi);
				VehicleInfo[gvi][vVir]=GetVehicleVirtualWorld(gvi);
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 불법주차 차량을 주차합니다.");
				SaveVehicle(gvi);
			    return 1;
			}
			return 1;
		}
		else if(c_strcmp(tmp,"경보")==1)
		{
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 경보 [차번호]");
				showcar(playerid,playerid,2);
				return 1;
			}
			new hc=strval(tmp)-1;
			if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 경보 [차번호]");
				showcar(playerid,playerid,2);
				return 1;
			}
			new pv=PlayerVeh[playerid][hc];
			if(VehicleInfo[pv][vAlarmOff]>0)
			{
				VehicleInfo[pv][vAlarmOff]=0;
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 경보기 On");
			}
			else
			{
				VehicleInfo[pv][vAlarmOff]=1;
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 경보기 Off");
			}
			SaveVehicle(pv);
			return 1;
		}
		else if(c_strcmp(tmp,"비상등")==1)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 하고 시도하십시오");
					return 1;
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					new carid = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(IsANoWindow(carid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 차량에는 비상등 없습니다.");
						return 1;
					}
					if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER)
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 이 명령어는 운전석에서만 사용이 가능합니다.");
        				return 1;
					}
					if(EML[GetPlayerVehicleID(playerid)]==0)
					{
						format(string, sizeof(string), "* %s 버튼을 눌러 비상등을 켠다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						EML[GetPlayerVehicleID(playerid)]=1;
					}else{
						format(string, sizeof(string), "* %s 버튼을 눌러 비상등을 끈다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					    EML[GetPlayerVehicleID(playerid)]=0;
					}
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승하고 시도하십시오");
					return 1;
				}
			}
			return 1;
		}
		else if(c_strcmp(tmp,"본넷")==1)
	{
	    new engine,lights,alarm,doors,bonnet,boot,objective;
	    if(IsPlayerConnected(playerid))
		{
		    new vid = GetPlayerVehicleID(playerid);

			    if(GetPlayerState(playerid) == 2)
			    {
			      if(CarInfo[idcar][cStarted]!=true)
				  {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 차량은 시동이 걸려있지 않습니다.");
					return 1;
				  }
				    if(CarInfo[GetPlayerVehicleID(playerid)][cQhsspt])
				    {
					    CarInfo[GetPlayerVehicleID(playerid)][cQhsspt]=false;
					  	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
					  	SetVehicleParamsEx(vid,engine,lights,alarm,doors,1,boot,objective);
					//	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 본넷을 열었습니다.");
					}
					else if(!CarInfo[GetPlayerVehicleID(playerid)][cQhsspt])
					{
					    CarInfo[GetPlayerVehicleID(playerid)][cQhsspt]=true;
					  	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
					  	SetVehicleParamsEx(vid,engine,lights,alarm,doors,0,boot,objective);
					  //	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 본넷을 닫았습니다.");
					}
				}
				else
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 운전석에 탑승하지 않았습니다.");
				}
			}
  		return 1;
	}
	else if(c_strcmp(tmp,"라이트")==1)
	{
	    new engine,lights,alarm,doors,bonnet,boot,objective;
	    if(IsPlayerConnected(playerid))
		{
		    new vid = GetPlayerVehicleID(playerid);
			    if(GetPlayerState(playerid) == 2)
			    {
			    if(CarInfo[idcar][cStarted]!=true)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 이 차량은 시동이 걸려있지 않습니다.");
					return 1;
				}
				    if(CarInfo[GetPlayerVehicleID(playerid)][cLights])
				    {
					    CarInfo[GetPlayerVehicleID(playerid)][cLights]=false;
					  	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
					  	SetVehicleParamsEx(vid,engine,1,alarm,doors,bonnet,boot,objective);
					//	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라이트를 켰습니다.");
					}
					else if(!CarInfo[GetPlayerVehicleID(playerid)][cLights])
					{
					    CarInfo[GetPlayerVehicleID(playerid)][cLights]=true;
					  	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
					  	SetVehicleParamsEx(vid,engine,0,alarm,doors,bonnet,boot,objective);
					//  	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라이트를 껐습니다.");
					}
				}
				else
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 운전석에 탑승하지 않았습니다.");
				}
			}
  		return 1;
	}
			else if(c_strcmp(tmp,"오류해결")==1)
		{
		    for(new hc=0;hc<MAX_HVCAR;hc++)
			{
			    if(c_strcmp(PVSign[playerid][hc],"no")==1)
				{
					format(string,sizeof(string),"＊"#C_RED"(INFO) "#C_GREY": 당신은 %d 슬롯에 차량이 존재하지 않습니다.",hc);
		      		SendClientMessage(playerid,COLOR_INFO,string);
				}
				else
				{
					new string_nell[256];
					format(string_nell,sizeof(string_nell),"Vehicles/%s.ini",PVSign[playerid][hc]);
					new File: file = fopen(string_nell, io_read);
					if(file)
					{
						format(string,sizeof(string),"＊"#C_RED"(INFO) "#C_WHITE": 당신은 %d 슬롯에 차량이 존재합니다.",hc);
			      		SendClientMessage(playerid,COLOR_INFO,string);
					}
					else
					{
						format(string,sizeof(string),"＊"#C_RED"(INFO) "#C_WHITE": 당신은 %d 슬롯에 차량이 오류가 생겼으므로 삭제합니다.",hc);
			      		SendClientMessage(playerid,COLOR_INFO,string);
						PlayerVeh[playerid][hc]=0;
			      		strmid(PVSign[playerid][hc],"no",0,128,128);
					}
				}
			}
			return 1;
		}
		else if(c_strcmp(tmp,"트렁크")==1)
	{
	    new engine,lights,alarm,doors,bonnet,boot,objective;
	    if(IsPlayerConnected(playerid))
		{
		    new vid = GetPlayerVehicleID(playerid);
			//if(vid != INVALID_VEHICLE_ID)
		//	{
			    if(GetPlayerState(playerid) == 2)// 아니다 시동이 걸려있으면 보게 해줘, 시동 안걸려있으면 차 창고 보기 안보이게 해주고,네
			    {
			    if(CarInfo[idcar][cStarted]!=true)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 이 차량은 시동이 걸려있지 않습니다. ");
					return 1;
				}
				    if(CarInfo[GetPlayerVehicleID(playerid)][cTrunk])
				    {
					    CarInfo[GetPlayerVehicleID(playerid)][cTrunk]=false;
					  	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
					  	SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,1,objective);
					//	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 트렁크를 열었습니다.");
					}
					else if(!CarInfo[GetPlayerVehicleID(playerid)][cTrunk])
					{
					    CarInfo[GetPlayerVehicleID(playerid)][cTrunk]=true;
					  	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
					  	SetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,0,objective);
					  //	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 트렁크를 닫았습니다.");
					}
				}
				else
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 운전석에 탑승하지 않았습니다.");
				}
			}
  		return 1;
	}
		else if(c_strcmp(tmp,"위치")==1)
		{
		    if(Work[playerid] != 0)
			{
				SCM(playerid,COLOR_ERROR,"INFO : "#C_YELLOW" 일 중에는 사용할 수 없습니다. 일을 끝내고 사용이 가능합니다.");
				return 1;
			}
			if(UsingCP[playerid]==1)
			{
				DisablePlayerCheckpoint(playerid);
				SendClientMessage(playerid,COLOR_ERROR," INFO : "#C_WHITE" 차위치전송을 끝냅니다.  발신자: 911");
				new Float:SX,Float:SY,Float:SZ;
				GetPlayerPos(playerid,SX,SY,SZ);
				PlayerPlaySound(playerid,1145,SX,SY,SZ);
				UsingCP[playerid]=0;
				return 1;
			}
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 위치 [차번호]");
				showcar(playerid,playerid,2);
				return 1;
			}
			new hc=strval(tmp)-1;
			if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 위치 [차번호]");
				showcar(playerid,playerid,2);
				return 1;
			}
			new pv=PlayerVeh[playerid][hc];

			if(UsingCP[playerid]==0)
			{
				ckdnlcl(playerid);
				wleh(playerid);
				cjdthdlf(playerid);
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 차위치전송을 시작합니다.  발신자: 911");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 전송을 끝내려면 ((/차 위치)),  발신자: 911");
				new Float:SX,Float:SY,Float:SZ;
				GetPlayerPos(playerid,SX,SY,SZ);
				PlayerPlaySound(playerid,1145,SX,SY,SZ);
				GetVehiclePos(pv,SX,SY,SZ);//2118.1262,-1151.8816,24.1441))
				SetPlayerCheckpoint(playerid,SX,SY,SZ,8.0);
				UsingCP[playerid]=1;
			}
			return 1;
			}
		else if(c_strcmp(tmp,"폐차")==1)
		{
			if(!PlayerToPoint(10.0,playerid,2119.7700,953.2288,10.8130))
			{
				SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 폐차장에 있지 않습니다 !");
				return 1;
			}
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 이 명령어는 운전석에서만 할 수 있습니다 !");
				return 1;
			}
			new gvi=GetPlayerVehicleID(playerid);
			if(IsCarOwner(playerid,gvi))
			{
				new hc=carslot(playerid,gvi);
				PlayerVeh[playerid][hc]=0;
				strmid(PVSign[playerid][hc],"no",0,128,128);
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 차량을 폐차했고, 고철값으로 $1000를 받았습니다.");
				GiveMoney(playerid,1000);
				DeleteVehicle(gvi);
				return 1;
			}
			return 1;
		}
			else if(c_strcmp(tmp,"판매")==1)
			{
				new v = GetClosestVehicle(playerid);
				if(GetDistanceBetweenCar(playerid,v)>3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 근처에 소유중인 차가 없습니다.");
					return 1;
				}
				if(IsCarOwner(playerid,v))
				{
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차 판매 [플레이어 번호/이름] [가격]");
						return 1;
					}
					giveplayerid=ReturnUser(tmp);
					if(gPlayerLogged[giveplayerid]==0||giveplayerid==playerid)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 접속하지 않은 플레이어 입니다.");
						return 1;
					}
					if(GetDistanceBetweenPlayers(playerid,giveplayerid)>5)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 사람이 근처에 없습니다.");
						return 1;
					}
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차 판매 이름 [가격]");
						return 1;
					}
					new price=strval(tmp);
					if(price<1){return SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 가격은 $1 이하일 수 없습니다.");}
					for(new pcr=0;pcr<MAX_HVCAR;pcr++)
					{
						if(c_strcmp(PVSign[giveplayerid][pcr],"no"))
						{
							break;
						}
						if(pcr==MAX_HVCAR-1)
						{
							if(c_strcmp(PVSign[giveplayerid][pcr],"no")==0)
							{
								SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 그 사람은 더 이상 구매할 수 없습니다.");
								return 1;
							}
						}
					}
					CarSeller[giveplayerid]=playerid;
					CarSellerPrice[giveplayerid]=price;
					CarSellerSlot[giveplayerid]=carslot(playerid,v);
					format(string,sizeof(string),"INFO : "#C_WHITE" %s에게 $ %d에 %s를 살 것을 권유했습니다.", GetName(giveplayerid),price,GetVehicleName(v));
					SCM(playerid,COLOR_ERROR,string);
					format(string,sizeof(string),"INFO : "#C_WHITE" %s $ %d에 %s를 살 것을 권유했습니다. (/동의 영구차)",GetName(playerid),price,GetVehicleName(v));
					SCM(giveplayerid,COLOR_ERROR,string);
					return 1;
				}
				return 1;
			}
		else if(c_strcmp(tmp,"구매")==1)
		{
			if(IsAtVehPlace(playerid)==999)
			{
				return 1;
			}
			if(PlayerInfo[playerid][pCityLic]==0)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시민증이 없습니다. 시청에서 시민증을 따주세요.");
			return 1;
			}
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 구매 [차모델번호] [도색번호] [도색번호]");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 [판매목록] [1-10]");
				return 1;
			}
			new ac=strval(tmp)-1;
			new price=0;
			new type=IsAtVehPlace(playerid);

			new Color[2];
		   	tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 구매 [차모델번호] [도색번호] [도색번호]");
				return 1;
			}
			Color[0] = strval(tmp);
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 구매 [차모델번호] [도색번호] [도색번호]");
				return 1;
			}
			Color[1] = strval(tmp);

			if(allowedcar[type][ac]!=0)
			{
				price=allowedprice[type][ac];
			}
			else
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 리스트에 존재하지 않는 차량 번호입니다 !");
				return 1;
			}
			if(GetMoney(playerid)<=price)
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 그것을 사기 위한 돈이 부족합니다 !");
				return 1;
			}
			new hc=0;
			for(new pcr=0;pcr<MAX_HVCAR;pcr++)
			{
				if(c_strcmp(PVSign[playerid][pcr],"no"))
				{
					hc=pcr;
					break;
				}
				if(pcr==MAX_HVCAR-1)
				{
					if(c_strcmp(PVSign[playerid][pcr],"no")==0)
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 더 이상 이것을 구매할 수 없습니다 !");
						return 1;
					}
				}
			}
			GiveMoney(playerid,-price);
			Tax+=price;
			new Float:gpx,Float:gpy,Float:gpz;
			GetPlayerPos(playerid,gpx,gpy,gpz);

			new ve=CreateVehicle(allowedcar[type][ac],gpx,gpy,gpz,-90,VehicleInfo[GetPlayerVehicleID(playerid)][vColor1],VehicleInfo[GetPlayerVehicleID(playerid)][vColor2],9999);
			VehicleInfo[ve][vColor1]=Color[0];
			VehicleInfo[ve][vColor2]=Color[1];
			ChangeVehicleColor(ve, Color[0], Color[1]);

			VehicleInfo[ve][vOwnerPnumber] = PlayerInfo[playerid][pPnumber];
			format(string,sizeof(string),"%s",BackupName[playerid]);
			strmid(VehicleInfo[ve][vOwner],string,0,strlen(string),255);
			CreateCarSign(ve);
			SetVehicleNumberPlate(ve,VehicleInfo[ve][vSign]);
			if(PlayerVeh[playerid][hc]==0)
			{
				PlayerVeh[playerid][hc]=ve;
				strmid(PVSign[playerid][hc],VehicleInfo[ve][vSign],0,128,128);
				format(string,sizeof(string)," [ %s ]",PVSign[playerid][hc]);
				SendClientMessage(playerid,COLOR_ERROR,string);
			}
			VehicleInfo[ve][vModel]=allowedcar[type][ac];
			VehicleInfo[ve][vPark_x]=0;
			VehicleInfo[ve][vPark_y]=0;
			VehicleInfo[ve][vPark_z]=0;
			VehicleInfo[ve][vPark_r]=0;
			VehicleInfo[ve][vVir]=0;
			VehicleInfo[ve][vTowed]=0;
			VehicleInfo[ve][vLock]=0;
			VehicleInfo[ve][vAlarm]=1;
			VehicleInfo[ve][vGas]=100;
			VehicleInfo[ve][vHP]=1000;
			VehicleInfo[ve][vPaintJob]=999;
			for(new ce=0;ce<17;ce++)
			{
				VehicleInfo[ve][vTune][ce]=0;
			}
			for(new tr = 0; tr < GMT(VehicleInfo[ve][vModel]); tr++)
			{
				VehicleInfo[ve][vTrunkType][tr]=0;
				VehicleInfo[ve][vTrunk][tr]=0;
			}
			ChangeVehicleColor(ve,VehicleInfo[ve][vColor1],VehicleInfo[ve][vColor2]);
			ChangeVehiclePaintjob(ve,VehicleInfo[ve][vPaintJob]);
			SaveVehicle(ve);
			SetVehicleNumberPlate(ve,VehicleInfo[ve][vSign]);
			ChangeVehicleColor(ve,VehicleInfo[ve][vColor1],VehicleInfo[ve][vColor2]);
			ChangeVehiclePaintjob(ve,VehicleInfo[ve][vPaintJob]);

			format(string,sizeof(string),"INFO : "#C_WHITE" 당신은 %s를 구입했습니다. 가격 : $%d",GetVModelName(allowedcar[type][ac]),price);
			SendClientMessage(playerid,COLOR_ERROR,string);
			SendClientMessage(playerid,COLOR_ERROR, "INFO : "#C_WHITE" [/차 주차]를 사용하여 차량을 주차할 수 있습니다.");
			PlayerUpdate();
			return 1;
		}
		else if(c_strcmp(tmp,"추가")==1||c_strcmp(tmp,"모델추가")==1)
		{
			if(PlayerInfo[playerid][pAdmin] != 7)return 1;
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 모델추가 [modelid] [가격]");
				return 1;
			}
			new model=strval(tmp);
			if(model<400){return 1;}
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 모델추가 modelid [가격]");
				return 1;
			}
			new type=999;
			if(IsAirPlane(model)){type=2;}
			else if(IsShip(model)){type=1;}
			else if(IsBicycle(model)){type=3;}
			else type=0;
			new price=strval(tmp);
			for(new ac=0;ac<100;ac++)
			{
				if(allowedcar[type][ac]==0)
				{
					allowedcar[type][ac]=model;
					allowedprice[type][ac]=price;
					SendClientMessage(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 새로운 차량의 추가가 완료되었습니다 !");
					SaveCarlist();
					return 1;
				}
			}
			return 1;
		}
		else if(c_strcmp(tmp,"삭제")==1||c_strcmp(tmp,"목록삭제")==1)
		{
			if(PlayerInfo[playerid][pAdmin] != 7)return 1;
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 삭제 [번호]");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 [판매목록] [1-10]");
				return 1;
			}
			new ac=strval(tmp)-1;
			new type=IsAtVehPlace(playerid);
			if(allowedcar[type][ac]!=0)
			{
				allowedprice[type][ac]=0;
				allowedcar[type][ac]=0;
				SendClientMessage(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 삭제 완료 !");
				SaveCarlist();
				return 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 리스트에 존재하지 않는 차량 번호입니다 !");
				return 1;
			}
		}
		else if(c_strcmp(tmp,"속도설정")==1)
		{
		    if(ONOFF[playerid] == true)
		    {
			    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 속도설정 시스템이 종료되었습니다.");
		        ONOFF[playerid] = false;
		        return 1;
		    }
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /차 속도설정 [10~80]");
			    return 1;
			}
			new aaa;
			aaa = strval(tmp);
			if(aaa > MIN_VALVE && aaa < MAX_VALVE && ONOFF[playerid] == false)
			{
			    new st[256];
			    Limit[playerid] = aaa;
			    ONOFF[playerid] = true;
			    format(st,sizeof(st),"INFO : "#C_WHITE" 당신은 속도를 선택한 km/h 로 제안하셨습니다.");
			    SendClientMessage(playerid,COLOR_ERROR,st);

			}
			return 1;
		}
		else if(c_strcmp(tmp,"창고")==1)
		{
		    new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /차 창고 [이름]");
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 넣기 빼기 보기");
				return 1;
			}
			if(strcmp(x_nr,"넣기",true) == 0)
			{
			    new x_nrs[256];
				x_nrs = strtok(cmdtext, idx);
				if(!strlen(x_nrs)) {
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /차 창고 넣기 [이름]");
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 무기 방탄복 총기재료 마약");
					return 1;
				}
				if(strcmp(x_nrs,"무기",true) == 0)
				{
				    tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 무기 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					new hc=strval(tmp)-1;
					if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 무기 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					new pv=PlayerVeh[playerid][hc];
					new Float:x,Float:y,Float:z;
					GetVehiclePos(pv,x,y,z);
					new gunID = GetPlayerWeapon(playerid);
					new gunAmmo = GetPlayerAmmo(playerid);
					if(IsPlayerInVehicle(playerid,GetPlayerVehicleID(playerid)))
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 차량에서 내려서 창고에 넣어주세요.");
					    return 1;
					}
					if(PlayerToPoint(5.0,playerid,x,y,z))
					{
						tmp=strtok(cmdtext,idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 무기 차번호 [슬롯]");
							return 1;
						}
						new page=strval(tmp);
						if(page >= MAX_HVCAR && page <= GMT(VehicleInfo[pv][vModel])+1)
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 무기 차번호 [슬롯]");
							return 1;
						}
						if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 1)
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 넣으려는 총기를 손에들고 시도해주십시오");
							return 1;
						}
						if(page!=1&&page!=2&&page!=3)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 슬롯은 1~3 만됩니다.");
							return 1;
						}
						if(VehicleInfo[pv][vTrunk][page] != 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른총기가 있습니다");
							return 1;
						}
						if(gunID != 0 && gunAmmo != 0)
						{
							VehicleInfo[pv][vTrunk][page] = gunID;
							VehicleInfo[pv][vTrunk2][page] = gunAmmo;
							RemovePlayerWeapon(playerid, gunID);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 차량 트렁크에 무언가를 넣는다.", RPPlayerName(playerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
						else
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 넣으려는 총기가 없습니다");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신의 차량 가까이에서 해주세요 ");
						return 1;
					}
					PlayerPlaySound(playerid,1145,0,0,0);
					SaveVehicle(pv);
	 				return 1;
				}
				else if(strcmp(x_nrs,"총기재료",true) == 0)
				{
				    tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 총기재료 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					new hc=strval(tmp)-1;
					if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 총기재료 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					if(IsPlayerInVehicle(playerid,GetPlayerVehicleID(playerid)))
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 차량에서 내려서 창고에 넣어주세요.");
					    return 1;
					}
					new pv=PlayerVeh[playerid][hc];
					new Float:x,Float:y,Float:z;
					GetVehiclePos(pv,x,y,z);
					if(IsPlayerInRangeOfPoint(playerid, 5.0,x,y,z))
					{
						tmp=strtok(cmdtext,idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 총기재료 차번호 [슬롯]");
							return 1;
						}
						new page=strval(tmp);
						if(page >= MAX_HVCAR && page <= GMT(VehicleInfo[pv][vModel]))
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 총기재료 차번호 [슬롯]");
							return 1;
						}
						if(PlayerInfo[playerid][pMats] < 1)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 총기재료가 없습니다 .");
							return 1;
						}
						if(page!=1&&page!=2&&page!=3)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 슬롯은 1~3 만됩니다.");
							return 1;
						}
						if(VehicleInfo[pv][vTrunk][page] != 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른 아이템이 있습니다.");
							return 1;
						}
						VehicleInfo[pv][vTrunk][page] = -2;
						VehicleInfo[pv][vTrunk2][page] = PlayerInfo[playerid][pMats];
						PlayerInfo[playerid][pMats] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량 트렁크에 무언가를 넣는다.", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신의  차량 가까이에서 해주세요 ");
						return 1;
					}
					PlayerPlaySound(playerid,1145,0,0,0);
					SaveVehicle(pv);
	 				return 1;
				}
				else if(strcmp(x_nrs,"마약",true) == 0)
				{
				    tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 마약 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					new hc=strval(tmp)-1;
					if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 마약 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					if(IsPlayerInVehicle(playerid,GetPlayerVehicleID(playerid)))
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 차량에서 내려서 창고에 넣어주세요.");
					    return 1;
					}
					new pv=PlayerVeh[playerid][hc];
					new Float:x,Float:y,Float:z;
					GetVehiclePos(pv,x,y,z);
					if(IsPlayerInRangeOfPoint(playerid, 5.0,x,y,z))
					{
						tmp=strtok(cmdtext,idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 마약 차번호 [슬롯]");
							return 1;
						}
						new page=strval(tmp);
						if(page >= MAX_HVCAR && page <= GMT(VehicleInfo[pv][vModel]))
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 마약 차번호 [슬롯]");
							return 1;
						}
						if(PlayerInfo[playerid][pDrugs] < 1)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 마약이 없습니다 .");
							return 1;
						}
						if(page!=1&&page!=2&&page!=3)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 슬롯은 1~3 만됩니다.");
							return 1;
						}
						if(VehicleInfo[pv][vTrunk][page] != 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른 아이템이 있습니다.");
							return 1;
						}
						VehicleInfo[pv][vTrunk][page] = -3;
						VehicleInfo[pv][vTrunk2][page] = PlayerInfo[playerid][pDrugs];
						PlayerInfo[playerid][pDrugs] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량 트렁크에 무언가를 넣는다.", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신의  차량 가까이에서 해주세요 ");
						return 1;
					}
					PlayerPlaySound(playerid,1145,0,0,0);
					SaveVehicle(pv);
	 				return 1;
				}
				else if(strcmp(x_nrs,"방탄복",true) == 0)
				{
				    tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 방탄복 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					new hc=strval(tmp)-1;
					if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 방탄복 [차번호]");
						showcar(playerid,playerid,2);
						return 1;
					}
					if(IsPlayerInVehicle(playerid,GetPlayerVehicleID(playerid)))
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 차량에서 내려서 창고에 넣어주세요.");
					    return 1;
					}
					new pv=PlayerVeh[playerid][hc];
					new Float:x,Float:y,Float:z,Float:amo;
					GetVehiclePos(pv,x,y,z);
					GetPlayerArmour(playerid,amo);
					if(PlayerToPoint(5.0,playerid,x,y,z))
					{
						tmp=strtok(cmdtext,idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 방탄복 차번호 [슬롯]");
							return 1;
						}
						new page=strval(tmp);
						if(page >= MAX_HVCAR && page <= GMT(VehicleInfo[pv][vModel])+1)
						{
							SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 넣기 방탄복 차번호 [슬롯]");
							return 1;
						}
						if(amo == 0)
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 아머를 소지하고있지 않습니다.");
							return 1;
						}
						if(page!=1&&page!=2&&page!=3)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 슬롯은 1~3 만됩니다.");
							return 1;
						}
						if(VehicleInfo[pv][vTrunk][page] != 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른 아이템이 있습니다");
							return 1;
						}
						new Amo = floatround(amo);
						VehicleInfo[pv][vTrunk][page] = -1;
						VehicleInfo[pv][vTrunk2][page] = Amo;
						SetArmour(playerid, 0);
						RemovePlayerAttachedObject(playerid,4);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량 트렁크에 무언가를 넣는다.", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);

					}
					else
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신의  차량 가까이에서 해주세요 ");
						return 1;
					}
					PlayerPlaySound(playerid,1145,0,0,0);
					SaveVehicle(pv);
	 				return 1;
				}
			}
			else if(strcmp(x_nr,"빼기",true) == 0)
			{
			    tmp=strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 빼기 [차번호]");
					showcar(playerid,playerid,2);
					return 1;
				}
				new hc=strval(tmp)-1;
				if(hc>=MAX_HVCAR||hc<0||PlayerVeh[playerid][hc]==0)
				{
					SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 빼기 [차번호]");
					showcar(playerid,playerid,2);
					return 1;
				}
				new pv=PlayerVeh[playerid][hc];
				new Float:x,Float:y,Float:z;
				GetVehiclePos(pv,x,y,z);
				if(PlayerToPoint(5.0,playerid,x,y,z))
				{
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 빼기 차번호 [슬롯]");
						return 1;
					}
					new page=strval(tmp);
					if(page >= MAX_HVCAR && page <= GMT(VehicleInfo[pv][vModel])+1)
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /차 창고 빼기 차번호 [슬롯]");
						return 1;
					}
					if(VehicleInfo[pv][vTrunk][page] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯은 비어있습니다.");
						return 1;
					}
					if(VehicleInfo[pv][vTrunk][page] > 0)
					{
						GiveWeapon(playerid, VehicleInfo[pv][vTrunk][page], VehicleInfo[pv][vTrunk2][page]);
					}//무기
					if(VehicleInfo[pv][vTrunk][page] == -1)
					{
						SetArmour(playerid, VehicleInfo[pv][vTrunk2][page])
						AttachObjectCorrectly(playerid, 373);
					}//방탄복
					if(VehicleInfo[pv][vTrunk][page] == -2)
					{
						PlayerInfo[playerid][pMats] += VehicleInfo[pv][vTrunk2][page];
					}//총기재료
					if(VehicleInfo[pv][vTrunk][page] == -3)
					{
						PlayerInfo[playerid][pDrugs] += VehicleInfo[pv][vTrunk2][page];
					}//마약

					VehicleInfo[pv][vTrunk][page] = 0;
					VehicleInfo[pv][vTrunk2][page] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 차량 트렁크에서 무언가를 꺼낸다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else
				{
					SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신의 차량 가까이에서 해주세요 ");
					return 1;
				}
				PlayerPlaySound(playerid,1145,0,0,0);
				SaveVehicle(pv);
 				return 1;
			}
			else if(strcmp(x_nr,"보기",true) == 0)
			{
				 if(CarInfo[idcar][cStarted]!=true)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 이 차량은 시동이 걸려있지 않습니다. / 당신은 운전석에 탑승하지 않았습니다.");
					return 1;
				}
				new Float:x,Float:y,Float:z;
				GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
				if(PlayerToPoint(5.0,playerid,x,y,z))
				{
				    Showtrunk(GetPlayerVehicleID(playerid),playerid);
					format(string, sizeof(string), "* %s 시동이 걸린 차량의 트렁크 안을 들여다본다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					VehicleInfo[GetPlayerVehicleID(playerid)][vTrunkO]=true;
				}
				else
				{
					return SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 이 차량은 시동이 걸려있지 않습니다. / 당신은 운전석에 탑승하지 않았습니다.");
				}
				new Float:SX,Float:SY,Float:SZ;
				GetPlayerPos(playerid,SX,SY,SZ);
				PlayerPlaySound(playerid,1145,SX,SY,SZ);
				SaveVehicle(GetPlayerVehicleID(playerid));
				return 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 존재하지 않는 이름입니다.");
				return 1;
			}
		}
	}
	
	if(c_strcmp(cmd, "/금고") == 1)
	{
		tmp=strtok(cmdtext,idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /금고 [기능]");
			SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 출금 입금 잔액");
			return 1;
		}
		if(c_strcmp(tmp,"잔액")==1)
		{
			if(!PlayerToPoint(3.0, playerid, 1910.9830,-1775.1710,465.1599))
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 있지 않습니다.");
			}
			format(string, sizeof(string), "INFO : "#C_WHITE" 현재 금고에 남아있는 잔액은 $%d입니다.", HicarBank);
			SCM(playerid, COLOR_ERROR, string);
			SaveStuff();
			return 1;
		}
		else if(c_strcmp(tmp,"입금")==1)
		{
			if(!PlayerToPoint(3.0, playerid, 1910.9830,-1775.1710,465.1599))
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 있지 않습니다.");
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /금고 입금 [액수]");
			}
			new cashdeposit = strval(tmp);
			if (cashdeposit > GetMoney(playerid) || cashdeposit < 1)
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지갑에 그렇게 많은 금액이 없습니다.");
			}
			GiveMoney(playerid, -cashdeposit);
			HicarBank+=cashdeposit;
			SaveStuff();
			//format(string, sizeof(string), "INFO : "#C_WHITE" 직원 %s이(가) 금고에서 돈을 입금하였습니다.", RPPlayerName(playerid), cashdeposit);
		//	SendFamilyMessage(11, COLOR_ERROR, string);
			format(string, sizeof(string), "INFO : "#C_WHITE" 현재 금고에 남아있는 잔액은 $%d입니다.", HicarBank);
			SCM(playerid, COLOR_ERROR, string);
			return 1;
		}
		else if(c_strcmp(tmp,"출금")==1)
		{
			if(!PlayerToPoint(3.0, playerid, 1910.9830,-1775.1710,465.1599))
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 있지 않습니다.");
			}
			if(PlayerInfo[playerid][pLeader] != 11)
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사장만 출금 할 수 있습니다.");
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /금고 출금 [액수]");
			}
			new cashdeposit = strval(tmp);
			if (cashdeposit > HicarBank || cashdeposit < 1)
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 그렇게 많은 금액이 없습니다.");
			}
			GiveMoney(playerid, cashdeposit);
			HicarBank-=cashdeposit;
			SaveStuff();
			//format(string, sizeof(string), "INFO : "#C_WHITE" 직원 %s이(가) 금고에서 돈을 출금하였습니다.", RPPlayerName(playerid), cashdeposit);
		//	SendFamilyMessage(11, COLOR_ERROR, string);
			format(string, sizeof(string), "INFO : "#C_WHITE" 현재 금고에 남아있는 잔액은 $%d입니다.", HicarBank);
			SCM(playerid, COLOR_ERROR, string);
			return 1;
		}
		return 1;
	}

	if (!strcmp("/계산기", cmd, true))
	{
		if (PlayerInfo[playerid][pabcdefg] != 1)
		{
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 계산기가 없습니다");
			return 1;
		}
		new i, num1 = 0, num2 = 0, ch, result;
		cmd = strtok_line(cmdtext,idx);
		if (!strlen(cmd))
		{
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (/계산기)를 입력하신후 알맞은 식을 적어주세요");
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (/계산기 10 - 5)을 입력하면 결과 5를 얻으실수 있습니다");
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 계산식은 [- 빼기] [+ 더하기] [/ 나누기] [* 곱하기]등이 있습니다");
			return 1;
		}
		for (i=0; i<strlen(cmd); i++)
		{
			if (cmd[i] == ' ') continue;
			if (IsDigit(cmd[i]))
			{
				num1 = num1 * 10 + (cmd[i] - '0');
				continue;
			}
			ch = cmd[i++];
			num2 = strval(cmd[i]);
			break;
		}
		result = operation(num1,num2,ch);
		format(cmd,sizeof(cmd),"INFO : "#C_WHITE" %d %c %d = %d입니다",num1,ch,num2,result);
		SCM(playerid,COLOR_ERROR,cmd);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "* %s 계산기로 손으로 눌러 계산을 한다.", RPPlayerName(playerid));
		ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
		return 1;
	}
	////////////////------------------------시도----------
	        if(strcmp(cmd, "/시도", true) == 0 || strcmp(cmd, "/sd", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_ERROR, " 먼저 로그인 해주세요");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_WHITE, "힌트: /시도 [행동]");
					return 1;
				}
				if(tleh[playerid] == 0)
				{
					new randa = random(2)+1;
    				if(randa == 1) format(string, sizeof(string), "*  %s(이)가 [%s](을)를 시도하는데 성공했다", RPPlayerName(playerid), result);
					else format(string, sizeof(string), "*  %s(이)가 [%s](을)를 시도하는데 실패했다", RPPlayerName(playerid), result);
					tleh[playerid] = 1;
					SetTimerEx("tlehCool", 5000, false, "i", playerid);
					ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					printf("%s", string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, " 시도명령어의 쿨타임을 기다려주세요");
				}
			}
			return 1;
		}

	//----------------------------------[Do]-----------------------------------------------

	if(strcmp(cmd, "/st", true) == 0 || strcmp(cmd, "/st", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인 부터 하세요.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /st [상황]");
				return 1;
			}
			if(altusemf[playerid] == 1)
			{
			if(strcmp(result, "피곤해보임", true)==0)
			{
			altusemf[playerid] = 2;
			TutTime[playerid] = 20;
			return 1;
			}
			else
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /st 피곤해보임을 입력해주세요.");
			}
			new to_me[MAX_CHATBUBBLE_LENGTH+1];
			format(string, sizeof(string), "* %s %s ", RPPlayerName(playerid), result);
			format(to_me,MAX_CHATBUBBLE_LENGTH, "%s", result);
			ProxDetector(10.0, playerid, string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
			SetPlayerChatBubble(playerid,to_me,0x62B382AA,10.0,10000);
			printf("%s", string);
		}
		return 1;
	}
//=======================================================================================
		if (strcmp(cmd, "/요리주기") == 0||strcmp(cmd, "/요주") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember]!=35)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 요리사이 아닙니다.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /요주 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (!ProxDetectorS(3.0, playerid, giveplayerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다.");
							return 1;
						}
						if(giveplayerid == playerid)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자신에게 줄수  없습니다.");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 요리를 주었고 체력이 올라갑니다.", RPPlayerName(playerid));
						SCM(giveplayerid, COLOR_ERROR, string);
						format(string, sizeof(string), "* %s %s에게 요리를 줬습니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						PlayerStoned[giveplayerid] =0;
						Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
						Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
						SetHealth(giveplayerid, 100);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알맞지 않은 플레이어 입니다. ");
				}
			}
			return 1;
		}
//=======================================================================================
		if (strcmp(cmd, "/술판매") == 0||strcmp(cmd, "/술주") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember]!=35)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 요리사이 아닙니다.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /술주 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (!ProxDetectorS(3.0, playerid, giveplayerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다.");
							return 1;
						}
						if(giveplayerid == playerid)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자신에게 줄수  없습니다.");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 술을 주었고 체력이 올라갑니다.", RPPlayerName(playerid));
						SCM(giveplayerid, COLOR_ERROR, string);
						format(string, sizeof(string), "* %s %s에게 요리를 줬습니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						PlayerStoned[giveplayerid] =0;
						SetPlayerDrunkLevel(playerid,4);
						Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
						Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
						SetHealth(giveplayerid, 100);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알맞지 않은 플레이어 입니다. ");
				}
			}
			return 1;
		}
//=====================================/th 생각끝 =======================================
		if(strcmp(cmd, "/매기", true) == 0 || c_strcmp(cmd,"/총매기") ==1 || c_strcmp(cmd,"/등에매기") == 1 || strcmp(cmd,"/weapon",true) == 0 || strcmp(cmd,"/attachweapon",true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
				if(DWeapon[playerid] == 1)
				{
	   				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 맨 총기를 들었습니다.");
	   				Anim(playerid,"KISSING","gift_give",4.1,0,1,1,1,1);
					DestroyObject(Silent[playerid]);
	   				DestroyObject(Desert[playerid]);
				   	DestroyObject(Shotgun[playerid]);
					DestroyObject(MP5[playerid]);
					DestroyObject(AK47[playerid]);
					DestroyObject(M16[playerid]);
					DestroyObject(Sniper[playerid]);
					DestroyObject(Katana[playerid]);
					DestroyObject(Knife[playerid]);
					DWeapon[playerid] = 0;
			        format(string, sizeof(string), "* %s 등&허리에 있던 무기를 뽑아든다.", RPPlayerName(playerid));
		        	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid,Dnumber[playerid],Dammo[playerid]);
					Dnumber[playerid] = 0;
					Dammo[playerid] = 0;
				}
				else
				{
				    	new Float: x, Float:y, Float:z, Float:a;
	   					if(GetPlayerWeapon(playerid) == 4)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							Knife[playerid] = CreateObject(335, x, y, z, 20.6265, 82.5060, 0.0000);
							AttachObjectToPlayer(Knife[playerid], playerid, 0.22, -0.05, 0.07, 0, 160, 90);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s 칼을 허리춤에 있는 칼집에 넣는다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
	   					else if(GetPlayerWeapon(playerid) == 8)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							Katana[playerid] = CreateObject(339, x, y, z, 20.6265, 82.5060, 0.0000);
							AttachObjectToPlayer(Katana[playerid], playerid, -0.215, 0.1, 0.1, 0, 200, 90);
							DWeapon[playerid] = 1;
	                        format(string, sizeof(string), "*  %s 카타나를 허리춤에 있는 칼집에 넣는다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
	   					else if(GetPlayerWeapon(playerid) == 23)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							Silent[playerid] = CreateObject(347, x, y, z, 20.6265, 82.5060, 0.0000);
							AttachObjectToPlayer(Silent[playerid], playerid, 0.22, -0.05, 0.07, 0, 90, 90);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s 소음기가 부착된 총을 허리춤 옆에 있는 건홀더에 넣는다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
	   					else if(GetPlayerWeapon(playerid) == 24)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							Desert[playerid] = CreateObject(348, x, y, z, 20.6265, 82.5060, 0.0000);
							AttachObjectToPlayer(Desert[playerid], playerid, 0.22, -0.05, 0.07, 0, 90, 90);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s 데저트이글을 허리춤 옆에 있는 건홀더에 넣는다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
						else if(GetPlayerWeapon(playerid) == 25)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							Shotgun[playerid] = CreateObject(349, x, y, z, 20.6265, 82.5059, 0.0000);
							AttachObjectToPlayer(Shotgun[playerid], playerid, 0, -0.22, 0.31, 0, 100, 0);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s 샷건의 줄을 어깨에 맨다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
						else if(GetPlayerWeapon(playerid) == 29)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							MP5[playerid] = CreateObject(353, x, y, z, 332.4980, 82.8030, 0.0000);
							AttachObjectToPlayer(MP5[playerid], playerid, 0, -0.22, 0.31, 0, 100, 0);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s MP5의 줄을 어깨에 맨다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
						else if(GetPlayerWeapon(playerid) == 30)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							AK47[playerid] = CreateObject(355, x, y, z, 332.4980, 86.8030, 0.0000);
							AttachObjectToPlayer(AK47[playerid], playerid, 0, -0.22, 0.31, 0, 100, 0);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s AK47의 줄을 어깨에 맨다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
						else if(GetPlayerWeapon(playerid) == 31)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							M16[playerid] = CreateObject(356, x, y, z, 332.4980, 86.8030, 0.0000);
							AttachObjectToPlayer(M16[playerid], playerid, 0, -0.22, 0.31, 0, 100, 0);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s M4의 줄을 어깨에 맨다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
	  					else if(GetPlayerWeapon(playerid) == 34)
						{
						    GetPlayerPos(playerid, x, y, z);
							GetPlayerFacingAngle(playerid, a);
							x += (-1 * floatsin(-a, degrees));
							y += (-1 * floatcos(-a, degrees));
							Sniper[playerid] = CreateObject(358, x, y, z, 332.4980, 86.8030, 0.0000);
							AttachObjectToPlayer(Sniper[playerid], playerid, 0, -0.22, 0.31, 0, 100, 0);
							DWeapon[playerid] = 1;
							format(string, sizeof(string), "* %s 저격총의 줄을 어깨에 맨다.", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Dnumber[playerid] = GetPlayerWeapon(playerid);
							Dammo[playerid] = GetPlayerAmmo(playerid);
							RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
							return 1;
						}
						else
						{
						    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 등에 맬 총기가 없습니다 !");
						}
				}
	   		}
			return 1;
		}
		if(strcmp(cmd, "/환자시간", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" /환자시간 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							giveplayerid = ReturnUser(tmp);
							if(PlayerInfo[giveplayerid][pJailed] != 3 && PlayerInfo[giveplayerid][pJailed] != 300)
							{
								SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 상대방은 기절해 있지 않습니다");
								return 1;
							}
	    					if(PlayerInfo[playerid][dmdrmqLic] == 1)
	    					{
	    					    if(giveplayerid == playerid) {SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 자신에게 쓸 수 없습니다."); return 1; }
								format(string, sizeof(string), "(정보) "#C_WHITE"%s(%d)님의 혼수 카운트가 %d 남았습니다.", RPPlayerName(giveplayerid), giveplayerid, PlayerInfo[giveplayerid][pJailTime]);
								SCM(playerid, COLOR_WHITE, string);
								return 1;
	    					}
	    					else
	    					{
	    					    SCM(playerid,COLOR_ERROR,"(정보) "#C_WHITE" 의료자격증이 없습니다.");
	    					}
						}
						else
						{
							SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 그 플레이어는 당신의 근처에 있지 않습니다.");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 그 플레이어는 오프라인 입니다.");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/응급") == 0 || strcmp(cmd, "/응") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /응급 [플레이어번호/이름의 부분]");
						if(Dmdrmqtkdxo[playerid]==1)
						{
							Dmdrmqtkdxo[playerid]=0;
							PlayerDmdrmq[playerid]=0;
							Dmdrmqtkdxo[playerid]=0;
							giveDmdrmqtkdxo[dmdrmqid[playerid]]=0;
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 심폐소생술을 취소하셨습니다");
							return 1;
						}
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								giveplayerid = ReturnUser(tmp);
								if(PlayerInfo[giveplayerid][pJailed] != 3 && PlayerInfo[giveplayerid][pJailed] != 300)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 기절해 있지 않습니다");
									return 1;
								}
			    					if(PlayerInfo[playerid][dmdrmqLic] == 1)
			    					{
			    					    if(giveplayerid == playerid) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 심폐소생술을 할 수 없습니다"); return 1; }
										dmdrmqid[playerid] = giveplayerid;
										Dmdrmqtkdxo[playerid]=1;
										giveDmdrmqtkdxo[giveplayerid] = playerid;
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 환자를 살리기 시작합니다. 지금부터 스페이스바를 연타하십시오");
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 응급취소는 (/응급)을 한번 더 입력하십시오.");
										Anim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
										Anim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
										Anim(giveplayerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
										Anim(giveplayerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
										GameTextForPlayer(playerid,"~r~SPACE BAR!!",5000,1);
										SCM(dmdrmqid[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 누군가가 당신을 살리려고 합니다");
										return 1;
			    					}
			    					else
			    					{
			    					    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 의료자격증이 없습니다.");
			    					}
								if(giveplayerid == playerid) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 심폐소생술을 할 수 없습니다"); return 1; }
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 근처에 있지 않습니다.");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다.");
						return 1;
					}
				}
			return 1;
	}
if(strcmp(cmd, "/자격", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
               if(PlayerInfo[playerid][pAdmin] >= 3)
				{
					new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 [이름] [플레이어의번호/이름의부분]");
						SCM(playerid, COLOR_ERROR, "(이름) 운전 비행 항해 낚시 대형면허 무기 의료 시민증");
						return 1;
					}
					if(strcmp(x_nr,"비행",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 비행 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 비행면허를 지급했습니다.", AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][pFlyLic] = 1;
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"항해",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 항해 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 항해면허를 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][pBoatLic] = 1;
								if(PlayerInfo[playerid][pMember] == 1)
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"의료",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 의료 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 의료면허를 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][dmdrmqLic] = 1;
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"운전",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 운전 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 운전면허를 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][pCarLic] = 1;
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"대형면허") == 0 || strcmp(x_nr,"대형") == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/자격)증지급 대형면허 [플레이어번호/이름의 부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), " %s님이 당신에게 대형면허를 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								Jk(playerid,giveplayerid,x_nr);
								PlayerInfo[giveplayerid][peogudLic] = 1;
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
							return 1;
						}
					}
					else if(strcmp(x_nr,"낚시",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 낚시 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 낚시면허를 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][pFishLic] = 1;
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"무기",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 무기 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 무기면허를 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][pGunLic] = 1;
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"시민증",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격 시민증 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s님이 당신에게 시민증을 지급했습니다",AdminName[playerid]);
								SCM(giveplayerid, COLOR_BLUE, string);
								format(string, 256, "(관리자알림) %s님이 %s에게 관리자용 명령어로 자격증을 발급해줍니다.", AdminName[playerid],giveplayer);
								ABroadCast(COLOR_ADMIN,string,1);
								PlayerInfo[giveplayerid][pCityLic] = 1;
								Jk(playerid,giveplayerid,x_nr);
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시청직원이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
	if(strcmp(cmd, "/b", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SCM(playerid, COLOR_ERROR, "[!] 당신은 말을할수 없습니다");
				return 1;
			}
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_ERROR, "[!] 로그인부터 해주셔야합니다");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SCM(playerid, COLOR_HINT, "[?] /b [할말]");
				return 1;
			}

			format(string, sizeof(string), "(OOC [%d]) %s: %s", playerid, RPPlayerName(playerid), result);
			ProxDetector(10.0, playerid, string,COLOR_FADE3,COLOR_FADE3,COLOR_FADE3,COLOR_FADE3,COLOR_FADE3);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/report", true) == 0 || strcmp(cmd, "/신고", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(AdminTime[playerid] > 0)
			{
				SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 연속적으로 불가능합니다. 장문으로 한번에 입력해주세요.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /신고 [플레이어ID/플레이어이름] [내용]");
				return 1;
			}
			giveplayerid = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /신고 [플레이어ID/플레이어이름] [내용]");
						return 1;
					}
					AdminTime[playerid] = 10;
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* 제보자-(%d)%s, 신고대상-(%d)%s", playerid, RPPlayerName(playerid), giveplayerid, RPPlayerName(giveplayerid));
					ABroadCast(COLOR_ADMIN,string,1);
					format(string, sizeof(string), "* 신고내용-(%s)", (result));
					ABroadCast(COLOR_ADMIN,string,1);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 신고해주셔서 감사합니다. 당신의 메세지는 어드민에게 전송되었습니다");
					PlayerNeedsHelp[playerid] = 1;
				}
			}
		}
		return 1;
	}
	// --------------------------------------- 드모 분으로 가는거 -----------------------------
	if(strcmp(cmd, "/드모르간", true) == 0 || strcmp(cmd, "/드모", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/드모)르간 [플레이어번호/이름의 부분] [시간(분)] [이유]");
				return 1;
			}
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						format(string, sizeof(string), " %s님이 %s님을 드모르간에 %d간 가둡니다. (사유 : %s)", AdminName[playerid], RPPlayerName(playa), money, (result));
						SCMToAll(COLOR_ADMIN, string);
						WantedPoints[playa] = 0;
						PlayerInfo[playa][pJailed] = 2;
						PlayerInfo[playa][pJailTime] = money*60;
						SetPlayerInterior(playa, 0);
						PlayerInfo[giveplayerid][diedie] = 0;
						SetPlayerPos(playa, -2491.4290,-2440.8667,-34.1328);
						SetHealth(playa, 50);
						SetPlayerFreeze(playa, true, 1);
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %d분간 수감됩니다. (보석: 불가능)", money);
						SCM(playa, COLOR_ERROR, string);
						SetCameraBehindPlayer(playa);
						SetPlayerSkin(playa,268);
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/끌기", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /끌기 [플레이어의번호/이름의부분]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(3.0, playerid, para1) && PlayerCuffed[para1] == 2 || ProxDetectorS(3.0, playerid, para1) && PlayerInfo[para1][pJailed] == 3 ||ProxDetectorS(3.0, playerid, para1) && PlayerTied[para1] == 1)
					{
						if(Draw[playerid] == 1 && Drop[playerid] != 999)
						{
							GetPlayerName(Drop[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 앙쪽 겨드랑이를 잡고 끌고가다 놓습니다.", RPPlayerName(Drop[playerid]));
							SendClientMessage(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신을 끌고가다 놓습니다.", RPPlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_ERROR, string);
							Draw[playerid] = 0;
							Drop[playerid] = 0;
							DropGPlayer[giveplayerid] = 0;
							SetTimerEx("DrawPosition", 1000, false, "i", playerid);
							return 1;
						}
						if(DropGPlayer[giveplayerid] == 1)
						{
							SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 그 사람은 이미 끌려다니고 있습니다.");
							return 1;
						}
						GetPlayerName(Drop[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new Float:x, Float:y, Float:z;
						new interior = GetPlayerInterior(playerid);
						GetPlayerPos(playerid, x, y, z);
						SetPlayerPos(para1, x, y, z);
						SetPlayerInterior(para1, interior);
						Draw[playerid] = 1;
						Drop[playerid] = giveplayerid;
						DropGPlayer[giveplayerid] = 1;
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 양쪽 겨드랑이를 잡고 끌고 갑니다.", RPPlayerName(Drop[playerid]));
						SendClientMessage(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신을 끌고가기 시작합니다.", RPPlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_ERROR, string);
						SetTimerEx("DrawPosition", 1000, true, "i", playerid);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않거나 끌수없는 [상태]입니다.");
						SCM(playerid, COLOR_ERROR, "[상태] : 줄 | 수갑 | 기절 | 죽음");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/들것", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" /끌기 [플레이어의번호/이름의부분]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(para1))
			{
				if(para1 != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(3.0, playerid, para1))
					{
						if(Draw[playerid] == 1 && Drop[playerid] != 999)
						{
							GetPlayerName(Drop[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "(정보) "#C_WHITE" 당신은 %s의 들것에 실고 끌고가다 놓습니다.", RPPlayerName(Drop[playerid]));
							SendClientMessage(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "(정보) "#C_WHITE" %s 이(가) 당신을 들것에 실고 끌고가다 놓습니다.", RPPlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_ERROR, string);
							Draw[playerid] = 0;
							Drop[playerid] = 0;
							DropGPlayer[giveplayerid] = 0;
       						Anim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
							SetTimerEx("DrawPosition", 1000, false, "i", playerid);
							return 1;
						}
						if(DropGPlayer[giveplayerid] == 1)
						{
							SendClientMessage(playerid, COLOR_ERROR, "(정보) "#C_WHITE" 그 사람은 이미 들것에 실려다니고 있습니다.");
							return 1;
						}
						GetPlayerName(Drop[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new Float:x, Float:y, Float:z;
						new interior = GetPlayerInterior(playerid);
						GetPlayerPos(playerid, x, y, z);
						SetPlayerPos(para1, x, y, z);
						SetPlayerInterior(para1, interior);
						Draw[playerid] = 1;
						Drop[playerid] = giveplayerid;
						DropGPlayer[giveplayerid] = 1;
						format(string, sizeof(string), "(정보) "#C_WHITE" 당신은 %s의 들것에 실고 끌고 갑니다.", RPPlayerName(Drop[playerid]));
						SendClientMessage(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "(정보) "#C_WHITE" %s 이(가) 당신을 들것에 실고 끌고가기 시작합니다.", RPPlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_ERROR, string);
						Anim(giveplayerid,"PED","DOOR_LHinge_O",4.1,0,1,1,1,1);
						SetTimerEx("DrawPosition", 1000, true, "i", playerid);
					}
					else
					{
						SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 그 플레이어는 당신 주변에 있지않습니다.");
					}
				}
			}
		}
		return 1;
	}
	//===================================new 사이렌 시스템 ========================================
	if(!strcmp(cmdtext, "/사이렌", true))
		{
			if(IsPlayerConnected(playerid))
			{
			    
				if(IsCop(playerid)==1)
				{
					SetPVarInt(playerid, "Status", 1);
	   				SetPVarInt(playerid, "숨겨진", CreateObject(18646,0,0,0,0,0,0));
	   				SetPVarInt(playerid, "숨겨진1", CreateObject(18646,0,0,0,0,0,0));
	   				AttachObjectToVehicle(GetPVarInt(playerid, "숨겨진"), GetPlayerVehicleID(playerid), -0.5, -0.2, 0.8, 2.0, 2.0, 3.0);
	   				AttachObjectToVehicle(GetPVarInt(playerid, "숨겨진1"), GetPlayerVehicleID(playerid), -0.5, -0.2, 0.8, 2.0, 2.0, 3.0);
	   				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 사이렌을 달았습니다");
				}else{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" FBI/SWAT/LVPD 가 아닙니다.");
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/사이렌제거", true))
		{
			if(IsPlayerConnected(playerid))
			{
			    
				if(IsCop(playerid)==1)
				{
					DestroyObject(GetPVarInt(playerid, "숨겨진"));
	      			DeletePVar(playerid, "Status");
	   			 	DestroyObject(GetPVarInt(playerid, "숨겨진1"));
	       			DeletePVar(playerid, "Status");
	             	SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 사이렌을 제거했습니다");
				}
				else
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" FBI/SWAT/LVPD 가 아닙니다.");
				}
			}
			return 1;
		}
		//==========================================================================
	if(gPlayerLogged[playerid] == 1)
	{
 	if(strcmp(cmd, "/바리게이트", true) == 0 || strcmp(cmd, "/바리", true) == 0)
	{
	    if(IsACop(playerid) || IsPlayerAdmin(playerid))
     	{
     	        if(PlayerInfo[playerid][pBaejin2] < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 철근 1개가 부족합니다.");
					return 1;
				}
     	    GetPlayerName(playerid, sendername, sizeof(sendername));
			new zone[35];
			GetPlayer2DZone(playerid, zone, sizeof(zone));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" [/바리게이트] [번호]");
				SendClientMessage(playerid, COLOR_ERROR, "[번호] : 1. 가드레일 2. 교통차단 3. 스파이크(사용x 기능준비중) ");
			 	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 바리게이트는 위로 2단 설치를 할 시에는 논알로 처벌됩니다.");
				return 1;
			}
            new roadblock = strval(tmp);
            if (roadblock == 1)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        PlayerInfo[playerid][pBaejin2] -= 100;
		        PutRoadBlock(978,plocx,plocy,plocz,ploca);
		        format(string,sizeof(string),"** HQ ** Officer %s의 의하여 바리게이트가 설치 되었습니다.",sendername);
		        SendFamilyMessage(1,COLOR_BLUE,string);
				return 1;
			}
			if (roadblock == 2)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        PlayerInfo[playerid][pBaejin2] -= 100;
		        PutRoadBlock(3091,plocx,plocy,plocz,ploca);
		        format(string,sizeof(string),"** HQ ** Officer %s의 의하여 교통차단이 설치 되었습니다.",sendername);
		        SendFamilyMessage(1,COLOR_BLUE,string);
				return 1;
			}
			if (roadblock == 3)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        PlayerInfo[playerid][pBaejin2] -= 100;
		        PutRoadBlock(2899,plocx,plocy,plocz,ploca);
		        format(string,sizeof(string),"** HQ ** Officer %s의 의하여 스파이크가 설치 되었습니다.",sendername);
		        SendFamilyMessage(1,COLOR_BLUE,string);
				return 1;
			}
		}
	    return 1;
	}

	if (strcmp(cmd,"/바리게이트제거",true) == 0 || strcmp(cmd, "/바리제거", true) == 0)
	{
	    if(IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 5)
     	{
     	    GetPlayerName(playerid, sendername, sizeof(sendername));
			new zone[35];
			GetPlayer2DZone(playerid, zone, sizeof(zone));
        	DeleteClosestRoadblock(playerid);
		}
	    return 1;
	}

	if (strcmp(cmd,"/모든바리제거",true) == 0 || strcmp(cmd, "/rrball", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && IsACop(playerid))
     	{
			if(PlayerInfo[playerid][pRank] >= 8)
			{
			    GetPlayerName(playerid, sendername, sizeof(sendername));
        		DeleteAllRoadblocks(playerid);
        		format(string,sizeof(string),"** HQ ** Officer %s의 의하여 모든 바리게이트가 해체 되었습니다.",sendername);
	        	SendFamilyMessage(1,COLOR_BLUE,string);
			}
		}
	    return 1;
	}
					if(strcmp(cmd, "/폰버리기", true) == 0)
				{
						format(string, sizeof(string), " *%s 스마트폰을 버린다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						PlayerInfo[playerid][pPnumber] = 0;
						PlayerInfo[playerid][pSmart] = 0;
						return 1;
				}
	    //======================================================================
		if(strcmp(cmd, "/답", true) == 0 || strcmp(cmd, "/답변", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] <= 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /답변 [플레이어번호/이름의 부분] [답변]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /답 [플레이어번호/이름의 부분] [답변]");
							return 1;
						}
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
							format(string, sizeof(string), "* %s님이 %s님에게 말씀 - ( %s )",AdminName[playerid], RPPlayerName(giveplayerid), (result));
							SendAdminMessage(COLOR_ORANGE, string);
						}
						format(string, sizeof(string), "* %s님의 말씀: %s", AdminName[playerid], (result));
						SCM(giveplayerid, COLOR_ORANGE, string);
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		//=====================================================================================================
		if(strcmp(cmd, "/getip", true) == 0 || strcmp(cmd, "/ip", true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext,idx);
				new playersip[256];
				if(!strlen(tmp))
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /ip [플레이어번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerIp( giveplayerid,playersip,sizeof(playersip));
				format(string, sizeof(string), " %s님의 아이피는 - (%s)입니다",giveplayer,playersip);
				SCM(playerid,COLOR_ADMIN,string);
			}
			return 1;
		}
		//=====================================================================================================
		if(strcmp(cmd,"/ipban",true)==0 || strcmp(cmd,"/밴추가",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 6)
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /밴추가 [아이피] ");
						return 1;
					}
					format(string, 256, "banip %s",tmp);
					SendRconCommand(string);
					SendRconCommand("reloadbans");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 256, " %s님이 %s라는 아이피를 밴하였습니다", sendername,tmp);
					SendAdminMessage(COLOR_ADMIN, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/unbanip",true)==0 || strcmp(cmd,"/밴해제",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 6)
				{
					tmp = strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /밴해제 [아이피] ");
						return 1;
					}
					format(string, 256, "unbanip %s",tmp);
					SendRconCommand(string);
					SendRconCommand("reloadbans");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 256, " %s님이 %s 라는 아이피를 밴해제 시켰습니다", sendername,tmp);
					SendAdminMessage(COLOR_ADMIN, string);
				}
			}
			return 1;
		}
		//=====================================================================================================
		if(strcmp(cmd, "/respawnthiscar", true) == 0 || strcmp(cmd, "/rtc", true) == 0 || strcmp(cmd, "/차리스폰", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] < 2)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 256, "(관리자알림) %s님이 차량번호 %d번을 리스폰 시켰습니다.",AdminName[playerid],GetPlayerVehicleID(playerid));
					ABroadCast(COLOR_ADMIN,string,1);
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					RemovePlayerFromVehicle(playerid);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량이 리스폰 되었습니다");
				}
			}
			return 1;
		}
		//=====================================================================================================
		if(strcmp(cmd, "/모차리", true) == 0 || strcmp(cmd, "/모든차리스폰", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] < 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다.");
					return 1;
				}
				RespawnVehicle();
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* 모든 차량들이 %s님에 의해서 리스폰 되었습니다", AdminName[playerid]);
				BroadCast(COLOR_ADMIN,string);
			}
			return 1;
		}
		if(strcmp(cmd, "/은신", true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 37 || PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pLeader] >= 37)
			{
				if(Hide[playerid])
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 이름은 다시 보이게 됩니다.");
					Hide[playerid]=false;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 이름은 보이지 않습니다.");
					Hide[playerid]=true;
				}
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/speaker", true) || strcmp(cmd, "/스피커", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pPnumber] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 전화기가 없습니다.");
					return 1;
				}
				if(Mobile[playerid] == 255)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 통화를 하고 있지 않습니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pSpeaker] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스피커가 켜졌습니다.");
					PlayerInfo[playerid][pSpeaker] = 1;
					return 1;
				}
				if(PlayerInfo[playerid][pSpeaker] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스피커가 꺼졌습니다.");
					PlayerInfo[playerid][pSpeaker] = 0;
					return 1;
				}
			}
			return 1;
		}
		//=====================================================================================================
		if(!strcmp(cmdtext, "/lockhq", true) || strcmp(cmd, "/기지잠금", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인 먼저 해야합니다");
					return 1;
				}
				else
				{
					if(PlayerInfo[playerid][pLeader] == 5)
					{
						if(hqlock[surlock] == 0)
						{
							hqlock[surlock] = 1;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Locotes HQ는 잠겼습니다");
						}
						else if(hqlock[surlock] == 1)
						{
							hqlock[surlock] = 0;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Locotes HQ는 열렸습니다");
						}
					}
					if(PlayerInfo[playerid][pLeader] == 8)
					{
						if(hqlock[surlock] == 0)
						{
							hqlock[surlock] = 1;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" HQ는 잠겼습니다");
						}
						else if(hqlock[surlock] == 1)
						{
							hqlock[surlock] = 0;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" HQ는 열렸습니다");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 6)
					{
						if(hqlock[luclock] == 0)
						{
							hqlock[luclock] = 1;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Corleone Family HQ는 잠겼습니다");
						}
						else if(hqlock[luclock] == 1)
						{
							hqlock[luclock] = 0;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Corleone Family HQ는 열렸습니다");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 14)
					{
						if(hqlock[guclock] == 0)
						{
							hqlock[guclock] = 1;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Yamaguchi HQ는 잠겼습니다");
						}
						else if(hqlock[guclock] == 1)
						{
							hqlock[guclock] = 0;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Yamaguchi HQ는 열렸습니다");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 15)
					{
						if(hqlock[stlock] == 0)
						{
							hqlock[stlock] = 1;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 三合會 HQ는 잠겼습니다");
						}
						else if(hqlock[stlock] == 1)
						{
							hqlock[stlock] = 0;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 三合會 HQ는 열렸습니다");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 16)
					{
						if(hqlock[iolock] == 0)
						{
							hqlock[iolock] = 1;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Seville boulevard gang HQ는 잠겼습니다");
						}
						else if(hqlock[iolock] == 1)
						{
							hqlock[iolock] = 0;
							SaveHQLocks();
							SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" Seville boulevard gang HQ는 열렸습니다");
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 어떠한 기지의 열쇠도 가지고있지 않습니다");
						return 1;
					}
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/주기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_nr[310];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 [이름] [플레이어번호/플레이어이름] [수량]");
					SCM(playerid, COLOR_ERROR, "[이름] : 무기 마약 담배 총기재료 안대 패키지 밧줄 재갈 알약 방탄복 술 gps"); //이거 추가하면 아래에 있는 것도 수정해야됨.
					return 1;
				}
				if(strcmp(x_nr,"gps",true) == 0)
				{
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 gps [플레이어번호] [개수]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 gps [플레이어번호] [개수]");
						return 1;
					}
					ammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							new Float:x, Float:y, Float:z;
							GetPlayerPos(giveplayerid,x,y,z);
							if(!PlayerToPoint(5, playerid, x, y, z))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
								return 1;
							}
							if(PlayerInfo[playerid][pGPS] < ammount)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 GPS가 부족합니다.");
								return 1;
							}
							if(ammount < 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" GPS는 최소 1개 이상을 줄 수 있습니다.");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pGPS] >= 3)
							{
							    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 사람은 이미 3개의 GPS 를 소지하고 있습니다.");
								return 1;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[playerid][pGPS] -= ammount;
							PlayerInfo[giveplayerid][pGPS] += ammount;
							format(string, sizeof(string), "* %s GPS %d개를 %s에게 줍니다.", RPPlayerName(playerid), ammount, RPPlayerName(giveplayerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 GPS %d개를 받았습니다", RPPlayerName(playerid), ammount);
							SCM(giveplayerid, COLOR_ERROR, string);
						}
					}
				}
				else if(strcmp(x_nr,"마약",true) == 0)
				{
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 마약 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							new Float:x, Float:y, Float:z;
							GetPlayerPos(giveplayerid,x,y,z);
							if(!PlayerToPoint(5, playerid, x, y, z))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에 있어야만 사용이 가능합니다");
								return 1;
							}
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 마약 [플레이어번호/플레이어이름] [수량]");
								return 1;
							}
							ammount = strval(tmp);
							if(ammount < 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마약은 최소 1개 이상을 줄 수 있습니다.");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pDrugs] >= 30)
							{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 마약이 너무 많습니다.");
							return 1;
							}
							if(giveplayerid == playerid)
                            {
                            SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
                            return 1;
                            }
							new dammount;
							dammount = strval(tmp);
							if(dammount <= 0 || dammount > PlayerInfo[playerid][pDrugs]) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 마약이 그만큼 있지않습니다"); return 1; }
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							PlayerInfo[playerid][pDrugs] -= dammount;
							PlayerInfo[giveplayerid][pDrugs] += dammount;
							format(string, sizeof(string), "* %s 마약 %d개를 %s에게 줍니다.", RPPlayerName(playerid), ammount, RPPlayerName(giveplayerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인입니다");
						return 1;
					}
				}

				else if(strcmp(x_nr,"총기재료",true) == 0)
				{
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 총기재료 [플레이어번호] [개수]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 총기재료 [플레이어번호] [개수]");
						return 1;
					}
					ammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(4.0, playerid, giveplayerid))
							{
								if(PlayerInfo[playerid][pMats] < ammount)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 주려하는 총기재료가 부족합니다.");
									return 1;
								}
								if(ammount < 0)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 총기재료는 최소 1개 이상 줘야합니다.");
									return 1;
								}
									if(giveplayerid == playerid)
							       {
							        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
							        return 1;
							       }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[playerid][pMats] -= ammount;
								PlayerInfo[giveplayerid][pMats] += ammount;
								Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
								Anim(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
								format(string, sizeof(string), "* %s 가방에서 총기재료 %d개를 %s에게 건네다", RPPlayerName(playerid), ammount, RPPlayerName(giveplayerid));
								ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 총기재료 %d개를 받았습니다", RPPlayerName(playerid), ammount);
								SCM(giveplayerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에 있어야만 사용이 가능합니다");
							}
						}
					}
				}
				else if(strcmp(x_nr,"패키지",true) == 0)
				{
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 패키지 [플레이어번호] [개수]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 패키지 [플레이어번호] [개수]");
						return 1;
					}
					ammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(4.0, playerid, giveplayerid))
							{
								if(PlayerInfo[playerid][pPackage] < ammount)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 주려하는 패키지가 부족합니다");
									return 1;
								}
								if(ammount < 0)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 패키지는 최소 1개 이상 줘야합니다");
									return 1;
								}
									if(giveplayerid == playerid)
							       {
							        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
							        return 1;
							       }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[playerid][pPackage] -= ammount;
								PlayerInfo[giveplayerid][pPackage] += ammount;
								Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
								Anim(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
								format(string, sizeof(string), "* %s 가방에서 패키지 %d개를 %s에게 건네다", RPPlayerName(playerid), ammount, RPPlayerName(giveplayerid));
								ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 패키지 %d개를 받았습니다.", RPPlayerName(playerid), ammount);
								SCM(giveplayerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
							}
						}
					}
				}
				else if(strcmp(x_nr,"담배",true) == 0)
				{
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 담배 [플레이어번호][개수]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 담배 [플레이어번호][개수]");
						return 1;
					}
					ammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(4.0, playerid, giveplayerid))
							{
								if(PlayerInfo[playerid][pCigarettes] < ammount)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 주려하는 담배가 부족합니다");
									return 1;
								}
								if(ammount < 0)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 담배는 최소 1개이상 줘야합니다");
									return 1;
								}
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[playerid][pCigarettes] -= ammount;
								PlayerInfo[giveplayerid][pCigarettes] += ammount;
								Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
								Anim(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
								format(string, sizeof(string), "* %s 주머니에서 담배 %d개를 %s에게 건네다", RPPlayerName(playerid), ammount, RPPlayerName(giveplayerid));
								ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 담배 %d개를 %s에게부터 받았습니다", ammount, RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
							}
						}
					}
				}
				else if(strcmp(x_nr,"무기",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 무기 [플레이어번호/플레이어이름]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(5.0, playerid, giveplayerid))
							{
							if(giveplayerid == playerid)
      							 {
							       SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
							       return 1;
							      }
								new gunID = GetPlayerWeapon(playerid);
								new gunAmmo = GetPlayerAmmo(playerid);
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								if(gunID != 0 && gunAmmo != 0)
								{
									GiveWeapon(giveplayerid, gunID, gunAmmo);
									RemovePlayerWeapon(playerid, gunID);
									format(string, sizeof(string), "* %s  %s에게 무기를 건네다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									return 1;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 무기를 손에 쥐고있지 않습니다");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
								return 1;
							}
						}
					}
				}
				else if(strcmp(x_nr,"방탄복",true) == 0)
				{
					new Float:Armour;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 방탄복 [플레이어번호]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(4.0, playerid, giveplayerid))
							{
							if(giveplayerid == playerid)
							       {
							        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
							        return 1;
							       }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerArmour(playerid, Armour);
								SetArmour(giveplayerid, Armour);
								SetArmour(playerid, 0);
								Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
								Anim(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
								format(string, sizeof(string), "* %s 입고 있던 방탄복(을)를 %s에게 건네다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
								ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님으로 부터 방탄복을 받았습니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
							}
						}
					}
				}
                else if(strcmp(x_nr,"술",true) == 0)
				{
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 술 [플레이어번호][개수]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 술 [플레이어번호][개수]");
						return 1;
					}
					ammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(4.0, playerid, giveplayerid))
							{
							if(giveplayerid == playerid)
					       {
					        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
					        return 1;
					       }
								if(PlayerInfo[playerid][pLighter] < ammount)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 주려하는 술이 부족합니다");
									return 1;
								}
								if(ammount < 0)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 술은 최소 1개이상 줘야합니다");
									return 1;
								}
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[playerid][pLighter] -= ammount;
								PlayerInfo[giveplayerid][pLighter] += ammount;
								Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
								Anim(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s 가방에서 술 %d병을 %s에게 건네다", RPPlayerName(playerid), ammount, RPPlayerName(giveplayerid));
								ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "(INFO) :INFO : "#C_WHITE" 당신은 술 %d병를 %s에게부터 받앗습니다", ammount, RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
							}
						}
					}
				}

				else if(strcmp(x_nr,"재갈",true) == 0)
				{
					if(PlayerInfo[playerid][pShutupMouse] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 재갈을 가지고 있지 않습니다.");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 재갈 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 재갈 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					new ropeammount;
					ropeammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(5, playerid, giveplayerid))
							{
								if(PlayerInfo[giveplayerid][pShutupMouse] >= 3)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 재갈이 너무 많습니다");
									return 1;
								}
								PlayerInfo[playerid][pShutupMouse] -= ropeammount;
								PlayerInfo[giveplayerid][pShutupMouse] += ropeammount;
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s %s에게 재갈을 건냅니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 근처에 있지 않습니다");
								return 1;
							}
						}
					}
				}

				else if(strcmp(x_nr,"안대",true) == 0)
				{
					if(PlayerInfo[playerid][pBandage] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 안대를 가지고 있지 않습니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 안대 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 안대 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					new ropeammount;
					ropeammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(5, playerid, giveplayerid))
							{
								if(PlayerInfo[giveplayerid][pBandage] >= 3)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 안대가 너무 많습니다");
									return 1;
								}
								PlayerInfo[playerid][pBandage] -= ropeammount;
								PlayerInfo[giveplayerid][pBandage] += ropeammount;
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s %s에게 안대를 건냅니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신근처에 있지 않습니다");
								return 1;
							}
						}
					}
				}
				else if(strcmp(x_nr,"밧줄",true) == 0)
				{
					if(PlayerInfo[playerid][pRope] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밧줄을 가지고 있지 않습니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 밧줄 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 밧줄 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					new ropeammount;
					ropeammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(5, playerid, giveplayerid))
							{
								if(PlayerInfo[giveplayerid][pRope] >= 3)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 밧줄이 너무 많습니다");
									return 1;
								}
								PlayerInfo[playerid][pRope] -= ropeammount;
								PlayerInfo[giveplayerid][pRope] += ropeammount;
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s %s에게 밧줄을 건냅니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신근처에 있지 않습니다");
								return 1;
							}
						}
					}
				}
				else if(strcmp(x_nr,"알약",true) == 0)
				{
					if(PlayerInfo[playerid][pPill] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 알약을 가지고 있지 않습니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 알약 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 알약 [플레이어번호/플레이어이름] [수량]");
						return 1;
					}
					new pillammount;
					pillammount = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(5, playerid, giveplayerid))
							{
								if(PlayerInfo[giveplayerid][pPill] >= 10)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 이미 알약이 충분합니다.");
									return 1;
								}
								if(pillammount <= 0 || pillammount > PlayerInfo[playerid][pPill])
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그만한 알약이 없습니다.");
									return 1;
								}
								PlayerInfo[playerid][pPill] -= pillammount;
								PlayerInfo[giveplayerid][pPill] += pillammount;
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s %s에게 알약을 건냅니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신근처에 있지 않습니다");
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주기 [이름] [플레이어번호/플레이어이름] [수량]");
					SCM(playerid, COLOR_ERROR, "[이름] : 무기 마약 담배 총기재료 안대 패키지 밧줄 재갈 알약 방탄복 술 gps");
					return 1;
				}

			}
			return 1;
		}

		if(strcmp(cmd, "/ita", true) == 0 || strcmp(cmd, "/이태리언어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pOrigin] == 6)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/ita)이태리언어 [할말]");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(20, i, x, y, z))
							{
								if(PlayerInfo[i][pOrigin] == 6)
								{
									format(string, sizeof(string), "%s 말함: [Italian] %s", RPPlayerName(playerid), result);
									SCM(i, COLOR_FADE3, string);
								}
								else
								{
									format(string, sizeof(string), "%s 말함: [Italian] [알수없음]", RPPlayerName(playerid));
									SCM(i, COLOR_FADE3, string);
								}
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이탈리아어를 할 수 없습니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/kor", true) == 0 || strcmp(cmd, "/한국어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pOrigin] == 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /kor(한국어) [할말]");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(20, i, x, y, z))
							{
								if(PlayerInfo[i][pOrigin] == 1)
								{
									format(string, sizeof(string), "%s 말함: [Korean] %s", RPPlayerName(playerid), result);
									SCM(i, COLOR_FADE3, string);
								}
								else
								{
									format(string, sizeof(string), "%s 말함: [Korean] [알수없음]", RPPlayerName(playerid));
									SCM(i, COLOR_FADE3, string);
								}
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 한국어를 할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/rus", true) == 0 || strcmp(cmd, "/러시아어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pOrigin] == 8)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /rus(러시아어) [할말]");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(20, i, x, y, z))
							{
								if(PlayerInfo[i][pOrigin] == 8)
								{
									format(string, sizeof(string), "%s 말함: [Russian] %s", RPPlayerName(playerid), result);
									SCM(i, COLOR_FADE3, string);
								}
								else
								{
									format(string, sizeof(string), "%s 말함: [Russian] [알수없음]", RPPlayerName(playerid));
									SCM(i, COLOR_FADE3, string);
								}
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 러시아어를 할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/spa", true) == 0 || strcmp(cmd, "/스페인언어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pOrigin] == 7)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/spa)스페인언어 [할말]");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(20, i, x, y, z))
							{
								if(PlayerInfo[i][pOrigin] == 7)
								{
									format(string, sizeof(string), "%s 말함: [Spanish] %s", RPPlayerName(playerid), result);
									SCM(i, COLOR_FADE3, string);
								}
								else
								{
									format(string, sizeof(string), "%s 말함: [Spanish] [알수없음]", RPPlayerName(playerid));
									SCM(i, COLOR_FADE3, string);
								}
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 스페인어를 할 수 없습니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/jap", true) == 0 || strcmp(cmd, "/일본어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pOrigin] == 4)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/jap)일본어 [할말]");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(20, i, x, y, z))
							{
								if(PlayerInfo[i][pOrigin] == 4)
								{
									format(string, sizeof(string), "%s 말함: [Japaneese] %s", RPPlayerName(playerid), result);
									SCM(i, COLOR_FADE3, string);
								}
								else
								{
									format(string, sizeof(string), "%s 말함: [Japaneese] [알수없음]", RPPlayerName(playerid));
									SCM(i, COLOR_FADE3, string);
								}
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 일본어를 할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/chs", true) == 0 || strcmp(cmd, "/중국어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pOrigin] == 3)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/chs)중국어 [할말]");
						return 1;
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					for(new i = 0; i < M_P; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(20, i, x, y, z))
							{
								if(PlayerInfo[i][pOrigin] == 3)
								{
									format(string, sizeof(string), "%s 말함: [Chinan] %s", RPPlayerName(playerid), result);
									SCM(i, COLOR_FADE3, string);
								}
								else
								{
									format(string, sizeof(string), "%s 말함: [Chinan] [알수없음]", RPPlayerName(playerid));
									SCM(i, COLOR_FADE3, string);
								}
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 중국어를 할 수 없습니다 ");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/blindfold", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /blindfold [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid) { return 1; }
						if(BlindFold[giveplayerid] == 0)
						{
							if(PlayerTied[giveplayerid] == 1)
							{
								if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방을 당신과 같은 차량에 태우고 시도하십시오");
									return 1;
								}
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								SetPlayerCameraPos(giveplayerid, 2000,-2000,2000);
								SetPlayerCameraLookAt(giveplayerid, 2000,-2000,2000);
								BlindFold[giveplayerid] = 1;
								format(string, sizeof(string), "* %s %s의 눈을 가린다", RPPlayerName(playerid), giveplayer);
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 밧줄로 묶여있지 않습니다");
								return 1;
							}
						}
						else
						{
							new Float:x, Float:y, Float:z;
							GetPlayerPos(giveplayerid,x,y,z);
							if(PlayerToPoint(5, playerid, x, y, z))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								SetCameraBehindPlayer(giveplayerid);
								BlindFold[giveplayerid] = 0;
								format(string, sizeof(string), " %s takes off a kerchief of %s eyes", RPPlayerName(playerid), giveplayer);
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 주변에 없습니다");
								return 1;
							}
						}
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/공인뱃지", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /공인뱃지 [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 공인뱃지를 지급할 수 없습니다 "); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								if(PlayerInfo[giveplayerid][pBadge] == 0)
								{
									if(PlayerInfo[playerid][pLeader] == 1)
									{
										format(string, sizeof(string), "(L.V.P.D) %s 님이 당신에게 공인뱃지를 지급합니다", RPPlayerName(playerid));
										SCM(giveplayerid, COLOR_ERROR, string);
										PlayerInfo[playerid][pBadge] = 1;
									}
									else if(PlayerInfo[playerid][pLeader] == 2)
									{
										format(string, sizeof(string), "(F.B.I) %s 님이 당신에게 공인뱃지를 지급합니다", RPPlayerName(playerid));
										SCM(giveplayerid, COLOR_ERROR, string);
										PlayerInfo[playerid][pBadge] = 2;
									}
									format(string, sizeof(string), " 당신은 %s님에게 공인뱃지를 지급합니다", giveplayer);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else
								{
									if(PlayerInfo[playerid][pLeader] == 1)
									{
										format(string, sizeof(string), "(L.V.P.D) %s 님이 당신에게서 공인뱃지를 회수합니다", RPPlayerName(playerid));
										SCM(giveplayerid, COLOR_ERROR, string);
										PlayerInfo[playerid][pBadge] = 0;
									}
									else if(PlayerInfo[playerid][pLeader] == 2)
									{
										format(string, sizeof(string), "(F.B.I) %s 님이 당신에게서 공인뱃지를 회수합니다", RPPlayerName(playerid));
										SCM(giveplayerid, COLOR_ERROR, string);
										PlayerInfo[playerid][pBadge] = 0;
									}
									format(string, sizeof(string), " 당신은 %s님의 공인뱃지를 회수합니다", giveplayer);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 당신의 주변에 있지않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 접속하지않은 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군의 리더가 아닙니다");
					return 1;
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인 먼저 해야 합니다");
				return 1;
			}
			return 1;
		}
		if(strcmp(cmd,"/공인뱃보", true) == 0 || strcmp(cmd,"/공인뱃지보", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pBadge] != 0 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /공인뱃보 [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 공인뱃지를 보여줄수 없습니다 "); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								SCM(giveplayerid, COLOR_ERROR, "|___________ 공인 뱃지 ___________|");
								if(PlayerInfo[playerid][pBadge] == 1)
								{
									format(string, sizeof(string), "| LVPD 공인뱃지 %s |", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[playerid][pBadge] == 2)
								{
									format(string, sizeof(string), "| F.B.I 공인뱃지 %s |", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[playerid][pBadge] == 0)
								{
									format(string, sizeof(string), "| F.B.I 특수요원 뱃지 %s |", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								format(string, sizeof(string),  "INFO : "#C_WHITE" %s ID 카드를 당신에게 보여줍니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 당신의 공인뱃지를 %s 에게 보여줍니다", giveplayer);
								SCM(playerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다");
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 공인뱃지를 소지하고 있지 않습니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/showid",true)==0 || strcmp(cmd,"/신분증보",true)==0 || strcmp(cmd,"/신보",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /신분증보 [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 ID 카드를 보여줄수 없습니다 "); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								SCM(giveplayerid, COLOR_ERROR, "|___________ FBI 신분증 ___________|");
								if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "| FBI 계급/이름: 국장 %s |", RPPlayerName(playerid)); }
								else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "| FBI 계급/이름: 부국장 %s |", RPPlayerName(playerid)); }
								else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "| FBI 계급/이름: A.T 팀장 %s |", RPPlayerName(playerid)); }
								else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "| FBI 계급/이름: B.R 팀장 %s |", RPPlayerName(playerid)); }
								else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "| FBI 계급/이름: A.T %s* |", RPPlayerName(playerid)); }
								else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "| FBI 계급/이름: B.R %s |", RPPlayerName(playerid)); }
								else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "| FBI 계급/이름: 인턴 %s |", RPPlayerName(playerid)); }
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s ID 카드를 당신에게 보여줍니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 당신의 ID 카드를 %s 에게 보여줍니다", giveplayer);
								SCM(playerid, COLOR_ERROR, string);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다");
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아이디카드를 소지하고 있지 않습니다");
					return 1;
				}
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/pdup", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerState(playerid) == 1)
				{
					if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
					{
						if(PlayerToPoint(1.0,playerid,1554.3844,-1687.8615,66.3586))
						{
							SetPlayerPos(playerid, 1565.0088,-1684.4321,28.3956);
							SetPlayerFacingAngle(playerid, 90);
							SetCameraBehindPlayer(playerid);
							GameTextForPlayer(playerid, "~w~Police Departemnt TOP",5000,1);
							SetPlayerInterior(playerid,0);
							PlayerInfo[playerid][pInt] = 0;
						}
					}
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/fbiup", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerState(playerid) == 1)
				{
					if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
					{
						if(PlayerToPoint(2.0,playerid,281.6400,171.0800,1007.1700))
						{
							SetPlayerPos(playerid, 1788.5699,-1551.9956,38.9693);
							SetPlayerFacingAngle(playerid, 90);
							SetCameraBehindPlayer(playerid);
							GameTextForPlayer(playerid, "~w~F.B.I Heliport Roof",5000,1);
							SetPlayerInterior(playerid,0);
							PlayerInfo[playerid][pInt] = 0;
						}
					}
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/pddown", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetPlayerState(playerid) == 1)
				{
					if(IsACop(playerid) || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
					{
						if(PlayerToPoint(1.0,playerid,1554.3844,-1687.8615,66.3586))
						{
							SetPlayerPos(playerid, 1524.5724,-1677.8043,6.2188);
							SetPlayerFacingAngle(playerid, 270);
							SetCameraBehindPlayer(playerid);
							GameTextForPlayer(playerid, "~w~Police Departemnt Garage",5000,1);
							SetPlayerInterior(playerid,0);
							PlayerInfo[playerid][pInt] = 0;
						}
					}
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/shownotes", true) || strcmp(cmd, "/노트", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 해주시기 바랍니다");
					return 1;
				}
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
				format(string, sizeof(string), "1| %s", PlayerInfo[playerid][pNote1]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "2| %s", PlayerInfo[playerid][pNote2]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "3| %s", PlayerInfo[playerid][pNote3]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "4| %s", PlayerInfo[playerid][pNote4]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "5| %s", PlayerInfo[playerid][pNote5]);
				SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s 이 자신의메모장을 본다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			return 1;
		}

		if(strcmp(cmd,"/deletenote",true)==0 || strcmp(cmd,"/노트삭제",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 해주시기 바랍니다");
					return 1;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /노트삭제 [슬롯(1-5)]");
					return 1;
				}
				if(strcmp(x_nr,"1",true) == 0)
				{
					if(PlayerInfo[playerid][pNote1s] == 1)
					{
						strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 255);
						PlayerInfo[playerid][pNote1s] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 노트 슬롯 1 의 메모가 삭제되었습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노트 슬롯 1 에 아무것도 적지 않앗습니다 ! ");
					}
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
					if(PlayerInfo[playerid][pNote2s] == 1)
					{
						strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 255);
						PlayerInfo[playerid][pNote2s] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 노트 슬롯 2 의 메모가 삭제되었습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노트 슬롯 2 에 아무것도 적지 않앗습니다 ! ");
					}
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
					if(PlayerInfo[playerid][pNote3s] == 1)
					{
						strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 255);
						PlayerInfo[playerid][pNote3s] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 노트 슬롯 3 의 메모가 삭제되었습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노트 슬롯 3 에 아무것도 적지 않앗습니다 ! ");
					}
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
					if(PlayerInfo[playerid][pNote4s] == 1)
					{
						strmid(PlayerInfo[playerid][pNote4], "None", 0, strlen("None"), 255);
						PlayerInfo[playerid][pNote4s] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 노트 슬롯 4 의 메모가 삭제되었습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노트 슬롯 4 에 아무것도 적지 않앗습니다 ! ");
					}
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
					if(PlayerInfo[playerid][pNote5s] == 1)
					{
						strmid(PlayerInfo[playerid][pNote5], "None", 0, strlen("None"), 255);
						PlayerInfo[playerid][pNote5s] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 노트 슬롯 5 의 메모가 삭제되었습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노트 슬롯 5 에 아무것도 적지 않앗습니다 ! ");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 슬롯 넘버 입니다 ! ");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/createnote",true)==0||strcmp(cmd,"/노트작성",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 해주시기 바랍니다");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(length > 60)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 메모가 너무 길어서 쓸수가 없습니다");
					return 1;
				}
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /노트작성 [내용]");
					return 1;
				}
				if(PlayerInfo[playerid][pNote1s] == 0)
				{
					strmid(PlayerInfo[playerid][pNote1], result, 0, strlen(result), 255);
					PlayerInfo[playerid][pNote1s] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 메모가 작성되었습니다");
					return 1;
				}
				else if(PlayerInfo[playerid][pNote2s] == 0)
				{
					strmid(PlayerInfo[playerid][pNote2], result, 0, strlen(result), 255);
					PlayerInfo[playerid][pNote2s] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 메모가 작성되었습니다");
					return 1;
				}
				else if(PlayerInfo[playerid][pNote3s] == 0)
				{
					strmid(PlayerInfo[playerid][pNote3], result, 0, strlen(result), 255);
					PlayerInfo[playerid][pNote3s] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 메모가 작성되었습니다");
					return 1;
				}
				else if(PlayerInfo[playerid][pNote4s] == 0)
				{
					strmid(PlayerInfo[playerid][pNote4], result, 0, strlen(result), 255);
					PlayerInfo[playerid][pNote4s] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 메모가 작성되었습니다");
					return 1;
				}
				else if(PlayerInfo[playerid][pNote5s] == 0)
				{
					strmid(PlayerInfo[playerid][pNote5], result, 0, strlen(result), 255);
					PlayerInfo[playerid][pNote5s] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 메모가 작성되었습니다");
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 더이상 쓸수있는 노트의 공간이 없습니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/givenote",true)==0||strcmp(cmd,"/노트주기",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 해주시기 바랍니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /노트주기 [플레이어의번호/이름의부분] [노트번호]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(!PlayerToPoint(5, playerid, x, y, z))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다");
							return 1;
						}
						new x_nr[256];
						x_nr = strtok(cmdtext, idx);
						if(!strlen(x_nr))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /노트주기 [플레이어의번호/이름의부분] [노트번호]");
							return 1;
						}
						if(strcmp(x_nr,"1",true) == 0)
						{
							if(PlayerInfo[playerid][pNote1s] == 1)
							{
								if(PlayerInfo[giveplayerid][pNote1s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
									PlayerInfo[giveplayerid][pNote1s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다 (/노트)", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote2s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
									PlayerInfo[giveplayerid][pNote2s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다 (/노트)", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote3s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
									PlayerInfo[giveplayerid][pNote3s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다 (/노트)", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote4s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
									PlayerInfo[giveplayerid][pNote4s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다 (/노트)", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote5s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
									PlayerInfo[giveplayerid][pNote5s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다 (/노트)", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어의 노트는 꽉 차있습니다 ! ");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 1번 노트에 적은것이 없습니다 ! ");
								return 1;
							}
						}
						else if(strcmp(x_nr,"2",true) == 0)
						{
							if(PlayerInfo[playerid][pNote2s] == 1)
							{
								if(PlayerInfo[giveplayerid][pNote1s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
									PlayerInfo[giveplayerid][pNote1s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote2s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
									PlayerInfo[giveplayerid][pNote2s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote3s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
									PlayerInfo[giveplayerid][pNote3s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote4s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
									PlayerInfo[giveplayerid][pNote4s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote5s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
									PlayerInfo[giveplayerid][pNote5s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어의 노트는 꽉 차있습니다 ! ");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 2번 노트에 적은것이 없습니다 ! ");
								return 1;
							}
						}
						else if(strcmp(x_nr,"3",true) == 0)
						{
							if(PlayerInfo[playerid][pNote3s] == 1)
							{
								if(PlayerInfo[giveplayerid][pNote1s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote3], 0, strlen(PlayerInfo[playerid][pNote3]), 255);
									PlayerInfo[giveplayerid][pNote1s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote2s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote3], 0, strlen(PlayerInfo[playerid][pNote3]), 255);
									PlayerInfo[giveplayerid][pNote2s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote3s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote3], 0, strlen(PlayerInfo[playerid][pNote3]), 255);
									PlayerInfo[giveplayerid][pNote3s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote4s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
									PlayerInfo[giveplayerid][pNote4s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote5s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
									PlayerInfo[giveplayerid][pNote5s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어의 노트는 꽉 차있습니다 ! ");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 3번 노트에 적은것이 없습니다 ! ");
								return 1;
							}
						}
						else if(strcmp(x_nr,"4",true) == 0)
						{
							if(PlayerInfo[playerid][pNote4s] == 1)
							{
								if(PlayerInfo[giveplayerid][pNote1s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
									PlayerInfo[giveplayerid][pNote1s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote2s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
									PlayerInfo[giveplayerid][pNote2s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote3s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
									PlayerInfo[giveplayerid][pNote3s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote4s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
									PlayerInfo[giveplayerid][pNote4s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote5s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
									PlayerInfo[giveplayerid][pNote5s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어의 노트는 꽉 차있습니다 ! ");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 4번 노트에 적은것이 없습니다 ! ");
								return 1;
							}
						}
						else if(strcmp(x_nr,"5",true) == 0)
						{
							if(PlayerInfo[playerid][pNote5s] == 1)
							{
								if(PlayerInfo[giveplayerid][pNote1s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
									PlayerInfo[giveplayerid][pNote1s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote2s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
									PlayerInfo[giveplayerid][pNote2s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote3s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
									PlayerInfo[giveplayerid][pNote3s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote4s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
									PlayerInfo[giveplayerid][pNote4s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else if(PlayerInfo[giveplayerid][pNote5s] == 0)
								{
									strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
									PlayerInfo[giveplayerid][pNote5s] = 1;
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 줍니다", giveplayerid, giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), " 당신은 [ID:%d] %s 에게 노트를 받습니다", playerid, sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어의 노트는 꽉 차있습니다 ! ");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 5번 노트에 적은것이 없습니다 ! ");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알수없는 노트 번호입니다. ");
							return 1;
						}
					}
				}
			}
			return 1;
		}


		if(!strcmp(cmdtext, "/startsweep", true) || !strcmp(cmdtext, "/청소시작", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] != 16)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 환경미화원이 아닙니다 ! ");
					return 1;
				}
				if(PlayerIsSweeping[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 청소를 시작했습니다 ! ");
					return 1;
				}
				if(PlayerInfo[playerid][pCarTime] > 0)
				{
        			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 일을 모두 끝마쳤습니다.");
					format(string, sizeof(string), "INFO : "#C_WHITE" 현재 남은 시간은 %d초 입니다",PlayerInfo[playerid][pCarTime]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				if(idcar>= JCAR[16][0] && idcar <= JCAR[16][1])
				{
					PlayerIsSweeping[playerid] = 1;
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					new cjdth = random(2)+1;
					if(cjdth == 1)
					{
						ResetCheckPoint(playerid);
						cjdtheasy[playerid] = 1;
						SetTimerEx("cjdtheasy1", 100, false, "i", playerid);
					}
					else
					{
						ResetCheckPoint(playerid);
						cjdthhard[playerid] = 1;
						SetTimerEx("cjdthhard1", 100, false, "i", playerid);
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 청소를 시작합니다. 다니면서 쓰레기통을 비우세요.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 청소를 그만두려면 (/청소중지)를 하세요. 단, 보수는 없습니다.");
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=1200;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/음주측정") == 0 || strcmp(cmd, "/음주측") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차 안에서는 음주측정을 못 합니다 ");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /음주측정 [플레이어번호/이름의 부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(IsACop(giveplayerid))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정부군에게 음주측정을 할 수 없습니다 ");
								return 1;
							}
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 음주측정을 할 수 없습니다"); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string,sizeof(string), " %s 님이 %s 님에게 음주측정을 한다", sendername,giveplayer);
								ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								if(Umju[playerid] == 1)
								{
									SCM(playerid, COLOR_ADMIN, "* Warning : 그 플레이어는 음주를 한 상태입니다");
								}
								else if(Umju[playerid] == 0)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 음주를 안했습니다");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 근처에 없습니다 ");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인상태입니다 ");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (경찰/F.B.I/CIA)이 아닙니다");
				}
			}
			return 1;
		}
		//--------------------------------------------------------------------------------------
		if(!strcmp(cmdtext, "/stopsweep", true) || !strcmp(cmdtext, "/청소중지", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerIsSweeping[playerid] == 1)
				{
					DisablePlayerCheckpoint(playerid);
					PlayerIsSweeping[playerid] = 0;
					CP[playerid] = 0;
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 환경미화원 업무를 중지했습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 청소중이 아닙니다.");
					return 1;
				}
			}
			return 1;
		}
if(!strcmp(cmdtext, "/가방", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_ERROR, "INFO : 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				if(PlayerInfo[playerid][pGabang] == 0)
				{
					SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방이 없습니다");
					return 1;
				}
				PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid,COLOR_HINT,"INFO : "#C_WHITE" /넣기 /꺼냄 [슬롯번호(1~5)]");
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				if(PlayerInfo[playerid][pInvWeapon] != 0 && PlayerInfo[playerid][pInvAmmo] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[playerid][pInvWeapon], gunname, sizeof(gunname));
					if(PlayerInfo[playerid][pInvAmmo] == 65535)
					{
						format(string, sizeof(string), "1| %s 1", gunname);
					}
					else
					{
						format(string, sizeof(string), "1| %s %d", gunname, PlayerInfo[playerid][pInvAmmo]);
					}
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_INFO, "1| 무기 없음");
				}
				if(PlayerInfo[playerid][pInvWeapon2] != 0 && PlayerInfo[playerid][pInvAmmo2] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[playerid][pInvWeapon2], gunname, sizeof(gunname));
					if(PlayerInfo[playerid][pInvAmmo2] == 65535)
					{
						format(string, sizeof(string), "2| %s 1", gunname);
					}
					else
					{
						format(string, sizeof(string), "2| %s %d", gunname, PlayerInfo[playerid][pInvAmmo2]);
					}
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_INFO, "2| 무기 없음");
				}
				if(PlayerInfo[playerid][pInvWeapon3] != 0 && PlayerInfo[playerid][pInvAmmo3] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[playerid][pInvWeapon3], gunname, sizeof(gunname));
					if(PlayerInfo[playerid][pInvAmmo3] == 65535)
					{
						format(string, sizeof(string), "3| %s 1", gunname);
					}
					else
					{
						format(string, sizeof(string), "3| %s %d", gunname, PlayerInfo[playerid][pInvAmmo3]);
					}
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_INFO, "3| 무기 없음");
				}
				if(PlayerInfo[playerid][pInvWeapon4] != 0 && PlayerInfo[playerid][pInvAmmo4] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[playerid][pInvWeapon4], gunname, sizeof(gunname));
					if(PlayerInfo[playerid][pInvAmmo4] == 65535)
					{
						format(string, sizeof(string), "4| %s 1", gunname);
					}
					else
					{
						format(string, sizeof(string), "4| %s %d", gunname, PlayerInfo[playerid][pInvAmmo4]);
					}
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_INFO, "4| 무기 없음");
				}
				if(PlayerInfo[playerid][pInvWeapon5] != 0 && PlayerInfo[playerid][pInvAmmo5] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[playerid][pInvWeapon5], gunname, sizeof(gunname));
					if(PlayerInfo[playerid][pInvAmmo5] == 65535)
					{
						format(string, sizeof(string), "5| %s 1", gunname);
					}
					else
					{
						format(string, sizeof(string), "5| %s %d", gunname, PlayerInfo[playerid][pInvAmmo5]);
					}
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_INFO, "5| 무기 없음");
				}
				if(PlayerInfo[playerid][pga] != 0)
				{
					format(string, sizeof(string), "6| 방탄복 %f", PlayerInfo[playerid][pga]);
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_INFO, "6| 방탄복 없음");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/꺼냄", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_ERROR, "INFO : 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				if(PlayerInfo[playerid][pGabang] == 0)
				{
					SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방이 없습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_HINT, "INFO : "#C_WHITE" /꺼냄 [슬롯 번호 1~5]");
					return 1;
				}
				new slot = strval(tmp);
				if(slot == 1)
				{
					if(PlayerInfo[playerid][pInvWeapon] != 0 && PlayerInfo[playerid][pInvAmmo] != 0)
					{
						new gunname[100];
						GetWeaponName(PlayerInfo[playerid][pInvWeapon], gunname, sizeof(gunname));
						GiveWeapon(playerid, PlayerInfo[playerid][pInvWeapon], PlayerInfo[playerid][pInvAmmo]);
						PlayerInfo[playerid][pInvWeapon] = 0;
						PlayerInfo[playerid][pInvAmmo] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 꺼낸다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방에 아무 총도 넣지 않았습니다");
						return 1;
					}
				}
				if(slot == 2)
				{
					if(PlayerInfo[playerid][pInvWeapon2] != 0 && PlayerInfo[playerid][pInvAmmo2] != 0)
					{
						new gunname[100];
						GetWeaponName(PlayerInfo[playerid][pInvWeapon2], gunname, sizeof(gunname));
						GiveWeapon(playerid, PlayerInfo[playerid][pInvWeapon2], PlayerInfo[playerid][pInvAmmo2]);
						PlayerInfo[playerid][pInvWeapon2] = 0;
						PlayerInfo[playerid][pInvAmmo2] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 꺼낸다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방에 아무 총도 넣지 않았습니다");
						return 1;
					}
				}
				if(slot == 3)
				{
					if(PlayerInfo[playerid][pInvWeapon3] != 0 && PlayerInfo[playerid][pInvAmmo3] != 0)
					{
						new gunname[100];
						GetWeaponName(PlayerInfo[playerid][pInvWeapon3], gunname, sizeof(gunname));
						GiveWeapon(playerid, PlayerInfo[playerid][pInvWeapon3], PlayerInfo[playerid][pInvAmmo3]);
						PlayerInfo[playerid][pInvWeapon3] = 0;
						PlayerInfo[playerid][pInvAmmo3] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 꺼낸다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방에 아무 총도 넣지 않았습니다");
						return 1;
					}
				}
				if(slot == 4)
				{
					if(PlayerInfo[playerid][pInvWeapon4] != 0 && PlayerInfo[playerid][pInvAmmo4] != 0)
					{
						new gunname[100];
						GetWeaponName(PlayerInfo[playerid][pInvWeapon4], gunname, sizeof(gunname));
						GiveWeapon(playerid, PlayerInfo[playerid][pInvWeapon4], PlayerInfo[playerid][pInvAmmo4]);
						PlayerInfo[playerid][pInvWeapon4] = 0;
						PlayerInfo[playerid][pInvAmmo4] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 꺼낸다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방에 아무 총도 넣지 않았습니다");
						return 1;
					}
				}
				if(slot == 5)
				{
					if(PlayerInfo[playerid][pInvWeapon5] != 0 && PlayerInfo[playerid][pInvAmmo5] != 0)
					{
						new gunname[100];
						GetWeaponName(PlayerInfo[playerid][pInvWeapon5], gunname, sizeof(gunname));
						GiveWeapon(playerid, PlayerInfo[playerid][pInvWeapon5], PlayerInfo[playerid][pInvAmmo5]);
						PlayerInfo[playerid][pInvWeapon5] = 0;
						PlayerInfo[playerid][pInvAmmo5] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 꺼낸다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방에 아무 총도 넣지 않았습니다");
						return 1;
					}
				}
				if(slot == 6)
				{
					if(PlayerInfo[playerid][pga] != 0)
					{
						SetArmour(playerid, PlayerInfo[playerid][pga]);
						PlayerInfo[playerid][pga] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 꺼내 입는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방에 방탄복을 넣지 않았습니다");
						return 1;
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/넣기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_ERROR, "INFO : 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				if(PlayerInfo[playerid][pGabang] == 0)
				{
					SCM(playerid, COLOR_ERROR, "INFO : 당신은 가방이 없습니다");
					return 1;
				}
				new gunID = GetPlayerWeapon(playerid);
				new gunAmmo = GetPlayerAmmo(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_HINT, "INFO : "#C_WHITE" /넣기 [슬롯 번호 1~5]");
					return 1;
				}
				new slot = strval(tmp);
				if(slot == 1)
				{
					if(GunTime[playerid] > 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 명령어 재사용 쿨타임을 기다리셔야 합니다");
						format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후에 다시 사용할수 있습니다",GunTime[playerid]);
						SCM(playerid, COLOR_HINT, string);
						return 1;
					}
	    			if(weapons[gunID][W_B][playerid] == false)
	    			{
						ResetPlayerWeapons(playerid);
						format(string, sizeof(string), "(관리자명령어) %s(%d)님 무기핵을 사용하였습니다.", AdminName[playerid],playerid);
						ABroadCast(COLOR_ADMIN,string,1);
						return 1;
	    			}
					if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 1)
					{
						SCM(playerid,COLOR_ERROR,"INFO : 넣으려는 총기를 손에들고 시도해주십시오");
						return 1;
					}
					if(PlayerInfo[playerid][pInvWeapon] != 0 || PlayerInfo[playerid][pInvAmmo] != 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 현재 슬롯에는 이미 다른총기가 있습니다");
						return 1;
					}
					if(gunID != 0 && gunAmmo != 0)
					{
						PlayerInfo[playerid][pInvWeapon] = gunID;
						PlayerInfo[playerid][pInvAmmo] = gunAmmo;
						RemovePlayerWeapon(playerid, gunID);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 넣는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						GunTime[playerid] = 5;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : 당신은 넣으려는 총기가 없습니다");
						return 1;
					}
				}
				if(slot == 2)
				{
					if(GunTime[playerid] > 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 명령어 재사용 쿨타임을 기다리셔야 합니다");
						format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후에 다시 사용할수 있습니다",GunTime[playerid]);
						SCM(playerid, COLOR_HINT, string);
						return 1;
					}
					if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 1)
					{
						SCM(playerid,COLOR_ERROR,"INFO : 넣으려는 총기를 손에들고 시도해주십시오");
						return 1;
					}
					if(PlayerInfo[playerid][pInvWeapon2] != 0 || PlayerInfo[playerid][pInvAmmo2] != 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 현재 슬롯에는 이미 다른총기가 있습니다");
						return 1;
					}
					if(gunID != 0 && gunAmmo != 0)
					{
						PlayerInfo[playerid][pInvWeapon2] = gunID;
						PlayerInfo[playerid][pInvAmmo2] = gunAmmo;
						RemovePlayerWeapon(playerid, gunID);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 넣는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						GunTime[playerid] = 5;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : 당신은 넣으려는 총기가 없습니다");
						return 1;
					}
				}
				else if(slot == 3)
				{
					if(GunTime[playerid] > 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 명령어 재사용 쿨타임을 기다리셔야 합니다");
						format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후에 다시 사용할수 있습니다",GunTime[playerid]);
						SCM(playerid, COLOR_HINT, string);
						return 1;
					}
					if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 1)
					{
						SCM(playerid,COLOR_ERROR,"INFO : 넣으려는 총기를 손에들고 시도해주십시오");
						return 1;
					}
					if(PlayerInfo[playerid][pInvWeapon3] != 0 || PlayerInfo[playerid][pInvAmmo3] != 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 현재 슬롯에는 이미 다른총기가 있습니다");
						return 1;
					}
					if(gunID != 0 && gunAmmo != 0)
					{
						PlayerInfo[playerid][pInvWeapon3] = gunID;
						PlayerInfo[playerid][pInvAmmo3] = gunAmmo;
						RemovePlayerWeapon(playerid, gunID);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 넣는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						GunTime[playerid] = 5;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : 당신은 넣으려는 총기가 없습니다");
						return 1;
					}
				}
				else if(slot == 4)
				{
					if(GunTime[playerid] > 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 명령어 재사용 쿨타임을 기다리셔야 합니다");
						format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후에 다시 사용할수 있습니다",GunTime[playerid]);
						SCM(playerid, COLOR_HINT, string);
						return 1;
					}
					if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 1)
					{
						SCM(playerid,COLOR_ERROR,"INFO : 넣으려는 총기를 손에들고 시도해주십시오");
						return 1;
					}
					if(PlayerInfo[playerid][pInvWeapon4] != 0 || PlayerInfo[playerid][pInvAmmo4] != 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 현재 슬롯에는 이미 다른총기가 있습니다");
						return 1;
					}
					if(gunID != 0 && gunAmmo != 0)
					{
						PlayerInfo[playerid][pInvWeapon4] = gunID;
						PlayerInfo[playerid][pInvAmmo4] = gunAmmo;
						RemovePlayerWeapon(playerid, gunID);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s  가방에 무언가를 넣는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						GunTime[playerid] = 5;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : 당신은 넣으려는 총기가 없습니다");
						return 1;
					}
				}
				else if(slot == 5)
				{
					if(GunTime[playerid] > 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 명령어 재사용 쿨타임을 기다리셔야 합니다");
						format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후에 다시 사용할수 있습니다",GunTime[playerid]);
						SCM(playerid, COLOR_HINT, string);
						return 1;
					}
					if(GetPlayerWeapon(playerid) == 0 || GetPlayerWeapon(playerid) == 1)
					{
						SCM(playerid,COLOR_ERROR,"INFO : 넣으려는 총기를 손에들고 시도해주십시오");
						return 1;
					}
					if(PlayerInfo[playerid][pInvWeapon5] != 0 || PlayerInfo[playerid][pInvAmmo5] != 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 현재 슬롯에는 이미 다른총기가 있습니다");
						return 1;
					}
					if(gunID != 0 && gunAmmo != 0)
					{
						PlayerInfo[playerid][pInvWeapon5] = gunID;
						PlayerInfo[playerid][pInvAmmo5] = gunAmmo;
						RemovePlayerWeapon(playerid, gunID);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "(행동) %s 가방에 무언가를 넣는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						GunTime[playerid] = 5;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : 당신은 넣으려는 총기가 없습니다");
						return 1;
					}
				}
				else if(slot == 6)
				{
					if(GunTime[playerid] > 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 명령어 재사용 쿨타임을 기다리셔야 합니다");
						format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후에 다시 사용할수 있습니다",GunTime[playerid]);
						SCM(playerid, COLOR_HINT, string);
						return 1;
					}
					new Float:Amo;
					GetPlayerArmour(playerid, Amo);
					if(Amo == 0)
					{
						SCM(playerid,COLOR_ERROR,"INFO : 방탄복을 입고잇지 않습니다.");
						return 1;
					}
					if(PlayerInfo[playerid][pga] != 0)
					{
						SCM(playerid, COLOR_ERROR, "INFO : 현재 슬롯에는 이미 방탄복이 있습니다");
						return 1;
					}
					PlayerInfo[playerid][pga] = Amo;
					SetArmour(playerid,0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "(행동) %s 무언가를 벗어, 가방에 넣는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					GunTime[playerid] = 5;
					return 1;
				}
			}
			return 1;
		}
//============================================================================================================
		if(strcmp(cmd, "/가방검사", true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] < 2)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다.");
				return 1;
			}
			tmp = strtok(cmdtext,idx);
			if (!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /가방검사 [플레이어번호/플레이어이름]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (giveplayerid == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				return 1;
			}
			new sweapon, sammo;
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "INFO : "#C_WHITE" %s(%d) 님의 가방 목록", RPPlayerName(giveplayerid),giveplayerid);
			SCM(playerid, COLOR_ERROR, string);
			for (new i=0; i<9; i++)
			{
				GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
				if(PlayerInfo[giveplayerid][pInvWeapon] != 0 && PlayerInfo[giveplayerid][pInvAmmo] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon], gunname, sizeof(gunname));
					if(PlayerInfo[giveplayerid][pInvAmmo] == 65535)
					{
						format(string, sizeof(string), "[1.%s 1]", gunname);
					}
					else
					{
						format(string, sizeof(string), "[1.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo]);
					}
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "[1.빈 공간 0]");
				}
				if(PlayerInfo[giveplayerid][pInvWeapon2] != 0 && PlayerInfo[giveplayerid][pInvAmmo2] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon2], gunname, sizeof(gunname));
					if(PlayerInfo[giveplayerid][pInvAmmo2] == 65535)
					{
						format(string, sizeof(string), "[2.%s 1]", gunname);
					}
					else
					{
						format(string, sizeof(string), "[2.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo2]);
					}
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "[2.빈 공간 0]");
				}
				if(PlayerInfo[giveplayerid][pInvWeapon3] != 0 && PlayerInfo[giveplayerid][pInvAmmo3] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon3], gunname, sizeof(gunname));
					if(PlayerInfo[giveplayerid][pInvAmmo3] == 65535)
					{
						format(string, sizeof(string), "[3.%s 1]", gunname);
					}
					else
					{
						format(string, sizeof(string), "[3.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo3]);
					}
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "[3.빈 공간 0]");
				}
				if(PlayerInfo[giveplayerid][pInvWeapon4] != 0 && PlayerInfo[giveplayerid][pInvAmmo4] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon4], gunname, sizeof(gunname));
					if(PlayerInfo[giveplayerid][pInvAmmo4] == 65535)
					{
						format(string, sizeof(string), "[4.%s 1]", gunname);
					}
					else
					{
						format(string, sizeof(string), "[4.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo4]);
					}
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "[4.빈 공간 0]");
				}
				if(PlayerInfo[giveplayerid][pInvWeapon5] != 0 && PlayerInfo[giveplayerid][pInvAmmo5] != 0)
				{
					new gunname[100];
					GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon5], gunname, sizeof(gunname));
					if(PlayerInfo[giveplayerid][pInvAmmo5] == 65535)
					{
						format(string, sizeof(string), "[5.%s 1]", gunname);
					}
					else
					{
						format(string, sizeof(string), "[5.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo5]);
					}
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "[5.빈 공간 0]");
				}
				return 1;
			}
			return 1;
		}
		//-------------------------------[Check]--------------------------------------------------------------------------
		if(strcmp(cmd, "/주머니검사", true) == 0 || strcmp(cmd, "/주검", true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주검 [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				Showthwlvna(playerid,giveplayerid);
			}
			return 1;
		}
		if(strcmp(cmd, "/차검사", true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차검사 [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				showcar(giveplayerid, playerid, 2);
			}
			return 1;
		}
		if (strcmp(cmd, "/검사", true) == 0 || strcmp(cmd, "/검", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /검사 [플레이어의번호/이름의부분]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							ShowStats2(playerid,giveplayerid);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if (strcmp(cmd, "/자격증검사", true) == 0 || strcmp(cmd, "/자검", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격증검사 [플레이어의번호/이름의부분]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							ShowStats4(playerid,giveplayerid);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

				if (strcmp(cmd, "/몸검사", true) == 0 || strcmp(cmd, "/몸검", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /몸검사 [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
						new string_hilton[128];
						SCM(playerid,COLOR_SUN,"━━━━━━━━━━━━━━━");
						format(string_hilton, sizeof(string_hilton), "(정보) "#C_WHITE" 근육량:[%d]",PlayerInfo[giveplayerid][rmsdbr]);
						SCM(playerid, COLOR_ERROR,string_hilton);
						PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/총검사", true) == 0 || strcmp(cmd, "/총검", true) == 0) // Edited by Ellis, orginally from CW-RP
		{
			if (PlayerInfo[playerid][pAdmin] < 2)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다 ");
				return 1;
			}
			tmp = strtok(cmdtext,idx);
			if (!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/총검)사 [플레이어번호/플레이어이름]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (giveplayerid == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인입니다");
				return 1;
			}
			new sweapon, sammo;
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
			format(string, sizeof(string), "INFO : "#C_WHITE" %s님의 총기 소지 목록", RPPlayerName(giveplayerid));
			SCM(playerid, COLOR_ERROR, string);
			for (new i=0; i<9; i++)
			{
				GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
				if(sweapon != 0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 슬롯:[%d] 무기:[%d] 총알:[%d]", i, sweapon, sammo);
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/성기") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 로그인 하지 않았습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /성기 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(GetDistanceBetweenPlayers(playerid,giveplayerid) < 5)
						{
							if(PlayerInfo[giveplayerid][pSex] == 1)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" %s의 성기는 발기가 되었습니다. 그는 지금 매우 흥분상태입니다.", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR,string);
							}
							if(PlayerInfo[giveplayerid][pSex] == 2)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" %s의 성기를 만져 애액으로 팬티가 젖어버렸습니다.", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR,string);
							}
							format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신의 성기를 가버리게 합니다.", RPPlayerName(playerid));
							SCM(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s %s의 성기를 만져 그를 가버리게 한다",RPPlayerName(playerid),RPPlayerName(giveplayerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							Anim(playerid,"SPRAYCAN","spraycan_fire",4.1,0,1,1,1,1);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 너무 멀리있습니다");
						}
						return 1;
					}
					else
					{

					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/안전벨트") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 로그인 하지 않았습니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 차량에 있는 안전벨트를 착용한다", RPPlayerName(playerid));
				ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			return 1;
		}
		if(strcmp(cmd, "/안전벨트풀기") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 로그인 하지 않았습니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 차량에 있는 안전벨트를 풀었다", RPPlayerName(playerid));
				ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/창문", true) || !strcmp(cmdtext, "/wi", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 하고 시도하십시오");
					return 1;
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					new carid = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(IsANoWindow(carid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 차량에는 창문이 없습니다");
						return 1;
					}
					if(CarInfo[GetPlayerVehicleID(playerid)][cWindows])
					{
						CarInfo[GetPlayerVehicleID(playerid)][cWindows]=false;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 창문을 내립니다", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						return 1;
					}
					else if(!CarInfo[GetPlayerVehicleID(playerid)][cWindows])
					{
						CarInfo[GetPlayerVehicleID(playerid)][cWindows]=true;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 창문을 올립니다", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						return 1;
					}
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승하고 시도하십시오");
					return 1;
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/라디오", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 하고 시도하십시오");
					return 1;
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					new carid = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(IsANoRadio(carid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 탈것에는 라디오가 없습니다");
						return 1;
					}
					if(VehicleRadio[GetPlayerVehicleID(playerid)] == 0)
					{
						VehicleRadio[GetPlayerVehicleID(playerid)] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량에 있는 라디오를 킨다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						return 1;
					}
					else if(VehicleRadio[GetPlayerVehicleID(playerid)] == 1)
					{
						VehicleRadio[GetPlayerVehicleID(playerid)] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량에 있는 라디오를 끈다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						return 1;
					}
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승하고 시도하십시오");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd,"/안전상", true) == 0 || strcmp(cmd,"/안전벨트상",true) == 0 || strcmp(cmd,"/안전벨트상태",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/안전벨트상)태 [플레이어의번호/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(IsPlayerInAnyVehicle(giveplayerid))
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayerid));
								new sbtext[64];
								if(dkswjs[playerid] == 0) { sbtext = "미착용"; }
								else if(dkswjs[playerid] == 1) { sbtext = "착용"; }
								format(string, sizeof(string), "INFO : "#C_WHITE" %s(은)는 안전벨트를 %s하고 있습니다", RPPlayerName(playerid), sbtext);
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 당신의 안전벨트 착용여부를 알려줬습니다", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR, string);
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 차에 탑승하고 있지 않습니다");
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/안전벨트", true) || !strcmp(cmdtext, "/안전", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					new State;
					State=GetPlayerState(playerid);
					if(State!=PLAYER_STATE_DRIVER)
					{
						if(dkswjs[playerid] == 0)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 안전벨트를 맨다.", RPPlayerName(playerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetPlayerFreeze(playerid, true, 2);
							TogglePlayerControllable(playerid, 0);
							dkswjs[playerid] = 1;
						}
						else if(dkswjs[playerid] == 1)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 안전벨트를 푼다.", RPPlayerName(playerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetPlayerFreeze(playerid, false, 0);
							TogglePlayerControllable(playerid, 1);
							dkswjs[playerid] = 0;
						}
					}
					else
					{
						if(dkswjs[playerid] == 0)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 안전벨트를 맨다.", RPPlayerName(playerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							dkswjs[playerid] = 1;
							return 1;
						}
						else if(dkswjs[playerid] == 1)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 안전벨트를 푼다.", RPPlayerName(playerid));
							ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							dkswjs[playerid] = 0;
							return 1;
						}
					}
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승중이지 않습니다.");
					return 1;
				}
			}
			return 1;
		}

//-------------------------------------------------------관리업무------------------------------------------------------

		   if(!strcmp(cmdtext, "/rhksdjq", true) || strcmp(cmd, "/관리업무", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
			new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /관리업무 [업무명]");
								return 1;
							}
					if(PlayerInfo[playerid][pAdmin] >= 1)
					{
						if(AdminDuty[playerid] == 0)
						{
							rhksdjqskin[playerid] = GetPlayerSkin(playerid);
							GetPlayerHealth(playerid, rhksdjqheal[playerid]);
							GetPlayerArmour(playerid, rhksdjqarmour[playerid]);
							SetPlayerSkin(playerid, 165);
							SetPlayerAttachedObject(playerid,4,18728,1,0.589923,1.286341,0.996430,130.982772,341.441345,358.105529,1.177246,1.000000,1.000000);
							AdminDuty[playerid] = 1;
							SetArmour(playerid, 999);
							SetHealth(playerid, 999);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s님이 관리업무를 시작하셨습니다. [업무명:%s]", AdminName[playerid],(result));
							ABroadCast(COLOR_FLBLUE,string,1);
							BackupChat(playerid);
							rlqhs5[playerid] = 1;
							Hide[playerid]=true;
							return 1;
						}
						
			   			else	 if(AdminDuty[playerid] == 1)
						{
							SetPlayerSkin(playerid, rhksdjqskin[playerid]);
							SetArmour(playerid, 0);
							SetHealth(playerid, rhksdjqheal[playerid]);
							RemovePlayerAttachedObject(playerid,0);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s님이 관리업무를 종료하셨습니다", AdminName[playerid]);
							ABroadCast(COLOR_FLBLUE,string,1);
							AdminDuty[playerid] = 0;
							BackupChat(playerid);
							rlqhs1[playerid] = 1;//1
							Hide[playerid]=false;
							SetPlayerColor(playerid,COLOR_INFO);
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "ERROR : 당신은 이 명령어를 사용할 수 없습니다");
						return 1;
					}
				}
				return 1;
			}
	if(strcmp("/얼불",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    SetPlayerAttachedObject( playerid, 0, 18688, 17, 0.126607, -0.185391, -1.651622, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/옆불",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    SetPlayerAttachedObject( playerid, 0, 18688, 5, 0.000000, -1.075653, -1.402693, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // fire - 8
	SetPlayerAttachedObject( playerid, 1, 18688, 6, 0.000000, -1.075653, -1.402693, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // fire - 8
	} // ;;  왜요 ??  걍웃겨서 ㅋㅋ.제가한거아ㅣ님ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
	return 1;
	}
	if(strcmp("/마스크",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    SetPlayerAttachedObject( playerid, 2, 18912, 2, 0.110953, 0.030609, 0.000010, 271.599243, 3.585112, 259.819976, 1.000000, 1.000000, 1.000000 );
	} // ;;  왜요 ??  걍웃겨서 ㅋㅋ.제가한거아ㅣ님ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
	return 1;
	}
	if(strcmp("/좋은마스크",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    SetPlayerAttachedObject( playerid, 2, 19036, 2, 0.043388, 0.058971, -0.006823, 87.437240, 126.428878, 358.926391, 1.000000, 1.000000, 1.000000 );
	} // ;;  왜요 ??  걍웃겨서 ㅋㅋ.제가한거아ㅣ님ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
	return 1;
	}
	if(strcmp("/강불",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    SetPlayerAttachedObject( playerid, 0, 18689, 5, 0.000000, -1.075653, -1.402693, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // fire - 8
	SetPlayerAttachedObject( playerid, 1, 18689, 6, 0.000000, -1.075653, -1.402693, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // fire - 8
	}
	return 1;
	}
	if(strcmp("/불빛",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
    SetPlayerAttachedObject( playerid, 0, 18728, 6, -0.348186, 0.301401, -1.807264, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/아이스",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	SetPlayerAttachedObject( playerid, 0, 18711, 1, 0.000000, 0.000000, -1.630840, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/파워",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
	SetPlayerAttachedObject( playerid, 0, 18691, 1, -0.061580, 1.421013, 0.000000, 93.489868, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/가발1",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject( playerid, 1, 18975, 2, 0.076606, -0.014544, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/닭대가리",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject( playerid, 1, 19137, 2, 0.100406, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/레이져",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject(playerid, 4,18643,6,0.1,0.0,0.0,65.0,355.3,0.0);
	}
	return 1;
	}
	if(strcmp("/가발2",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject( playerid, 0, 18975, 2, 0.07, 0.0099, 0, 0, 0, 5.6, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/가발3",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject( playerid, 0, 19077, 2, 0.079, 0, 0, 0, 0, 5.6, 1.000000, 1.000000, 1.000000 );
	}
	return 1;
	}
	if(strcmp("/가발4",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject( playerid, 0, 19274, 2, 0.055, -0.01, 0, 0, 0, 356.7756, 1.000000, 1.000000, 1.000000  );
	}
	return 1;
	}
	if(strcmp("/유성",cmdtext,true)==0)
    {
    if(PlayerInfo[playerid][pAdmin] >= 1)
    {
   	SetPlayerAttachedObject( playerid, 0, 18693, 5, 0.043351, -0.014985, -1.714813, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Flame99 - hand
    SetPlayerAttachedObject( playerid, 0, 18693, 6, 0.043351, -0.014985, -1.714813, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // Flame99 - hand2
	}
	return 1;
	}
	if(strcmp("/제거",cmdtext,true)==0)
    {
    RemovePlayerAttachedObject(playerid,0);
    RemovePlayerAttachedObject(playerid,1);
    RemovePlayerAttachedObject(playerid,2);
    RemovePlayerAttachedObject(playerid,3);
    RemovePlayerAttachedObject(playerid,4);
	return 1;
	}
//========================================================================================================
		if(strcmp(cmd, "/지갑찾기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_ERROR, "ERROR : 로그인을 해주시기 바랍니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_HINT, "HINT : /지갑찾기 [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerTied[giveplayerid] != 1)
						{
							SCM(playerid, COLOR_ERROR, "ERROR : 그 플레이어의 지갑을 찾기 위해선 먼저 그/그녀를 묶어야만 합니다 ");
							return 1;
						}
						if(ProxDetectorS(5.0, playerid, giveplayerid))
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							Anim(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1);
                            format(string, sizeof(string), "* %s 이(가) %s의 몸을 뒤지다 지갑을 찾아서 봅니다.", sendername, RPPlayerName(giveplayerid));
                            ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            format(string, sizeof(string), "INFO : %s의 지갑엔 $%d 만큼의 돈이 있습니다", RPPlayerName(giveplayerid), PlayerInfo[giveplayerid][pCash]);
							SCM(playerid, COLOR_INFO1, string);
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_ERROR, "ERROR : 그 플레이어는 당신 주변에 있지 않습니다");
							return 1;
						}
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/명함보", true) == 0 || strcmp(cmd, "/명함보여주기", true) == 0 || strcmp(cmd, "/시민증보", true) == 0 || strcmp(cmd, "/시민증보여주기", true) == 0 || strcmp(cmd, "/민증보", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/시민증보)여주기 [플레이어번호/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
						if(PlayerInfo[playerid][pCityLic] == 1)
						{
							new atext[20];
							if(PlayerInfo[playerid][pSex] == 1) { atext = "남자"; }
							else if(PlayerInfo[playerid][pSex] == 2) { atext = "여자"; }
							new otext[20];
							if(PlayerInfo[playerid][pOrigin] == 1) { otext = "한국"; }
							else if(PlayerInfo[playerid][pOrigin] == 2) { otext = "미국"; }
							else if(PlayerInfo[playerid][pOrigin] == 3) { otext = "중국"; }
							else if(PlayerInfo[playerid][pOrigin] == 4) { otext = "일본"; }
							else if(PlayerInfo[playerid][pOrigin] == 5) { otext = "프랑스"; }
							else if(PlayerInfo[playerid][pOrigin] == 6) { otext = "이탈리아"; }
							else if(PlayerInfo[playerid][pOrigin] == 7) { otext = "스페인"; }
							else if(PlayerInfo[playerid][pOrigin] == 8) { otext = "러시아"; }
							new ttext[256];
							ttext = GetMemberName(PlayerInfo[playerid][pMember]);
							new rtext[256];
							rtext = GetRankName(PlayerInfo[playerid][pMember], PlayerInfo[playerid][pRank]);
							new jtext[21];
							if(PlayerInfo[playerid][pJob] == 1) { jtext = "탐정"; }
							if(PlayerInfo[playerid][pJob] == 2) { jtext = "변호사"; }
							if(PlayerInfo[playerid][pJob] == 3) { jtext = "급송택배원"; }
							else if(PlayerInfo[playerid][pJob] == 4) { jtext = "마약판매상"; }
							else if(PlayerInfo[playerid][pJob] == 5) { jtext = "노점상인"; }
							else if(PlayerInfo[playerid][pJob] == 6) { jtext = "총기상"; }
							//else if(PlayerInfo[playerid][pJob] == 7) { jtext = "보디가드"; }
							//else if(PlayerInfo[playerid][pJob] == 8) { jtext = "총제작자"; }
							//else if(PlayerInfo[playerid][pJob] == 9) { jtext = "복싱선수"; }
							else if(PlayerInfo[playerid][pJob] == 10) { jtext = "피자보이"; }
							else if(PlayerInfo[playerid][pJob] == 11) { jtext = "농부"; }
							else if(PlayerInfo[playerid][pJob] == 12) { jtext = "어부"; }
							else if(PlayerInfo[playerid][pJob] == 13) { jtext = "트럭기사"; }
							//else if(PlayerInfo[playerid][pJob] == 14) { jtext = "위조면허판매자"; }
							//else if(PlayerInfo[playerid][pJob] == 15) { jtext = "차량절도범"; }
							else if(PlayerInfo[playerid][pJob] == 16) { jtext = "환경미화원"; }
							else if(PlayerInfo[playerid][pJob] == 18) { jtext = "담배제조원"; }
							//else if(PlayerInfo[playerid][pJob] == 19) { jtext = "인부"; }
							else if(PlayerInfo[playerid][pJob] == 20) { jtext = "택"; }
							else { jtext = "없음"; }
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							new level = PlayerInfo[playerid][pLevel];
							format(string, sizeof(string), " 당신은 %s 에게 시민증을 보여줍니다", RPPlayerName(giveplayerid));
							SCM(playerid, COLOR_ERROR, string);
							SCM(giveplayerid, COLOR_SUN,"━━━━━━━━━━━━━━━━━━━━━━━━━━");
							format(string, sizeof(string), "INFO : "#C_WHITE" 이름:[%s] 나이:[%d] 성별:[%s] 출신지:[%s] 신용등급:[%d]", RPPlayerName(playerid), PlayerInfo[playerid][pAge], atext, otext, level);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" ☎:[%d]", PlayerInfo[playerid][pPnumber]);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 소속팀:[%s] 직업:[%s] 계급:[%s]", ttext, jtext, rtext);
							SCM(giveplayerid, COLOR_ERROR, string);
							SCM(giveplayerid, COLOR_SUN,"━━━━━━━━━━━━━━━━━━━━━━━━━━");
							format(string, sizeof(string), " %s 당신에게 시민증을 건냅니다", RPPlayerName(playerid));
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "* %s %s에게 시민증을 건네줍니다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							return 1;
						}
						else
						{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시민증이 없습니다! 시청에서 발급받으십시요.");
						return 1;
						}
						}
					}
				}
			}
			return 1;
		}

if(strcmp(cmd,"/문신보여주기", true) == 0 || strcmp(cmd,"/문신보", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_HINT,"(사용법) (/문신보)여주기 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(!IsAMember(playerid)) {SCM(playerid, COLOR_ERROR, "(오류) 당신은 조직원이 아닙니다"); return 1; }
							if(giveplayerid == playerid) {SCM(playerid, COLOR_ERROR, "(오류) 당신 자신에게 문신을 보여줄 수 없습니다"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SCM(giveplayerid, 0x970000FF, "┏━━━━━문신━━━━━┓");
							format(string, sizeof(string), " 무서운 %s 의 문신 입니다", GetMemberName(PlayerInfo[playerid][pMember]));
							SCM(giveplayerid, 0xFF0606FF, string);
							SCM(giveplayerid, 0xFF0606FF, " 이 문신을 본순간 당신은 조심");
							SCM(giveplayerid, 0xFF0606FF, " 해야 합니다. 그렇지 않을시");
							SCM(giveplayerid, 0xFF0606FF, " 가만히 두지 않는다는 표시");
							SCM(giveplayerid, 0x970000FF, "┗━━━━━━━━━━━━┛");
							ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
							ApplyAnimation(giveplayerid,"HEIST9","CAS_G2_GasKO",4.1,0,1,1,1,1);
							format(string, sizeof(string), "(행동) %s의 몸에서 %s 문신을 보았다", RPPlayerName(playerid), GetMemberName(PlayerInfo[playerid][pMember]));
							SCM(giveplayerid, COLOR_ACT, string);
							format(string, sizeof(string), "(행동) %s에게 문신을 보여줬다", RPPlayerName(giveplayerid));
							SCM(playerid, COLOR_ACT, string);
							format(string, sizeof(string), "(행동) %s %s의 문신을 보고 놀라자빠진다",RPPlayerName(giveplayerid), RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
						else
						{
							SCM(playerid, COLOR_ERROR, "(오류) 상대방이 당신의 근처에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(오류) 그 플레이어는 오프라인 입니다");
					return 1;
				}
			}
			return 1;
		}
		
		if(strcmp(cmd, "/가명보", true) == 0 || strcmp(cmd, "/가짜명함보여주기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8|| PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20)
				{
					if(gPlayerLogged[playerid] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_SUC, "정부 : [1 L.V.P.D] [2 FBI] [3 CIA] [4 EMT] [7 시장] [32 정부용병]");
						SCM(playerid, COLOR_SUC, "사설 : [9 방송국] [21 C.D] [11 하이카] [26 교회]");
						SCM(playerid, COLOR_RED, "조직 : [6 마피아] [14 야쿠자] [15 삼합회] [18 해태] [22 칠성파] [25 대명회] [27 종로파] ");
						SCM(playerid, COLOR_RED, "조직 : [28 Niggia Detective Family] [23 동성로] [24 NGS] [19 T.F.O.A 9]");
						SCM(playerid, COLOR_RED, " 갱  : [5 로코츠] [29 Uptown 424 Kilo Block] [16 세빌] [17 블러드] [12 크립스] [13 North Side Nortenos X4] [30 MS - 13]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_SUC, "정부 : [1 L.V.P.D] [2 FBI] [3 CIA] [4 EMT] [7 시장] [32 정부용병]");
						SCM(playerid, COLOR_SUC, "사설 : [9 방송국] [21 C.D] [11 하이카] [26 교회] ");
						SCM(playerid, COLOR_RED, "조직 : [6 마피아] [14 야쿠자] [15 삼합회] [18 해태] [22 칠성파] [25 대명회] [27 종로파]");
						SCM(playerid, COLOR_RED, "조직 : [28 Niggia Detective Family] [23 동성로] [24 NGS] [19  T.F.O.A 9]");
						SCM(playerid, COLOR_RED, " 갱  : [5 로코츠] [29 Uptown 424 Kilo Block] [16 세빌] [17 블러드] [12 크립스] [13 North Side Nortenos X4][30 MS - 13]");
						return 1;
					}
					new ttext = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_SUC, "정부 : [1 L.V.P.D] [2 FBI] [3 CIA] [4 EMT] [7 시장] [32 정부용병]");
						SCM(playerid, COLOR_SUC, "사설 : [9 방송국] [21 C.D] [11 하이카] [26 교회]");
						SCM(playerid, COLOR_RED, "조직 : [6 마피아] [14 야쿠자] [15 삼합회] [18 해태] [22 칠성파] [25 대명회] [27 종로파]");
						SCM(playerid, COLOR_RED, "조직 : [28 Niggia Detective Family] [23 동성로] [24 NGS] [19  T.F.O.A 9] ");
						SCM(playerid, COLOR_RED, " 갱  : [5 로코츠] [29 Uptown 424 Kilo Block] [16 세빌] [17 블러드] [12 크립스] [13 North Side Nortenos X4] [30 MS - 13]");
						return 1;
					}
					new rtext = strval(tmp);
					if(rtext<0) { return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 계급은 최소 0부터 입니다."); }
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(8.0, playerid, giveplayerid))
							{
								new atext[20];
								if(PlayerInfo[playerid][pSex] == 1) { atext = "남자"; }
								else if(PlayerInfo[playerid][pSex] == 2) { atext = "여자"; }
								new otext[20];
								if(PlayerInfo[playerid][pOrigin] == 1) { otext = "한국"; }
								else if(PlayerInfo[playerid][pOrigin] == 2) { otext = "미국"; }
								else if(PlayerInfo[playerid][pOrigin] == 3) { otext = "중국"; }
								else if(PlayerInfo[playerid][pOrigin] == 4) { otext = "일본"; }
								else if(PlayerInfo[playerid][pOrigin] == 5) { otext = "프랑스"; }
								else if(PlayerInfo[playerid][pOrigin] == 6) { otext = "이탈리아"; }
								else if(PlayerInfo[playerid][pOrigin] == 7) { otext = "스페인"; }
								else if(PlayerInfo[playerid][pOrigin] == 8) { otext = "러시아"; }
								new ttexta[256];
								ttexta=GetMemberName(ttext);
								new rtexta[256];
								rtexta=GetRankName(ttext, rtext);
								new jtext[21];
								jtext = "없음";
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), " 당신은 %s 에게 시민증을 보여줍니다", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "_____________________________________________________________");
								SCM(giveplayerid, COLOR_SUN, string);
								format(string, sizeof(string), "   이름: %s | 나이: %d | 성별: %s | 출신지: %s", RPPlayerName(playerid), PlayerInfo[playerid][pAge], atext, otext);
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "   ☎: %d", PlayerInfo[playerid][pPnumber]);
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "   소속팀: %s | 직업: %s | 계급: %s", ttexta, jtext, rtexta);
								SCM(giveplayerid, COLOR_ERROR, string);
								SCM(giveplayerid, COLOR_SUN, "_____________________________________________________________");
								format(string, sizeof(string), " %s 당신에게 시민증을 건냅니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "* %s %s에게 시민증을 건네줍니다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (FBI/Payday)이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/tracelastcall", true) || !strcmp(cmdtext, "/tlc", true) || !strcmp(cmdtext, "/요청위치", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 먼저 로그인을 해야합니다");
					return 1;
				}
				if(IsAPDMember(playerid))
				{
					if(pdtrace == 0 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 호출자의 위치에 에러가 생겼습니다");
						return 1;
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마지막 호출자의 위치가 맵 위의 레드마킹을 했습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /체크제거 로 레드마크를 지울 수 있습니다");
					SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
					return 1;
				}
				else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
				{
					if(emdtrace == 0 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 호출자의 위치에 에러가 생겼습니다");
						return 1;
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마지막 호출자의 위치가 맵 위의 레드마킹을 했습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /체크제거 로 레드마크를 지울 수 있습니다");
					SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/요청위치", true) || !strcmp(cmdtext, "/tlc", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인 먼저 해야 합니다 ");
					return 1;
				}
				if(IsAPDMember(playerid))
				{
					if(pdtrace == 0 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 구조 요청지 위치 추적에 실패하였습니다. ");
						return 1;
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 구조 요청지를 표시하였다. 빨리 위치로 출동하세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 빨간색 체크는 (/체크제거) 로 삭제합니다");
					SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
					return 1;
				}
				else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
				{
					if(emdtrace == 0 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 손님이 있는곳을 모르겠습니다 ");
						return 1;
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 구조장소에 빨간 체크를 표시했다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 빨간 체크제거 방법 : /체크제거");
					SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다! ");
					return 1;
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/담배피기", true) || !strcmp(cmdtext, "/담배", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pCigarettes] <= 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 담배를 피울 담배가 없습니다 ");
					return 1;
				}
				PlayerInfo[playerid][pCigarettes]--;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마우스 왼쪽을 누르세요. F로 담배를 버릴수 있습니다");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /animsmoking 으로 여러 애니를 취할 수있습니다");
				Playersmoke_V[playerid]=1;
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
		        Anim(playerid,"SMOKING","M_smk_in",4.1,0,0,0,0,0);
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/술마시기", true) || !strcmp(cmdtext, "/술마심", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLighter] <= 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 술을 마실 술병이 없습니다 ");
					return 1;
				}
				SetPlayerSpecialAction(playerid, 22);
				PlayerInfo[playerid][pLighter] -= 1;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마우스 왼쪽을 누르세요. [F]로 술병을 버릴수 있습니다");
			}
			return 1;
		}
		// ----------한글 애니 명령어 -------------------------------------------------------------------------------------
			if(strcmp(cmd, "/손", true) == 0 ||strcmp(cmd, "/손") == 0) {
				if(IsPlayerConnected(playerid))
				{
					//if( WantedLevel[playerid] == 0 && PlayerCuffed[playerid] == 0 && PlayerTied[playerid] == 0)//
					//{
					if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
						Anim(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
						return 1;
					}//
					else//
					{//
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지금은 할 수 없습니다");
					}//
					//}
				}
			}
			if(strcmp(cmd, "/얼굴가리기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","phone_talk",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/히치하이킹", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/손번쩍", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","CLIMB_idle",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/저질댄스", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"STRIP","strip_D",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/컴퓨터하기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/smoke", true) == 0 ||strcmp(cmd, "/담배모션") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,0);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/win", true) == 0 ||strcmp(cmd, "/승리") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/경준", true) == 0 ||strcmp(cmd, "/경찰조준") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","ARRESTgun",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/애니해제", true) == 0 ||strcmp(cmd, "/해제") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"BD_FIRE","BD_Fire1",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/토함", true) == 0 ||strcmp(cmd, "/토하기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/기절하는척", true) == 0 ||strcmp(cmd, "/기절하기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","KO_shot_face",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/금지2", true) == 0 ||strcmp(cmd, "/금지하기2") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","endchat_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/두려움", true) == 0 ||strcmp(cmd, "/무서움") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","cower",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/배째", true) == 0 ||strcmp(cmd, "/배쨰") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","FLOOR_hit",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/말", true) == 0 ||strcmp(cmd, "/말하기") == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					if(Anim_Chat[playerid]==0)
					{
					    Anim_Chat[playerid]=1;
					    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" Auto Talk Animation ON");//4.1,0,1,1,1,1
					    return 1;
					}
				    if(Anim_Chat[playerid]==1)
				    {
			    		Anim_Chat[playerid]=0;
				  		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" Auto Talk Animation OFF");
			   			return 1;
					}
					return 1;
				}
			}

			if(strcmp(cmd, "/뻑큐", true) == 0 ||strcmp(cmd, "/엿") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","fucku",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/백텝", true) == 0 ||strcmp(cmd, "/백스텝") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","FightShB",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/금지하기", true) == 0 ||strcmp(cmd, "/금지") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/땅때리기", true) == 0 ||strcmp(cmd, "/땅치기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"FIGHT_B","FightB_G",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/가랏데", true) == 0 ||strcmp(cmd, "/가라데") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"FIGHT_D","FightD_2",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/선물", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"KISSING","gift_give",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/환호", true) == 0 ||strcmp(cmd, "/환호하기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"STRIP","PUN_HOLLER",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/날라가기", true) == 0 ||strcmp(cmd, "/날라감") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/총들기", true) == 0 ||strcmp(cmd, "/총듬") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"SILENCED","Silence_fire",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/땅파", true) == 0 ||strcmp(cmd, "/땅파기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/자위2", true) == 0 ||strcmp(cmd, "/자위2") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/총맞", true) == 0 ||strcmp(cmd, "/총맞고쓰러지기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/피하기", true) == 0 ||strcmp(cmd, "/피하기모션") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/자위", true) == 0 ||strcmp(cmd, "/자위") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PAULNMAC","wank_out",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/의사앉기", true) == 0 ||strcmp(cmd, "/앉기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/의사앉기2", true) == 0 ||strcmp(cmd, "/앉기2") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/support", true) == 0 ||strcmp(cmd, "/응원") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/kiss", true) == 0 ||strcmp(cmd, "/키스") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/hi", true) == 0 ||strcmp(cmd, "/인사") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","endchat_03",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/gang", true) == 0 ||strcmp(cmd, "/조직") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			// ----------애니 명령어 -------------------------------------------------------------------------------------
			if(strcmp(cmd, "/애니2") == 0 || strcmp(cmd, "/애니명령어2") == 0)
			{
				ClearChatbox(playerid, 2);
				SCM(playerid, COLOR_BLUE, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE,"INFO : "#C_WHITE" 애니메이션 모음");
				SCM(playerid,COLOR_ERROR,"(애니) /손 /춤 /담배피기 /승리 /응원 /키스 /안녕 /집합 /말 /만취 ");
				SCM(playerid,COLOR_ERROR,"(애니) /낙법 /숙이기 /겨누기 /떨기 /눕기 /생각 /뻗쳐 /멈춰");
				SCM(playerid,COLOR_ERROR,"(애니) /구토 /거부 /오예 /의자앉기 /쉬기 /존경 /미안 /앉기/꼬고앉기");
				SCM(playerid,COLOR_ERROR,"(애니) /전방낙법 /백스텝 /엿 /인사 /회전낙법 /일어나기");
				SCM(playerid,COLOR_ERROR,"(애니) /허리꺾기 /안녕2 /째 /확그냥 /총꺼냄 /총넣음 /벤치앉기");
				SCM(playerid,COLOR_WHITE,"INFO : "#C_WHITE" 다음 애니명령어: /애니3");
				return 1;
			}
			if(strcmp(cmd, "/손", true) == 0 ||strcmp(cmd, "/손") == 0) {
				if( WantedLevel[playerid] == 0 && PlayerCuffed[playerid] == 0 && PlayerTied[playerid] == 0)//
				{//
					if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
						Anim(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
						return 1;
					}//
					else//
					{//
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지금은 할 수 없습니다");
					}//
				}
			}
			if(strcmp(cmd, "/춤", true) == 0 ||strcmp(cmd, "/춤") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,COLOR_ERROR,">INFO : "#C_WHITE" /춤 [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /춤 [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
					} else if(animationplayed == 2) {
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
					} else if(animationplayed == 3) {
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/담배피기", true) == 0 ||strcmp(cmd, "/담배피기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/떨면서눕기", true) == 0 ||strcmp(cmd, "/떨기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/눕기", true) == 0 ||strcmp(cmd, "/눕기") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/win", true) == 0 ||strcmp(cmd, "/승리") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/응원", true) == 0 ||strcmp(cmd, "/응원") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/kiss", true) == 0 ||strcmp(cmd, "/키스") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/hi", true) == 0 ||strcmp(cmd, "/안녕") == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"KISSING","gfwave2",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/집합", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}

			if(strcmp(cmd, "/만취", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/숙이기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","cower",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/낙법", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/겨누기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
	    				 Anim(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/구토", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/거부", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"KISSING","GF_StreetArgue_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/오예", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"CASINO","manwind",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/꼬고앉기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/의자앉기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/쉬기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/앉기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/생각", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/존경", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/뻗쳐", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","Drown",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/전방낙법", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"GYMNASIUM","gym_tread_falloff",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/백스텝", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","FightShB",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/엿", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","fucku",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/인사", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","gas_cwr",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/회전낙법", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","KD_left",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/확그냥", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/총꺼냄", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","phone_in",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/총넣음", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","phone_out",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/벤치앉기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/일어나기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","SEAT_up",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/멈춰", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","Sprint_Wuzi",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/미안", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"PED","Walk_Wuzi",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/허리꺾기", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"CAR","Fixn_Car_Loop",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/안녕2", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/째", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					{
						Anim(playerid,"ON_LOOKERS","point_in",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			//--------------------------
			// CIA애니

			if(strcmp(cmd, "/군집합", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"RIFLE","RIFLE_fire_poor",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/군조준", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"RIFLE","RIFLE_crouchload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/충성", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"ON_LOOKERS","Pointup_shout",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/군장전", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"RIFLE","RIFLE_load",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/군정지", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"SWAT","Rail_fall_crawl",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/정상", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
				    SetCameraBehindPlayer(playerid);
	    			Anim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				return 1;
			}
			//경찰애니
			if(strcmp(cmd, "/경통과", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"POLICE","CopTraf_Away",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/경정지", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/경수갑", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
				}
				return 1;
			}
			//조직애니
			if(strcmp(cmd, "/조칼들기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/조앉기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/조협박", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"TEC","TEC_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/조직", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/조인사", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"FAT","IDLE_tired",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/조복종", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
				}
				return 1;
			}
			//갱애니
			if(strcmp(cmd, "/갱인사", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"RIOT","RIOT_ANGRY",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/갱인사2", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
				}
				return 1;
			}
			//담배애니
			if(strcmp(cmd, "/담배털기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"SMOKING","M_smk_tap",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/담배불", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"SMOKING","M_smk_in",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/걸담배", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"GANGS","drnkbr_prtl",4.1,0,1,1,1,1);
				}
				return 1;
			}
			//병원애니
			if(strcmp(cmd, "/응급처치", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/수술", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"INT_SHOP","shop_cashier",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/수술2", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"INT_SHOP","shop_in",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/발작", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","KD_left",4.1,0,1,1,1,1);
				}
				return 1;
			}
			//쓰러지기애니
			if(strcmp(cmd, "/쓰러지기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"SWAT","gnstwall_injurd",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/배아픔", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"SWEET","Sweet_injuredloop",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/노숙", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/떨기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				}
				return 1;
			}
			//기타애니
			if(strcmp(cmd, "/덤블링", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/차렷", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","Idlestance_fat",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/윈드밀", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"STRIP","STR_C1",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/코끼리코", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","Driveby_L",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/기어가기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","CAR_crawloutRHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/삽질", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/서서먹기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,0);
				}
				return 1;
			}
			if(strcmp(cmd, "/앉기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
				}

			}
			if(strcmp(cmd, "/앉아서먹기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,0);
				}
				return 1;
			}
			if(strcmp(cmd, "/술취하기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/집어들기", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/악수", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PED","Jetpack_Idle",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/스트레칭", true) == 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					Anim(playerid,"PLAYIDLES","stretch",4.1,0,1,1,1,1);
				}
				return 1;
			}

			if(strcmp(cmdtext, "/animhelp", true) == 0)
			{
				SCM(playerid, COLOR_ERROR,">/animped /animclothes /animcoach /animcolt /animcopa /animcod /animcrack");
				SCM(playerid, COLOR_ERROR,">/animairport /animat /animbar /animball /animfire /animbeach");
				SCM(playerid, COLOR_ERROR,">/animbp /animinf /animbiked /animbh /animfood /animbikelp /animms /animbikes /animcar");
				SCM(playerid, COLOR_ERROR,">/animbikev /animbmx /animbikedbz /animchase /animbox /animbomber /animbsp /animcamera ");
				SCM(playerid, COLOR_ERROR,">/animgym /animpara /animgangs /animlookers /animcarchat /animcasino /animbuddy /animbus");
				SCM(playerid, COLOR_ERROR,">/animcarry /animintshop /animjst /animkart /animkissing /animknife /animlapdan /animdend");
				SCM(playerid, COLOR_ERROR,">/animmedic /animmtb /animmusc /animotb /animpark /animsaw /animchoppa");
				SCM(playerid, COLOR_BLUE,">/animhelp2 - next animation list");
				return 1;
			}
			if(strcmp(cmdtext, "/animhelp2", true) == 0)
			{
				SCM(playerid, COLOR_ERROR,">/animcrib /animdealer /animdildo /animdodge /animdozer  /animdrivebys /animfat");
				SCM(playerid, COLOR_ERROR,">/animfightb /animfightc /animfightd /animfighte /animflamef");
				SCM(playerid, COLOR_ERROR,">/animflowers /animghands /animfw /animghetto /animgog /animgraffity /animgreya /animgren");
				SCM(playerid, COLOR_ERROR,">/animhaircut /animheist  /animinthouse /animintoffice /animplayerdbf /animplayidles /animpolice");
				SCM(playerid, COLOR_ERROR,">/animpool /animpoor /animpython /animquad /animquadbz /animrapping  /animrifle /animriot /animrobbank ");
				SCM(playerid, COLOR_ERROR,">/animrocket /animrustler /animryder /animscrat /animshamal /animshop /animskate /animshotgun");
				SCM(playerid, COLOR_ERROR,">/animvortex /animtec /animtrain /animsil /animtattoo  /animsmoking /animsniper /animspray /animstrip");
				SCM(playerid, COLOR_ERROR,">/animbath /animswat /animsweet /animswim /animsword /animtank /animtruck /animuzi  /animvan /animvending");
				SCM(playerid, COLOR_ERROR,">/animway /animweap");
				return 1;
			}
			if(strcmp(cmd, "/animbar", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbar [1-12]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animbar [1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BAR","Barcustom_get",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"BAR","Barcustom_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"BAR","Barcustom_order",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"BAR","Barserve_bottle",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"BAR","Barserve_give",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"BAR","Barserve_glass",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"BAR","Barserve_in",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"BAR","Barserve_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"BAR","Barserve_order",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"BAR","dnk_stndF_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"BAR","dnk_stndM_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"BAR","BARman_idle",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/조직2", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,"/조직2 [1-2]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 2) {
					SCM(playerid,0xFF0000FF,"/조직2 [1-2]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animball", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animball [1-11]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 11) {
					SCM(playerid,0xFF0000FF,">Write /animball [1-11]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BASEBALL","Bat_1",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"BASEBALL","Bat_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"BASEBALL","Bat_4",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"BASEBALL","Bat_block",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"BASEBALL","Bat_Hit_1",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"BASEBALL","Bat_Hit_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"BASEBALL","Bat_Hit_3",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"BASEBALL","Bat_IDLE",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"BASEBALL","Bat_M",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"BASEBALL","BAT_PART",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfire", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfire [1-13]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animfire [1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BD_FIRE","BD_Fire1",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"BD_FIRE","BD_Fire2",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"BD_FIRE","BD_Fire3",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"BD_FIRE","BD_GF_Wave",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"BD_FIRE","BD_Panic_01",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"BD_FIRE","BD_Panic_02",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"BD_FIRE","BD_Panic_03",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"BD_FIRE","BD_Panic_04",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"BD_FIRE","BD_Panic_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"BD_FIRE","M_smklean_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"BD_FIRE","Playa_Kiss_03",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"BD_FIRE","wash_up",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbeach", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbeach [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animbeach [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BEACH","bather",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"BEACH","Lay_Bac_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"BEACH","BD_Fire3",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"BEACH","ParkSit_W_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"BEACH","SitnWait_loop_W",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animinf", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animinf [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animinf [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BF_injection","BF_getin_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"BF_injection","BF_getin_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"BF_injection","BF_getout_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"BF_injection","BF_getout_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbiked", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbiked [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbiked [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbp", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbp [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animbp [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"benchpress","gym_bp_down",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"benchpress","gym_bp_getoff",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"benchpress","gym_bp_geton",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"benchpress","gym_bp_up_A",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"benchpress","gym_bp_up_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"benchpress","gym_bp_up_smooth",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbh", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbh [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbh [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BIKEH","BIKEh_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BIKEH","BIKEh_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BIKEH","BIKEh_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BIKEH","BIKEh_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BIKEH","BIKEh_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BIKEH","BIKEh_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BIKEH","BIKEh_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BIKEH","BIKEh_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BIKEH","BIKEh_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BIKEH","BIKEh_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animms", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animms [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animms [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKEH","BIKEh_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKEH","BIKEh_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKEH","BIKEh_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKEH","BIKEh_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKEH","BIKEh_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKEH","BIKEh_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKEH","BIKEh_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKEH","BIKEh_getoffRHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfood", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfood [1-33]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 33) {
					SCM(playerid,0xFF0000FF,">Write /animfood [1-33]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"FOOD","EAT_Vomit_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"FOOD","FF_Dam_Bkw",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"FOOD","FF_Dam_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"FOOD","FF_Dam_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"FOOD","FF_Dam_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"FOOD","FF_Die_Bkw",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"FOOD","FF_Die_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"FOOD","FF_Die_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"FOOD","FF_Die_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"FOOD","FF_Sit_Eat1",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"FOOD","FF_Sit_Eat2",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"FOOD","FF_Sit_Eat3",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"FOOD","FF_Sit_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"FOOD","FF_Sit_In_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"FOOD","FF_Sit_In_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"FOOD","FF_Sit_Look",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"FOOD","FF_Sit_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"FOOD","FF_Sit_Out_180",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"FOOD","FF_Sit_Out_L_180",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"FOOD","FF_Sit_Out_R_180",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"FOOD","SHP_Thank",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"FOOD","SHP_Tray_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"FOOD","SHP_Tray_Lift",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"FOOD","SHP_Tray_Lift_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 29) {
					Anim(playerid,"FOOD","SHP_Tray_Lift_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 30) {
					Anim(playerid,"FOOD","SHP_Tray_Lift_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 31) {
					Anim(playerid,"FOOD","SHP_Tray_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 32) {
					Anim(playerid,"FOOD","SHP_Tray_Pose",4.1,0,1,1,1,1);
				}else if(animationplayed == 33) {
					Anim(playerid,"FOOD","SHP_Tray_Return",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animms", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animms [1-41]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 41) {
					SCM(playerid,0xFF0000FF,">Write /animms [1-41]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"MISC","bitchslap",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"MISC","BMX_celebrate",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"MISC","BMX_comeon",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"MISC","bmx_idleloop_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"MISC","bmx_idleloop_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"MISC","bmx_talkleft_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"MISC","bmx_talkleft_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"MISC","bmx_talkleft_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"MISC","bmx_talkright_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"MISC","bmx_talkright_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"MISC","bmx_talkright_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"MISC","bng_wndw",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"MISC","bng_wndw_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"MISC","Case_pickup",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"MISC","door_jet",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"MISC","GRAB_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"MISC","GRAB_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"MISC","Hiker_Pose",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"MISC","Hiker_Pose_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"MISC","Idle_Chat_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"MISC","KAT_Throw_K",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"MISC","KAT_Throw_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"MISC","KAT_Throw_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"MISC","PASS_Rifle_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"MISC","PASS_Rifle_Ped",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"MISC","PASS_Rifle_Ply",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"MISC","pickup_box",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"MISC","Plane_door",4.1,0,1,1,1,1);
				}else if(animationplayed == 29) {
					Anim(playerid,"MISC","Plane_exit",4.1,0,1,1,1,1);
				}else if(animationplayed == 30) {
					Anim(playerid,"MISC","Plane_hijack",4.1,0,1,1,1,1);
				}else if(animationplayed == 31) {
					Anim(playerid,"MISC","Plunger_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 32) {
					Anim(playerid,"MISC","Plyrlean_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 33) {
					Anim(playerid,"MISC","plyr_shkhead",4.1,0,1,1,1,1);
				}else if(animationplayed == 34) {
					Anim(playerid,"MISC","Run_Dive",4.1,0,1,1,1,1);
				}else if(animationplayed == 35) {
					Anim(playerid,"MISC","Scratchballs_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 36) {
					Anim(playerid,"MISC","SEAT_LR",4.1,0,1,1,1,1);
				}else if(animationplayed == 37) {
					Anim(playerid,"MISC","Seat_talk_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 38) {
					Anim(playerid,"MISC","Seat_talk_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 39) {
					Anim(playerid,"MISC","SEAT_watch",4.1,0,1,1,1,1);
				}else if(animationplayed == 40) {
					Anim(playerid,"MISC","smalplane_door",4.1,0,1,1,1,1);
				}else if(animationplayed == 41) {
					Anim(playerid,"MISC","smlplane_door",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbikelp", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbikelp [1-9]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 9) {
					SCM(playerid,0xFF0000FF,">Write /animbikelp [1-9]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKELEAP","bk_blnce_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKELEAP","bk_blnce_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKELEAP","bk_jmp",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKELEAP","bk_rdy_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKELEAP","bk_rdy_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKELEAP","struggle_cesar",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKELEAP","struggle_driver",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKELEAP","truck_driver",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BIKELEAP","truck_getin",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbikes", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbikes [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbikes [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKES","BIKEs_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKES","BIKEs_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKES","BIKEs_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKES","BIKEs_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKES","BIKEs_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKES","BIKEs_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKES","BIKEs_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKES","BIKEs_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BIKES","BIKEs_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BIKES","BIKEs_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BIKES","BIKEs_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BIKES","BIKEs_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BIKES","BIKEs_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BIKES","BIKEs_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BIKES","BIKEs_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BIKES","BIKEs_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BIKES","BIKEs_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BIKES","BIKEs_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbikev", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbikev [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbikev [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKEV","BIKEv_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKEV","BIKEv_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKEV","BIKEv_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKEV","BIKEv_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKEV","BIKEv_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKEV","BIKEv_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKEV","BIKEv_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKEV","BIKEv_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BIKEV","BIKEv_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BIKEV","BIKEv_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BIKEV","BIKEv_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BIKEV","BIKEv_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BIKEV","BIKEv_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BIKEV","BIKEv_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BIKEV","BIKEv_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BIKEV","BIKEv_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BIKEV","BIKEv_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BIKEV","BIKEv_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbmx", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbmx [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbmx [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BMX","BMX_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BMX","BMX_bunnyhop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BMX","BMX_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BMX","BMX_driveby_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BMX","BMX_driveby_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BMX","BMX_fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BMX","BMX_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BMX","BMX_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BMX","BMX_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BMX","BMX_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BMX","BMX_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BMX","BMX_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BMX","BMX_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BMX","BMX_pedal",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BMX","BMX_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BMX","BMX_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BMX","BMX_sprint",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BMX","BMX_still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbikedbz", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbikedbz [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animbikedbz [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKE_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKE_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKE_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKE_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animchase", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animchase [1-25]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 25) {
					SCM(playerid,0xFF0000FF,">Write /animchase [1-25]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"MD_CHASE","Carhit_Hangon",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"MD_CHASE","Carhit_Tumble",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"MD_CHASE","donutdrop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"MD_CHASE","Fen_Choppa_L1",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"MD_CHASE","Fen_Choppa_L2",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"MD_CHASE","Fen_Choppa_L3",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"MD_CHASE","Fen_Choppa_R1",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"MD_CHASE","Fen_Choppa_R2",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"MD_CHASE","Fen_Choppa_R3",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"MD_CHASE","Hangon_Stun_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"MD_CHASE","Hangon_Stun_Turn",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"MD_CHASE","MD_BIKE_2_HANG",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Jmp_BL",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Jmp_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Lnd_BL",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_BL",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Lnd_Die_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Lnd_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Lnd_Roll_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Punch",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Punch_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"MD_CHASE","MD_BIKE_Shot_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"MD_CHASE","MD_HANG_Loop",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbox", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbox [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animbox [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BOX","boxhipin",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BOX","boxhipup",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BOX","boxshdwn",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BOX","boxshup",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BOX","bxhipwlk",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BOX","bxhwlki",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BOX","bxshwlk",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BOX","bxshwlki",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BOX","bxwlko",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BOX","catch_box",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbomber", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbomber [1-6]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 6) {
					SCM(playerid,0xFF0000FF,">Write /animbomber [1-6]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BOMBER","BOM_Plant_2Idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BOMBER","BOM_Plant_Crouch_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BOMBER","BOM_Plant_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BOMBER","BOM_Plant_Loop",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbsp", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbsp [1-41]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 41) {
					SCM(playerid,0xFF0000FF,">Write /animbsp [1-41]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BSKTBALL","BBALL_def_jump_shot",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BSKTBALL","BBALL_def_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BSKTBALL","BBALL_def_stepL",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BSKTBALL","BBALL_def_stepR",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk_Gli",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk_Gli_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk_Lnch",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk_Lnch_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk_Lnd",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BSKTBALL","BBALL_Dnk_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BSKTBALL","BBALL_idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BSKTBALL","BBALL_idle2",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BSKTBALL","BBALL_idle2_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BSKTBALL","BBALL_idleloop",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BSKTBALL","BBALL_idleloop_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BSKTBALL","BBALL_idle_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BSKTBALL","BBALL_Jump_Cancel",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"BSKTBALL","BBALL_Jump_Cancel_0",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"BSKTBALL","BBALL_Jump_End",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"BSKTBALL","BBALL_Jump_Shot_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"BSKTBALL","BBALL_Net_Dnk_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"BSKTBALL","BBALL_pickup",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"BSKTBALL","BBALL_pickup_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"BSKTBALL","BBALL_react_miss",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"BSKTBALL","BBALL_react_score",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"BSKTBALL","BBALL_run",4.1,0,1,1,1,1);
				}else if(animationplayed == 29) {
					Anim(playerid,"BSKTBALL","BBALL_run_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 30) {
					Anim(playerid,"BSKTBALL","BBALL_SkidStop_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 31) {
					Anim(playerid,"BSKTBALL","BBALL_SkidStop_L_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 32) {
					Anim(playerid,"BSKTBALL","BBALL_SkidStop_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 33) {
					Anim(playerid,"BSKTBALL","BBALL_SkidStop_R_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 34) {
					Anim(playerid,"BSKTBALL","BBALL_walk",4.1,0,1,1,1,1);
				}else if(animationplayed == 35) {
					Anim(playerid,"BSKTBALL","BBALL_WalkStop_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 36) {
					Anim(playerid,"BSKTBALL","BBALL_WalkStop_L_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 37) {
					Anim(playerid,"BSKTBALL","BBALL_WalkStop_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 38) {
					Anim(playerid,"BSKTBALL","BBALL_WalkStop_R_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 39) {
					Anim(playerid,"BSKTBALL","BBALL_walk_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 40) {
					Anim(playerid,"BSKTBALL","BBALL_walk_start",4.1,0,1,1,1,1);
				}else if(animationplayed == 41) {
					Anim(playerid,"BSKTBALL","BBALL_walk_start_O",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcamera", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcamera [1-14]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 14) {
					SCM(playerid,0xFF0000FF,">Write /animcamera [1-14]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CAMERA","camcrch_cmon",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CAMERA","camcrch_idleloop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CAMERA","camcrch_stay",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CAMERA","camcrch_to_camstnd",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CAMERA","camstnd_cmon",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CAMERA","camstnd_idleloop",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CAMERA","camstnd_lkabt",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"CAMERA","camstnd_to_camcrch",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"CAMERA","piccrch_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"CAMERA","piccrch_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"CAMERA","piccrch_take",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"CAMERA","picstnd_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"CAMERA","picstnd_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"CAMERA","picstnd_take",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animgym", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animgym [1-24]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 24) {
					SCM(playerid,0xFF0000FF,">Write /animgym [1-24]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"GYMNASIUM","GYMshadowbox",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"GYMNASIUM","gym_bike_fast",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"GYMNASIUM","gym_bike_faster",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"GYMNASIUM","gym_bike_geton",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"GYMNASIUM","gym_bike_pedal",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"GYMNASIUM","gym_bike_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"GYMNASIUM","gym_bike_still",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"GYMNASIUM","gym_jog_falloff",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"GYMNASIUM","gym_shadowbox",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"GYMNASIUM","gym_tread_celebrate",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"GYMNASIUM","gym_tread_falloff",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"GYMNASIUM","gym_tread_geton",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"GYMNASIUM","gym_tread_jog",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"GYMNASIUM","gym_tread_sprint",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"GYMNASIUM","gym_tread_tired",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"GYMNASIUM","gym_tread_walk",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"GYMNASIUM","gym_walk_falloff",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"GYMNASIUM","Pedals_fast",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"GYMNASIUM","Pedals_med",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"GYMNASIUM","Pedals_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"GYMNASIUM","Pedals_still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animpara", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animpara [1-22]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 22) {
					SCM(playerid,0xFF0000FF,">Write /animpara [1-22]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"PARACHUTE","FALL_skyDive",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"PARACHUTE","FALL_SkyDive_Accel",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"PARACHUTE","FALL_skyDive_DIE",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"PARACHUTE","FALL_SkyDive_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"PARACHUTE","FALL_SkyDive_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"PARACHUTE","PARA_decel",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"PARACHUTE","PARA_decel_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"PARACHUTE","PARA_float",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"PARACHUTE","PARA_float_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"PARACHUTE","PARA_Land",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"PARACHUTE","PARA_Land_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"PARACHUTE","PARA_Land_Water",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"PARACHUTE","PARA_Land_Water_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"PARACHUTE","PARA_open",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"PARACHUTE","PARA_open_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"PARACHUTE","PARA_Rip_Land_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"PARACHUTE","PARA_Rip_Loop_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"PARACHUTE","PARA_Rip_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"PARACHUTE","PARA_steerL",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"PARACHUTE","PARA_steerL_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"PARACHUTE","PARA_steerR",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"PARACHUTE","PARA_steerR_O",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animgangs", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animgangs [1-22]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 22) {
					SCM(playerid,0xFF0000FF,">Write /animgangs [1-22]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"GANGS","DEALER_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"GANGS","drnkbr_prtl",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"GANGS","drnkbr_prtl_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"GANGS","DRUGS_BUY",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"GANGS","hndshkaa",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"GANGS","hndshkca",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"GANGS","hndshkcb",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"GANGS","hndshkda",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"GANGS","hndshkfa_swt",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"GANGS","Invite_No",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"GANGS","Invite_Yes",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"GANGS","leanIDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"GANGS","leanIN",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"GANGS","leanOUT",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"GANGS","prtial_gngtlkA",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"GANGS","prtial_gngtlkB",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"GANGS","prtial_gngtlkCt",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"GANGS","prtial_gngtlkD",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"GANGS","prtial_gngtlkE",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"GANGS","prtial_gngtlkF",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"GANGS","prtial_gngtlkG",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"GANGS","prtial_gngtlkH",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"GANGS","prtial_hndshk_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"GANGS","prtial_hndshk_biz_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 29) {
					Anim(playerid,"GANGS","shake_cara",4.1,0,1,1,1,1);
				}else if(animationplayed == 30) {
					Anim(playerid,"GANGS","shake_carK",4.1,0,1,1,1,1);
				}else if(animationplayed == 31) {
					Anim(playerid,"GANGS","shake_carSH",4.1,0,1,1,1,1);
				}else if(animationplayed == 32) {
					Anim(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1);
				}else if(animationplayed == 33) {
					Anim(playerid,"GANGS","smkcig_prtl_F",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animlowrider", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animlowrider [1-39]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 39) {
					SCM(playerid,0xFF0000FF,">Write /animlowrider [1-39]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"LOWRIDER","F_smklean_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"LOWRIDER","lrgirl_bdbnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"LOWRIDER","lrgirl_hair",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"LOWRIDER","lrgirl_hurry",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"LOWRIDER","lrgirl_idleloop",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"LOWRIDER","lrgirl_idle_to_l0",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"LOWRIDER","lrgirl_l0_bnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"LOWRIDER","lrgirl_l0_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"LOWRIDER","lrgirl_l0_to_l1",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"LOWRIDER","lrgirl_l12_to_l0",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"LOWRIDER","lrgirl_l1_bnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"LOWRIDER","lrgirl_l1_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"LOWRIDER","lrgirl_l1_to_l2",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"LOWRIDER","lrgirl_l2_bnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"LOWRIDER","lrgirl_l2_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"LOWRIDER","lrgirl_l2_to_l3",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"LOWRIDER","lrgirl_l345_to_l1",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"LOWRIDER","lrgirl_l3_bnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"LOWRIDER","lrgirl_l3_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"LOWRIDER","lrgirl_l3_to_l4",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"LOWRIDER","lrgirl_l4_bnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"LOWRIDER","lrgirl_l4_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"LOWRIDER","lrgirl_l4_to_l5",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"LOWRIDER","lrgirl_l5_bnce",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"LOWRIDER","lrgirl_l5_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"LOWRIDER","M_smklean_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"LOWRIDER","M_smkstnd_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkB",4.1,0,1,1,1,1);
				}else if(animationplayed == 29) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkC",4.1,0,1,1,1,1);
				}else if(animationplayed == 30) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkD",4.1,0,1,1,1,1);
				}else if(animationplayed == 31) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkE",4.1,0,1,1,1,1);
				}else if(animationplayed == 32) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkF",4.1,0,1,1,1,1);
				}else if(animationplayed == 33) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkG",4.1,0,1,1,1,1);
				}else if(animationplayed == 34) {
					Anim(playerid,"LOWRIDER","prtial_gngtlkH",4.1,0,1,1,1,1);
				}else if(animationplayed == 35) {
					Anim(playerid,"LOWRIDER","RAP_A_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 36) {
					Anim(playerid,"LOWRIDER","RAP_B_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 37) {
					Anim(playerid,"LOWRIDER","RAP_C_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 38) {
					Anim(playerid,"LOWRIDER","Sit_relaxed",4.1,0,1,1,1,1);
				}else if(animationplayed == 39) {
					Anim(playerid,"LOWRIDER","Tap_hand",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animlookers", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animlookers [1-25]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 25) {
					SCM(playerid,0xFF0000FF,">Write /animlookers [1-25]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"ON_LOOKERS","lkaround_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"ON_LOOKERS","lkaround_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"ON_LOOKERS","lkaround_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"ON_LOOKERS","lkup_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"ON_LOOKERS","lkup_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"ON_LOOKERS","lkup_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"ON_LOOKERS","lkup_point",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"ON_LOOKERS","panic_cower",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"ON_LOOKERS","panic_hide",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"ON_LOOKERS","panic_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"ON_LOOKERS","panic_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"ON_LOOKERS","panic_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"ON_LOOKERS","panic_point",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"ON_LOOKERS","panic_shout",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"ON_LOOKERS","Pointup_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"ON_LOOKERS","Pointup_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"ON_LOOKERS","Pointup_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"ON_LOOKERS","Pointup_shout",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"ON_LOOKERS","point_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"ON_LOOKERS","point_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"ON_LOOKERS","point_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"ON_LOOKERS","shout_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"ON_LOOKERS","shout_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"ON_LOOKERS","shout_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"ON_LOOKERS","shout_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"ON_LOOKERS","wave_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"ON_LOOKERS","wave_out",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcarchat", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcarchat [1-20]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 20) {
					SCM(playerid,0xFF0000FF,">Write /animcarchat [1-20]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CAR_CHAT","carfone_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CAR_CHAT","carfone_loopA",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CAR_CHAT","carfone_loopA_to_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CAR_CHAT","carfone_loopB",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CAR_CHAT","carfone_loopB_to_A",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CAR_CHAT","carfone_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CAR_CHAT","CAR_Sc1_BR",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"CAR_CHAT","CAR_Sc1_FL",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"CAR_CHAT","CAR_Sc1_FR",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"CAR_CHAT","CAR_Sc2_FL",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"CAR_CHAT","CAR_Sc3_BR",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"CAR_CHAT","CAR_Sc3_FL",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"CAR_CHAT","CAR_Sc3_FR",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"CAR_CHAT","CAR_Sc4_BL",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"CAR_CHAT","CAR_Sc4_BR",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"CAR_CHAT","CAR_Sc4_FL",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"CAR_CHAT","CAR_Sc4_FR",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"CAR_CHAT","car_talkm_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"CAR_CHAT","car_talkm_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"CAR_CHAT","car_talkm_out",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcasino", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcasino [1-23]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 23) {
					SCM(playerid,0xFF0000FF,">Write /animcasino [1-23]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CASINO","cards_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CASINO","cards_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CASINO","cards_lose",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CASINO","cards_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CASINO","cards_pick_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CASINO","cards_pick_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CASINO","cards_raise",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"CASINO","cards_win",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"CASINO","manwinb",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"CASINO","manwind",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"CASINO","Roulette_bet",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"CASINO","Roulette_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"CASINO","Roulette_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"CASINO","Roulette_lose",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"CASINO","Roulette_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"CASINO","Roulette_win",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"CASINO","Slot_bet_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"CASINO","Slot_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"CASINO","Slot_lose_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"CASINO","Slot_Plyr",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"CASINO","Slot_wait",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"CASINO","Slot_win_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"CASINO","wof",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbuddy", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbuddy [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animbuddy [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BUDDY","buddy_crouchfire",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BUDDY","buddy_crouchreload",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BUDDY","buddy_fire",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BUDDY","buddy_fire_poor",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BUDDY","buddy_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbus", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbus [1-9]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 9) {
					SCM(playerid,0xFF0000FF,">Write /animbus [1-9]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BUS","BUS_close",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BUS","BUS_getin_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BUS","BUS_getin_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BUS","BUS_getout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BUS","BUS_getout_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BUS","BUS_jacked_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BUS","BUS_open",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BUS","BUS_open_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BUS","BUS_pullout_LHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcar", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcar [1-11]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 11) {
					SCM(playerid,0xFF0000FF,">Write /animcar [1-11]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CAR","Fixn_Car_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CAR","Fixn_Car_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CAR","Sit_relaxed",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CAR","Tap_hand",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CAR","Tyd2car_bump",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CAR","Tyd2car_high",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"CAR","Tyd2car_low",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"CAR","Tyd2car_med",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"CAR","Tyd2car_TurnL",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"CAR","Tyd2car_TurnR",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcarry", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcarry [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animcarry [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CARRY","liftup",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CARRY","liftup05",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CARRY","liftup105",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CARRY","putdwn",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CARRY","putdwn05",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CARRY","putdwn105",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animintshop", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animintshop [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animintshop [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"INT_SHOP","shop_cashier",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"INT_SHOP","shop_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"INT_SHOP","shop_lookA",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"INT_SHOP","shop_lookB",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"INT_SHOP","shop_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"INT_SHOP","shop_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"INT_SHOP","shop_pay",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"INT_SHOP","shop_shelf",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animjst", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animjst [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animjst [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"JST_BUISNESS","girl_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"JST_BUISNESS","girl_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"JST_BUISNESS","player_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"JST_BUISNESS","smoke_01",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animkart", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animkart [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animkart [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"KART","KART_getin_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"KART","KART_getin_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"KART","KART_getout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"KART","KART_getout_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animkissing", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animkissing [1-14]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 14) {
					SCM(playerid,0xFF0000FF,">Write /animkissing [1-14]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"KISSING","BD_GF_Wave",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"KISSING","gfwave2",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"KISSING","GF_CarArgue_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"KISSING","GF_CarArgue_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"KISSING","GF_CarSpot",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"KISSING","GF_StreetArgue_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"KISSING","GF_StreetArgue_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"KISSING","gift_give",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"KISSING","Grlfrd_Kiss_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"KISSING","Grlfrd_Kiss_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"KISSING","Grlfrd_Kiss_03",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"KISSING","Playa_Kiss_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"KISSING","Playa_Kiss_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"KISSING","Playa_Kiss_03",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animknife", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animknife [1-14]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 14) {
					SCM(playerid,0xFF0000FF,">Write /animknife [1-14]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"KNIFE","KILL_Knife_Player",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"KNIFE","KILL_Partial",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"KNIFE","knife_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"KNIFE","knife_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"KNIFE","knife_4",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"KNIFE","Knife_G",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"KNIFE","knife_hit_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"KNIFE","knife_hit_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"KNIFE","knife_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"KNIFE","knife_hit_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"KNIFE","knife_part",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"KNIFE","WEAPON_knifeidle",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animlapdan", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animlapdan [1-6]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 6) {
					SCM(playerid,0xFF0000FF,">Write /animlapdan [1-6]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"LAPDAN1","LAPDAN_D",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"LAPDAN1","LAPDAN_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"LAPDAN2","LAPDAN_D",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"LAPDAN2","LAPDAN_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"LAPDAN3","LAPDAN_D",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"LAPDAN3","LAPDAN_P",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdend", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdend [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animdend [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"MD_END","END_SC1_PLY",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"MD_END","END_SC1_RYD",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"MD_END","END_SC1_SMO",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"MD_END","END_SC1_SWE",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"MD_END","END_SC2_PLY",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"MD_END","END_SC2_RYD",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"MD_END","END_SC2_SMO",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"MD_END","END_SC2_SWE",4.1,0,1,1,1,1);
				}
				return 1;
			}

			if(strcmp(cmd, "/animmedic", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animmedic [1]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 1) {
					SCM(playerid,0xFF0000FF,">Write /animmedic [1]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animmtb", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animmtb [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animmtb [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"MTB","MTB_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"MTB","MTB_bunnyhop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"MTB","MTB_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"MTB","MTB_driveby_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"MTB","MTB_driveby_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"MTB","MTB_fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"MTB","MTB_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"MTB","MTB_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"MTB","MTB_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"MTB","MTB_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"MTB","MTB_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"MTB","MTB_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"MTB","MTB_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"MTB","MTB_pedal",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"MTB","MTB_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"MTB","MTB_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"MTB","MTB_sprint",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"MTB","MTB_still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animmusc", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animmusc [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 17) {
					SCM(playerid,0xFF0000FF,">Write /animmusc [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"MUSCULAR","MscleWalkst_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"MUSCULAR","MscleWalkst_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"MUSCULAR","Mscle_rckt_run",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"MUSCULAR","Mscle_rckt_walkst",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"MUSCULAR","Mscle_run_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"MUSCULAR","MuscleIdle",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"MUSCULAR","MuscleIdle_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"MUSCULAR","MuscleIdle_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"MUSCULAR","MuscleIdle_rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"MUSCULAR","MuscleRun",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"MUSCULAR","MuscleRun_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"MUSCULAR","MuscleSprint",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"MUSCULAR","MuscleWalk",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"MUSCULAR","MuscleWalkstart",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"MUSCULAR","MuscleWalk_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"MUSCULAR","Musclewalk_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"MUSCULAR","Musclewalk_rocket",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animotb", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animotb [1-11]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 11) {
					SCM(playerid,0xFF0000FF,">Write /animotb [1-11]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"OTB","betslp_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"OTB","betslp_lkabt",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"OTB","betslp_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"OTB","betslp_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"OTB","betslp_tnk",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"OTB","wtchrace_cmon",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"OTB","wtchrace_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"OTB","wtchrace_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"OTB","wtchrace_lose",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"OTB","wtchrace_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"OTB","wtchrace_win",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animpark", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animpark [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animpark [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"PARK","Tai_Chi_in",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"PARK","Tai_Chi_Loop",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"PARK","Tai_Chi_Out",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animpaul", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animpaul [1-12]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animpaul [1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"PAULNMAC","Piss_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"PAULNMAC","Piss_out",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"PAULNMAC","PnM_Argue1_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"PAULNMAC","PnM_Argue1_B",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"PAULNMAC","PnM_Argue2_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"PAULNMAC","PnM_Argue2_B",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"PAULNMAC","PnM_Loop_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"PAULNMAC","PnM_Loop_B",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"PAULNMAC","wank_in",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"PAULNMAC","wank_out",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animsaw", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animsaw [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animsaw [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CHAINSAW","CSAW_1",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"CHAINSAW","CSAW_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"CHAINSAW","CSAW_3",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"CHAINSAW","CSAW_G",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"CHAINSAW","CSAW_Hit_1",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"CHAINSAW","CSAW_Hit_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"CHAINSAW","CSAW_Hit_3",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"CHAINSAW","IDLE_csaw",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"CHAINSAW","WEAPON_csaw",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animchoppa", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animchoppa [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animchoppa [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CHOPPA","CHOPPA_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CHOPPA","CHOPPA_bunnyhop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CHOPPA","CHOPPA_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CHOPPA","CHOPPA_driveby_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CHOPPA","CHOPPA_driveby_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CHOPPA","CHOPPA_fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CHOPPA","CHOPPA_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"CHOPPA","CHOPPA_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"CHOPPA","CHOPPA_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"CHOPPA","CHOPPA_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"CHOPPA","CHOPPA_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"CHOPPA","CHOPPA_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"CHOPPA","CHOPPA_pedal",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"CHOPPA","CHOPPA_Pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"CHOPPA","CHOPPA_ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"CHOPPA","CHOPPA_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"CHOPPA","CHOPPA_sprint",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"CHOPPA","CHOPPA_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}

			if(strcmp(cmd, "/animclothes", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animclothes [1-13]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 13) {
					SCM(playerid,0xFF0000FF,">Write /animclothes [1-13]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CLOTHES","CLO_Buy",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"CLOTHES","CLO_In",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"CLOTHES","CLO_Out",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"CLOTHES","CLO_Pose_Hat",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"CLOTHES","CLO_Pose_In",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"CLOTHES","CLO_Pose_In_O",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"CLOTHES","CLO_Pose_Legs",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"CLOTHES","CLO_Pose_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"CLOTHES","CLO_Pose_Out",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"CLOTHES","CLO_Pose_Out_O",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"CLOTHES","CLO_Pose_Shoes",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"CLOTHES","CLO_Pose_Torso",4.1,0,1,1,1,1);
				} else if(animationplayed == 13) {
					Anim(playerid,"CLOTHES","CLO_Pose_Watch",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcoach", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcoach [1-6]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 6) {
					SCM(playerid,0xFF0000FF,">Write /animcoach [1-6]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"COACH","COACH_inL",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"COACH","COACH_inR",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"COACH","COACH_opnL",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"COACH","COACH_opnR",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"COACH","COACH_outL",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"COACH","COACH_outR",4.1,0,1,1,1,1);
				}
				return 1;
			}

			if(strcmp(cmd, "/animcolt", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcolt [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animcolt [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"COLT45","2guns_crouchfire",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"COLT45","colt45_crouchreload",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"COLT45","colt45_fire",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"COLT45","colt45_fire_2hands",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"COLT45","colt45_reload",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"COLT45","sawnoff_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcopa", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcopa [1-12]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animcopa[1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"COP_AMBIENT","Copbrowse_in",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"COP_AMBIENT","Copbrowse_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"COP_AMBIENT","Copbrowse_nod",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"COP_AMBIENT","Copbrowse_out",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"COP_AMBIENT","Copbrowse_shake",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"COP_AMBIENT","Coplook_in",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"COP_AMBIENT","Coplook_nod",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"COP_AMBIENT","Coplook_out",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"COP_AMBIENT","Coplook_shake",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"COP_AMBIENT","Coplook_think",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcod", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcod [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animcod [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"COP_DVBYZ","COP_Dvby_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"COP_DVBYZ","COP_Dvby_FT",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"COP_DVBYZ","COP_Dvby_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"COP_DVBYZ","COP_Dvby_R",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcrack", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcrack[1-9]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 9) {
					SCM(playerid,0xFF0000FF,">Write /animcrack [1-9]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animcrib", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animcrib [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animcrib [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"CRIB","CRIB_Console_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"CRIB","CRIB_Use_Switch",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"CRIB","PED_Console_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"CRIB","PED_Console_Loose",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"CRIB","PED_Console_Win",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdance", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdance [1-13]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 13) {
					SCM(playerid,0xFF0000FF,">Write /animdance [1-13]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"DANCING","bd_clap",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"DANCING","bd_clap1",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"DANCING","dance_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"DANCING","DAN_Down_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"DANCING","DAN_Left_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"DANCING","DAN_Loop_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"DANCING","DAN_Right_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"DANCING","DAN_Up_A",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"DANCING","dnce_M_a",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"DANCING","dnce_M_b",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"DANCING","dnce_M_c",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"DANCING","dnce_M_d",4.1,0,1,1,1,1);
				} else if(animationplayed == 13) {
					Anim(playerid,"DANCING","dnce_M_e",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdealer", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdealer [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animdealer [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"DEALER","DEALER_DEAL",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"DEALER","DEALER_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"DEALER","DEALER_IDLE_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"DEALER","DEALER_IDLE_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"DEALER","DEALER_IDLE_03",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"DEALER","DRUGS_BUY",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"DEALER","shop_pay",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdildo", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdildo [1-9]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 9) {
					SCM(playerid,0xFF0000FF,">Write /animdildo [1-9]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"DILDO","DILDO_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"DILDO","DILDO_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"DILDO","DILDO_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"DILDO","DILDO_block",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"DILDO","DILDO_G",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"DILDO","DILDO_Hit_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"DILDO","DILDO_Hit_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"DILDO","DILDO_Hit_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"DILDO","DILDO_IDLE",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdodge", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdodge [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animdodge [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"DODGE","Cover_Dive_01",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"DODGE","Cover_Dive_02",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"DODGE","Crushed",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"DODGE","Crush_Jump",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdozer", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdozer [1-9]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 9) {
					SCM(playerid,0xFF0000FF,">Write /animdozer [1-9]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"DOZER","DOZER_Align_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"DOZER","DOZER_Align_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"DOZER","DOZER_getin_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"DOZER","DOZER_getin_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"DOZER","DOZER_getout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"DOZER","DOZER_getout_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"DOZER","DOZER_Jacked_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"DOZER","DOZER_Jacked_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"DOZER","DOZER_pullout_LHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animdrivebys", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animdrivebys [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animdrivebys [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyLHS_Bwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyLHS_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyRHS_Bwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyRHS_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyTop_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"DRIVEBYS","Gang_DrivebyTop_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfat", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfat [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 17) {
					SCM(playerid,0xFF0000FF,">Write /animfat [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FAT","FatIdle",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"FAT","FatIdle_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"FAT","FatIdle_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"FAT","FatIdle_Rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"FAT","FatRun",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"FAT","FatRun_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"FAT","FatRun_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"FAT","FatRun_Rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"FAT","FatSprint",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"FAT","FatWalk",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"FAT","FatWalkstart",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"FAT","FatWalkstart_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"FAT","FatWalkSt_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"FAT","FatWalkSt_Rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"FAT","FatWalk_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"FAT","FatWalk_Csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"FAT","FatWalk_Rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"FAT","IDLE_tired",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfightb", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfightb [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animfightb [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FIGHT_B","FightB_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"FIGHT_B","FightB_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"FIGHT_B","FightB_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"FIGHT_B","FightB_block",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"FIGHT_B","FightB_G",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"FIGHT_B","FightB_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"FIGHT_B","FightB_M",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"FIGHT_B","HitB_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"FIGHT_B","HitB_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"FIGHT_B","HitB_3",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfightc", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfightc [1-12]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animfightc [1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FIGHT_C","FightC_1",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"FIGHT_C","FightC_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"FIGHT_C","FightC_block",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"FIGHT_C","FightC_blocking",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"FIGHT_C","FightC_G",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"FIGHT_C","FightC_IDLE",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"FIGHT_C","FightC_M",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"FIGHT_C","FightC_Spar",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"FIGHT_C","HitC_1",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"FIGHT_C","HitC_2",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"FIGHT_C","HitC_3",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfightd", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfightd [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animfightd [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"FIGHT_D","FightD_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"FIGHT_D","FightD_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"FIGHT_D","FightD_block",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"FIGHT_D","FightD_G",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"FIGHT_D","FightD_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"FIGHT_D","FightD_M",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"FIGHT_D","HitD_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"FIGHT_D","HitD_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"FIGHT_D","HitD_3",4.1,0,1,1,1,1);
				}
				return 1;
			}

			if(strcmp(cmd, "/animfighte", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfighte [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animfighte [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FIGHT_E","FightKick",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"FIGHT_E","FightKick_B",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"FIGHT_E","Hit_fightkick",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"FIGHT_E","Hit_fightkick_B",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animflamef", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animflamef [1-1]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 1) {
					SCM(playerid,0xFF0000FF,">Write /animflamef [1-1]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"FLAME","FLAME_fire",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animflowers", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animflowers [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animflowers [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"Flowers","Flower_attack",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"Flowers","Flower_attack_M",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"Flowers","Flower_Hit",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animghands", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animghands [1-20]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 20) {
					SCM(playerid,0xFF0000FF,">Write /animghands [1-20]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"GHANDS","gsign1",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"GHANDS","gsign2",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"GHANDS","gsign3",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"GHANDS","gsign3LH",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"GHANDS","gsign4",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"GHANDS","gsign4LH",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"GHANDS","gsign5",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"GHANDS","gsign5LH",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"GHANDS","LHGsign1",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"GHANDS","LHGsign2",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"GHANDS","LHGsign3",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"GHANDS","LHGsign4",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"GHANDS","LHGsign5",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"GHANDS","RHGsign1",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"GHANDS","RHGsign2",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"GHANDS","RHGsign3",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"GHANDS","RHGsign4",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"GHANDS","RHGsign5",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animfw", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animfw [1-9]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 9) {
					SCM(playerid,0xFF0000FF,">Write /animfw [1-9]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"Freeweights","gym_barbell",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"Freeweights","gym_free_A",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"Freeweights","gym_free_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"Freeweights","gym_free_celebrate",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"Freeweights","gym_free_down",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"Freeweights","gym_free_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"Freeweights","gym_free_pickup",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"Freeweights","gym_free_putdown",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"Freeweights","gym_free_up_smooth",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animghetto", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animghetto [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animghetto [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"GHETTO_DB","GDB_Car2_PLY",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"GHETTO_DB","GDB_Car2_SMO",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"GHETTO_DB","GDB_Car2_SWE",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"GHETTO_DB","GDB_Car_PLY",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"GHETTO_DB","GDB_Car_RYD",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"GHETTO_DB","GDB_Car_SMO",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"GHETTO_DB","GDB_Car_SWE",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animgog", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animgog [1-1]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 1) {
					SCM(playerid,0xFF0000FF,">Write /animgog [1-1]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"goggles","goggles_put_on",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animgraffity", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animgraffity [1-2]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 2) {
						SCM(playerid,0xFF0000FF,">Write /animgraffity [1-2]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"GRAFFITI","graffiti_Chkout",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"GRAFFITI","spraycan_fire",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animgreya", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animgreya [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animgreya [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"GRAVEYARD","mrnF_loop",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"GRAVEYARD","mrnM_loop",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"GRAVEYARD","prst_loopa",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animgren", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animgren [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animgren [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"GRENADE","WEAPON_start_throw",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"GRENADE","WEAPON_throw",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"GRENADE","WEAPON_throwu",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animhaircut", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animhaircut [1-13]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 13) {
					SCM(playerid,0xFF0000FF,">Write /animhaircut [1-13]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"HAIRCUTS","BRB_Beard_01",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"HAIRCUTS","BRB_Buy",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"HAIRCUTS","BRB_Cut",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"HAIRCUTS","BRB_Cut_In",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"HAIRCUTS","BRB_Cut_Out",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"HAIRCUTS","BRB_Hair_01",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"HAIRCUTS","BRB_Hair_02",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"HAIRCUTS","BRB_In",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"HAIRCUTS","BRB_Out",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"HAIRCUTS","BRB_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"HAIRCUTS","BRB_Sit_In",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"HAIRCUTS","BRB_Sit_Loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 13) {
					Anim(playerid,"HAIRCUTS","BRB_Sit_Out",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animheist", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animheist [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animheist [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"HEIST9","CAS_G2_GasKO",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"HEIST9","swt_wllpk_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"HEIST9","swt_wllpk_L_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"HEIST9","swt_wllpk_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"HEIST9","swt_wllpk_R_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"HEIST9","swt_wllshoot_in_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"HEIST9","swt_wllshoot_in_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"HEIST9","swt_wllshoot_out_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"HEIST9","swt_wllshoot_out_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animinthouse", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animinthouse [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animinthouse [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"INT_HOUSE","BED_In_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"INT_HOUSE","BED_In_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"INT_HOUSE","BED_Loop_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"INT_HOUSE","BED_Loop_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"INT_HOUSE","BED_Out_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"INT_HOUSE","BED_Out_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"INT_HOUSE","LOU_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"INT_HOUSE","LOU_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"INT_HOUSE","wash_up",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animintoffice", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animintoffice [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animintoffice [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"INT_OFFICE","FF_Dam_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_2Idle_180",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Bored_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Crash",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Drink",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Idle_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Read",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Type_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"INT_OFFICE","OFF_Sit_Watch",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animplayerdbf", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animplayerdbf [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animplayerdbf [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"PLAYER_DVBYS","Plyr_DrivebyBwd",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"PLAYER_DVBYS","Plyr_DrivebyFwd",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"PLAYER_DVBYS","Plyr_DrivebyLHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"PLAYER_DVBYS","Plyr_DrivebyRHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animplayidles", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animplayidles [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animplayidles [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"PLAYIDLES","shift",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"PLAYIDLES","shldr",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"PLAYIDLES","stretch",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"PLAYIDLES","strleg",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"PLAYIDLES","time",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animpolice", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animpolice [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animpolice [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"POLICE","CopTraf_Away",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"POLICE","CopTraf_Come",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"POLICE","CopTraf_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"POLICE","CopTraf_Stop",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"POLICE","COP_getoutcar_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"POLICE","Cop_move_FWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"POLICE","crm_drgbst_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"POLICE","Door_Kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"POLICE","plc_drgbst_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"POLICE","plc_drgbst_02",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animpool", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animpool [1-21]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 21) {
					SCM(playerid,0xFF0000FF,">Write /animpool [1-21]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"POOL","POOL_ChalkCue",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"POOL","POOL_Idle_Stance",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"POOL","POOL_Long_Shot",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"POOL","POOL_Long_Shot_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"POOL","POOL_Long_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"POOL","POOL_Long_Start_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"POOL","POOL_Med_Shot",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"POOL","POOL_Med_Shot_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"POOL","POOL_Med_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"POOL","POOL_Med_Start_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"POOL","POOL_Place_White",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"POOL","POOL_Short_Shot",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"POOL","POOL_Short_Shot_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"POOL","POOL_Short_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"POOL","POOL_Short_Start_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"POOL","POOL_Walk",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"POOL","POOL_Walk_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"POOL","POOL_XLong_Shot",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"POOL","POOL_XLong_Shot_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"POOL","POOL_XLong_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"POOL","POOL_XLong_Start_O",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animpoor", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animpoor [1-2]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 2) {
					SCM(playerid,0xFF0000FF,">Write /animpoor [1-2]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"POOR","WINWASH_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"POOR","WINWASH_Wash2Beg",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animpython", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animpython [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animpython [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"PYTHON","python_crouchfire",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"PYTHON","python_crouchreload",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"PYTHON","python_fire",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"PYTHON","python_fire_poor",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"PYTHON","python_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animquad", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animquad [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 17) {
					SCM(playerid,0xFF0000FF,">Write /animquad [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"QUAD","QUAD_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"QUAD","QUAD_driveby_FT",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"QUAD","QUAD_driveby_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"QUAD","QUAD_driveby_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"QUAD","QUAD_FWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"QUAD","QUAD_getoff_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"QUAD","QUAD_getoff_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"QUAD","QUAD_getoff_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"QUAD","QUAD_geton_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"QUAD","QUAD_geton_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"QUAD","QUAD_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"QUAD","QUAD_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"QUAD","QUAD_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"QUAD","QUAD_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"QUAD","QUAD_reverse",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"QUAD","QUAD_ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"QUAD","QUAD_Right",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animquadbz", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animquadbz [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animquadbz [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"QUAD_DBZ","Pass_Driveby_BWD",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"QUAD_DBZ","Pass_Driveby_FWD",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"QUAD_DBZ","Pass_Driveby_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"QUAD_DBZ","Pass_Driveby_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animrapping", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animrapping [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animrapping [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"RAPPING","Laugh_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"RAPPING","RAP_A_IN",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"RAPPING","RAP_A_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"RAPPING","RAP_A_OUT",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"RAPPING","RAP_B_IN",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"RAPPING","RAP_B_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"RAPPING","RAP_B_OUT",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"RAPPING","RAP_C_Loop",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animrifle", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animrifle [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animrifle [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"RIFLE","RIFLE_crouchfire",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"RIFLE","RIFLE_crouchload",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"RIFLE","RIFLE_fire",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"RIFLE","RIFLE_fire_poor",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"RIFLE","RIFLE_load",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animriot", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animriot [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animriot [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"RIOT","RIOT_ANGRY",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"RIOT","RIOT_ANGRY_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"RIOT","RIOT_challenge",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"RIOT","RIOT_CHANT",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"RIOT","RIOT_FUKU",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"RIOT","RIOT_PUNCHES",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"RIOT","RIOT_shout",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animrobbank", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animrobbank [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animrobbank [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animrocket", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animrocket [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animrocket [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"ROCKET","idle_rocket",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"ROCKET","RocketFire",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"ROCKET","run_rocket",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"ROCKET","walk_rocket",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"ROCKET","WALK_start_rocket",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animrustler", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animrustler [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animrustler [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"RUSTLER","Plane_align_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"RUSTLER","Plane_close",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"RUSTLER","Plane_getin",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"RUSTLER","Plane_getout",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"RUSTLER","Plane_open",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbiked", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbiked [1-18]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbiked [1-18]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"BIKED","BIKEd_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"BIKED","BIKEd_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"BIKED","BIKEd_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"BIKED","BIKEd_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"BIKED","BIKEd_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"BIKED","BIKEd_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"BIKED","BIKEd_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"BIKED","BIKEd_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"BIKED","BIKEd_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"BIKED","BIKEd_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"BIKED","BIKEd_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"BIKED","BIKEd_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"BIKED","BIKEd_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"BIKED","BIKEd_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"BIKED","BIKEd_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"BIKED","BIKEd_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"BIKED","BIKEd_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"BIKED","BIKEd_shuffle",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"BIKED","BIKEd_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animryder", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animryder [1-14]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 14) {
					SCM(playerid,0xFF0000FF,">Write /animryder [1-14]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"RYDER","RYD_Beckon_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"RYDER","RYD_Beckon_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"RYDER","RYD_Beckon_03",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"RYDER","RYD_Die_PT1",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"RYDER","RYD_Die_PT2",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"RYDER","Van_Crate_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"RYDER","Van_Crate_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"RYDER","Van_Fall_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"RYDER","Van_Fall_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"RYDER","Van_Lean_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"RYDER","Van_Lean_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"RYDER","VAN_PickUp_S",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"RYDER","Van_Stand",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"RYDER","Van_Stand_Crate",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"RYDER","Van_Throw",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animscrat", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animscrat [1-12]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animscrat [1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SCRATCHING","scdldlp",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"SCRATCHING","scdlulp",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"SCRATCHING","scdrdlp",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"SCRATCHING","scdrulp",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"SCRATCHING","sclng_l",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"SCRATCHING","sclng_r",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"SCRATCHING","scmid_l",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"SCRATCHING","scmid_r",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"SCRATCHING","scshrtl",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"SCRATCHING","scshrtr",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"SCRATCHING","sc_ltor",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"SCRATCHING","sc_rtol",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animshamal", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animshamal [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animshamal [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SHAMAL","SHAMAL_align",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"SHAMAL","SHAMAL_getin_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"SHAMAL","SHAMAL_getout_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"SHAMAL","SHAMAL_open",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animshop", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animshop [1-24]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 24) {
					SCM(playerid,0xFF0000FF,">Write /animshop [1-24]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SHOP","ROB_2Idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SHOP","ROB_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SHOP","donutdrop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SHOP","ROB_Loop_Threat",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SHOP","ROB_Shifty",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SHOP","ROB_StickUp_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SHOP","SHP_Duck_Fire",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"SHOP","SHP_Gun_Aim",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"SHOP","SHP_Gun_Duck",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"SHOP","SHP_Gun_Fire",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"SHOP","SHP_Gun_Grab",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"SHOP","SHP_Gun_Threat",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"SHOP","SHP_Jump_Glide",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"SHOP","SHP_Jump_Land",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"SHOP","SHP_Jump_Launch",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"SHOP","SHP_Rob_HandsUp",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"SHOP","SHP_Rob_React",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"SHOP","SHP_Serve_End",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"SHOP","SHP_Serve_Idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"SHOP","SHP_Serve_Loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"SHOP","SHP_Serve_Start",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"SHOP","Smoke_RYD",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animshotgun", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animshotgun [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animshotgun [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"SHOTGUN","shotgun_crouchfire",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"SHOTGUN","shotgun_fire",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"SHOTGUN","shotgun_fire_poor",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animskate", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animskate [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animskate [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"SKATE","skate_idle",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"SKATE","skate_run",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"SKATE","skate_sprint",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animvortex", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animvortex [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animvortex [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"VORTEX","CAR_jumpin_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"VORTEX","CAR_jumpin_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"VORTEX","vortex_getout_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"VORTEX","vortex_getout_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animtec", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animtec [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animtec [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"TEC","TEC_crouchfire",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"TEC","TEC_crouchreload",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"TEC","TEC_fire",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"TEC","TEC_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animtrain", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animtrain [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animtrain [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"TRAIN","tran_gtup",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"TRAIN","tran_hng",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"TRAIN","tran_ouch",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"TRAIN","tran_stmb",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animsil", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animsil [1-4]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 4) {
					SCM(playerid,0xFF0000FF,">Write /animsil [1-4]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SILENCED","CrouchReload",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"SILENCED","SilenceCrouchfire",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"SILENCED","Silence_fire",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"SILENCED","Silence_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animtattoo", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animtattoo [1-56]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 56) {
					SCM(playerid,0xFF0000FF,">Write /animtattoo [1-56]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"TATTOOS","TAT_ArmL_In_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"TATTOOS","TAT_ArmL_In_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"TATTOOS","TAT_ArmL_In_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"TATTOOS","TAT_ArmL_Out_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"TATTOOS","TA_ArmL_Out_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"TATTOOS","TAT_ArmL_Out_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"TATTOOS","TAT_ArmL_Pose_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"TATTOOS","TAT_ArmL_Pose_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"TATTOOS","TAT_ArmL_Pose_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"TATTOOS","TAT_ArmR_In_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"TATTOOS","TAT_ArmR_In_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"TATTOOS","TAT_ArmR_In_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"TATTOOS","TAT_ArmR_Out_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"TATTOOS","TAT_ArmR_Out_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"TATTOOS","TAT_ArmR_Out_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"TATTOOS","TAT_ArmR_Pose_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"TATTOOS","TAT_ArmR_Pose_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"TATTOOS","TAT_ArmR_Pose_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"TATTOOS","TAT_Back_In_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"TATTOOS","TAT_Back_In_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"TATTOOS","TAT_Back_In_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"TATTOOS","TAT_Back_Out_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"TATTOOS","TAT_Back_Out_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"TATTOOS","TAT_Back_Out_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 25) {
					Anim(playerid,"TATTOOS","TAT_Back_Pose_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 26) {
					Anim(playerid,"TATTOOS","TAT_Back_Pose_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 27) {
					Anim(playerid,"TATTOOS","TAT_Back_Pose_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 28) {
					Anim(playerid,"TATTOOS","TAT_Back_Sit_In_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 29) {
					Anim(playerid,"TATTOOS","TAT_Back_Sit_Loop_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 30) {
					Anim(playerid,"TATTOOS","TAT_Back_Sit_Out_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 31) {
					Anim(playerid,"TATTOOS","TAT_Bel_In_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 32) {
					Anim(playerid,"TATTOOS","TAT_Bel_In_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 33) {
					Anim(playerid,"TATTOOS","TAT_Bel_Out_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 34) {
					Anim(playerid,"TATTOOS","TAT_Bel_Out_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 35) {
					Anim(playerid,"TATTOOS","TAT_Bel_Pose_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 36) {
					Anim(playerid,"TATTOOS","TAT_Bel_Pose_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 37) {
					Anim(playerid,"TATTOOS","TAT_Che_In_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 38) {
					Anim(playerid,"TATTOOS","Sit_relaxed",4.1,0,1,1,1,1);
				}else if(animationplayed == 39) {
					Anim(playerid,"TATTOOS","TAT_Che_In_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 40) {
					Anim(playerid,"TATTOOS","TAT_Che_In_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 41) {
					Anim(playerid,"TATTOOS","TAT_Che_Out_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 41) {
					Anim(playerid,"TATTOOS","TAT_Che_Out_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 42) {
					Anim(playerid,"TATTOOS","TAT_Che_Out_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 43) {
					Anim(playerid,"TATTOOS","TAT_Che_Pose_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 44) {
					Anim(playerid,"TATTOOS","TAT_Che_Pose_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 45) {
					Anim(playerid,"TATTOOS","TAT_Che_Pose_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 46) {
					Anim(playerid,"TATTOOS","TAT_Idle_Loop_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 47) {
					Anim(playerid,"TATTOOS","TAT_Idle_Loop_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 48) {
					Anim(playerid,"TATTOOS","TAT_Sit_In_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 49) {
					Anim(playerid,"TATTOOS","TAT_Sit_In_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 50) {
					Anim(playerid,"TATTOOS","TAT_Sit_In_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 51) {
					Anim(playerid,"TATTOOS","TAT_Sit_Loop_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 52) {
					Anim(playerid,"TATTOOS","TAT_Sit_Loop_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 53) {
					Anim(playerid,"TATTOOS","TAT_Sit_Loop_T",4.1,0,1,1,1,1);
				}else if(animationplayed == 54) {
					Anim(playerid,"TATTOOS","TAT_Sit_Out_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 55) {
					Anim(playerid,"TATTOOS","TAT_Sit_Out_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 56) {
					Anim(playerid,"TATTOOS","TAT_Sit_Out_T",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animsmoking", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animsmoking [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animsmoking [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SMOKING","F_smklean_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SMOKING","M_smklean_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SMOKING","M_smkstnd_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SMOKING","M_smk_drag",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SMOKING","M_smk_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SMOKING","M_smk_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SMOKING","M_smk_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"SMOKING","M_smk_tap",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animsniper", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animsniper [1-1]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 1) {
					SCM(playerid,0xFF0000FF,">Write /animsniper [1-1]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SNIPER","WEAPON_sniper",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animspray", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animspray [1-2]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 2) {
						SCM(playerid,0xFF0000FF,">Write /animspray [1-2]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"SPRAYCAN","spraycan_fire",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"SPRAYCAN","spraycan_full",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animstrip", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animstrip [1-20]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 20) {
					SCM(playerid,0xFF0000FF,">Write /animstrip [1-20]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"STRIP","PLY_CASH",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"STRIP","PUN_CASH",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"STRIP","PUN_HOLLER",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"STRIP","PUN_LOOP",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"STRIP","strip_A",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"STRIP","strip_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"STRIP","strip_C",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"STRIP","strip_D",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"STRIP","strip_E",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"STRIP","strip_F",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"STRIP","strip_G",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"STRIP","STR_A2B",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"STRIP","STR_B2C",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"STRIP","STR_C1",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"STRIP","STR_C2",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"STRIP","STR_C2B",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"STRIP","STR_Loop_A",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"STRIP","STR_Loop_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"STRIP","STR_Loop_C",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animbath", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animbath [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 18) {
					SCM(playerid,0xFF0000FF,">Write /animbath [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SUNBATHE","batherdown",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"SUNBATHE","batherup",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SUNBATHE","Lay_Bac_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SUNBATHE","Lay_Bac_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SUNBATHE","ParkSit_M_IdleA",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SUNBATHE","ParkSit_M_IdleB",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SUNBATHE","ParkSit_M_IdleC",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SUNBATHE","ParkSit_M_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"SUNBATHE","ParkSit_M_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"SUNBATHE","ParkSit_W_idleA",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"SUNBATHE","ParkSit_W_idleB",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"SUNBATHE","ParkSit_W_idleC",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"SUNBATHE","ParkSit_W_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"SUNBATHE","ParkSit_W_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"SUNBATHE","SBATHE_F_LieB2Sit",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"SUNBATHE","SBATHE_F_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"SUNBATHE","SitnWait_in_W",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"SUNBATHE","SitnWait_out_W",4.1,0,1,1,1,1);
				}
				return 1;
			}
					if(strcmp(cmd, "/걷기", true) == 0) {
					if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
					SCM(playerid,COLOR_ERROR,"(Hint) /걷기 [1-39]");
					return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 39) {
						SCM(playerid,COLOR_ERROR,"(Hint) /걷기 [1-39]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"PED","run_civi",4.1,1,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"PED","run_1armed",4.1,1,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"PED","run_armed",4.1,1,1,1,1,1);
					} else if(animationplayed == 4) {
						Anim(playerid,"PED","Player_Sneak",4.1,1,1,1,1,1);
					} else if(animationplayed == 5) {
						Anim(playerid,"SWEET","LaFin_Sweet",4.1,1,1,1,1,1);
					} else if(animationplayed == 6) {
						Anim(playerid,"PED","run_fat",4.1,1,1,1,1,1);
					} else if(animationplayed == 7) {
						Anim(playerid,"PED","run_fatold",4.1,1,1,1,1,1);
					} else if(animationplayed == 8) {
						Anim(playerid,"PED","run_gang1",4.1,1,1,1,1,1);
					} else if(animationplayed == 9) {
						Anim(playerid,"PED","run_old",4.1,1,1,1,1,1);
					} else if(animationplayed == 10) {
						Anim(playerid,"PED","run_player",4.1,1,1,1,1,1);
					} else if(animationplayed == 11) {
						Anim(playerid,"PED","run_rocket",4.1,1,1,1,1,1);
					} else if(animationplayed == 12) {
						Anim(playerid,"PED","Run_Wuzi",4.1,1,1,1,1,1);
					} else if(animationplayed == 13) {
						Anim(playerid,"PED","swat_run",4.1,1,1,1,1,1);
					} else if(animationplayed == 14) {
						Anim(playerid,"PED","WALK_armed",4.1,1,1,1,1,1);
					} else if(animationplayed == 15) {
						Anim(playerid,"PED","gum_eat",4.1,1,1,1,1,1);
					} else if(animationplayed == 16) {
						Anim(playerid,"PED","WALK_csaw",4.1,1,1,1,1,1);
					} else if(animationplayed == 17) {
						Anim(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
					} else if(animationplayed == 18) {
						Anim(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
					} else if(animationplayed == 29) {
						Anim(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
					} else if(animationplayed == 20) {
						Anim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
					} else if(animationplayed == 21) {
						Anim(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
					} else if(animationplayed == 22) {
						Anim(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
					} else if(animationplayed == 23) {
						Anim(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
					} else if(animationplayed == 24) {
						Anim(playerid,"PED","WALK_rocket",4.1,1,1,1,1,1);
					} else if(animationplayed == 25) {
						Anim(playerid,"PED","WALK_shuffle",4.1,1,1,1,1,1);
					} else if(animationplayed == 26) {
						Anim(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
					} else if(animationplayed == 27) {
						Anim(playerid,"PED","woman_run",4.1,1,1,1,1,1);
					} else if(animationplayed == 28) {
						Anim(playerid,"PED","WOMAN_runbusy",4.1,1,1,1,1,1);
					} else if(animationplayed == 29) {
						Anim(playerid,"PED","WOMAN_runfatold",4.1,1,1,1,1,1);
					} else if(animationplayed == 30) {
						Anim(playerid,"PED","woman_runpanic",4.1,1,1,1,1,1);
					} else if(animationplayed == 31) {
						Anim(playerid,"PED","WOMAN_runsexy",4.1,1,1,1,1,1);
					} else if(animationplayed == 32) {
						Anim(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
					} else if(animationplayed == 33) {
						Anim(playerid,"PED","WOMAN_walkfatold",4.1,1,1,1,1,1);
					} else if(animationplayed == 34) {
						Anim(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
					} else if(animationplayed == 35) {
						Anim(playerid,"PED","WOMAN_walkold",4.1,1,1,1,1,1);
					} else if(animationplayed == 36) {
						Anim(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
					} else if(animationplayed == 37) {
						Anim(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
					} else if(animationplayed == 38) {
						Anim(playerid,"PED","WOMAN_walkshop",4.1,1,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animswat", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animswat [1-24]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 24) {
					SCM(playerid,0xFF0000FF,">Write /animswat [1-24]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SWAT","gnstwall_injurd",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SWAT","JMP_Wall1m_180",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SWAT","Rail_fall",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SWAT","Rail_fall_crawl",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SWAT","swt_breach_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SWAT","cards_pick_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SWAT","swt_breach_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"SWAT","swt_breach_03",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"SWAT","swt_go",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"SWAT","swt_lkt",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"SWAT","swt_sty",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"SWAT","swt_vent_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"SWAT","swt_vent_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"SWAT","swt_vnt_sht_die",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"SWAT","swt_vnt_sht_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"SWAT","swt_vnt_sht_loop",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"SWAT","swt_wllpk_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 18) {
					Anim(playerid,"SWAT","swt_wllpk_L_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 19) {
					Anim(playerid,"SWAT","swt_wllpk_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 20) {
					Anim(playerid,"SWAT","swt_wllpk_R_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 21) {
					Anim(playerid,"SWAT","swt_wllshoot_in_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 22) {
					Anim(playerid,"SWAT","swt_wllshoot_in_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 23) {
					Anim(playerid,"SWAT","swt_wllshoot_out_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 24) {
					Anim(playerid,"SWAT","swt_wllshoot_out_R",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animsweet", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animsweet [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animsweet [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SWEET","ho_ass_slapped",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SWEET","LaFin_Player",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SWEET","LaFin_Sweet",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SWEET","plyr_hndshldr_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SWEET","sweet_ass_slap",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SWEET","sweet_hndshldr_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SWEET","Sweet_injuredloop",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animswim", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animswim [1-7]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 7) {
					SCM(playerid,0xFF0000FF,">Write /animswim [1-7]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SWIM","Swim_Breast",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SWIM","SWIM_crawl",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SWIM","Swim_Dive_Under",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SWIM","Swim_Glide",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SWIM","Swim_jumpout",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SWIM","Swim_Tread",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SWIM","Swim_Under",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animsword", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animsword [1-10]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 10) {
					SCM(playerid,0xFF0000FF,">Write /animsword [1-10]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"SWORD","sword_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"SWORD","sword_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"SWORD","sword_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"SWORD","sword_4",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"SWORD","sword_block",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"SWORD","Sword_Hit_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"SWORD","Sword_Hit_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"SWORD","Sword_Hit_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"SWORD","sword_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"SWORD","sword_part",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animtank", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animtank [1-6]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 6) {
					SCM(playerid,0xFF0000FF,">Write /animtank [1-6]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"TANK","TANK_align_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"TANK","TANK_close_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"TANK","TANK_doorlocked",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"TANK","TANK_getin_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"TANK","TANK_getout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"TANK","TANK_open_LHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animtruck", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animtruck [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 17) {
					SCM(playerid,0xFF0000FF,">Write /animtruck [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"TRUCK","TRUCK_ALIGN_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"TRUCK","TRUCK_ALIGN_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"TRUCK","TRUCK_closedoor_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"TRUCK","TRUCK_closedoor_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"TRUCK","TRUCK_close_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"TRUCK","TRUCK_close_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"TRUCK","TRUCK_getin_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"TRUCK","TRUCK_getin_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"TRUCK","TRUCK_getout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"TRUCK","TRUCK_getout_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"TRUCK","TRUCK_jackedLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"TRUCK","TRUCK_jackedRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"TRUCK","TRUCK_open_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"TRUCK","TRUCK_open_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"TRUCK","TRUCK_pullout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"TRUCK","TRUCK_pullout_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"TRUCK","TRUCK_Shuffle",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animuzi", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animuzi [1-5]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 5) {
					SCM(playerid,0xFF0000FF,">Write /animuzi [1-5]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"UZI","UZI_crouchfire",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"UZI","UZI_crouchreload",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"UZI","UZI_fire",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"UZI","UZI_fire_poor",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"UZI","UZI_reload",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animvan", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animvan [1-8]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 8) {
					SCM(playerid,0xFF0000FF,">Write /animvan [1-8]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"VAN","VAN_close_back_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"VAN","VAN_close_back_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"VAN","VAN_getin_Back_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"VAN","VAN_getin_Back_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"VAN","VAN_getout_back_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"VAN","VAN_getout_back_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"VAN","VAN_open_back_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"VAN","VAN_open_back_RHS",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animvending", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animvending [1-6]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 6) {
					SCM(playerid,0xFF0000FF,">Write /animvending [1-6]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"VENDING","VEND_Drink2_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"VENDING","vend_eat1_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"VENDING","VEND_Eat_P",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"VENDING","VEND_Use",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"VENDING","VEND_Use_pt2",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animway", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animway [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 17) {
					SCM(playerid,0xFF0000FF,">Write /animway [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"WAYFARER","WF_Back",4.1,0,1,1,1,1);
				}else if(animationplayed == 1) {
					Anim(playerid,"WAYFARER","WF_drivebyFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"WAYFARER","WF_drivebyLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"WAYFARER","WF_drivebyRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"WAYFARER","WF_Fwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"WAYFARER","WF_getoffBACK",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"WAYFARER","WF_getoffLHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"WAYFARER","WF_getoffRHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"WAYFARER","WF_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"WAYFARER","WF_jumponL",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"WAYFARER","WF_jumponR",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"WAYFARER","WF_kick",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"WAYFARER","WF_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"WAYFARER","WF_passenger",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"WAYFARER","WF_pushes",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"WAYFARER","WF_Ride",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"WAYFARER","WF_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"WAYFARER","WF_Still",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animweap", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animweap [1-17]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 17) {
					SCM(playerid,0xFF0000FF,">Write /animweap [1-17]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"WEAPONS","SHP_1H_Lift",4.1,0,1,1,1,1);
				}else if(animationplayed == 2) {
					Anim(playerid,"WEAPONS","SHP_1H_Lift_End",4.1,0,1,1,1,1);
				}else if(animationplayed == 3) {
					Anim(playerid,"WEAPONS","SHP_1H_Ret",4.1,0,1,1,1,1);
				}else if(animationplayed == 4) {
					Anim(playerid,"WEAPONS","SHP_1H_Ret_S",4.1,0,1,1,1,1);
				}else if(animationplayed == 5) {
					Anim(playerid,"WEAPONS","SHP_2H_Lift",4.1,0,1,1,1,1);
				}else if(animationplayed == 6) {
					Anim(playerid,"WEAPONS","SHP_2H_Lift_End",4.1,0,1,1,1,1);
				}else if(animationplayed == 7) {
					Anim(playerid,"WEAPONS","SHP_2H_Ret",4.1,0,1,1,1,1);
				}else if(animationplayed == 8) {
					Anim(playerid,"WEAPONS","SHP_2H_Ret_S",4.1,0,1,1,1,1);
				}else if(animationplayed == 9) {
					Anim(playerid,"WEAPONS","SHP_Ar_Lift",4.1,0,1,1,1,1);
				}else if(animationplayed == 10) {
					Anim(playerid,"WEAPONS","SHP_Ar_Lift_End",4.1,0,1,1,1,1);
				}else if(animationplayed == 11) {
					Anim(playerid,"WEAPONS","SHP_Ar_Ret",4.1,0,1,1,1,1);
				}else if(animationplayed == 12) {
					Anim(playerid,"WEAPONS","SHP_Ar_Ret_S",4.1,0,1,1,1,1);
				}else if(animationplayed == 13) {
					Anim(playerid,"WEAPONS","SHP_G_Lift_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 14) {
					Anim(playerid,"WEAPONS","SHP_G_Lift_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 15) {
					Anim(playerid,"WEAPONS","SHP_Tray_In",4.1,0,1,1,1,1);
				}else if(animationplayed == 16) {
					Anim(playerid,"WEAPONS","SHP_Tray_Out",4.1,0,1,1,1,1);
				}else if(animationplayed == 17) {
					Anim(playerid,"WEAPONS","SHP_Tray_Pose",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animwuzi", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animwuzi [1-12]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 12) {
					SCM(playerid,0xFF0000FF,">Write /animwuzi [1-12]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"WUZI","CS_Dead_Guy",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"WUZI","CS_Plyr_pt1",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"WUZI","CS_Plyr_pt2",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"WUZI","CS_Wuzi_pt1",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"WUZI","CS_Wuzi_pt2",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"WUZI","Walkstart_Idle_01",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"WUZI","Wuzi_follow",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"WUZI","Wuzi_Greet_Plyr",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"WUZI","Wuzi_Greet_Wuzi",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"WUZI","Wuzi_grnd_chk",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"WUZI","Wuzi_stand_loop",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"WUZI","Wuzi_Walk",4.1,0,1,1,1,1);
				}
				return 1;
			}
			if(strcmp(cmd, "/animat", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animat [1-3]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 3) {
						SCM(playerid,0xFF0000FF,">Write /animat [1-3]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"Attractors","Stepsit_in",4.1,0,1,1,1,1);
					} else if(animationplayed == 2) {
						Anim(playerid,"Attractors","Stepsit_loop",4.1,0,1,1,1,1);
					} else if(animationplayed == 3) {
						Anim(playerid,"Attractors","Stepsit_out",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animairport", true) == 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid,0xFF0000FF,">Write /animairport [1]");
						return 1;
					}
					animationplayed = strval(tmp);
					if(animationplayed < 1 || animationplayed > 1) {
						SCM(playerid,0xFF0000FF,">Write /animairport [1]");
						return 1;
					}
					if(animationplayed == 1) {
						Anim(playerid,"AIRPORT","thrw_barl_thrw",4.1,0,1,1,1,1);
					}
					return 1;
				}
			}
			if(strcmp(cmd, "/animped", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid,0xFF0000FF,">Write /animped [1-295]");
					return 1;
				}
				animationplayed = strval(tmp);
				if(animationplayed < 1 || animationplayed > 295) {
					SCM(playerid,0xFF0000FF,">Write /animped [1-295]");
					return 1;
				}
				if(animationplayed == 1) {
					Anim(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
				} else if(animationplayed == 2) {
					Anim(playerid,"PED","WALK_DRUNK",4.1,0,1,1,1,1);
				} else if(animationplayed == 3) {
					Anim(playerid,"PED","abseil",4.1,0,1,1,1,1);
				} else if(animationplayed == 4) {
					Anim(playerid,"PED","ARRESTgun",4.1,0,1,1,1,1);
				} else if(animationplayed == 5) {
					Anim(playerid,"PED","ATM",4.1,0,1,1,1,1);
				} else if(animationplayed == 6) {
					Anim(playerid,"PED","BIKE_elbowL",4.1,0,1,1,1,1);
				} else if(animationplayed == 7) {
					Anim(playerid,"PED","BIKE_fallR",4.1,0,1,1,1,1);
				} else if(animationplayed == 8) {
					Anim(playerid,"PED","BIKE_fall_off",4.1,0,1,1,1,1);
				} else if(animationplayed == 9) {
					Anim(playerid,"PED","BIKE_pickupL",4.1,0,1,1,1,1);
				} else if(animationplayed == 10) {
					Anim(playerid,"PED","BIKE_pickupR",4.1,0,1,1,1,1);
				} else if(animationplayed == 11) {
					Anim(playerid,"PED","BIKE_pullupL",4.1,0,1,1,1,1);
				} else if(animationplayed == 12) {
					Anim(playerid,"PED","BIKE_pullupR",4.1,0,1,1,1,1);
				} else if(animationplayed == 13) {
					Anim(playerid,"PED","bomber",4.1,0,1,1,1,1);
				} else if(animationplayed == 14) {
					Anim(playerid,"PED","CAR_alignHI_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 15) {
					Anim(playerid,"PED","CAR_alignHI_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 16) {
					Anim(playerid,"PED","CAR_align_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 17) {
					Anim(playerid,"PED","CAR_align_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 18) {
					Anim(playerid,"PED","CAR_closedoorL_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 19) {
					Anim(playerid,"PED","CAR_closedoorL_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 20) {
					Anim(playerid,"PED","CAR_closedoor_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 21) {
					Anim(playerid,"PED","CAR_closedoor_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 22) {
					Anim(playerid,"PED","CAR_close_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 23) {
					Anim(playerid,"PED","CAR_crawloutRHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 24) {
					Anim(playerid,"PED","CAR_dead_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 25) {
					Anim(playerid,"PED","CAR_dead_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 26) {
					Anim(playerid,"PED","CAR_doorlocked_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 27) {
					Anim(playerid,"PED","CAR_fallout_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 28) {
					Anim(playerid,"PED","CAR_fallout_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 29) {
					Anim(playerid,"PED","CAR_getinL_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 30) {
					Anim(playerid,"PED","CAR_getinL_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 31) {
					Anim(playerid,"PED","CAR_getin_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 32) {
					Anim(playerid,"PED","CAR_getin_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 33) {
					Anim(playerid,"PED","CAR_getoutL_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 34) {
					Anim(playerid,"PED","CAR_getout_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 35) {
					Anim(playerid,"PED","CAR_getout_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 36) {
					Anim(playerid,"PED","car_hookertalk",4.1,0,1,1,1,1);
				} else if(animationplayed == 37) {
					Anim(playerid,"PED","CAR_jackedLHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 38) {
					Anim(playerid,"PED","CAR_jackedRHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 39) {
					Anim(playerid,"PED","CAR_jumpin_LHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 40) {
					Anim(playerid,"PED","CAR_LB",4.1,0,1,1,1,1);
				} else if(animationplayed == 41) {
					Anim(playerid,"PED","CAR_LB_pro",4.1,0,1,1,1,1);
				} else if(animationplayed == 42) {
					Anim(playerid,"PED","CAR_LB_weak",4.1,0,1,1,1,1);
				} else if(animationplayed == 43) {
					Anim(playerid,"PED","CAR_LjackedLHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 44) {
					Anim(playerid,"PED","CAR_Lshuffle_RHS",4.1,0,1,1,1,1);
				} else if(animationplayed == 45) {
					Anim(playerid,"PED","CAR_Lsit",4.1,0,1,1,1,1);
				} else if(animationplayed == 46) {
					Anim(playerid,"PED","CAR_open_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 47) {
					Anim(playerid,"PED","CAR_open_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 49) {
					Anim(playerid,"PED","CAR_pulloutL_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 50) {
					Anim(playerid,"PED","CAR_pulloutL_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 51) {
					Anim(playerid,"PED","CAR_pullout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 52) {
					Anim(playerid,"PED","CAR_pullout_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 53) {
					Anim(playerid,"PED","CAR_Qjacked",4.1,0,1,1,1,1);
				}else if(animationplayed == 54) {
					Anim(playerid,"PED","CAR_rolldoor",4.1,0,1,1,1,1);
				}else if(animationplayed == 55) {
					Anim(playerid,"PED","CAR_rolldoorLO",4.1,0,1,1,1,1);
				}else if(animationplayed == 56) {
					Anim(playerid,"PED","CAR_rollout_LHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 57) {
					Anim(playerid,"PED","CAR_rollout_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 58) {
					Anim(playerid,"PED","CAR_shuffle_RHS",4.1,0,1,1,1,1);
				}else if(animationplayed == 59) {
					Anim(playerid,"PED","CAR_sit",4.1,0,1,1,1,1);
				}else if(animationplayed == 60) {
					Anim(playerid,"PED","CAR_sitp",4.1,0,1,1,1,1);
				}else if(animationplayed == 61) {
					Anim(playerid,"PED","CAR_sitpLO",4.1,0,1,1,1,1);
				}else if(animationplayed == 62) {
					Anim(playerid,"PED","CAR_sit_pro",4.1,0,1,1,1,1);
				}else if(animationplayed == 63) {
					Anim(playerid,"PED","CAR_sit_weak",4.1,0,1,1,1,1);
				}else if(animationplayed == 64) {
					Anim(playerid,"PED","CAR_tune_radio",4.1,0,1,1,1,1);
				}else if(animationplayed == 65) {
					Anim(playerid,"PED","CLIMB_idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 66) {
					Anim(playerid,"PED","CLIMB_jump",4.1,0,1,1,1,1);
				}else if(animationplayed == 67) {
					Anim(playerid,"PED","CLIMB_jump2fall",4.1,0,1,1,1,1);
				}else if(animationplayed == 68) {
					Anim(playerid,"PED","CLIMB_jump_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 69) {
					Anim(playerid,"PED","CLIMB_Pull",4.1,0,1,1,1,1);
				}else if(animationplayed == 70) {
					Anim(playerid,"PED","CLIMB_Stand",4.1,0,1,1,1,1);
				}else if(animationplayed == 71) {
					Anim(playerid,"PED","CLIMB_Stand_finish",4.1,0,1,1,1,1);
				}else if(animationplayed == 72) {
					Anim(playerid,"PED","cower",4.1,0,1,1,1,1);
				}else if(animationplayed == 73) {
					Anim(playerid,"PED","Crouch_Roll_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 74) {
					Anim(playerid,"PED","Crouch_Roll_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 75) {
					Anim(playerid,"PED","DAM_armL_frmBK",4.1,0,1,1,1,1);
				}else if(animationplayed == 76) {
					Anim(playerid,"PED","DAM_armL_frmFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 77) {
					Anim(playerid,"PED","DAM_armL_frmLT",4.1,0,1,1,1,1);
				}else if(animationplayed == 78) {
					Anim(playerid,"PED","DAM_armR_frmBK",4.1,0,1,1,1,1);
				}else if(animationplayed == 79) {
					Anim(playerid,"PED","DAM_armR_frmFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 80) {
					Anim(playerid,"PED","DAM_armR_frmRT",4.1,0,1,1,1,1);
				}else if(animationplayed == 81) {
					Anim(playerid,"PED","DAM_LegL_frmBK",4.1,0,1,1,1,1);
				}else if(animationplayed == 82) {
					Anim(playerid,"PED","DAM_LegL_frmFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 83) {
					Anim(playerid,"PED","DAM_LegL_frmLT",4.1,0,1,1,1,1);
				}else if(animationplayed == 84) {
					Anim(playerid,"PED","DAM_LegR_frmBK",4.1,0,1,1,1,1);
				}else if(animationplayed == 85) {
					Anim(playerid,"PED","DAM_LegR_frmFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 86) {
					Anim(playerid,"PED","DAM_LegR_frmRT",4.1,0,1,1,1,1);
				}else if(animationplayed == 87) {
					Anim(playerid,"PED","DAM_stomach_frmBK",4.1,0,1,1,1,1);
				}else if(animationplayed == 88) {
					Anim(playerid,"PED","DAM_stomach_frmFT",4.1,0,1,1,1,1);
				}else if(animationplayed == 89) {
					Anim(playerid,"PED","DAM_stomach_frmLT",4.1,0,1,1,1,1);
				}else if(animationplayed == 90) {
					Anim(playerid,"PED","DAM_stomach_frmRT",4.1,0,1,1,1,1);
				}else if(animationplayed == 91) {
					Anim(playerid,"PED","DOOR_LHinge_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 92) {
					Anim(playerid,"PED","DOOR_RHinge_O",4.1,0,1,1,1,1);
				}else if(animationplayed == 93) {
					Anim(playerid,"PED","DrivebyL_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 94) {
					Anim(playerid,"PED","DrivebyL_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 95) {
					Anim(playerid,"PED","Driveby_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 96) {
					Anim(playerid,"PED","Driveby_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 97) {
					Anim(playerid,"PED","DRIVE_BOAT",4.1,0,1,1,1,1);
				}else if(animationplayed == 98) {
					Anim(playerid,"PED","DRIVE_BOAT_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 99) {
					Anim(playerid,"PED","DRIVE_BOAT_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 100) {
					Anim(playerid,"PED","DRIVE_BOAT_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 101) {
					Anim(playerid,"PED","Drive_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 102) {
					Anim(playerid,"PED","Drive_LO_l",4.1,0,1,1,1,1);
				}else if(animationplayed == 103) {
					Anim(playerid,"PED","Drive_LO_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 104) {
					Anim(playerid,"PED","Drive_L_pro",4.1,0,1,1,1,1);
				}else if(animationplayed == 105) {
					Anim(playerid,"PED","Drive_L_pro_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 106) {
					Anim(playerid,"PED","Drive_L_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 107) {
					Anim(playerid,"PED","Drive_L_weak",4.1,0,1,1,1,1);
				}else if(animationplayed == 108) {
					Anim(playerid,"PED","Drive_L_weak_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 109) {
					Anim(playerid,"PED","Drive_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 110) {
					Anim(playerid,"PED","Drive_R_pro",4.1,0,1,1,1,1);
				}else if(animationplayed == 111) {
					Anim(playerid,"PED","Drive_R_pro_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 112) {
					Anim(playerid,"PED","Drive_R_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 113) {
					Anim(playerid,"PED","Drive_R_weak",4.1,0,1,1,1,1);
				}else if(animationplayed == 114) {
					Anim(playerid,"PED","Drive_R_weak_slow",4.1,0,1,1,1,1);
				}else if(animationplayed == 115) {
					Anim(playerid,"PED","Drive_truck",4.1,0,1,1,1,1);
				}else if(animationplayed == 116) {
					Anim(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 117) {
					Anim(playerid,"PED","DRIVE_truck_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 118) {
					Anim(playerid,"PED","DRIVE_truck_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 119) {
					Anim(playerid,"PED","Drown",4.1,0,1,1,1,1);
				}else if(animationplayed == 120) {
					Anim(playerid,"PED","DUCK_cower",4.1,0,1,1,1,1);
				}else if(animationplayed == 121) {
					Anim(playerid,"PED","endchat_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 122) {
					Anim(playerid,"PED","endchat_02",4.1,0,1,1,1,1);
				}else if(animationplayed == 123) {
					Anim(playerid,"PED","endchat_03",4.1,0,1,1,1,1);
				}else if(animationplayed == 124) {
					Anim(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 125) {
					Anim(playerid,"PED","DRIVE_truck_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 126) {
					Anim(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
				}else if(animationplayed == 127) {
					Anim(playerid,"PED","EV_step",4.1,0,1,1,1,1);
				}else if(animationplayed == 128) {
					Anim(playerid,"PED","facanger",4.1,0,1,1,1,1);
				}else if(animationplayed == 129) {
					Anim(playerid,"PED","facanger",4.1,0,1,1,1,1);
				}else if(animationplayed == 130) {
					Anim(playerid,"PED","facgum",4.1,0,1,1,1,1);
				}else if(animationplayed == 131) {
					Anim(playerid,"PED","facsurp",4.1,0,1,1,1,1);
				}else if(animationplayed == 132) {
					Anim(playerid,"PED","facsurpm",4.1,0,1,1,1,1);
				}else if(animationplayed == 133) {
					Anim(playerid,"PED","factalk",4.1,0,1,1,1,1);
				}else if(animationplayed == 134) {
					Anim(playerid,"PED","facurios",4.1,0,1,1,1,1);
				}else if(animationplayed == 135) {
					Anim(playerid,"PED","FALL_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 136) {
					Anim(playerid,"PED","FALL_collapse",4.1,0,1,1,1,1);
				}else if(animationplayed == 137) {
					Anim(playerid,"PED","FALL_fall",4.1,0,1,1,1,1);
				}else if(animationplayed == 138) {
					Anim(playerid,"PED","FALL_front",4.1,0,1,1,1,1);
				}else if(animationplayed == 139) {
					Anim(playerid,"PED","FALL_glide",4.1,0,1,1,1,1);
				}else if(animationplayed == 140) {
					Anim(playerid,"PED","FALL_land",4.1,0,1,1,1,1);
				}else if(animationplayed == 141) {
					Anim(playerid,"PED","FALL_skyDive",4.1,0,1,1,1,1);
				}else if(animationplayed == 142) {
					Anim(playerid,"PED","Fight2Idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 143) {
					Anim(playerid,"PED","FightA_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 144) {
					Anim(playerid,"PED","FightA_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 145) {
					Anim(playerid,"PED","FightA_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 146) {
					Anim(playerid,"PED","FightA_block",4.1,0,1,1,1,1);
				}else if(animationplayed == 147) {
					Anim(playerid,"PED","FightA_G",4.1,0,1,1,1,1);
				}else if(animationplayed == 148) {
					Anim(playerid,"PED","FightA_M",4.1,0,1,1,1,1);
				}else if(animationplayed == 149) {
					Anim(playerid,"PED","FIGHTIDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 150) {
					Anim(playerid,"PED","FightShB",4.1,0,1,1,1,1);
				}else if(animationplayed == 151) {
					Anim(playerid,"PED","FightShF",4.1,0,1,1,1,1);
				}else if(animationplayed == 152) {
					Anim(playerid,"PED","FightSh_BWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 153) {
					Anim(playerid,"PED","FightSh_FWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 154) {
					Anim(playerid,"PED","FightSh_Left",4.1,0,1,1,1,1);
				}else if(animationplayed == 155) {
					Anim(playerid,"PED","FightSh_Right",4.1,0,1,1,1,1);
				}else if(animationplayed == 156) {
					Anim(playerid,"PED","flee_lkaround_01",4.1,0,1,1,1,1);
				}else if(animationplayed == 157) {
					Anim(playerid,"PED","FLOOR_hit",4.1,0,1,1,1,1);
				}else if(animationplayed == 158) {
					Anim(playerid,"PED","FLOOR_hit_f",4.1,0,1,1,1,1);
				}else if(animationplayed == 159) {
					Anim(playerid,"PED","fucku",4.1,0,1,1,1,1);
				}else if(animationplayed == 160) {
					Anim(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1);
				}else if(animationplayed == 161) {
					Anim(playerid,"PED","gas_cwr",4.1,0,1,1,1,1);
				}else if(animationplayed == 162) {
					Anim(playerid,"PED","getup",4.1,0,1,1,1,1);
				}else if(animationplayed == 163) {
					Anim(playerid,"PED","getup_front",4.1,0,1,1,1,1);
				}else if(animationplayed == 164) {
					Anim(playerid,"PED","gum_eat",4.1,0,1,1,1,1);
				}else if(animationplayed == 165) {
					Anim(playerid,"PED","GunCrouchBwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 166) {
					Anim(playerid,"PED","GunCrouchFwd",4.1,0,1,1,1,1);
				}else if(animationplayed == 167) {
					Anim(playerid,"PED","GunMove_BWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 168) {
					Anim(playerid,"PED","GunMove_FWD",4.1,0,1,1,1,1);
				}else if(animationplayed == 169) {
					Anim(playerid,"PED","GunMove_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 170) {
					Anim(playerid,"PED","GunMove_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 171) {
					Anim(playerid,"PED","Gun_2_IDLE",4.1,0,1,1,1,1);
				}else if(animationplayed == 172) {
					Anim(playerid,"PED","GUN_BUTT",4.1,0,1,1,1,1);
				}else if(animationplayed == 173) {
					Anim(playerid,"PED","GUN_BUTT_crouch",4.1,0,1,1,1,1);
				}else if(animationplayed == 174) {
					Anim(playerid,"PED","Gun_stand",4.1,0,1,1,1,1);
				}else if(animationplayed == 175) {
					Anim(playerid,"PED","handscower",4.1,0,1,1,1,1);
				}else if(animationplayed == 176) {
					Anim(playerid,"PED","handsup",4.1,0,1,1,1,1);
				}else if(animationplayed == 177) {
					Anim(playerid,"PED","HitA_1",4.1,0,1,1,1,1);
				}else if(animationplayed == 178) {
					Anim(playerid,"PED","HitA_2",4.1,0,1,1,1,1);
				}else if(animationplayed == 179) {
					Anim(playerid,"PED","HitA_3",4.1,0,1,1,1,1);
				}else if(animationplayed == 180) {
					Anim(playerid,"PED","HIT_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 181) {
					Anim(playerid,"PED","HIT_behind",4.1,0,1,1,1,1);
				}else if(animationplayed == 182) {
					Anim(playerid,"PED","HIT_front",4.1,0,1,1,1,1);
				}else if(animationplayed == 183) {
					Anim(playerid,"PED","HIT_GUN_BUTT",4.1,0,1,1,1,1);
				}else if(animationplayed == 184) {
					Anim(playerid,"PED","HIT_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 185) {
					Anim(playerid,"PED","HIT_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 186) {
					Anim(playerid,"PED","HIT_walk",4.1,0,1,1,1,1);
				}else if(animationplayed == 187) {
					Anim(playerid,"PED","HIT_wall",4.1,0,1,1,1,1);
				}else if(animationplayed == 188) {
					Anim(playerid,"PED","Idlestance_fat",4.1,0,1,1,1,1);
				}else if(animationplayed == 189) {
					Anim(playerid,"PED","idlestance_old",4.1,0,1,1,1,1);
				}else if(animationplayed == 190) {
					Anim(playerid,"PED","IDLE_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 191) {
					Anim(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
				}else if(animationplayed == 192) {
					Anim(playerid,"PED","IDLE_csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 193) {
					Anim(playerid,"PED","Idle_Gang1",4.1,0,1,1,1,1);
				}else if(animationplayed == 194) {
					Anim(playerid,"PED","IDLE_HBHB",4.1,0,1,1,1,1);
				}else if(animationplayed == 195) {
					Anim(playerid,"PED","IDLE_ROCKET",4.1,0,1,1,1,1);
				}else if(animationplayed == 196) {
					Anim(playerid,"PED","IDLE_stance",4.1,0,1,1,1,1);
				}else if(animationplayed == 197) {
					Anim(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
				}else if(animationplayed == 198) {
					Anim(playerid,"PED","IDLE_tired",4.1,0,1,1,1,1);
				}else if(animationplayed == 199) {
					Anim(playerid,"PED","Jetpack_Idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 200) {
					Anim(playerid,"PED","JOG_femaleA",4.1,0,1,1,1,1);
				}else if(animationplayed == 201) {
					Anim(playerid,"PED","JOG_maleA",4.1,0,1,1,1,1);
				}else if(animationplayed == 202) {
					Anim(playerid,"PED","JUMP_glide",4.1,0,1,1,1,1);
				}else if(animationplayed == 203) {
					Anim(playerid,"PED","JUMP_land",4.1,0,1,1,1,1);
				}else if(animationplayed == 204) {
					Anim(playerid,"PED","JUMP_launch",4.1,0,1,1,1,1);
				}else if(animationplayed == 205) {
					Anim(playerid,"PED","JUMP_launch_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 206) {
					Anim(playerid,"PED","KART_drive",4.1,0,1,1,1,1);
				}else if(animationplayed == 207) {
					Anim(playerid,"PED","KART_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 208) {
					Anim(playerid,"PED","KART_LB",4.1,0,1,1,1,1);
				}else if(animationplayed == 209) {
					Anim(playerid,"PED","KART_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 210) {
					Anim(playerid,"PED","KD_left",4.1,0,1,1,1,1);
				}else if(animationplayed == 211) {
					Anim(playerid,"PED","KD_right",4.1,0,1,1,1,1);
				}else if(animationplayed == 212) {
					Anim(playerid,"PED","KO_shot_face",4.1,0,1,1,1,1);
				}else if(animationplayed == 213) {
					Anim(playerid,"PED","KO_shot_front",4.1,0,1,1,1,1);
				}else if(animationplayed == 214) {
					Anim(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
				}else if(animationplayed == 215) {
					Anim(playerid,"PED","KO_skid_back",4.1,0,1,1,1,1);
				}else if(animationplayed == 216) {
					Anim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,1);
				}else if(animationplayed == 217) {
					Anim(playerid,"PED","KO_spin_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 218) {
					Anim(playerid,"PED","KO_spin_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 219) {
					Anim(playerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
				}else if(animationplayed == 220) {
					Anim(playerid,"PED","phone_in",4.1,0,1,1,1,1);
				}else if(animationplayed == 221) {
					Anim(playerid,"PED","phone_out",4.1,0,1,1,1,1);
				}else if(animationplayed == 222) {
					Anim(playerid,"PED","phone_talk",4.1,0,1,1,1,1);
				}else if(animationplayed == 223) {
					Anim(playerid,"PED","Player_Sneak",4.1,0,1,1,1,1);
				}else if(animationplayed == 224) {
					Anim(playerid,"PED","Player_Sneak_walkstart",4.1,0,1,1,1,1);
				}else if(animationplayed == 225) {
					Anim(playerid,"PED","roadcross",4.1,0,1,1,1,1);
				}else if(animationplayed == 226) {
					Anim(playerid,"PED","roadcross_female",4.1,0,1,1,1,1);
				}else if(animationplayed == 227) {
					Anim(playerid,"PED","roadcross_gang",4.1,0,1,1,1,1);
				}else if(animationplayed == 228) {
					Anim(playerid,"PED","roadcross_old",4.1,0,1,1,1,1);
				}else if(animationplayed == 229) {
					Anim(playerid,"PED","run_1armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 230) {
					Anim(playerid,"PED","run_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 231) {
					Anim(playerid,"PED","run_civi",4.1,0,1,1,1,1);
				}else if(animationplayed == 232) {
					Anim(playerid,"PED","run_csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 233) {
					Anim(playerid,"PED","run_fat",4.1,0,1,1,1,1);
				}else if(animationplayed == 234) {
					Anim(playerid,"PED","run_fatold",4.1,0,1,1,1,1);
				}else if(animationplayed == 235) {
					Anim(playerid,"PED","run_gang1",4.1,0,1,1,1,1);
				}else if(animationplayed == 236) {
					Anim(playerid,"PED","run_left",4.1,0,1,1,1,1);
				}else if(animationplayed == 237) {
					Anim(playerid,"PED","run_old",4.1,0,1,1,1,1);
				}else if(animationplayed == 238) {
					Anim(playerid,"PED","run_player",4.1,0,1,1,1,1);
				}else if(animationplayed == 239) {
					Anim(playerid,"PED","run_right",4.1,0,1,1,1,1);
				}else if(animationplayed == 240) {
					Anim(playerid,"PED","run_rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 241) {
					Anim(playerid,"PED","Run_stop",4.1,0,1,1,1,1);
				}else if(animationplayed == 242) {
					Anim(playerid,"PED","Run_stopR",4.1,0,1,1,1,1);
				}else if(animationplayed == 243) {
					Anim(playerid,"PED","Run_Wuzi",4.1,0,1,1,1,1);
				}else if(animationplayed == 244) {
					Anim(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
				}else if(animationplayed == 245) {
					Anim(playerid,"PED","SEAT_idle",4.1,0,1,1,1,1);
				}else if(animationplayed == 246) {
					Anim(playerid,"PED","SEAT_up",4.1,0,1,1,1,1);
				}else if(animationplayed == 247) {
					Anim(playerid,"PED","SHOT_leftP",4.1,0,1,1,1,1);
				}else if(animationplayed == 248) {
					Anim(playerid,"PED","SHOT_partial",4.1,0,1,1,1,1);
				}else if(animationplayed == 249) {
					Anim(playerid,"PED","SHOT_partial_B",4.1,0,1,1,1,1);
				}else if(animationplayed == 250) {
					Anim(playerid,"PED","SHOT_rightP",4.1,0,1,1,1,1);
				}else if(animationplayed == 251) {
					Anim(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
				}else if(animationplayed == 252) {
					Anim(playerid,"PED","Smoke_in_car",4.1,0,1,1,1,1);
				}else if(animationplayed == 253) {
					Anim(playerid,"PED","sprint_civi",4.1,0,1,1,1,1);
				}else if(animationplayed == 254) {
					Anim(playerid,"PED","sprint_panic",4.1,0,1,1,1,1);
				}else if(animationplayed == 255) {
					Anim(playerid,"PED","Sprint_Wuzi",4.1,0,1,1,1,1);
				}else if(animationplayed == 256) {
					Anim(playerid,"PED","swat_run",4.1,0,1,1,1,1);
				}else if(animationplayed == 257) {
					Anim(playerid,"PED","Swim_Tread",4.1,0,1,1,1,1);
				}else if(animationplayed == 258) {
					Anim(playerid,"PED","Tap_hand",4.1,0,1,1,1,1);
				}else if(animationplayed == 259) {
					Anim(playerid,"PED","Tap_handP",4.1,0,1,1,1,1);
				}else if(animationplayed == 260) {
					Anim(playerid,"PED","turn_180",4.1,0,1,1,1,1);
				}else if(animationplayed == 261) {
					Anim(playerid,"PED","Turn_L",4.1,0,1,1,1,1);
				}else if(animationplayed == 262) {
					Anim(playerid,"PED","Turn_R",4.1,0,1,1,1,1);
				}else if(animationplayed == 263) {
					Anim(playerid,"PED","WALK_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 264) {
					Anim(playerid,"PED","WALK_civi",4.1,0,1,1,1,1);
				}else if(animationplayed == 265) {
					Anim(playerid,"PED","WALK_csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 266) {
					Anim(playerid,"PED","Walk_DoorPartial",4.1,0,1,1,1,1);
				}else if(animationplayed == 267) {
					Anim(playerid,"PED","WALK_drunk",4.1,0,1,1,1,1);
				}else if(animationplayed == 268) {
					Anim(playerid,"PED","WALK_fat",4.1,0,1,1,1,1);
				}else if(animationplayed == 269) {
					Anim(playerid,"PED","WALK_fatold",4.1,0,1,1,1,1);
				}else if(animationplayed == 270) {
					Anim(playerid,"PED","WALK_gang1",4.1,0,1,1,1,1);
				}else if(animationplayed == 271) {
					Anim(playerid,"PED","WALK_gang2",4.1,0,1,1,1,1);
				}else if(animationplayed == 272) {
					Anim(playerid,"PED","WALK_old",4.1,0,1,1,1,1);
				}else if(animationplayed == 273) {
					Anim(playerid,"PED","WALK_player",4.1,0,1,1,1,1);
				}else if(animationplayed == 274) {
					Anim(playerid,"PED","WALK_rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 275) {
					Anim(playerid,"PED","WALK_shuffle",4.1,0,1,1,1,1);
				}else if(animationplayed == 276) {
					Anim(playerid,"PED","WALK_start",4.1,0,1,1,1,1);
				}else if(animationplayed == 277) {
					Anim(playerid,"PED","WALK_start_armed",4.1,0,1,1,1,1);
				}else if(animationplayed == 278) {
					Anim(playerid,"PED","WALK_start_csaw",4.1,0,1,1,1,1);
				}else if(animationplayed == 279) {
					Anim(playerid,"PED","WALK_start_rocket",4.1,0,1,1,1,1);
				}else if(animationplayed == 280) {
					Anim(playerid,"PED","Walk_Wuzi",4.1,0,1,1,1,1);
				}else if(animationplayed == 281) {
					Anim(playerid,"PED","WEAPON_crouch",4.1,0,1,1,1,1);
				}else if(animationplayed == 282) {
					Anim(playerid,"PED","woman_idlestance",4.1,0,1,1,1,1);
				}else if(animationplayed == 283) {
					Anim(playerid,"PED","woman_run",4.1,0,1,1,1,1);
				}else if(animationplayed == 284) {
					Anim(playerid,"PED","WOMAN_runbusy",4.1,0,1,1,1,1);
				}else if(animationplayed == 285) {
					Anim(playerid,"PED","WOMAN_runfatold",4.1,0,1,1,1,1);
				}else if(animationplayed == 286) {
					Anim(playerid,"PED","woman_runpanic",4.1,0,1,1,1,1);
				}else if(animationplayed == 287) {
					Anim(playerid,"PED","WOMAN_runsexy",4.1,0,1,1,1,1);
				}else if(animationplayed == 288) {
					Anim(playerid,"PED","WOMAN_walkbusy",4.1,0,1,1,1,1);
				}else if(animationplayed == 289) {
					Anim(playerid,"PED","WOMAN_walkfatold",4.1,0,1,1,1,1);
				}else if(animationplayed == 290) {
					Anim(playerid,"PED","WOMAN_walknorm",4.1,0,1,1,1,1);
				}else if(animationplayed == 291) {
					Anim(playerid,"PED","WOMAN_walkold",4.1,0,1,1,1,1);
				}else if(animationplayed == 292) {
					Anim(playerid,"PED","WOMAN_walkpro",4.1,0,1,1,1,1);
				}else if(animationplayed == 293) {
					Anim(playerid,"PED","WOMAN_walksexy",4.1,0,1,1,1,1);
				}else if(animationplayed == 294) {
					Anim(playerid,"PED","WOMAN_walkshop",4.1,0,1,1,1,1);
				}else if(animationplayed == 295) {
					Anim(playerid,"PED","XPRESSscratch",4.1,0,1,1,1,1);
				}
				return 1;
			}

		if(!strcmp(cmdtext, "/팸문열기", true) || !strcmp(cmdtext, "/og", true))
		{
			if(PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8)
			{
				if (PlayerToPoint(3, playerid,-3438.1901855469, -2142.0822753906, 20.502220153809))
				{
					MoveObject(MMC[0],-3438.1901855469, -2142.0822753906, 26.502220153809, 3.5);
					SetTimer("MMC1", 1000, 0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
				}
				else if (PlayerToPoint(3, playerid,-3424.5390625, -2153.9677734375, 14.642660140991))
				{
					MoveObject(MMC[1],-3424.5390625, -2153.9677734375, 6.642660140991, 3.5);
					SetTimer("MMC2", 1000, 0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
				}
				else if (PlayerToPoint(3, playerid,-3476.3793945313, -2145.2092285156, 5.3468780517578))
				{
					MoveObject(MMC[2],-3476.3793945313, -2145.2092285156, -1.3468780517578, 3.5);
					SetTimer("MMC3", 1000, 0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3)
			{
				if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
				{
					MoveObject(pdgate1,1599.053344,-1638.123168,14.122960, 1.5);
					SetTimer("GateClose", 12000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
				}
				else if(PlayerToPoint(20, playerid, 469.526,-1957.514,4.744))//mafia
				{
				MoveObject(ryehans,469.526,-1957.514,-10.730,3.5);
				SetTimer("ryehthansekedktlqkf", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 교도소의 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if (PlayerToPoint(15, playerid,1544.700317,-1630.735717,13.096980))
				{
					DestroyObject( pdgate2 );
					pdgate3 = CreateObject(968,1544.700317,-1630.735717,12.924660,0.000000,0.000000,270.972869);
					SetTimer("GateClose5", 6000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,344.778,1797.585,19.910))
				{
					MoveObject(rnsdls,344.778,1797.585,12.910, 2.2);
					SetTimer("rnsdlsClose", 7000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,96.676987, 1920.462036, 20.771591))
				{
					MoveObject(rnsdls2,96.676987, 1920.462036, 12.771591, 3.5);
					SetTimer("rnsdls2Close", 5000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,785.955,-1151.830,26.597))
				{
					MoveObject(Test1,785.955,-1151.830,16.597, 3.5);
					SetTimer("Test1Close", 5000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,665.361,-1311.114,16.460))
				{
					MoveObject(Test2,665.361,-1311.114,8.210, 3.5);
					SetTimer("Test2Close", 5000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,659.946,-1225.762,19.093))//야쿠자
				{
					if(PlayerInfo[playerid][pMember] == 14)//yakuza
					{
						MoveObject(Test3,659.946,-1225.762,10.343, 3.5);
						SetTimer("Test3Close", 5000, 0);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string),"* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
				}
			}
			else if(PlayerInfo[playerid][pLeader] || PlayerInfo[playerid][pMember])
			{
			    MoveObject(MMC[3],-772.5, -1384.6999511719, 8.699999809265, 3.5);
                SetTimer("MMC4", 5000, 0);
			}
			else if(PlayerInfo[playerid][pJob] != 20)
			{
				MoveObject(taxi,923.502,-1240.253,17.651,3.5);
				MoveObject(taxi2,923.960,-1205.359,17.651,3.5);
				SetTimer("taxiClose", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			else if(PlayerInfo[playerid][pMember] == 6)//mafia
			{
				MoveObject(Mapia1,1245.597,-767.388,88.319,3.5);
				SetTimer("Mapia1Close", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			else return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
			return 1;
		}
		//----------------------------------[ooc]-----------------------------------------------
		if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인 하지 않았습니다");
					return 1;
				}
				if(gOoc[playerid] == 1)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 OOC채널이 닫겨있습니다. 그러므로 메세지가 전송되지 않습니다");
					return 1;
				}
				if(noooc==1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 전체채팅 채널이 닫겨있습니다");
					return 1;
				}
				if(PlayerInfo[playerid][pMuted] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/o)oc [OOC채팅]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" OOC 채팅 안보기- (/togooc)");
					return 1;
				}
				format(string, sizeof(string), " OOC Channel %s : %s" , sendername, result);
				PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				OOCOff(COLOR_LIGHTBLUE,string);
				printf("%s", string);
			}
			return 1;
		}
		if(strcmp(cmd, "/noooc", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (noooc==0 && PlayerInfo[playerid][pAdmin] >= 3)
				{
					noooc = 1;
					BroadCast(COLOR_ADMIN, " 전체채팅 채널이 불가능하게 되었습니다");
				}
				else if (noooc==1 && PlayerInfo[playerid][pAdmin] >= 3)
				{
					noooc = 0;
					BroadCast(COLOR_ADMIN, " 전체채팅 채널이 가능하게 되었습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/noadmin", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (noadmin==0 && PlayerInfo[playerid][pAdmin] >= 50)
				{
					noadmin = 1;
					BroadCast(COLOR_ADMIN, " 어드민 채널이 불가능하게 되었습니다");
				}
				else if (noooc==1 && PlayerInfo[playerid][pAdmin] >= 50)
				{
					noadmin = 0;
					BroadCast(COLOR_ADMIN, " 어드민 채널이 가능하게 되었습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/관불", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (norhks==0 && PlayerInfo[playerid][pAdmin] >= 3)
				{
					norhks = 1;
					BroadCast(COLOR_ADMIN, " 관리자질문이 불가능하게 되었습니다");
				}
				else if (norhks==1 && PlayerInfo[playerid][pAdmin] >= 3)
				{
					norhks = 0;
					BroadCast(COLOR_ADMIN, " 관리자질문이 가능하게 되었습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		//----------------------------------[aooc]-----------------------------------------------
		if(strcmp(cmd, "/ao", true) == 0 || strcmp(cmd, "/공지", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					if(gPlayerLogged[playerid] == 0)
					{
						SCM(playerid, COLOR_SERVER, "(정보) 당신은 로그인을 하지 않았습니다.");
						return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_SERVER, "(정보) /공지[메세지]");
						return 1;
					}
					format(string, sizeof(string), "[공지] %s : %s" , AdminName[playerid], result);
					for(new i=0; i<PLAYERS; i++)
					{
						PlayerPlaySound(i,1058, 0.0, 0.0, 0.0);
					}
					OOCOff(0xF0F440FF,string);
					printf("%s", string);
					printf("%q", string);
				}
			}
			return 1;
		}
		//--------------------------------=Police Backup=----------------------------------------------------------------
		if(strcmp(cmd,"/지원",true)==0 || strcmp(cmd,"/bk",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))
				{
					if (PlayerInfo[playerid][pRequestingBackup] != 1)
					{
					    new pnumber = PlayerInfo[playerid][pPnumber];
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "INFO : "#C_WHITE" LVPD %s GPS 지원을 요청했습니다. (/추적 %d)", sendername,pnumber);
						PlayerInfo[playerid][pRequestingBackup] = 1;
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 38)
								{
									if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
									{
										SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
										SCM(i, TEAM_BLUE_COLOR, string);
									}
								}
							}
						}
						SCM(playerid, TEAM_BLUE_COLOR, "INFO : "#C_WHITE" (/bkc)로 지원요청을 끌 수 있습니다.");
						SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
					}
					else
					{
						SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 당신은 이미 지원요청을 하였습니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다.");
				}
			}
			return 1;
		}

		if(strcmp(cmd,"/지원끝",true)==0 || strcmp(cmd,"/bkc",true)==0)
		{
		    if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))
				{
					format(string, sizeof(string), "* %s GPS 전원을 종료합니다.", RPPlayerName(playerid));
		           	ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					BackupClear(playerid, 0);
				}
				else
				{
					SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다.");
				}
			}
			return 1;
		}
		//----------------------------------[긴급]-------------------------------------
				if(strcmp(cmd,"/긴",true)==0 || strcmp(cmd,"/긴급",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 32)
				{
					if (PlayerInfo[playerid][pRequestingBackup] != 1)
					{
					    new pnumber = PlayerInfo[playerid][pPnumber];
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "＊Air Line : %s 긴급버튼을 눌렀습니다. (/추적 %d)", sendername,pnumber);
						PlayerInfo[playerid][pRequestingBackup] = 1;
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[playerid][pMember] == 32 || PlayerInfo[playerid][pLeader] == 32)
								{
									if(PlayerInfo[i][pMember] == 32 ||PlayerInfo[i][pLeader] == 32)
									{
										SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
										SCM(i, TEAM_BLUE_COLOR, string);
									}
								}
							}
						}
						SCM(playerid, TEAM_BLUE_COLOR, "ERROR : (/긴급끝)으로 긴급취소를 할수 있습니다.");
						SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
					}
					else
					{
						SCM(playerid, COLOR_GREY, "ERROR : 당신은 긴급버튼을 눌렀습니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_GREY, "ERROR : 당신은 항공사 소속이 아닙니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/긴급끝",true)==0 || strcmp(cmd,"/긴끝",true)==0)
		{
		    if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 32)
				{
					format(string, sizeof(string), "* %s 긴급요청을 취소합니다.", RPPlayerName(playerid));
		           	ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					BackupClear(playerid, 0);
				}
				else
				{
					SCM(playerid, COLOR_GREY, "ERROR : 당신은 항공사 소속이 아닙니다.");
				}
			}
			return 1;
		}
		//=============================================지도============================================================
		if(strcmp(cmd, "/구걸", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /구걸 [플레이어번호/이름의일부분] [금액]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /구걸 [플레이어번호/이름의일부분] [금액]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 25)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 한번에 $25이상을 구걸할 수 없습니다.");
					return 1;
				}
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pLocal] == 106)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 영역에서 허용되지 않은 명령어 입니다");
							return 1;
						}
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 구걸할 수 없습니다.");
								return 1;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if (moneys > 0)
							{//요기
								PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 $%d를 구걸합니다. (/동의 구걸)로 돈을 줍니다.", RPPlayerName(playerid), moneys);
								SCM(giveplayerid, COLOR_WHITE, string);
								BegMoneys[giveplayerid] = moneys;
								BegOffer[giveplayerid] = playerid;
								format(string, sizeof(string), "* %s %s에게 구걸을 한다.", RPPlayerName(playerid) , RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 부정확한 거래 금액입니다");
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방과 너무 멀리 떨어져 있습니다");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/헌금", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /헌금 [플레이어번호/이름의일부분] [금액]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /헌금 [플레이어번호/이름의일부분] [금액]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 1000)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 한번f에 $1000이상을 헌금할 수 없습니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pLeader] != 26 || PlayerInfo[playerid][pMember] != 26)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 교회의 관계자가 아닙니다.");
					return 1;
				}

				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pLocal] == 106)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 영역에서 허용되지 않은 명령어 입니다");
							return 1;
						}
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 헌금할 수 없습니다.");
								return 1;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if (moneys > 0)
							{//요기
								PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 $%d를 헌금을 요구합니다. (/동의 헌금)로 돈을 줍니다.", RPPlayerName(playerid), moneys);
								SCM(giveplayerid, COLOR_WHITE, string);
								BegMoneys[giveplayerid] = moneys;
								ChurchGiveMoney[giveplayerid]=playerid;
								format(string, sizeof(string), "* %s %s에게 헌금을 걷으려 한다.", RPPlayerName(playerid) , RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 부정확한 거래 금액입니다");
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방과 너무 멀리 떨어져 있습니다");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/지불", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /지불 [플레이어/플레이어번호] [금액]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /지불 [플레이어/플레이어번호] [금액]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys > 50000 && PlayerInfo[playerid][pLevel] < 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 레벨 3이상만 $50000이상을 줄수있습니다");
					return 1;
				}
				if(moneys < 1 || moneys > 99999)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 한번에 $99999이상을 줄 수는 없습니다");
					return 1;
				}
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pLocal] == 106)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 영역에서 허용되지 않은 명령어 입니다");
							return 1;
						}
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게는 줄 수는 없습니다.");
								return 1;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if (moneys > 0 && GetMoney(playerid) >= moneys)
							{
								PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s 돈을 받을 것인지 물어봅니다.($%d) (/동의 지불)로 받습니다", RPPlayerName(playerid), moneys);
								SCM(giveplayerid, COLOR_WHITE, string);
								PayMoneys[giveplayerid] = moneys;
								PayOffer[giveplayerid] = playerid;
								format(string, sizeof(string), "* %s 돈을 꺼내서 %s에게 건내려고 한다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 부정확한 거래 금액입니다");
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방과 너무 멀리 떨어져 있습니다");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		//------------------------------[Map-Icons]----------------------------------------------------------------------
		SetPlayerMapIcon(playerid, 0, 1674.0463,1447.9600,10.7837, 5, COLOR_WHITE);  // 공항
		SetPlayerMapIcon(playerid, 1, 1742.8706,-1862.6252,13.5761, 55, COLOR_WHITE);  // Driving School
		SetPlayerMapIcon(playerid, 2, 1528.779, -1678.113, 5.890625, 30, COLOR_WHITE);  // Police Station
		SetPlayerMapIcon(playerid, 3, 1461.695, -1011.915, 26.84375, 52, COLOR_WHITE);  // Bank
		SetPlayerMapIcon(playerid, 4, 1161.3701,-1329.1298,31.4971, 22, COLOR_WHITE);  // Hospital
		SetPlayerMapIcon(playerid, 5, 2468.4919,-2092.9902,13.5469, 51, COLOR_WHITE);	// Truck Place
		SetPlayerMapIcon(playerid, 6, 2755.9546,2476.6213,11.0625, 29, COLOR_WHITE);	// Pizza stack
		SetPlayerMapIcon(playerid, 7, 2229.9011,-1721.2582,13.5613, 54, COLOR_WHITE);	// Gym
		SetPlayerMapIcon(playerid, 8, 2347.9897,2261.7397,8.1478, 45, COLOR_WHITE);	// 옷가게
		SetPlayerMapIcon(playerid, 9, 1928.5973,-1776.3507,13.5469, 27, COLOR_WHITE);	// Mechanic Place
		SetPlayerMapIcon(playerid, 10, 2153.9331,-1171.9779,23.8224, 8, COLOR_WHITE);	// 오토바이판매장
		//-------------------------------[Stats]--------------------------------------------------------------------------
		if (strcmp(cmd, "/스탯", true) == 0 || strcmp(cmd, "/등본", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (gPlayerLogged[playerid] != 0)
				{
				ShowStats(playerid,playerid);
				PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
			    format(string, sizeof(string), "* %s 자신의 주민등록증을 확인한다.", RPPlayerName(playerid));
	        	ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
				}
			}
			return 1;
		}

		if (strcmp(cmd, "/몸상태", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (gPlayerLogged[playerid] != 0)
				{
					new string_hilton[128];
					SCM(playerid,COLOR_SUN,"━━━━━━━━━━━━━━━");
					format(string_hilton, sizeof(string_hilton), "(정보) "#C_WHITE" 근육량:[%d]",PlayerInfo[playerid][rmsdbr]);
					SCM(playerid, COLOR_ERROR,string_hilton);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야 합니다");
				}
			}
			return 1;
		}
		if (strcmp(cmd, "/소지품", true) == 0 || strcmp(cmd, "/주머니", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (gPlayerLogged[playerid] != 0)
				{
					ClearChatbox(playerid, 10);
					Showthwlvna(playerid,playerid);
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
				}
			}
			return 1;
		}
				if(strcmp(cmd, "/지갑보", true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /지갑보 [플레이어의번호/이름의부분]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						giveplayerid = ReturnUser(tmp);
						format(string, sizeof(string), "INFO : "#C_WHITE" %s의 지갑엔 $%d 만큼의 돈이 있습니다", RPPlayerName(playerid), PlayerInfo[playerid][pCash]);
						SCM(giveplayerid, COLOR_ERROR, string);
						format(string, sizeof(string), "* %s 지갑의 돈을 %s에게 보여주었습니다.", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 주변에 있지않습니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		//-------------------------------[Check]--------------------------------------------------------------------------
		if (strcmp(cmd, "/무기박탈", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /무기박탈 [플레이어의번호/이름의부분]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							ResetPlayerWeapons(giveplayerid);
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " 당신은 %s님에 의해 무장이 해제되었습니다",AdminName[playerid]);
							SCM(giveplayerid, COLOR_ADMIN, string);
							format(string, sizeof(string), " 당신은 %s님의 무장을 해제시켰습니다",RPPlayerName(giveplayerid));
							SCM(playerid, COLOR_ADMIN, string);
							format(string, sizeof(string), " %s님이 %s님의 무장을 해제시켰습니다",AdminName[playerid],  RPPlayerName(giveplayerid));
							printf("%s",string);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if (strcmp(cmd, "/번호", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /번호 [플레이어의번호/이름의부분]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(PlayerInfo[giveplayerid][pHideNumber] == 1)
							{
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								format(string, 256, "이름: %s, ☎: 알수없음",RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR, string);
							}
							else
							{
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								format(string, 256, "이름: %s, ☎: %d",RPPlayerName(giveplayerid),PlayerInfo[giveplayerid][pPnumber]);
								SCM(playerid, COLOR_ERROR, string);
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 전화번호부가 없습니다");
				}
			}
			return 1;
		}
		//-------------------------------[LevelUp]--------------------------------------------------------------------------
		if (strcmp(cmd, "/레벨업", true) == 0)
		{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 레벨업 시스템은 자동으로 변경되었습니다");
			return 1;
		}

		if (strcmp(cmd, "/업글리셋", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 하십시오");
					return 1;
				}
				if (GetMoney(playerid) < 5000)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 업그레이드 리셋 비용은 $5000입니다");
					return 1;
				}
				if (PlayerInfo[playerid][pLevel] < 2)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 레벨이 최소한 3이상은 되어야 합니다");
					return 1;
				}
				PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
				PlayerInfo[playerid][pSHealth] = 0.0;
				PlayerInfo[playerid][pAlcoholPerk] = 0;
				PlayerInfo[playerid][pDrugPerk] = 0;
				PlayerInfo[playerid][pMiserPerk] = 0;
				PlayerInfo[playerid][pPainPerk] = 0;
				PlayerInfo[playerid][pTraderPerk] = 0;
				GiveMoney(playerid, -5000);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				format(string, 256, "INFO : "#C_WHITE" 당신은 %d만큼의 업그레이드 포인트를 얻었습니다",PlayerInfo[playerid][gPupgrade]);
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}
		if (strcmp(cmd, "/업글", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new gunid[16];
				new infostring[256];
				new upgradepoints = PlayerInfo[playerid][gPupgrade] - 1;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" /업글 [업그레이드 이름] (업그레이드 포인트를 %d 가지고 있다.)",upgradepoints);
					SCM(playerid, COLOR_SUN,"━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE," 업글 목록 ");
					SCM(playerid, COLOR_ERROR,string);
					if(PlayerInfo[playerid][pLevel] == 2)
					{
						SCM(playerid, COLOR_ERROR, "(레벨 2 목록) 알콜회복, 마약회복");
					}
					else if(PlayerInfo[playerid][pLevel] == 3)
					{
						SCM(playerid, COLOR_ERROR, "(레벨 3 목록) 알콜회복, 마약회복, 구두쇠");
					}
					else if(PlayerInfo[playerid][pLevel] == 4)
					{
						SCM(playerid, COLOR_ERROR, "(레벨 4 목록) 알콜회복, 마약회복, 구두쇠, 거래");
					}
					else if(PlayerInfo[playerid][pLevel] >= 5)
					{
						SCM(playerid, COLOR_ERROR, "(레벨 5 목록) 알콜회복, 마약회복, 구두쇠, 거래, 고통");
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 추가적인 체력: 체력 , 나이 1 상승 : 나이");
					SCM(playerid, COLOR_SUN,"━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (PlayerInfo[playerid][gPupgrade] > 1)
				{
					if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "체력", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pSHealth] < 50)
						{
							PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
							format(infostring, 256, "INFO : "#C_WHITE" 새로운 업그레이드: 이제 %.2f인 체력으로 시작할 것입니다. (+5)",PlayerInfo[playerid][pSHealth]+50);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 시작체력은 최대치 입니다");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "알콜회복", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pAlcoholPerk] < 3)
						{
							PlayerInfo[playerid][pAlcoholPerk] += 1;
							format(infostring, 256, "INFO : "#C_WHITE" 새로운 회복 업그레이드: 알콜의 회복 레벨은 %d입니다",PlayerInfo[playerid][pAlcoholPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알콜 회복치는 최대 입니다 ");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "마약회복", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pDrugPerk] < 3)
						{
							PlayerInfo[playerid][pDrugPerk] += 1;
							format(infostring, 256, "INFO : "#C_WHITE" 새로운 회복 업그레이드: 마약중독 회복 레벨은 %d입니다",PlayerInfo[playerid][pDrugPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 마약중독 회복치는 최대 입니다 ");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "구두쇠", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pMiserPerk] < 3)
						{
							PlayerInfo[playerid][pMiserPerk] += 1;
							format(infostring, 256, "INFO : "#C_WHITE" 새로운 업그레이드: 구두쇠 레벨은 %d입니다",PlayerInfo[playerid][pMiserPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 구두쇠치는 최대 입니다 ");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "거래", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pTraderPerk] < 3)
						{
							PlayerInfo[playerid][pTraderPerk] += 1;
							format(infostring, 256, "INFO : "#C_WHITE" 새로운 업그레이드: 거래 요령 레벨은 %d입니다",PlayerInfo[playerid][pTraderPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 거래 요령치는 최대 입니다 ");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "고통", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pPainPerk] < 3)
						{
							PlayerInfo[playerid][pPainPerk] += 1;
							format(infostring, 256, "INFO : "#C_WHITE" 새로운 업그레이드: 고통 회복 레벨은 %d입니다",PlayerInfo[playerid][pPainPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 고통치는 최대 입니다 ");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "나이", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pAge]<100)
						{
                            PlayerInfo[playerid][pAge]++;
							format(infostring, 256, "INFO : "#C_WHITE" 당신의 나이는 이제 %d 살 입니다",PlayerInfo[playerid][pAge]);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 나이 최대치 입니다 ");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 인정되지 않은 업그레이드 이름 입니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 업그레이드 포인트를 0 가지고 있습니다");
					return 1;
				}
				SCM(playerid, COLOR_ERROR, infostring);
				PlayerInfo[playerid][gPupgrade]--;
			}
			return 1;
		}
		//----------------------------------[advertise]-----------------------------------------------
		if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0 || strcmp(cmd, "/광", true) == 0 || strcmp(cmd, "/광고", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아직 로그인 하지 않았습니다");
					return 1;
				}
				if(GwanggoCool > 0)
			    {
				    SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 다른 광고가 나간뒤 60초가 지나야 가능합니다.");
			        return 1;
		        }
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/광)고 [광고 내용]");
					return 1;
				}
				if(!PlayerToPoint(5,playerid,1833.5820,-1336.6525,-89.4539))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 방송국 광고소에 있지 않습니다.");
					return 1;
				}
				if(GetMoney(playerid) < strlen(result)*8)
				{
				    format(string,sizeof(string),"INFO : "#C_WHITE" 당신은 광고비 $%d 가 부족합니다.",strlen(result)*8);
					SCM(playerid,COLOR_LIGHTBLUE,string);
					return 1;
				}
				GiveMoney(playerid, strlen(result)*8);
				format(string, sizeof(string), "* 광고주:(%d) %s : [LS] %s (☎:%d)", playerid, RPPlayerName(playerid), result, PlayerInfo[playerid][pPnumber]);
				OOCNews(COLOR_NEWS,string);
				format(string, sizeof(string), "관리자알림: 위 광고는 %s(%d)님께서 하셨습니다.", GetName(playerid), playerid);
                SendAdminMessage(COLOR_YELLOW, string);
                GwanggoCool = 60;
			}
			return 1;
		}
		if(strcmp(cmd, "/공", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아직 로그인 하지 않았습니다");
					return 1;
				}
				if(PlayerInfo[playerid][pMember]!=26 && PlayerInfo[playerid][pRank]!=8 && PlayerInfo[playerid][pRank]!=7)
				{
				    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목사 이상만이 가능한 명령어 입니다.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /공 [내용]");
					return 1;
				}
				format(string, sizeof(string), "* (지상파) : %s (☎:%d)", result, PlayerInfo[playerid][pPnumber]);
				OOCNews(COLOR_NEWS,string);
			}
			return 1;
		}
			if(strcmp(cmd, "/해머",true) == 0)
			{
				if(IsACop(playerid))
				{
					for(new h=1; h<MAX_BUILDING; h++)
					{
						if(BuildingInfo[h][hCreated] != 0)
						{
							if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
							{
								if(BuildingInfo[h][hLocked] == 1)
								{
									format(string, sizeof(string), "* %s 해머로 문을 부숩니다.", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									BuildingInfo[h][hLocked]=0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 집은 문이 열려있습니다.");
								}
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다.");
				}
				return 1;
			}
		//----------------------------------[government]-----------------------------------------------
		if(strcmp(cmd, "/government") == 0 || strcmp(cmd, "/gov") == 0 || strcmp(cmd, "/공고") == 0 || strcmp(cmd, "/공") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /공고 [할말]");
					return 1;
				}
				if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 7|| PlayerInfo[playerid][pLeader] == 10|| PlayerInfo[playerid][pLeader] == 9|| PlayerInfo[playerid][pLeader] == 21 || PlayerInfo[playerid][pLeader] == 11 || PlayerInfo[playerid][pLeader] == 33 || PlayerInfo[playerid][pLeader] == 32 || PlayerInfo[playerid][pLeader] == 36 || PlayerInfo[playerid][pLeader] == 38)
				{
					if(!PlayerToPoint(50.0,playerid, 358.1170,173.5462,1008.4688))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 시청에서만 사용이 가능합니다");
						return 1;
					}
					format(string, sizeof(string), " (%s 공고)%s %s : %s",GetMemberName(PlayerInfo[playerid][pMember]), PlayerInfo[playerid][pRank], RPPlayerName(playerid), result);
					SCMToAll(COLOR_SERVER, string);
					printf("공고 %s : %s",sendername, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 공고를 쓸 수 없습니다");
				}
			}
			return 1;
		}
		//----------------------------------[togooc]-----------------------------------------------
		if(strcmp(cmd, "/수업시작") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLeader] == 36 || PlayerInfo[playerid][pMember] == 36)
				{
                    format(string, sizeof(string), "(대학교) (교수 : %s) 잠시 후 뉴 릴리 시티 대학에서 수업이 열릴 예정입니다.",RPPlayerName(playerid));
					SCMToAll(COLOR_SERVER, string);
					format(string, sizeof(string), "(대학교) 수업을 들으실 학생여러분들은 수강료를 들고 학교로 찾아와 주시길 바랍니다.");
					SCMToAll(COLOR_SERVER, string);
				}
				else
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 대학교 교수가 아닙니다 !");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/수업종료") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLeader] == 36 || PlayerInfo[playerid][pMember] == 36)
				{
                    format(string, sizeof(string), "(대학교) (교수 : %s) 잠시 후 뉴 릴리 시티 대학에서 수업이 종료 될 예정입니다.",RPPlayerName(playerid));
					SCMToAll(COLOR_SERVER, string);
					format(string, sizeof(string), "(대학교) 수업을 들으신 학생여러분들은 수강료를 교수님들께 지불하시길 바랍니다.");
					SCMToAll(COLOR_SERVER, string);
				}
				else
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 대학교 교수가 아닙니다 !");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/togooc", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!gOoc[playerid])
				{
					gOoc[playerid] = 1;
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 이제 당신의 OOC채팅 채널을 보지않습니다");
				}
				else if (gOoc[playerid])
				{
					gOoc[playerid] = 0;
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 이제 당신의 OOC채팅 채널을 보게됩니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/뉴스채널", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!gNews[playerid])
				{
					gNews[playerid] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 뉴스 채널을 보지않습니다");
				}
				else if (gNews[playerid])
				{
					gNews[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 뉴스 채널을 보게됩니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/조직채널", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!gFam[playerid])
				{
					gFam[playerid] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 패밀리 채팅을 보지않습니다");
				}
				else if (gFam[playerid])
				{
					gFam[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 패밀리 채팅을 보게됩니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/귓속말채널", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!HidePM[playerid])
				{
					HidePM[playerid] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 귓속말을 보지않습니다");
				}
				else if (HidePM[playerid])
				{
					HidePM[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 귓속말을 보게됩니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/질문채널", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!gNew[playerid])
				{
					gNew[playerid] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 질문 채널을 보지않습니다.");
				}
				else if (gNew[playerid])
				{
					gNew[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 질문 채널을 보게됩니다.");
				}
			}
			return 1;
		}
		//----------------------------------[효과음 명령어]-----------------------------------------------
		if(strcmp(cmd, "/so", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 로그인 하지 않았습니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /so ");
					return 1;
				}
				new to_me[MAX_CHATBUBBLE_LENGTH+1];
				format(string, sizeof(string), " %s %s ", RPPlayerName(playerid), result);
				format(to_me,MAX_CHATBUBBLE_LENGTH,"%s",result);
				SetPlayerChatBubble(playerid,to_me,0xDB7093FF,15.0,10000);
				ProxDetector(15.0, playerid, string, 0xDB7093FF,0xDB7093FF,0xDB7093FF,0xDB7093FF,0xDB7093FF);
			}
			return 1;
		}
		//----------------------------------[Emote]-----------------------------------------------
		if(strcmp(cmd, "/me", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인 부터 하십시오.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /me (행동 묘사)");
					return 1;
				}
				if(PlayerInfo[playerid][pMuted] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
					return 1;
				}
				new to_me[MAX_CHATBUBBLE_LENGTH+1];
				format(string, sizeof(string), "%s(이)가 %s", RPPlayerName(playerid), result);//나 라면먹어야댐
				format(to_me,MAX_CHATBUBBLE_LENGTH,"%s",result);
				SetPlayerChatBubble(playerid,to_me,COLOR_ACT,10.0,10000);
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				printf("%s", string);
			}
			return 1;
		}
		if(strcmp(cmd, "/작게말함", true) == 0 || strcmp(cmd, "/c", true) == 0 || strcmp(cmd, "/close", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인 부터 하십시오.");
					return 1;
				}
				if(PlayerInfo[playerid][pMuted] == 1)
				{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
				return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/c)lose [작게 할말]");
					return 1;
				}
				new to_me[MAX_CHATBUBBLE_LENGTH+1];
				format(string, sizeof(string), " %s: %s..", RPPlayerName(playerid), result);
				format(to_me,MAX_CHATBUBBLE_LENGTH, "Close\n%s", result);
				SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,3.0,10000);
				ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
			}
			return 1;
		}

		//---------------------------------------------------------------------------
if(strcmp("/z", cmd, true) == 0)
  {
   if(PlayerInfo[playerid][pRadio] == 0)
   {
    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 무전기를 가지고 있지 않습니다");
    return 1;
   }
   else
   {
    if(IsPlayerConnected(playerid))
    {
     if(PlayerCuffed[playerid] == 1 && PlayerTied[playerid] == 1)//
     {
      SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지금은 할 수 없습니다");//
      return 1;
     }
     if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
     {
      SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
      return 1;
     }
     if(PlayerCuffed[playerid] == 0 && PlayerTied[playerid] == 0)//
     {
      for(new i = 0; i < M_P; i++)
      {
       if(IsPlayerConnected(i))
       {
        if(PlayerInfo[i][pLine] == PlayerInfo[playerid][pLine])
        {
         if(PlayerInfo[playerid][pLine] == 0)
         {
          SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무전을 하시려면 (/주파수)를 설정해주세요");
          return 1;
         }
         else
         {
          if(PlayerInfo[i][pRadio] == 1)
          {
           new pname[26];
           new to_me[MAX_CHATBUBBLE_LENGTH+1];
           GetPlayerName(playerid, pname, sizeof(pname));
           format(string, 256, "Frequency is %d | %s : %s",PlayerInfo[playerid][pLine], pname, cmdtext[3]);
           SCM(i, COLOR_djemals, string);
		   format(to_me,MAX_CHATBUBBLE_LENGTH,"(Radio) %s : %s", pname, cmdtext[3]);
			SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,4.0,10000);//
          }
         }
        }
       }
      }
     }
    }
   }
   return 1;
  }


		if (strcmp("/freq", cmd, true) == 0 || strcmp("/주파수", cmd, true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /주파수 [주파번호]");
			id = strval(tmp);
			if(id >= 9999 || id <= 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 주파수 입니다!");
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pLine] = id;
				format(string, 256, "INFO : "#C_WHITE" 당신은 개인용 무전기의 주파수를 %d로 맞추었습니다", id);
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}
		//----------------------------------[Shout]-----------------------------------------------
		if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0 || strcmp(cmd, "/외침", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인 부터 하십시오.");
					return 1;
				}
				if(PlayerInfo[playerid][pMuted] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/s)hout ");
					return 1;
				}

				new to_me[MAX_CHATBUBBLE_LENGTH+1];
				format(string, sizeof(string), " %s: %s!!", RPPlayerName(playerid), result);//내가전에 여따 Shout 넣어놧음 !! < 두개만 해줘.
				format(to_me,MAX_CHATBUBBLE_LENGTH, "Shout\n%s", result);
				SetPlayerChatBubble(playerid,to_me,COLOR_WHITE,30.0,10000);
				ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
				printf("%s", string);
				if(Anim_Chat[playerid]==1)
				{
			        if(GetPlayerState(playerid)==PLAYER_STATE_ONFOOT)
			        {
						Anim(playerid,"RIOT","RIOT_shout",4.1,0,1,1,1,1);
					}
				}
			}
			return 1;
		}
		//----------------------------------[Shout]-----------------------------------------------
		if(strcmp(cmd, "/방", true) == 0 || strcmp(cmd, "/방송", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/방)송 [말함]");
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				new modelid = GetVehicleModel(Veh);
				if(modelid == 431)
				{
     if(PlayerInfo[playerid][pJob] != 20)
					{
						if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
						{
							new vehicle = GetPlayerVehicleID(playerid);
							for( new i = 0; i != M_P; i++ )
							{
								if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
								{
									if(GetPlayerVehicleID(i) == vehicle)
									{
										format(string, sizeof(string), "[차내방송(기사) %s:o< %s]", RPPlayerName(i), result);
										SCM(i,  COLOR_djemals, string)
									}
								}
							}
						}
						else
						{
							new vehicle = GetPlayerVehicleID(playerid);
							for( new i = 0; i != M_P; i++ )
							{
								if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
								{
									if(GetPlayerVehicleID(i) == vehicle)
									{
										format(string, sizeof(string), "[차내방송(승무원) %s:o< %s]", RPPlayerName(i), result);
										SCM(i,  COLOR_djemals, string)
									}
								}
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 운송회사직원이 아닙니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 버스에 탑승하지 않았습니다");
					return 1;
				}
			}
			return 1;
		}
		//----------------------------------[Shout]-----------------------------------------------
			if(strcmp(cmd, "/확성기", true) == 0 || strcmp(cmd, "/m", true) == 0 || strcmp(cmd, "/확", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/확)성기 [말함]");
						return 1;
					}

						new to_me[MAX_CHATBUBBLE_LENGTH+1];
						if(PlayerInfo[playerid][pMember] == 1)
						{
							format(string, sizeof(string), "[L.V.P.D %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[L.V.P.D %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 8)
						{
							format(string, sizeof(string), "[F.B.I %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[F.B.I %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 3)
						{
							format(string, sizeof(string), "[CIA %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[CIA %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 37)
						{
							format(string, sizeof(string), "[CIA %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[CIA %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 4)
						{
							format(string, sizeof(string), "[E.M.T %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[E.M.T %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 7)
						{
							format(string, sizeof(string), "[City Hall %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[City Hall %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 32)
						{
							format(string, sizeof(string), "[정부용병] %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[정부용병] %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 33)
						{
							format(string, sizeof(string), "[Air %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[Air %s:o< %s]", RPPlayerName(playerid), result);
						}
						else if(PlayerInfo[playerid][pMember] == 38)
						{
							format(string, sizeof(string), "[교도관 %s:o< %s]", RPPlayerName(playerid), result);
							format(to_me,MAX_CHATBUBBLE_LENGTH, "[교도관 %s:o< %s]", RPPlayerName(playerid), result);
						}
						else
						{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다.");
						return 1;
						}
						SetPlayerChatBubble(playerid,to_me,COLOR_djemals,20.0,10000);
						ProxDetector(30.0, playerid, string,COLOR_djemals,COLOR_djemals,COLOR_djemals,COLOR_djemals,COLOR_djemals);
						printf("%s", string);
				}
				return 1;
			}
		//----------------------------------[Team]-----------------------------------------------
		if(strcmp(cmd, "/백악관무장", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(2.0,playerid,346.8185,162.2314,1025.7891) && !PlayerToPoint(2.0,playerid,346.8185,162.2314,1025.7891))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무장하는 곳에 있지 않습니다.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /백악관무장 1");
					SCM(playerid, COLOR_ERROR, "경찰봉, 데저트이글, mp5, 스프레이, 방탄복, 사진기");
					return 1;
				}
				new item = strval(tmp);
				if (item == 1)
				{
					if(PlayerInfo[playerid][pMember] == 7||PlayerInfo[playerid][pLeader] == 7)
					{
						ResetPlayerWeapons(playerid);
						GiveWeapon(playerid, 3,3);//경찰봉
						GiveWeapon(playerid, 24,35);//데글
						GiveWeapon(playerid, 41,500);//스프레이
						GiveWeapon(playerid, 29,250);//mp5
						GiveWeapon(playerid, 43,50);//사진기
						SetArmour(playerid,80);//방탄 100
 					    AttachObjectCorrectly(playerid, 373);
						//SetHealth(playerid,100);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
						else
						{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군 소속이 아닙니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 세트번호 입니다");
					return 1;
				}
			}
			return 1;
		}

		//----------------------------------[offduty]-----------------------------------------------
		if(strcmp(cmd, "/콩밥", true) ==0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /콩밥 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if (ProxDetectorS(4.0, playerid, giveplayerid) && PlayerInfo[giveplayerid][pJailed] == 1 && PlayerInfo[giveplayerid][pJailed] == 45)
					{
						if(OnDuty[playerid]==1 && PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pMember] == 37 || PlayerInfo[playerid][pLeader] == 37)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s %s에게 콩밥을 강제로 먹인다 우엑", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SCM(giveplayerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 경찰관에게 콩밥을 얻어 먹고 허기를 채웠습니다.");
							GiveHealth(giveplayerid,10);
							Anim(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
							Anim(giveplayerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
						}
						else
						{
							SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 당신은 업무중이지 않거나 경찰이 아닙니다");
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않거나 감옥에 수감중이지 않습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
					return 1;
				}
			}
			return 1;
		}


		if(strcmp(cmd, "/cctv", true) == 0) // by Nell_son
		{
			if(IsPlayerConnected(playerid))
			{
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					if(CCTV_A[playerid] == 1)
					{
						CCTV_A[playerid] = 0;
						SetPlayerFreeze(playerid, false, 0);
						TogglePlayerControllable(playerid, 1);
						SetPlayerPos(playerid,237.3413,126.1473,1003.2188);
						SetPlayerInterior(playerid,10);
						SetCameraBehindPlayer(playerid);
						PlayerInfo[playerid][pMuted] = 0;
						return 1;
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /cctv [번호]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [1=광장] [2=주유소] [3=면허소] [4=항구] [5=밀수항구][6=][7=][8=시청정문]");
					return 1;
				}
				if(OnDuty[playerid]==1 && PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					if(strcmp(x_nr,"1",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,1480.1957,-1626.6188,28.5738); // 카메라포스
						SetPlayerCameraLookAt(playerid,1479.7091,-1698.8519,17.4680); // 룩앳
						SetPlayerPos(playerid,1479.7091,-1698.8519,10.7073); // 플포 (cc1 광장)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
					}
					else if(strcmp(x_nr,"2",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,1905.4277,-1754.5946,20.1074); // 카메라포스 주유소
						SetPlayerCameraLookAt(playerid,1931.0925,-1778.3403,20.1074); // 룩앳
						SetPlayerPos(playerid,1931.0925,-1778.3403,8.5081); // 플포(cc2)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
					else if(strcmp(x_nr,"3",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,1824.1986,-1847.9559,28.2483); // 마케라포스
						SetPlayerCameraLookAt(playerid,1790.6573,-1878.1680,21.1680); // 룩앳
						SetPlayerPos(playerid,1790.5415,-1876.5155,9.3995); // 플포 (cc3 면허소)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
					else if(strcmp(x_nr,"4",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,1543.5948,-2308.1848,19.8172); // 카메라포스 항구
						SetPlayerCameraLookAt(playerid,1568.9390,-2323.3093,15.0313); // 룩앳
						SetPlayerPos(playerid,1545.3372,-2314.1028,9.0009); // 플포 항구 (cc4)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
					else if(strcmp(x_nr,"5",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,2777.9744,-2564.7871,17.7438); // 카메라포스 항구
						SetPlayerCameraLookAt(playerid,2777.5645,-2553.2322,9.0334); // 캐릭터가 있는 곳
						SetPlayerPos(playerid,2777.5645,-2553.2322,9.0334); // 캐릭터가 있는 곳
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
										else if(strcmp(x_nr,"6",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,2521.2507,-2233.3838,13.5469); // 카메라포스 항구
						SetPlayerCameraLookAt(playerid,1568.9390,-2323.3093,15.0313); // 룩앳
						SetPlayerPos(playerid,1545.3372,-2314.1028,9.0009); // 플포 항구 (cc4)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
										else if(strcmp(x_nr,"7",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,2521.2507,-2233.3838,13.5469); // 카메라포스 항구
						SetPlayerCameraLookAt(playerid,1568.9390,-2323.3093,15.0313); // 룩앳
						SetPlayerPos(playerid,2521.2507,-2233.3838,13.5469); // 플포 항구 (cc4)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
					else if(strcmp(x_nr,"8",true) == 0)
					{
						if(!PlayerToPoint(3,playerid,237.3413,126.1473,1003.2188))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰서 CCTV 마스터컴퓨터에 있지않습니다");
							return 1;
						}
						CCTV_A[playerid] = 1;
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						SetPlayerCameraPos(playerid,1481.1738,-1724.0605,22.5993); // 카메라포스
						SetPlayerCameraLookAt(playerid,1481.0243,-1759.9023,19.0067); // 룩앳
						SetPlayerPos(playerid,1481.0952,-1754.0931,9.8287); // 플레이어포스 (cc5)
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][pMuted] = 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리기계를 통하여 마을을 지켜봅니다. (/cctv)로 감시를 마칩니다");
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 감시번호입니다 다시한번 입력해주십시오");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰이 아니거나 업무중이 아닙니다");
				}
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/옷가방", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /옷벗기 /옷입기 [슬롯번호(1~3)]");
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				if(PlayerInfo[playerid][Cloth_1] != 0)
				{
					format(string, sizeof(string), "1| 스킨번호 %d번 옷", PlayerInfo[playerid][Cloth_1]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "1| 옷 없음");
				}
				if(PlayerInfo[playerid][Cloth_2] != 0)
				{
					format(string, sizeof(string), "2| 스킨번호 %d번 옷", PlayerInfo[playerid][Cloth_2]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "2| 옷 없음");
				}
				if(PlayerInfo[playerid][Cloth_3] != 0)
				{
					format(string, sizeof(string), "3| 스킨번호 %d번 옷", PlayerInfo[playerid][Cloth_3]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "3| 옷 없음");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/옷버리기", true) == 0) //
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /옷버리기 [슬롯 번호 1~3]");
					return 1;
				}
				new slot = strval(tmp);
				if(slot == 1)
				{
				    if(PlayerInfo[playerid][Cloth_1] == 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 옷이 없습니다"); return 1; }
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
					PlayerInfo[playerid][Cloth_1]=0;
					format(string, sizeof(string), "* %s 가방에서 옷을꺼내 버린다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				if(slot == 2)
				{
					if(PlayerInfo[playerid][Cloth_2] == 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 옷이 없습니다"); return 1; }
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
					PlayerInfo[playerid][Cloth_2]=0;
					format(string, sizeof(string), "* %s 가방에서 옷을꺼내 버린다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				if(slot == 3)
				{
					if(PlayerInfo[playerid][Cloth_3] == 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 옷이 없습니다"); return 1; }
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
					PlayerInfo[playerid][Cloth_3]=0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 가방에서 옷을꺼내 버린다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
			return 1;
	 	}

		if(strcmp(cmd, "/옷입기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /옷입기 [슬롯 번호 1~3]");
					return 1;
				}
				new Cloth_A[M_P];
				new slot = strval(tmp);
				if(slot == 1)
				{
				    if(PlayerInfo[playerid][Cloth_1] == 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 옷이 없습니다"); return 1; }
					if(P_Cloth[playerid]==1) { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 옷을입는 중에는 할 수가 없습니다"); return 1; }
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
				    Cloth_A[playerid] = GetPlayerSkin(playerid);
					SetPlayerSkin(playerid,PlayerInfo[playerid][Cloth_1]);
					PlayerInfo[playerid][Cloth_1]=0;
					if(PlayerInfo[playerid][pSex]==1) { if(Cloth_A[playerid]!=252) { PlayerInfo[playerid][Cloth_1]=Cloth_A[playerid]; } }
					else if(PlayerInfo[playerid][pSex]==2) { if(Cloth_A[playerid]!=251) { PlayerInfo[playerid][Cloth_1]=Cloth_A[playerid]; } }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 가방에서 옷을 꺼내 입는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					Cloth_A[playerid]=0;
					PlayerInfo[playerid][pChar]=GetPlayerSkin(playerid);
				}
				if(slot == 2)
				{
					if(PlayerInfo[playerid][Cloth_2] == 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 옷이 없습니다"); return 1; }
					if(P_Cloth[playerid]==1) { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 옷을입는 중에는 할 수가 없습니다"); return 1; }
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
				    Cloth_A[playerid]=GetPlayerSkin(playerid);
					SetPlayerSkin(playerid,PlayerInfo[playerid][Cloth_2]);
					PlayerInfo[playerid][Cloth_2]=0;
					if(PlayerInfo[playerid][pSex]==1) { if(Cloth_A[playerid]!=252) { PlayerInfo[playerid][Cloth_2]=Cloth_A[playerid]; } }
					else if(PlayerInfo[playerid][pSex]==2) { if(Cloth_A[playerid]!=251) { PlayerInfo[playerid][Cloth_2]=Cloth_A[playerid]; } }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 가방에서 옷을 꺼내 입는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					Cloth_A[playerid]=0;
					PlayerInfo[playerid][pChar]=GetPlayerSkin(playerid);
				}
				if(slot == 3)
				{
					if(PlayerInfo[playerid][Cloth_3] == 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 옷이 없습니다"); return 1; }
					if(P_Cloth[playerid]==1) { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 옷을입는 중에는 할 수가 없습니다"); return 1; }
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
				    Cloth_A[playerid]=GetPlayerSkin(playerid);
					SetPlayerSkin(playerid,PlayerInfo[playerid][Cloth_3]);
					PlayerInfo[playerid][Cloth_3]=0;
					if(PlayerInfo[playerid][pSex]==1) { if(Cloth_A[playerid]!=252) { PlayerInfo[playerid][Cloth_3]=Cloth_A[playerid]; } }
					else if(PlayerInfo[playerid][pSex]==2) { if(Cloth_A[playerid]!=251) { PlayerInfo[playerid][Cloth_3]=Cloth_A[playerid]; } }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 가방에서 옷을꺼내 입는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					Cloth_A[playerid]=0;
					PlayerInfo[playerid][pChar]=GetPlayerSkin(playerid);
				}
			}
			return 1;
	 	}


		if(strcmp(cmd, "/옷벗기", true) == 0 || strcmp(cmd, "/옷넣기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /옷벗기 [슬롯 번호 1~3]");
					return 1;
				}
				new slot = strval(tmp);
				if(slot == 1)
				{
					if(PlayerInfo[playerid][Cloth_1] != 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른 옷이 있습니다"); return 1; }
					if(P_Cloth[playerid]==1) { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 옷을입는 중에는 할 수가 없습니다"); return 1; }
					if(PlayerInfo[playerid][pSex]==1) { if(GetPlayerSkin(playerid)==252) { return 1; } }
					else if(PlayerInfo[playerid][pSex]==2) { if(GetPlayerSkin(playerid)==251) { return 1; } }
				    PlayerInfo[playerid][Cloth_1] = GetPlayerSkin(playerid);
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
					if(PlayerInfo[playerid][pSex]==1) { SetPlayerSkin(playerid,252); PlayerInfo[playerid][pChar]=252; }
					else if(PlayerInfo[playerid][pSex]==2) { SetPlayerSkin(playerid,138); PlayerInfo[playerid][pChar]=251; }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 옷을 벗고 가방에 넣는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				if(slot == 2)
				{
					if(PlayerInfo[playerid][Cloth_2] != 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른 옷이 있습니다"); return 1; }
					if(P_Cloth[playerid]==1) { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 옷을입는 중에는 할 수가 없습니다"); return 1; }
					if(PlayerInfo[playerid][pSex]==1) { if(GetPlayerSkin(playerid)==252) { return 1; } }
					else if(PlayerInfo[playerid][pSex]==2) { if(GetPlayerSkin(playerid)==251) { return 1; } }
				    PlayerInfo[playerid][Cloth_2] = GetPlayerSkin(playerid);
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
					if(PlayerInfo[playerid][pSex]==1) { SetPlayerSkin(playerid,252); PlayerInfo[playerid][pChar]=252; }
					else if(PlayerInfo[playerid][pSex]==2) { SetPlayerSkin(playerid,138); PlayerInfo[playerid][pChar]=251; }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 옷을 벗고 가방에 넣는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(slot == 3)
				{
					if(PlayerInfo[playerid][Cloth_3] != 0) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 슬롯에는 이미 다른 옷이 있습니다"); return 1; }
					if(P_Cloth[playerid]==1) { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 옷을입는 중에는 할 수가 없습니다"); return 1; }
					if(PlayerInfo[playerid][pSex]==1) { if(GetPlayerSkin(playerid)==252) { return 1; } }
					else if(PlayerInfo[playerid][pSex]==2) { if(GetPlayerSkin(playerid)==251) { return 1; } }
				    PlayerInfo[playerid][Cloth_3] = GetPlayerSkin(playerid);
				    Anim(playerid,"DANCING","DAN_Down_A",4.1,0,0,0,0,0);
					if(PlayerInfo[playerid][pSex]==1) { SetPlayerSkin(playerid,252); PlayerInfo[playerid][pChar]=252; }
					else if(PlayerInfo[playerid][pSex]==2) { SetPlayerSkin(playerid,138); PlayerInfo[playerid][pChar]=251; }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 옷을 벗고 가방에 넣는다", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/잠복", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(OnDuty[playerid]==1 && PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					if(PlayerToPoint(3,playerid,237.3845,121.7211,1003.2188))
					{
						format(string, sizeof(string), "* %s 사물함의 각종 도구로 변장을 한다", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						Anim(playerid,"goggles","goggles_put_on",4.1,0,1,1,1,1);
						SetPlayerColor(playerid,COLOR_ERROR);
						wkaqhr_2[playerid] = 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 락커룸에 있지 않습니다");
					}
				}
				else
				{
					SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 당신은 업무중이지 않거나 경찰이 아닙니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/잠복끝", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(wkaqhr[playerid]==1)
				{
					if(OnDuty[playerid]==1 && PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
						if(PlayerToPoint(3,playerid,237.3845,121.7211,1003.2188))
						{
							format(string, sizeof(string), "* %s 잠복을 마친다", RPPlayerName(playerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							SetPlayerColor(playerid,0x8D8DFF00);
							wkaqhr_2[playerid] = 0;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 락커룸에 있지 않습니다");
						}
					}
					else
					{
						SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 당신은 업무중이지 않거나 경찰이 아닙니다");
					}
				}
			}
			return 1;
        }
 		if(!strcmp(cmdtext, "/ck", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
				    SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 네임태그를 하얀색으로 변경하였습니다.");
				    SetPlayerColor(playerid,0xFFFFFF00);
				}
			}
			return 1;
		}
			if(!strcmp(cmdtext, "/업무", true))
			{
				if(IsPlayerConnected(playerid))
				{
				    GetPlayerName(playerid, sendername, sizeof(sendername));
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
                      if(PlayerToPoint(6.0,playerid,237.4758,121.9104,1003.2188))
				      {
					  if(OnDuty[playerid]==0)
					  {
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
								{
									format(string, sizeof(string), "(L.V.P.D) %s(이)가 뱃지,라디오,총을 사물함에서 꺼낸다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									SetArmour(playerid, 75);
									GiveWeapon(playerid, 3, 1);
									GiveWeapon(playerid, 24, 49);
									GiveWeapon(playerid, 29, 250);
									GiveWeapon(playerid, 41, 500);
									OnDuty[playerid] = 1;
									AttachObjectCorrectly(playerid, 373);
									SetPlayerColor(playerid,0x8D8DFF00 );
								}
								else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
								{
									format(string, sizeof(string), "(F.B.I) %s(이)가 뱃지,라디오,총을 사물함에서 꺼낸다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									OnDuty[playerid] = 1;
									AttachObjectCorrectly(playerid, 373);

								}
							}
							else if(OnDuty[playerid] == 1)
							{
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
								{
									format(string, sizeof(string), "(L.V.P.D) %s(이)가 뱃지,라디오,총을 사물함에 돌려놓는다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									ResetPlayerWeapons(playerid);
									SetArmour(playerid, 0);
									GiveWeapon(playerid, 3, 1);
									GiveWeapon(playerid, 41, 500);
									GiveWeapon(playerid, 34, 0);
									OnDuty[playerid] = 0;
									wkaqhr_2[playerid] = 0;
                                    RemovePlayerAttachedObject(playerid,4);
							     	SetPlayerColor(playerid,COLOR_INFO1);
								}
								else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
								{
									format(string, sizeof(string), "(F.B.I) %s(이)가 뱃지,라디오,총을 사물함에 돌려놓는다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									OnDuty[playerid] = 0;
									RemovePlayerAttachedObject(playerid,4);
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_ERROR, "ERROR : 당신은 락커룸에 있지 않습니다");
							return 1;
						}
					}
					else if(PlayerInfo[playerid][pMember] == 32 || PlayerInfo[playerid][pLeader] == 32)
					{
                      if(PlayerToPoint(6.0,playerid,1003.5910,-1212.2166,16.9375))
				      {
					  if(OnDuty[playerid]==0)
					  {
								if(PlayerInfo[playerid][pMember] == 32 || PlayerInfo[playerid][pLeader] == 32)
								{
									format(string, sizeof(string), "정부용병 %s(이)가 완벽하게 무장을 한다.", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									SetArmour(playerid, 75);
									GiveWeapon(playerid, 31, 500);
									GiveWeapon(playerid, 46, 1);
									GiveWeapon(playerid, 4, 1);
									GiveWeapon(playerid, 24, 300);
									GiveWeapon(playerid, 29, 400);
									GiveWeapon(playerid, 34, 10);
									OnDuty[playerid] = 1;
									AttachObjectCorrectly(playerid, 373);
									SetPlayerColor(playerid,0x6A4AB5FF );
								}
							}
							else if(OnDuty[playerid] == 1)
							{
								if(PlayerInfo[playerid][pMember] == 32 || PlayerInfo[playerid][pLeader] == 32)
								{
									format(string, sizeof(string), "정부용병 %s(이)가 무장한 무기들을 다시 돌려놓는다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									ResetPlayerWeapons(playerid);
									SetArmour(playerid, 0);
									GiveWeapon(playerid, 31, 0);
									GiveWeapon(playerid, 46, 0);
									GiveWeapon(playerid, 4, 0);
									GiveWeapon(playerid, 24, 0);
									GiveWeapon(playerid, 29, 0);
									GiveWeapon(playerid, 34, 0);
									OnDuty[playerid] = 0;
									wkaqhr_2[playerid] = 0;
                                    RemovePlayerAttachedObject(playerid,4); 
							     	SetPlayerColor(playerid,COLOR_INFO1);
								}
							}
						}
					}
					else if(PlayerInfo[playerid][pMember] == 38 || PlayerInfo[playerid][pLeader] == 38)
					{
                      if(PlayerToPoint(6.0,playerid,-2899.6387,-2628.1035,4.1948))
				      {
					  if(OnDuty[playerid]==0)
					  {
								if(PlayerInfo[playerid][pMember] == 38 || PlayerInfo[playerid][pLeader] == 38)
								{
									format(string, sizeof(string), "교도관 %s(이)가 완벽하게 무장을 한다.", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									SetArmour(playerid, 75);
									GiveWeapon(playerid, 31, 500);
									GiveWeapon(playerid, 46, 1);
									GiveWeapon(playerid, 4, 1);
									GiveWeapon(playerid, 24, 300);
									GiveWeapon(playerid, 29, 400);
									GiveWeapon(playerid, 34, 10);
									OnDuty[playerid] = 1;
									AttachObjectCorrectly(playerid, 373);
									SetPlayerColor(playerid,0x6A4AB5FF );
								}
							}
							else if(OnDuty[playerid] == 1)
							{
								if(PlayerInfo[playerid][pMember] == 38 || PlayerInfo[playerid][pLeader] == 38)
								{
									format(string, sizeof(string), "교도관 %s(이)가 무장한 무기들을 다시 돌려놓는다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									ResetPlayerWeapons(playerid);
									SetArmour(playerid, 0);
									GiveWeapon(playerid, 31, 0);
									GiveWeapon(playerid, 46, 0);
									GiveWeapon(playerid, 4, 0);
									GiveWeapon(playerid, 24, 0);
									GiveWeapon(playerid, 29, 0);
									GiveWeapon(playerid, 34, 0);
									OnDuty[playerid] = 0;
									wkaqhr_2[playerid] = 0;
                                    RemovePlayerAttachedObject(playerid,4);
							     	SetPlayerColor(playerid,COLOR_INFO1);
								}
							}
						}
					}
					else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
                      if(PlayerToPoint(6.0,playerid,2063.3796,-2304.8845,8539.4199))
				      {
					  if(OnDuty[playerid]==0)
					  {
								if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
								{
									format(string, sizeof(string), "CIA %s(이)가 완벽하게 무장을 한다.", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									SetArmour(playerid, 75);
									GiveWeapon(playerid, 31, 500);
									GiveWeapon(playerid, 46, 1);
									GiveWeapon(playerid, 4, 1);
									GiveWeapon(playerid, 24, 300);
									GiveWeapon(playerid, 29, 400);
									GiveWeapon(playerid, 34, 10);
									OnDuty[playerid] = 1;
									AttachObjectCorrectly(playerid, 373);
									SetPlayerColor(playerid,0x6A4AB5FF );
								}
							}
							else if(OnDuty[playerid] == 1)
							{
								if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
								{
									format(string, sizeof(string), "CIA %s(이)가 무장한 무기들을 다시 돌려놓는다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									ResetPlayerWeapons(playerid);
									SetArmour(playerid, 0);
									GiveWeapon(playerid, 31, 0);
									GiveWeapon(playerid, 46, 0);
									GiveWeapon(playerid, 4, 0);
									GiveWeapon(playerid, 24, 0);
									GiveWeapon(playerid, 29, 0);
									GiveWeapon(playerid, 34, 0);
									OnDuty[playerid] = 0;
									wkaqhr_2[playerid] = 0;
                                    RemovePlayerAttachedObject(playerid,4);
							     	SetPlayerColor(playerid,COLOR_INFO1);
								}
							}

						}
						else
						{
							SCM(playerid, COLOR_ERROR, "ERROR : 당신은 락커룸에 있지 않습니다");
							return 1;
						}
					}
					else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
					{
						if(JobDuty[playerid] == 1)
						{
							SCM(playerid, COLOR_INFO1, "INFO : 업무를 마칩니다. 당신을 필요로하는 사람으로부터 연락을 받지 못할것입니다");
							JobDuty[playerid] = 0;
							Medics -= 1;
							SetPlayerColor(playerid,COLOR_INFO);
							ResetPlayerWeapons(playerid);
						}
						else
						{
							ResetPlayerWeapons(playerid);
							GiveWeapon(playerid, 42, 1000);
							SCM(playerid, COLOR_INFO1, "INFO : 당신은 의료진 업무를 시작했습니다. 필요로 하는사람에게 연락을 받을것입니다");
							JobDuty[playerid] = 1;
							Medics += 1;
							format(string, sizeof(string), "(직업광고) 의료진 %s 업무를 진행중입니다. (/통화 911)", RPPlayerName(playerid));
							OOCNews(COLOR_ALLDEPT,string);
							SetPlayerColor(playerid,0xBA8DAA00);
						}
					}
					else if(PlayerInfo[playerid][pMember] == 34 || PlayerInfo[playerid][pLeader] == 34)
					{
						if(JobDuty[playerid] == 1)
						{
						    PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				        	RemovePlayerAttachedObject(playerid,0);
				        	RemovePlayerAttachedObject(playerid,4);
							SCM(playerid, COLOR_INFO1, "INFO : 업무를 마칩니다. 당신을 필요로하는 사람으로부터 연락을 받지 못할것입니다");
							JobDuty[playerid] = 0;
							Medics -= 1;
							SetPlayerColor(playerid,COLOR_INFO);
							ResetPlayerWeapons(playerid);
						}
						else
						{
					        PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				        	SetPlayerAttachedObject( playerid, 0, 18635, 5, -0.116485, 0.029056, 0.009388, 136.636413, 356.492919, 358.344024, 2.318902, 1.000000, 1.724537 ); // GTASAHammer1 - hammer
							SCM(playerid, COLOR_INFO1, "INFO : 당신은 현대건설 업무를 시작했습니다. 필요로 하는사람에게 연락을 받을것입니다");
							JobDuty[playerid] = 1;
							Medics += 1;
							format(string, sizeof(string), "(직업광고) 현대건설 직원이 %s 업무를 진행중입니다. (/통화 777)", RPPlayerName(playerid));
							OOCNews(0x03D687FF,string);
							SetPlayerColor(playerid,COLOR_WHITE);
						}
					}
					else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
					{
						if(JobDuty[playerid] == 1)
						{
							SetPlayerColor(playerid,COLOR_INFO);
							SCM(playerid, COLOR_INFO1, "INFO : 업무를 마칩니다. 당신을 필요로하는 사람으로부터 연락을 받지 못할것입니다");
							JobDuty[playerid] = 0;
							Mechanics -= 1;
						}
						else
						{
							SCM(playerid, COLOR_INFO1, "INFO : 당신은 차량정비사 업무를 시작했습니다. 필요로 하는사람에게 연락을 받을것입니다");
							JobDuty[playerid] = 1;
							Mechanics += 1;
							format(string, sizeof(string), "(직업광고) 정비사 %s 업무를 진행중입니다 (/통화 555)", RPPlayerName(playerid));
							OOCNews(0x2993EDAA,string);
							SetPlayerColor(playerid,0x5CD35C00);
						}
					}
					else if(PlayerInfo[playerid][pMember] == 7)
					{
						if(JobDuty[playerid] == 1)
						{
							SetPlayerColor(playerid,COLOR_INFO);
							SCM(playerid, COLOR_INFO1, "INFO : 업무를 마칩니다. 당신을 필요로하는 사람으로부터 연락을 받지 못할것입니다");
							JobDuty[playerid] = 0;
							Mechanics -= 1;
						}
						else
						{
							SCM(playerid, COLOR_INFO1, "INFO : 당신은 시청민원팀 업무를 시작했습니다. 필요로 하는사람에게 연락을 받을것입니다");
							JobDuty[playerid] = 1;
							Mechanics += 1;
							format(string, sizeof(string), "(직업광고) 시청민원팀 %s 업무를 진행중입니다 (/통화 120)", RPPlayerName(playerid));
							OOCNews(0x639BF6AA,string);
							SetPlayerColor(playerid,0xB78020F);
						}
					}
				}
				return 1;
			}

		if(strcmp(cmd,"/네임테그",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pLeader] == 2)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /네임테그 [컬러] (리더만 사용 가능)");
						SCM(playerid, COLOR_ERROR, "[컬러] : 1:시민 2:의사 3:정비사 4:엔피시 5:택시 6:기자 7:경찰");
						return 1;
					}
					COunt = strval(tmp);
					format(string,sizeof(string),"PaydayorFBI %s 이(가) 네임테그색을 변경하였습니다.",RPPlayerName(playerid));
					ABroadCast(COLOR_ADMIN,string,1);

					AP
					{
						if(IsPlayerConnected(i))
						{
							if (PlayerInfo[i][pMember] == 8 || PlayerInfo[i][pMember] == 2)
							{
							    if(COunt == 1)SetPlayerColor(i,0xFFFFFF00);
							    if(COunt == 2)SetPlayerColor(i,0xBA8DAA00 );
							    if(COunt == 3)SetPlayerColor(i,0x5CD35C00 );
							    if(COunt == 4)SetPlayerColor(i,0x99CCFFAA );
							    if(COunt == 5)SetPlayerColor(i,0xD67B1800 );
							    if(COunt == 6)SetPlayerColor(i,0xEDCC6900 );
							    if(COunt == 7)SetPlayerColor(i,0x8D8DFF00 );
							}
					    }
					}
				}
			}
			return 1;
						}
		//----------------------------------[departments]-----------------------------------------------
		if(strcmp(cmd, "/부서", true) == 0 || strcmp(cmd, "/부", true) == 0 || strcmp(cmd, "/부서말", true) == 0 || strcmp(cmd, "/d", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/부)서말 [할말]");
					return 1;
				}
				new to_me[MAX_CHATBUBBLE_LENGTH+1];
				new member = PlayerInfo[playerid][pMember];
				new rank = PlayerInfo[playerid][pRank];
				if(member >= 1 && member <= 4 || member == 7 || member == 32 || member == 34 || member == 3 || member == 38)
				{
					format(string, sizeof(string), "(%s) %s %s : %s", GetMemberName(member), GetRankName(member, rank), sendername, result);
					SendFamilyMessage(2, COLOR_ALLDEPT, string);
					SendFamilyMessage(3, COLOR_ALLDEPT, string);
					SendFamilyMessage(4, COLOR_ALLDEPT, string);
					SendFamilyMessage(1, COLOR_ALLDEPT, string);
					SendFamilyMessage(7, COLOR_ALLDEPT, string);
					SendFamilyMessage(32, COLOR_ALLDEPT, string);
					if (wkaqhr[playerid] != 1)
					{
						format(to_me,MAX_CHATBUBBLE_LENGTH,"* Radio : %s : %s", sendername,result);
						SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,4.0,10000);
						format(string, sizeof(string), "* Radio : %s : %s", sendername, result);
						ProxDetector(4.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
					printf("%s", string);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
		//----------------------------------[mdc]-----------------------------------------------
		if(strcmp(cmd, "/신원조회") == 0 || strcmp(cmd, "/신") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsACop(playerid) && PlayerInfo[playerid][pMember] != 4)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/MDC)신원조회 [플레이어/플레이어번호]");
					return 1;
				}//아 이거딘다 아 돼나? 잠깐만;;;아 된다
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						new baejin23[120];
						strmid(baejin23, PlayerInfo[giveplayerid][pMarriedTo2], 0, strlen(PlayerInfo[giveplayerid][pMarriedTo2]), 255);

						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, COLOR_LIGHTBLUE,"|______ L.V.P.D 데이스베이터 _______|");
						format(string, sizeof(string), "이름 : %s", RPPlayerName(giveplayerid));
						SCM(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "범죄 : %s", baejin23);
						SCM(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "원고인 : %s", PlayerCrime[giveplayerid][pVictim]);
						SCM(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "신고기록 :%s", PlayerCrime[giveplayerid][pAccusing]);
						SCM(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "피고인 : %s", PlayerCrime[giveplayerid][pBplayer]);
						SCM(playerid, COLOR_WHITE,string);
						SendClientMessage(playerid, COLOR_LIGHTBLUE,"|________________________________|");
						format(string, sizeof(string), "* %s PDA를 꺼내 버튼조작을 한다", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}
//============================전과자
		//----------------------------------[SetCrim]-----------------------------------------------
		if(strcmp(cmd, "/전과수정", true) == 0 || strcmp(cmd, "/전", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsACop(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/전)과 [플레이어번호/플레이어이름] [내용]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (gTeam[playerid] == 2 || IsACop(playerid))
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (gTeam[giveplayerid] != 2)
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new length = strlen(cmdtext);
								while ((idx < length) && (cmdtext[idx] <= ' '))
								{
									idx++;
								}
								new offset = idx;
								new result[64];
								while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
								{
									result[idx - offset] = cmdtext[idx];
									idx++;
								}
								result[idx - offset] = EOS;
								if(!strlen(result))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/전)의자 [플레이어번호/플레이어이름] []");
									SCM(playerid, COLOR_ERROR, "(INFO Help) : 전과를 수정하거나, 삭제하는명령어. ");
									return 1;
								}
								GetPlayerName(playerid, sendername, sizeof(sendername));
				                format(string, sizeof(string), "**HQ** :  %s 경관이 %s 분을 범죄를 삭제하였습니다.", RPPlayerName(playerid),RPPlayerName(giveplayerid));
				                SendFamilyMessage(1, COLOR_BLUE, string);
				                format(string, sizeof(string), "* %s PDA를 실행시켜 사용한다.", RPPlayerName(playerid));
								ProxDetector(3.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				                SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 성공적으로 명령어를 수행하였습니다..");
				              //  WantedLevel[giveplayerid] = 2;
								strmid(PlayerInfo[giveplayerid][pMarriedTo2], result, 0, strlen(result), 255);
								if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 3; }
								else { WantedPoints[giveplayerid]+= 2; }
								//SetPlayerCriminalEx(giveplayerid,playerid, result);
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
			}
			return 1;
		}
		//============================부검
		if(strcmp(cmd, "/부검", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(IsACop(playerid))
					{
						if(IsPlayerInAnyVehicle(playerid))
						{
							SCM(playerid, COLOR_GREY, " 차안에서는 사용할 수 없습니다.");
							return 1;
						}
						new suspect = GetClosestPlayer(playerid);
						if(IsPlayerConnected(suspect))
						{
							if(GetDistanceBetweenPlayers(playerid,suspect) <= 5)
							{
							    GetPlayerName(playerid, sendername, sizeof(sendername));
							    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
								if(IsPlayerInAnyVehicle(suspect))
								{
									SCM(playerid, COLOR_GREY, "그 시체를 차안에서 내리는게 먼저입니다 !");
									return 1;
								}
								if(PlayerInfo[suspect][pJailed] != 3)
								{
								    SCM(playerid, COLOR_GREY, "그는 죽지 않았습니다.");
								    return 1;
								}
								new wr[46];
								new reason = PlayerInfo[suspect][pWhyDie];
								if(reason == 0)
								{ wr = "주먹"; }
								else if(reason == 1)
								{ wr = "Brass Knuckless"; }
								else if(reason == 2)
								{ wr = "Golf Club"; }
								else if(reason == 3)
								{ wr = "Knight Stick"; }
								else if(reason == 4)
								{ wr = "Knife"; }
								else if(reason == 5)
								{ wr = "Baseball-Bat"; }
								else if(reason == 6)
								{ wr = "Shovel"; }
								else if(reason == 7)
								{ wr = "Cue"; }
								else if(reason == 8)
								{ wr = "Katana"; }
								else if(reason == 9)
								{ wr = "Chain-Saw"; }
								else if(reason == 10)
								{ wr = "Purple Dildo"; }
								else if(reason == 11)
								{ wr = "White Small Dildo"; }
								else if(reason == 12)
								{ wr = "White Dildo"; }
								else if(reason == 13)
								{ wr = "Black Small Dildo"; }
								else if(reason == 14)
								{ wr = "Flower"; }
								else if(reason == 15)
								{ wr = "Cane"; }
								else if(reason == 16)
								{ wr = "Grenade"; }
								else if(reason == 17)
								{ wr = "Smoke Shell"; }
								else if(reason == 18)
								{ wr = "Molotov"; }
								else if(reason == 19)
								{ wr = "알수없음"; }
								else if(reason == 20)
								{ wr = "알수없음"; }
								else if(reason == 21)
								{ wr = "알수없음"; }
								else if(reason == 22)
								{ wr = "Dual Pistol"; }
								else if(reason == 23)
								{ wr = "silenced Pistol"; }
								else if(reason == 24)
								{ wr = "Desert Eagle"; }
								else if(reason == 25)
								{ wr = "Shotgun"; }
								else if(reason == 26)
								{ wr = "Dual Shotgun"; }
								else if(reason == 27)
								{ wr = "Combat-Shotgun"; }
								else if(reason == 28)
								{ wr = "Uzi"; }
								else if(reason == 29)
								{ wr = "MP5"; }
								else if(reason == 30)
								{ wr = "AK47"; }
								else if(reason == 31)
								{ wr = "M4"; }
								else if(reason == 32)
								{ wr = "Tec9"; }
								else if(reason == 33)
								{ wr = "Rifle"; }
								else if(reason == 34)
								{ wr = "Sniper Rifle"; }
								else if(reason == 35)
								{ wr = "RPG"; }
								else if(reason == 36)
								{ wr = "열감지 유도 RPG"; }
								else if(reason == 37)
								{ wr = "Flame Thrower"; }
								else if(reason == 38)
								{ wr = "Minigun"; }
								else if(reason == 39)
								{ wr = "Switch Bomb"; }
								else if(reason == 40)
								{ wr = "Switch Bomb"; }
								else if(reason == 41)
								{ wr = "Spray"; }
								else if(reason == 42)
								{ wr = "Fire Extinguisher"; }
								else if(reason == 43)
								{ wr = "Camera"; }
								else if(reason == 44)
								{ wr = "Infrared Perceive Goggle"; }
								else if(reason == 45)
								{ wr = "Heat Perceive Goggle"; }
								else if(reason == 46)
								{ wr = "Parachute"; }
								else if(reason == 49)
								{ wr = "차사고"; }
								else if(reason == 50)
								{ wr = "헬기 또는 압사"; }
								else if(reason == 51)
								{ wr = "폭사"; }
								else if(reason == 53)
								{ wr = "익사"; }
								else if(reason == 54)
								{ wr = "낙사"; }
								else if(reason == 255)
								{ wr = "오류죽음"; }
								format(string, sizeof(string), "* [%s]님은 [%s]로 인해 죽은것 같습니다.", sendername, wr);
								SCM(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "%s %s의 시체를 부검한다.", sendername, giveplayer);
								ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						    }
						}
					}
					else
					{
					    SCM(playerid, COLOR_GREY, "당신은 정부군이 아닙니다.");
					}
				}
				return 1;
			}
		//----------------------------------[SetCrim]-----------------------------------------------
		if(strcmp(cmd, "/용의자", true) == 0 || strcmp(cmd, "/용", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsACop(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/용)의자 [플레이어번호/플레이어이름] [내용]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (gTeam[playerid] == 2 || IsACop(playerid))
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (gTeam[giveplayerid] != 2)
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new length = strlen(cmdtext);
								while ((idx < length) && (cmdtext[idx] <= ' '))
								{
									idx++;
								}
								new offset = idx;
								new result[64];
								while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
								{
									result[idx - offset] = cmdtext[idx];
									idx++;
								}
								result[idx - offset] = EOS;
								if(!strlen(result))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/용)의자 [플레이어번호/플레이어이름] [내용]");
									return 1;
								}
								GetPlayerName(playerid, sendername, sizeof(sendername));
				                SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 성공적으로 그를 수배하였습니다.");
				               // WantedLevel[giveplayerid] = 2;
								strmid(PlayerInfo[giveplayerid][pMarriedTo2], result, 0, strlen(result), 255);
								if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 3; }
								else { WantedPoints[giveplayerid]+= 2; }
								SetPlayerCriminalEx(giveplayerid,playerid, result);
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
			}
			return 1;
		}
		//----------------------------------[ow]-----------------------------------------------
		if(strcmp(cmd, "/oocw", true) == 0 || strcmp(cmd, "/ow", true) == 0 || strcmp(cmd, "/op", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /ow [플레이어번호/플레이어이름] [할말]");
					return 1;
				}
				if(PlayerInfo[playerid][pMuted] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
					return 1;
				}
				if(HidePM2[playerid] == 1)
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 줄에 묶여 (/ow) 를 사용이 불가능합니다.");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(HidePM[giveplayerid] > 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 귓속말채널이 닫혀있습니다");
							return 1;
						}
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(giveplayerid == playerid)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 보낼수없습니다");
							return 1;
						}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /ow [플레이어번호/플레이어이름] [할말]");
							return 1;
						}
						format(string, sizeof(string), "(OOC 귓속말) (%d)%s님의 귓속말: %s", playerid, RPPlayerName(playerid), (result));
						SCM(giveplayerid, COLOR_WHITE2, string);
						format(string, sizeof(string), "(OOC 귓속말) (%d)%s에게 귓속말: %s", giveplayerid, RPPlayerName(giveplayerid), (result));
						SCM(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Admininfo (%d)%s -> (%d)%s : %s",playerid, RPPlayerName(playerid),giveplayerid, RPPlayerName(giveplayerid), (result));
						ABroadEarCast(COLOR_RED,string,1);//이건 관접켯을때 나오게하는거임 관접 안켯을때도 귓말들리게해? ow?
						PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);//ow는 관접 안켯을때도 들려야될거같다 삘이 얻행
						return 1;
					}
				}//뭐하지이제 맞다
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		//----------------------------------[Whisper]-----------------------------------------------
		if(strcmp(cmd, "/귓속말", true) == 0 || strcmp(cmd, "/w", true) == 0 || strcmp(cmd, "/귓말", true) == 0 || strcmp(cmd, "/whisper", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/w)hisper [플레이어번호/플레이어이름] [할말]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid,x,y,z);
						if(PlayerToPoint(2, playerid, x, y, z))
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							if(giveplayerid == playerid)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 보낼수없습니다");
							}
							else
							{
								format(string, sizeof(string), "* %s %s에게 속삭입니다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
								ProxDetector(1.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/w)귓속말 [플레이어번호/플레이어이름] [할말]");
								return 1;
							}
							format(string, sizeof(string), "%s Whisper %s", RPPlayerName(playerid), (result));
							SCM(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "%s Whisper %s", RPPlayerName(playerid), (result));
							SCM(playerid,  COLOR_WHITE, string);
							return 1;
						}
						else
						{
							SCM(playerid,  COLOR_ERROR, "INFO : "#C_WHITE" 상대방은 당신근처에 있어야만합니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		//ATM STAFF
		if(strcmp(cmd, "/atm", true) == 0)//이거 안돼던데? ㅇㅇ 안되, 그러니깐. /atm 쓰면 옆에 힌트로 [입금] [잔액] 나오면서 하게해줘.
		{
			if(IsPlayerConnected(playerid))
			{
				new xatm[256];
				xatm = strtok(cmdtext, idx);
				if(!strlen(xatm))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm [이름] [금액]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 출금, 송금 수수료 $25");
					SCM(playerid, COLOR_ERROR, "[이름] : 입금 출금 송금");
					return 1;
				}
				if(strcmp(xatm,"출금",true) == 0)
				{
				if(!IsAtAtm(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 입출금기계 근처에 있지 않습니다.");
					return 1;
				}
				if(PlayerInfo[playerid][TongJang] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 통장이 만들어져 있지 않습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 개인 통장을 만드시려면 (/통장만들기) 입력하세요");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm 출금 [금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 $%d만큼의 금액이 있습니다", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm 출금 [금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 $%d의 통장금액이 있습니다", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 통장에 그렇게 많은돈이 없습니다");
					return 1;
				}
				ConsumingMoney[playerid] = 1;
				GiveMoney(playerid, cashdeposit);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
				GiveMoney(playerid, -10);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "현금 입출금기 영수증");
				format(string, sizeof(string), "출금 금액 : $%d", cashdeposit);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "통장 잔액 : $%d", PlayerInfo[playerid][pAccount]);
				SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_ERROR, "은행 수수료: $10");//? 10으
				PlayerInfo[playerid][pJobTimer] = 12;
				Anim(playerid,"PED","ATM",4.1,0,1,1,1,1);
				PayLog(string);
				return 1;
			}
			else if(strcmp(xatm, "입금", true) == 0)//dd? 저쪽 출금처럼 해줘.
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsAtAtm(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 입출금기계 근처에 있지 않습니다.");
					return 1;
				}
				if(PlayerInfo[playerid][TongJang] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 통장이 만들어져 있지 않습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 개인 통장을 만드시려면 (/통장만들기) 입력하세요.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm 입금 [금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 $%d의 통장금액이 있습니다.", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm 입금 [금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 $%d만큼의 금액이 있습니다.", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				if (cashdeposit > GetMoney(playerid) || cashdeposit < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 지갑에 그렇게 많은돈이 없습니다");
					return 1;
				}
				GiveMoney(playerid, -cashdeposit);
				new curfunds = PlayerInfo[playerid][pAccount];
				PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "현금 입출금기 영수증");
				format(string, sizeof(string), "입금 전 금액 : $%d",curfunds);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "입금 후 금액 : $%d",cashdeposit);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "통장 잔액 : $%d", PlayerInfo[playerid][pAccount]);
				SCM(playerid, COLOR_ERROR, string);//그게 정상이야
				PlayerInfo[playerid][pJobTimer] = 12;
				Anim(playerid,"PED","ATM",4.1,0,1,1,1,1);
				PayLog(string);
				return 1;
			}
			return 1;
		}
		else if(strcmp(xatm, "송금", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsAtAtm(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 'ATM' 근처에 있지 않습니다.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm 송금 [플레이어번호/플레이어이름] [금액]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /atm 송금 [플레이어번호/플레이어이름] [금액]");
					return 1;
				}
				moneys = strval(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playermoney = PlayerInfo[playerid][pAccount] ;
						if (moneys > 0 && playermoney >= moneys)
						{
							PlayerInfo[playerid][pAccount] -= moneys;
							PlayerInfo[giveplayerid][pAccount] += moneys;
							format(string, sizeof(string), "INFO : "#C_WHITE" $%d를 %s(%d)의 계좌에 성공적으로 송금하였습니다. 수수료 : $25", moneys, RPPlayerName(giveplayerid),giveplayerid);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SCM(playerid, COLOR_SUC, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 은행 계좌에 $%d의 금액이 (☎: %d)으로부터 전달되었습니다.", moneys, PlayerInfo[playerid][pPnumber]);
							SCM(giveplayerid, COLOR_ERROR, string);
							PlayerInfo[playerid][pJobTimer] = 12;
			             	Anim(playerid,"PED","ATM",4.1,0,1,1,1,1);
							printf("%s", string);
							PayLog(string);
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							GiveMoney(playerid, -25);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 통장에는 그 정도의 금액이 있지 않습니다.");
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
			return 1;
			}
		}
		//----------------------------------[Bank INFO]-----------------------------------------------
		if(strcmp(cmd, "/출금", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(4, playerid, 2308.6597,-13.6337,26.7422))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 은행이 아닙니다");
					return 1;
				}
				if(PlayerInfo[playerid][TongJang] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 통장이 만들어져있지 않습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 개인 통장을 만드시려면, (/통장만들기)를 입력하세요");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /출금 [통장금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 통장엔 $%d의 금액이 있습니다", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /출금 [통장금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 통장엔 $%d의 금액이 있습니다", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 통장엔 그렇게 많은 금액이 있지 않습니다");
					return 1;
				}
				GiveMoney(playerid, cashdeposit);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "은행 영수증");
				format(string, sizeof(string), "출금 금액: $%d", cashdeposit);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "통장 잔액: $%d", PlayerInfo[playerid][pAccount]);
				SCM(playerid, COLOR_ERROR, string);
				return 1;
			}
			return 1;
		}

		if(strcmp(cmd, "/bank", true) == 0 || strcmp(cmd, "/입금", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(4, playerid, 2308.6597,-13.6337,26.7422))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 은행이 아닙니다");
					return 1;
				}
				if(PlayerInfo[playerid][TongJang] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 통장이 만들어져있지 않습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 개인 통장을 만드시려면, (/통장만들기)를 입력하세요");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /입금 [금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 통장엔 $%d의 금액이 있습니다", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /입금 [금액]");
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 통장엔 $%d의 금액이 있습니다", PlayerInfo[playerid][pAccount]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				if (cashdeposit > GetMoney(playerid) || cashdeposit < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그만큼의 금액이 없습니다");
					return 1;
				}
				GiveMoney(playerid, -cashdeposit);
				new curfunds = PlayerInfo[playerid][pAccount];
				PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "은행 영수증");
				format(string, sizeof(string), "입금전 금액: $%d",curfunds);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "입금후 금액: $%d",cashdeposit);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "통장 잔액: $%d", PlayerInfo[playerid][pAccount]);
				SCM(playerid, COLOR_ERROR, string);
				return 1;
			}
			return 1;
		}
		if(strcmp(cmd, "/atm출금", true) == 0 || strcmp(cmd, "/atmwithdraw", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
		        if(!IsPlayerInRangeOfPoint(playerid, 3, -32.276363,-57.995586,1003.139953) && !IsPlayerInRangeOfPoint(playerid, 3, 374.718902,167.128982,1007.987304))
		        {
		            SendClientMessage(playerid, COLOR_GREY, "(오류) ATM 기계 앞이 아닙니다.");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "(힌트) /atm출금 [수량]");
					format(string, sizeof(string), "(정보) 통장에는 $%d 가 있습니다.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "(힌트) /atm [수량]");
					format(string, sizeof(string), "(정보) 통장에는 $%d 가 있습니다.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				if(cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "(오류) 부정확한 금액 입니다.");
					return 1;
				}
				if(cashdeposit > 5000)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "(오류) 한번에 $5000 이상 출금할 수 없습니다.");
					return 1;
				}
			    ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,cashdeposit);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
				format(string, sizeof(string), "(정보) $%d 를 출금 했습니다, 통장 남은 잔액: $%d ", cashdeposit,PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				PlayerInfo[playerid][pJobTimer] = 12;
	            GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
	 			format(string, sizeof(string), "(관리자알림) (%d) -%s ATM 출금 $%d", playerid,giveplayer,cashdeposit);
				ABroadCast(COLOR_YELLOW,string, 5);

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /ATM출금 ($%d)",d,m,y,h,mi,s,sendername, cashdeposit);
				PayLog(string);
				return 1;
			}
			return 1;
		}
		if(strcmp(cmd, "/잔액", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(4, playerid, 2308.6597,-13.6337,26.7422))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 은행이 아닙니다");
					return 1;
				}
				if(PlayerInfo[playerid][TongJang] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 통장이 만들어져있지 않습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 개인 통장을 만드시려면, (/통장만들기)를 입력하세요");
					return 1;
				}
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 통장에 $%d의 금액이 있습니다",PlayerInfo[playerid][pAccount]);
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}

		if(strcmp(cmd, "/주사위", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new dice = random(6)+1;
				if (gDice[playerid] == 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "*** %s 주사위를 굴려서 [%d]이 나왔다", RPPlayerName(playerid),dice);
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 주사위가 없습니다");
					return 1;
				}
			}
			return 1;
		}
			if(strcmp(cmd, "/카드", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCard] == 1)
			{
				new card = random(52)+1;
				switch(card)
  	 			{
                	case 1:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] A 라는 카드를 뽑았다.", sendername);
                    	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 2:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] K 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 3:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] Q 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 4:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] J 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 5:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 10 라는카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 6:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 9 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 7:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 8 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 8:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 7 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 9:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 6 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 10:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 5 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 11:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 4 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 12:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 3 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 13:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [스페이드] 2 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 14:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] A 라는 카드를 뽑았다.", sendername);
                    	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 15:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] K 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 16:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] Q 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 17:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] J 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 18:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 10 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 19:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 9 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 20:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 8 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 21:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 7 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 22:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 6 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 23:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 5 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 24:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 4 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 25:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 3 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 26:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [클로버] 2 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 27:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] A 라는 카드를 뽑았다.", sendername);
                    	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 28:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] K 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 29:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] Q 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 30:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] J 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 31:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 10 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 32:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 9 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 33:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 8 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 34:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 7 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 35:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 6 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 36:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 5 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 37:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 4 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 38:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 3 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 39:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [하트] 2 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 40:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] A 라는 카드를 뽑았다.", sendername);
                    	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 41:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] K 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 42:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] Q 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 43:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] J 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 44:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 10 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 45:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 9 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 46:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 8 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 47:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 7 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 48:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 6 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 49:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 5 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 50:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 4 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 51:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 3 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                	}
                	case 52:
                	{
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	format(string, sizeof(string), "*** %s [다이아] 2 라는 카드를 뽑았다.", sendername);
						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
            	}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 카드를 갖고 있지 않습니다.");
				return 1;
			}
		}
		return 1;
	}

		if(strcmp(cmd, "/동전", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new coin = random(2)+1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new coinname[20];
				if(coin == 1) { coinname = "앞"; }
				else { coinname = "뒷"; }
				format(string, sizeof(string), "*** %s 동전을 던져서 잡았다. 그리고 [%s]면이 나왔다", RPPlayerName(playerid),coinname);
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			return 1;
		}

		if(strcmp(cmd, "/transfer", true) == 0 || strcmp(cmd, "/송금", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(4, playerid, 2308.6597,-13.6337,26.7422))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 은행이 아닙니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /송금 [플레이어번호/플레이어이름] [금액]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /송금 [플레이어번호/플레이어이름] [금액]");
					return 1;
				}
				moneys = strval(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playermoney = PlayerInfo[playerid][pAccount] ;
						if (moneys > 0 && playermoney >= moneys)
						{
							PlayerInfo[playerid][pAccount] -= moneys;
							PlayerInfo[giveplayerid][pAccount] += moneys;
							format(string, sizeof(string), "INFO : "#C_WHITE" $%d를 %s(%d)의 계좌에 성공적으로 송금하였습니다", moneys, RPPlayerName(giveplayerid),giveplayerid);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SCM(playerid, COLOR_SUC, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 은행 계좌에 $%d의 금액이 (☎:%d)으로부터 전달되었습니다.", moneys, PlayerInfo[playerid][pPnumber]);
							SCM(giveplayerid, COLOR_ERROR, string);
							printf("%s", string);
							PayLog(string);
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 부정확한 금액입니다");
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/통장만들기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(4, playerid, 2308.6597,-13.6337,26.7422))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 은행이 아닙니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "INFO : "#C_WHITE" 통장을 만들었습니다 (통장주인: %s)", RPPlayerName(playerid));
				SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이제부터 당신은 (/통장)으로 언제든지 금액을 볼수있습니다");
				PlayerInfo[playerid][TongJang] = 1;
				if(PlayerInfo[playerid][Quest] == 1 && PlayerInfo[playerid][pTut] == 6)
    {
					PlayerInfo[playerid][pTut] = 6;
					PlayerInfo[playerid][Quest] = 1;
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 퀘스트를 완료했습니다. 빅스모크에게 돌아가야합니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/통장", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][TongJang] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 당신은 통장이 만들어져있지 않습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 개인 통장을 만드시려면, (/통장만들기)를 입력하세요.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━");
				format(string, sizeof(string), "INFO : "#C_WHITE" 통장이름:[일반통장] 통장주인:[%s]", RPPlayerName(playerid));
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 은행잔액:[%d] 현재금액:[%d]", PlayerInfo[playerid][pAccount], GetMoney(playerid));
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}

		if(strcmp(cmd, "/모텔", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!PlayerToPoint(4, playerid,2216.6230,-1147.1450,1025.7969))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 모텔 사업장에 있지 않습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /모텔 [방 번호]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 방번호 (1~5) 숙박료 ($15)");
					return 1;
				}
				if(PlayerInfo[playerid][pHotel1] != 0||PlayerInfo[playerid][pHotel2] != 0||PlayerInfo[playerid][pHotel3] != 0||PlayerInfo[playerid][pHotel4] != 0||PlayerInfo[playerid][pHotel5] != 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 당신은 모텔방이 있습니다");
					return 1;
				}
				new item = strval(tmp);
				if (item == 1 && GetMoney(playerid) >= 150)
				{
					PlayerInfo[playerid][pHotel1] = 1;
					GameTextForPlayer(playerid, string, 5000, 1);
					GiveMoney(playerid, -150);
					PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 모텔방을 예약하였습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 앞으로 리스폰은 모텔에서 이루어집니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔 예약은 (/모텔끝)으로 그만두실수 있습니다");
					PlayerUpdate();
					return 1;
				}
				else if (item == 2 && GetMoney(playerid) >= 150)
				{
					PlayerInfo[playerid][pHotel2] = 1;
					GameTextForPlayer(playerid, string, 5000, 1);
					GiveMoney(playerid, -150);
					PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 모텔방을 예약하였습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 앞으로 리스폰은 모텔에서 이루어집니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔 예약은 (/모텔끝)으로 그만두실수 있습니다");
					PlayerUpdate();
					return 1;
				}
				else if (item == 3 && GetMoney(playerid) >= 150)
				{
					PlayerInfo[playerid][pHotel3] = 1;
					GameTextForPlayer(playerid, string, 5000, 1);
					GiveMoney(playerid, -150);
					PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 모텔방을 예약하였습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 앞으로 리스폰은 모텔에서 이루어집니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔 예약은 (/모텔끝)으로 그만두실수 있습니다");
					PlayerUpdate();
					return 1;
				}
				else if (item == 4 && GetMoney(playerid) >= 150)
				{
					PlayerInfo[playerid][pHotel4] = 1;
					GameTextForPlayer(playerid, string, 5000, 1);
					GiveMoney(playerid, -150);
					PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 모텔방을 예약하였습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 앞으로 리스폰은 모텔에서 이루어집니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔 예약은 (/모텔끝)으로 그만두실수 있습니다");
					PlayerUpdate();
					return 1;
				}
				else if (item == 5 && GetMoney(playerid) >= 150)
				{
					PlayerInfo[playerid][pHotel5] = 1;
					GameTextForPlayer(playerid, string, 5000, 1);
					GiveMoney(playerid, -150);
					PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 모텔방을 예약하였습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 앞으로 리스폰은 모텔에서 이루어집니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔 예약은 (/모텔끝)으로 그만두실수 있습니다");
					PlayerUpdate();
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 소지하신 금액이 부족합니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/모텔끝", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pHotel1] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔예약을 중단하였습니다");
					PlayerInfo[playerid][pHotel1] = 0;
					return 1;
				}
				else if(PlayerInfo[playerid][pHotel2] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔예약을 중단하였습니다");
					PlayerInfo[playerid][pHotel2] = 0;
					return 1;
				}
				else if(PlayerInfo[playerid][pHotel3] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔예약을 중단하였습니다");
					PlayerInfo[playerid][pHotel3] = 0;
					return 1;
				}
				else if(PlayerInfo[playerid][pHotel4] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔예약을 중단하였습니다");
					PlayerInfo[playerid][pHotel4] = 0;
					return 1;
				}
				else if(PlayerInfo[playerid][pHotel5] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모텔예약을 중단하였습니다");
					PlayerInfo[playerid][pHotel5] = 0;
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/구매", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!PlayerToPoint(100, playerid,-30.875,-88.9609,1004.53))//centerpoint 24-7
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 편의점 계산대 앞에 있지 않습니다.");
					return 1;
				}
				ShowPlayerDialog(playerid,DIALOG_9,DIALOG_STYLE_LIST,"구매 목록","전자제품\n소모품","선택","취소");
			}
			return 1;
		}
		if(strcmp(cmd, "/도구", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(10, playerid,1765.5021,-1805.3235,772.1852))
				{
				
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 도구점 계산대 앞에 있지 않습니다");
					return 1;
				}
				ShowPlayerDialog(playerid,DIALOG_12,DIALOG_STYLE_LIST,"도구 제품","낚시도구(150$)\n주사위(50$)\n가방(150$)\n광고판($33)\n스프레이캔($50)\n콘돔(10$)\n알루미늄방망이($100)\n골프채($150)\n꽃($15)\n당구채($100)\n삽($50)\n무전기($250)\n일회용너클($50)\n나이프($150)\n카타나($300)\n카드($10)\n지팡이($100)\n철근($100)","구매","취소");
			}
			return 1;
		}

		if(strcmp(cmd, "/pill",true) == 0 || strcmp(cmd, "/알약",true) == 0)
		{
			if (PlayerInfo[playerid][pPill] <= 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 소지품에 소지하신 알약이 없습니다.");
				return 1;
			}
			GiveHealth(playerid, 33);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 알약을 먹고는 체력이 회복됩니다.");
			SCM(playerid, COLOR_ERROR, string);
			format(string, sizeof(string), "* %s 주머니에서 알약을 꺼내 먹는다.", RPPlayerName(playerid));
			ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			PlayerInfo[playerid][pPill] -= 1;
			return 1;
		}
		if(strcmp(cmd, "/렌트카", true) == 0 || strcmp(cmd, "/범버카",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new carid = GetPlayerVehicleID(playerid);
				if(carid >= MCAR[99][0] && carid <= MCAR[99][1])
				{
					new hirefee = HireCost(GetPlayerVehicleID(playerid));
					if(HireCar[playerid] != 299)
					{
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
						SCM(playerid, COLOR_RED, "오류 "#C_ERROR" 당신은 이미 렌트한 차량이 있습니다");
						return 1;
					}
					for(new i=0; i<M_P; i++)
					{
						if(HireCar[i] == GetPlayerVehicleID(playerid))
						{
							SCM(playerid, COLOR_RED, "오류 "#C_ERROR" 이 차량은 이미 주인이있는 렌트차량입니다");
							return 1;
						}
					}

						if(GetVehicleModel(carid) == 400)//캐뇨레노
						{
							if(GetMoney(playerid) <=  99)
							{
								SCM(playerid, COLOR_RED, "오류 "#C_ERROR" 소지 하신 금액이 부족하므로 렌트를 할수없습니다.");
								return 1;
							}
							GiveMoney(playerid, -300);
							PlayerInfo[playerid][RentTime] = 1800;
							SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR": 차량을 성공적으로 렌트를 하였습니다.");
							SCM(playerid, COLOR_SUC, "정보 "#C_ERROR": '/렌트시간'으로 렌트를 하는 시간을 볼수있으며 '/렌트반납'으로 렌트카를 반납할수 있습니다.");
						    SCM(playerid, COLOR_SUC, "Server "#C_ERROR": 렌트를 한 후에는 꼭 '/렌트반납'을 할수있는 멋진 RP인이 됩시다.");
						}
						if(GetVehicleModel(carid) == 474)//
						{
							if(GetMoney(playerid) <=  99)
							{
								SCM(playerid, COLOR_RED, "오류 "#C_ERROR" 소지 하신 금액이 부족하므로 렌트를 할수없습니다.");
								return 1;
							}
							GiveMoney(playerid, -500);
							PlayerInfo[playerid][RentTime] = 1800;
							SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR": 차량을 성공적으로 렌트를 하였습니다.");
							SCM(playerid, COLOR_SUC, "정보 "#C_ERROR": '/렌트시간'으로 렌트를 하는 시간을 볼수있으며 '/렌트반납'으로 렌트카를 반납할수 있습니다.");
						    SCM(playerid, COLOR_SUC, "Server "#C_ERROR": 렌트를 한 후에는 꼭 '/렌트반납'을 할수있는 멋진 RP인이 됩시다.");
						}
						if(GetVehicleModel(carid) == 462)//스쿠터
						{
							if(GetMoney(playerid) <=  49)
							{
								SCM(playerid, COLOR_RED, "오류 "#C_ERROR" 소지 하신 금액이 부족하므로 렌트를 할수없습니다.");
								return 1;
							}
							GiveMoney(playerid, -250);
							PlayerInfo[playerid][RentTime] = 1800;
							SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR": 차량을 성공적으로 렌트를 하였습니다.");
							SCM(playerid, COLOR_SUC, "정보 "#C_ERROR": '/렌트시간'으로 렌트를 하는 시간을 볼수있으며 '/렌트반납'으로 렌트카를 반납할수 있습니다.");
						    SCM(playerid, COLOR_SUC, "Server "#C_ERROR": 렌트를 한 후에는 꼭 '/렌트반납'을 할수있는 멋진 RP인이 됩시다.");
						}
						if(GetVehicleModel(carid) == 510)//자전거
						{
							if(GetMoney(playerid) <=  49)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 소지 하신 금액이 부족하므로 렌트를 할수없습니다.");
								return 1;
							}
							GiveMoney(playerid, -150);
							PlayerInfo[playerid][RentTime] = 1800;
						}
						if(GetVehicleModel(carid) == 539)//스쿠터
						{
							if(GetMoney(playerid) <=  249)
							{
								SCM(playerid, COLOR_RED, "오류 "#C_ERROR" 소지 하신 금액이 부족하므로 렌트를 할수없습니다.");
								return 1;
							}
							GiveMoney(playerid, -250);
							PlayerInfo[playerid][RentTime] = 1800;
							SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR": 차량을 성공적으로 렌트를 하였습니다.");
							SCM(playerid, COLOR_SUC, "정보 "#C_ERROR": '/렌트시간'으로 렌트를 하는 시간을 볼수있으며 '/렌트반납'으로 렌트카를 반납할수 있습니다.");
						    SCM(playerid, COLOR_SUC, "Server "#C_ERROR": 렌트를 한 후에는 꼭 '/렌트반납'을 할수있는 멋진 RP인이 됩시다.");
						}
						HireCar[playerid] = GetPlayerVehicleID(playerid);
						OnPropUpdate();
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "~w~Don't forget to ~r~/unrentcar~n~~g~/lock ~w~to lock your car",hirefee);
						SCM(playerid, COLOR_SUC, "힌트 "#C_ERROR" (/차시간)으로 시간을 봅니다. (/렌트카반납)으로 차량을 반납합니다.");
						CarInfo[GetPlayerVehicleID(playerid)][cStarted] = false;
						new playerveh = GetPlayerVehicleID(playerid);
						PutPlayerInVehicle(playerid, playerveh, 0);
						SetTimerEx("StartingTheVehicle",500,0,"i",playerid);
						RentTimer[playerid] = 0;
					}

				}
				return 1;
			}
			if(strcmp(cmd, "/렌트카반납", true) == 0 || strcmp(cmd, "/범버카반납",true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(HireCar[playerid] != 299)
					{
						if(idcar == HireCar[playerid])
						{
							SetPlayerFreeze(playerid, false, 0);
							TogglePlayerControllable(playerid, 1);
						}
						SetVehicleToRespawn(HireCar[playerid]);
						RentTimer[playerid] = 0;
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
						HireCar[playerid] = 299;
						SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR": 렌트카/범버카를 반납하였습니다. 이제부터 렌트카를 사용할수 없습니다.");
						GiveMoney(playerid, 10);
					}
				}
				return 1;
			}
			if(strcmp(cmd, "/직업차시간", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
				    if(ReTurnJobCar[GetPlayerVehicleID(playerid)]!=0)
					{
					    format(string,sizeof(string), "정보 "#C_ERROR" 남은 직업차 리스폰 시간 [%d]초",ReTurnJobCar[GetPlayerVehicleID(playerid)]);
                        SCM(playerid,COLOR_INFO,string);
					}else{
					    SCM(playerid,COLOR_INFO,"오류 이 차량은 직업차 리스폰 시간이 시작 안되어있습니다.");
					}
				}
				return 1;
			}
			if(strcmp(cmd, "/렌트시간", true) == 0 || strcmp(cmd, "/렌트카시간", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
				    if(!RentTimer[playerid])
			 	   {
						RentTimer[playerid] = 1;
						SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR" 이제부터 렌트카 임대 종료 시간이 뜹니다.");
						return 1;
					}
					else if(RentTimer[playerid])
					{
					    RentTimer[playerid] = 0;
					    SCM(playerid, COLOR_INFO1, "정보 "#C_ERROR" 이제부터 렌트카 임대 종료 시간 뜨지 않습니다.");
                	    return 1;
					}
				}
				return 1;
			}
		if(strcmp(cmd, "/hirecar", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 6)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /hirecar [key id]");
						return 1;
					}
					new car = strval(tmp);
					HireCar[playerid] = car;
					format(string, sizeof(string), "Key Fashioned You Can Lock Car %d",car);
					SCM(playerid, COLOR_ERROR, string);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /열음 ");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/switchkey", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!SwitchKey[playerid])
				{
					if(HireCar[playerid] != 299)
					{
						SwitchKey[playerid] = 1;
						GameTextForPlayer(playerid, "~w~You control now your house car", 5000, 6);
					}
					else
					{
						GameTextForPlayer(playerid, "~w~You do not hire a car", 5000, 6);
					}
					return 1;
				}
				else
				{
					SwitchKey[playerid] = 0;
					GameTextForPlayer(playerid, "~w~You control now your hire car", 5000, 6);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/건물생성", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 8 || PlayerInfo[playerid][pRank] >= 4 && PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
				for(new h=1; h<MAX_BUILDING; h++)
				{
					if(BuildingInfo[h][hCreated] == 0)
					{
						Created[playerid]=1;
						CreatedHouse[playerid]=h;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 건물의 이름을 입력해주세요.");
						return 1;
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/건물수정", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 7 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21 && PlayerInfo[playerid][pRank] >= 4)
			{
				tmp=strtok(cmdtext,idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /건물수정 [기능]");
					SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 번호열쇠");
					return 1;
				}
				if(strcmp(tmp,"번호열쇠",true)==0)
				{
					for(new h=1; h<MAX_BUILDING; h++)
					{
						if(BuildingInfo[h][hCreated] != 0)
						{
							if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
							{
								new Float:ppos[3];
								GetPlayerPos(playerid, ppos[0], ppos[1], ppos[2]);
								BuildingInfo[h][hNumberKey]=1;
								BuildingInfo[h][hPass]=9999;
								for(new f=0; f<3; f++)
								{
									BuildingInfo[h][hKeyPos][f] = ppos[f];
								}
								SaveHouse(h);
								return 1;
							}
						}
					}
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/건물삭제", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21 && PlayerInfo[playerid][pRank] >= 4)
			{
				for(new h=1; h<MAX_BUILDING; h++)
				{
					if(BuildingInfo[h][hCreated] != 0)
					{
						if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
						{
							DeleteHouse(h);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 건물이 정상적으로 삭제처리 되었습니다. 픽업은 리붓후 사라집니다.");
							return 1;
						}
					}
				}
			}
			return 1;
		}
		if(c_strcmp(cmd, "/사업장") == 1 ||c_strcmp(cmd, "/bizz") == 1)
		{
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /사업장 [기능]");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목록, 구매, 판매, 잠금 입금 출금 잔액");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 이름변경 입장료 ");
				return 1;
			}
			if(strcmp(tmp,"목록",true)==0)
			{
				ShowBuildlist(playerid, playerid);
				return 1;
			}
			else if(strcmp(tmp, "이름변경", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /사업장 이름변경 [집이름]");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사업장 이름변경 영어만 가능합니다.");
						return 1;
					}
					strmid(BuildingInfo[h][hName], (result), 0, 60, 60);
					SaveHouse(h);
					format(string, sizeof(string), "INFO : "#C_WHITE" 사업장의 이름을 [%s]로 변경했습니다.",BuildingInfo[h][hName]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사업장을 가지고 있지 않습니다.");
				}
			}
						else if(strcmp(tmp, "입장료", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_HINT,"(힌트) /사업장 입장료 [액수]");
						return 1;
					}
					moneys=strval(tmp);
					if(moneys < 1 || moneys > 300)
					{ return SCM(playerid, COLOR_ERROR, ""C_RED"(에러)"C_WHITE" 입장료가 $1에서 $300 사이여야 합니다."); }
					BuildingInfo[h][hRentPrice]=moneys;
					SaveHouse(h);
					format(string, sizeof(string), "(정보) 입장료가 $%d로 설정되었습니다.", moneys);
					SCM(playerid, COLOR_INFO, string);
				}
				else
				{
					SCM(playerid, COLOR_ERROR, ""C_RED"(에러)"C_WHITE" 당신은 사업장을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "구매", true) == 0)
			{
				if(PlayerInfo[playerid][pBuild] == 0)
				{
				if(PlayerInfo[playerid][pCityLic] != 1)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시민증이 없습니다. 시청으로 가서 시민증을 따주세요.");
			return 1;
			}
					for(new h=1; h<MAX_BUILDING; h++)
					{
						if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
						{
							if(BuildingInfo[h][hOwned] == 0)
							{
								if(BuildingInfo[h][hType] == 2)
								{
									if(BuildingInfo[h][hPrice] <= GetMoney(playerid))
									{
										BuildingInfo[h][hOwned]=1;
										GetPlayerName(playerid, BuildingInfo[h][hOwner], MAX_PLAYER_NAME);
										PlayerInfo[playerid][pBuild]=h;
										GiveMoney(playerid, -BuildingInfo[h][hPrice]);
										SaveHouse(h);
										PlayerUpdate();
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사업장을 구매하셨습니다.");
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈이 부족합니다.");
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 건물은 집 입니다.");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 주인이 있습니다.");
							}
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 사업장을 가지고 있습니다.");
				}
			}
			else if(strcmp(tmp, "출금", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /사업장 출금 [액수]");
						return 1;
					}
					moneys=strval(tmp);
					if(BuildingInfo[h][hBank] < moneys || moneys < 0)//SBizzInfo[2][sbTill]
					{
						return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 돈이 부족합니다.");
					}
					BuildingInfo[h][hBank]-=moneys;
					GiveMoney(playerid, moneys);
					SaveHouse(h);
					PlayerUpdate();
					format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 $%d를 출금했습니다.", moneys);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사업장 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "입금", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /사업장 입금 [액수]");
						return 1;
					}
					moneys=strval(tmp);
					if(GetMoney(playerid) < moneys || moneys < 0)
					{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 돈이 부족합니다."); }
					BuildingInfo[h][hBank]+=moneys;
					GiveMoney(playerid, -moneys);
					SaveHouse(h);
					PlayerUpdate();
					format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 $%d를 입금했습니다.", moneys);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사업장을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "잔액", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 사업장 금고에는 $%d가 있습니다.", BuildingInfo[h][hBank]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사업장을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "판매", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					GiveMoney(playerid, BuildingInfo[h][hPrice]);
					BuildingInfo[h][hOwned]=0;
					PlayerInfo[playerid][pBuild]=0;
					SaveHouse(h);
					SpawnChange[playerid] = 0;
					PlayerUpdate();
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사업장을 판매하셨습니다!");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사업장을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "잠금", true) == 0)
			{
				new h=PlayerInfo[playerid][pBuild];
				if(PlayerInfo[playerid][pBuild] != 0)
				{
					if(BuildingInfo[h][hLocked] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사업장이 잠겼습니다.");
						BuildingInfo[h][hLocked]=1;
						SaveHouse(h);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사업장이 열렸습니다.");
						BuildingInfo[h][hLocked]=0;
						SaveHouse(h);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사업장을 가지고 있지 않습니다.");
				}
			}
			return 1;
		}
		if(c_strcmp(cmd, "/집") == 1||c_strcmp(cmd, "/house") == 1)
		{
			tmp=strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /집 [기능]");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 목록, 구매, 판매, 잠금, 위치, 넣기, 꺼내기, 이름변경, 리스폰");
				SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 출금, 입금, 잔액, 비밀번호, 렌트, 렌트값, 렌트하기, 렌트그만");
				return 1;
			}
			if(strcmp(tmp,"목록",true)==0)
			{
				ShowHouselist(playerid, playerid);
				return 1;
			}
			else if(strcmp(tmp, "비밀번호", true) == 0)
			{
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 서비스 추가중입니다.");
				}
			}
			else if(strcmp(tmp, "구매", true) == 0)
			{
				if(PlayerInfo[playerid][pHouse] == 0)
				{
				if(PlayerInfo[playerid][pCityLic] != 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시민증이 없습니다. 시청으로 가서 시민증을 따주세요.");
				return 1;
				}
					for(new h=1; h<MAX_BUILDING; h++)
					{
						if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
						{
							if(BuildingInfo[h][hOwned] == 0)
							{
								if(BuildingInfo[h][hType] == 1)
								{
									if(BuildingInfo[h][hPrice] <= GetMoney(playerid))
									{
										BuildingInfo[h][hOwned]=1;
										GetPlayerName(playerid, BuildingInfo[h][hOwner], MAX_PLAYER_NAME);
										PlayerInfo[playerid][pHouse]=h;
										GiveMoney(playerid, -BuildingInfo[h][hPrice]);
										SaveHouse(h);
										PlayerUpdate();
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집을 구매하셨습니다!");
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈이 부족합니다.");
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 건물은 사업장 입니다.");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 주인이 있습니다.");
							}
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 집을 가지고 있습니다.");
				}
			}
			else if(strcmp(tmp, "판매", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					GiveMoney(playerid, BuildingInfo[h][hPrice])
						BuildingInfo[h][hOwned]=0;
					PlayerInfo[playerid][pHouse]=0;
					SaveHouse(h);
					SpawnChange[playerid] = 0;
					PlayerUpdate();
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집을 판매하셨습니다!");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "잠금", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				new ha=PlayerInfo[playerid][pRentHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					if(BuildingInfo[h][hLocked] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이 잠겼습니다.");
						BuildingInfo[h][hLocked]=1;
						SaveHouse(h);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이 열렸습니다.");
						BuildingInfo[h][hLocked]=0;
						SaveHouse(h);
					}
				}
				else if(PlayerInfo[playerid][pRentHouse] != 0)
				{
					if(BuildingInfo[ha][hLocked] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이 잠겼습니다.");
						BuildingInfo[ha][hLocked]=1;
						SaveHouse(ha);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이 열렸습니다.");
						BuildingInfo[ha][hLocked]=0;
						SaveHouse(ha);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "렌트하기", true) == 0)
			{
				if(PlayerInfo[playerid][pHouse] == 0)
				{
					for(new h=1; h<MAX_BUILDING; h++)
					{
						if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
						{
							if(BuildingInfo[h][hRent] == 1)
							{
								if(BuildingInfo[h][hType] == 1)
								{
									if(BuildingInfo[h][hRentPrice] <= GetMoney(playerid))
									{
										PlayerInfo[playerid][pRentHouse]=h;
										GiveMoney(playerid, -BuildingInfo[h][hRentPrice]);
										SpawnChange[playerid] = 1;
										PlayerUpdate();
										SaveHouse(h);
										PlayerUpdate();
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집을 렌트하셨습니다!");
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈이 부족합니다.");
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 건물은 사업장입니다.");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 렌트가 불가능한 집 입니다.");
							}
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 집을 가지고 있습니다.");
				}
			}
			else if(strcmp(tmp, "렌트그만", true) == 0)
			{
				if(PlayerInfo[playerid][pRentHouse] != 0)
				{
					PlayerInfo[playerid][pRentHouse]=0;
					SpawnChange[playerid] = 0;
					PlayerUpdate();
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 렌트를 중지하셨습니다!");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 렌트하고있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "렌트", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					if(BuildingInfo[h][hRent] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집 렌트를 허용합니다.");
						BuildingInfo[h][hRent]=1;
						SaveHouse(h);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집 렌트를 거부합니다.");
						BuildingInfo[h][hRent]=0;
						SaveHouse(h);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "렌트값", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					tmp=strtok(cmdtext,idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /집 렌트값 [액수]");
						return 1;
					}
					moneys=strval(tmp);
					if(moneys < 1 || moneys > 999)
					{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 렌트값은 $1에서 $999 사이여야 합니다."); }
					BuildingInfo[h][hRentPrice]=moneys;
					SaveHouse(h);
					format(string, sizeof(string), "INFO : "#C_WHITE" 렌트값이 $%d로 설정되었습니다.", moneys);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "위치", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				new ha=PlayerInfo[playerid][pRentHouse];
				if(Work[playerid] != 0)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 일 중에는 사용할 수 없습니다. 일을 끝내고 사용이 가능합니다.");
					return 1;
				}
				if(h != 0)
				{
					new Float:hx=BuildingInfo[h][hEnterX];
					new Float:hy=BuildingInfo[h][hEnterY];
					new Float:hz=BuildingInfo[h][hEnterZ];
					SetPlayerCheckpoint(playerid,hx,hy,hz,10);
					SCM(playerid, COLOR_ERROR, "(문자) 당신의 집의 위치를 미니맵상에 표시했습니다. 발신자 번호: 알수없음");
				}
				else if(ha != 0)
				{
					new Float:hx=BuildingInfo[ha][hEnterX];
					new Float:hy=BuildingInfo[ha][hEnterY];
					new Float:hz=BuildingInfo[ha][hEnterZ];
					SetPlayerCheckpoint(playerid,hx,hy,hz,10);
					SCM(playerid, COLOR_ERROR, "(문자) 당신의 집의 위치를 미니맵상에 표시했습니다. 발신자 번호: 알수없음");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "출금", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
					{
						if(BuildingInfo[h][hOwned] == 1)
						{
							tmp=strtok(cmdtext,idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /집 출금 [액수]");
								return 1;
							}
							moneys=strval(tmp);
							if(BuildingInfo[h][hBank] < moneys || moneys < 0)
							{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 돈이 부족합니다."); }
							BuildingInfo[h][hBank]-=moneys;
							GiveMoney(playerid, moneys);
							SaveHouse(h);
							PlayerUpdate();
							format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 $%d를 출금했습니다.", moneys);
							SCM(playerid, COLOR_ERROR, string);
						}else{
						    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집근처에서 해주세요.");
						}
		           }else{
					    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집근처에서 해주세요.");
		           }
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "입금", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
					{
						if(BuildingInfo[h][hOwned] == 1)
						{
							tmp=strtok(cmdtext,idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /집 입금 [액수]");
								return 1;
							}
							moneys=strval(tmp);
							if(GetMoney(playerid) < moneys || moneys < 0)
							{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 금고에 돈이 부족합니다."); }
							BuildingInfo[h][hBank]+=moneys;
							GiveMoney(playerid, -moneys);
							SaveHouse(h);
							PlayerUpdate();
							format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 $%d를 입금했습니다.", moneys);
							SCM(playerid, COLOR_ERROR, string);
						}else{
						    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집근처에서 해주세요.");
						}
					}else{
					    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집근처에서 해주세요.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "잔액", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 집 금고에는 $%d가 있습니다.", BuildingInfo[h][hBank]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "리스폰", true) == 0)
			{
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					if(SpawnChange[playerid])
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 당신의 기지에서 에서 리스폰이 될것입니다");
						SpawnChange[playerid] = 0;
						PlayerUpdate();
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집에서 리스폰이 될것입니다");
						SpawnChange[playerid] = 1;
						PlayerUpdate();
					}
				}
				else if(PlayerInfo[playerid][pRentHouse] != 0)
				{
					if(SpawnChange[playerid])
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제부터 당신의 기지에서 에서 리스폰이 될것입니다");
						SpawnChange[playerid] = 0;
						PlayerUpdate();
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 렌트집에서 리스폰이 될것입니다");
						SpawnChange[playerid] = 1;
						PlayerUpdate();
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			else if(strcmp(tmp, "이름변경", true) == 0)
			{
				new h=PlayerInfo[playerid][pHouse];
				if(PlayerInfo[playerid][pHouse] != 0)
				{
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /집 이름변경 [집이름]");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이름은 영어만 가능합니다.");
						return 1;
					}
					strmid(BuildingInfo[h][hName], (result), 0, 60, 60);
					SaveHouse(h);
					format(string, sizeof(string), "INFO : "#C_WHITE" 집의 이름을 [%s]로 변경했습니다.",BuildingInfo[h][hName]);
					SCM(playerid, COLOR_ERROR, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 집을 가지고 있지 않습니다.");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/공중전화", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(3.0,playerid,355.7854,-1364.2561,14.4757)||PlayerToPoint(3.0,playerid,355.7854,-1364.2561,14.4757)
				||PlayerToPoint(3.0,playerid,523.0828,-1516.3640,16.1900)||PlayerToPoint(3.0,playerid,546.2437,-1498.3268,15.6648)
				||PlayerToPoint(3.0,playerid,247.7889,-1448.1329,15.3044)||PlayerToPoint(3.0,playerid,355.6711,-1364.3162,14.4748)
				||PlayerToPoint(3.0,playerid,638.8351,-1228.2826,18.1804)||PlayerToPoint(3.0,playerid,1722.3639,-1720.8198,14.8745)
				||PlayerToPoint(3.0,playerid,1807.7750,-1598.2334,13.5469)||PlayerToPoint(3.0,playerid,1710.7847,-1605.1738,13.5469)
				||PlayerToPoint(3.0,playerid,523.1801,-1525.5341,16.1900)||PlayerToPoint(3.0,playerid,2166.3967,-1154.9603,24.8750)||
				PlayerToPoint(3.0,playerid,702.3674,-1594.9342,14.1346)||
				PlayerToPoint(3.0,playerid,1971.8141,-1224.8396,20.0234)||
				PlayerToPoint(3.0,playerid,1969.0165,-1175.4841,20.0307)||
				PlayerToPoint(3.0,playerid,2195.5923,-2279.0388,13.5469)||
				PlayerToPoint(3.0,playerid,1809.6565,-1597.4441,13.5469)||
				PlayerToPoint(3.0,playerid,1628.9464,-2334.8721,13.5398)||
				PlayerToPoint(3.0,playerid,1807.7180,-1599.1127,13.5469)||
				PlayerToPoint(3.0,playerid,1997.1864,-1440.5804,13.5646)||
				PlayerToPoint(3.0,playerid,1805.7616,-1600.7755,13.5469)||
				PlayerToPoint(3.0,playerid,1836.9569,-1674.9613,13.3263)||
				PlayerToPoint(3.0,playerid,1834.3588,-1851.6154,13.3897)||
				PlayerToPoint(3.0,playerid,1767.8541,-1906.3491,13.5684)||
	 			PlayerToPoint(3.0,playerid,1506.9009,-1748.1884,13.5469)||
				PlayerToPoint(3.0,playerid,1507.8274,-1749.1156,13.5469)||
				PlayerToPoint(3.0,playerid,1508.5817,-1748.3524,13.5469)||
				PlayerToPoint(3.0,playerid,1507.7705,-1747.4476,13.5469)||
				PlayerToPoint(3.0,playerid,1454.7972,-1747.3339,13.5469)||
				PlayerToPoint(3.0,playerid,1454.0532,-1748.1458,13.5469)||
				PlayerToPoint(3.0,playerid,1454.8549,-1748.9977,13.5469)||
				PlayerToPoint(3.0,playerid,1455.7145,-1748.2141,13.5469)||
				PlayerToPoint(3.0,playerid,383.2359,170.0088,1008.3828)||
				PlayerToPoint(3.0,playerid,381.5433,170.0076,1008.3828)||
				PlayerToPoint(3.0,playerid,379.9137,170.0082,1008.3828)||
				PlayerToPoint(3.0,playerid,1513.2222,-1661.1630,13.5469)||
				PlayerToPoint(3.0,playerid,1493.8312,-1583.2626,13.5469)||
				PlayerToPoint(3.0,playerid,1580.5605,-1339.7872,16.4844)||
				PlayerToPoint(3.0,playerid,1497.0654,-1667.9014,14.0469)||
				PlayerToPoint(3.0,playerid,1723.0802,-1720.3402,13.5392)||
				PlayerToPoint(3.0,playerid,1721.2010,-1720.2930,13.5408)||
				PlayerToPoint(3.0,playerid,1721.1929,-1721.3021,13.5453)||
				PlayerToPoint(3.0,playerid,1794.7733,-1190.2213,23.9781)||
				PlayerToPoint(3.0,playerid,1441.7980,-1010.5651,26.8438)||
				PlayerToPoint(3.0,playerid,1482.7791,-1010.6549,26.8438)||
				PlayerToPoint(3.0,playerid,637.8669,-1227.5389,18.1274)||
				PlayerToPoint(3.0,playerid,638.0649,-1229.1421,18.0769)||
				PlayerToPoint(3.0,playerid,356.8673,-1364.4880,14.4854)||
				PlayerToPoint(3.0,playerid,726.8434,-1258.0876,13.5391)||
				PlayerToPoint(3.0,playerid,338.7822,-1397.3098,14.2225)||
				PlayerToPoint(3.0,playerid,1726.8444,-1258.0195,13.5391)||
				PlayerToPoint(3.0,playerid,339.6283,-1398.7505,14.3894)||
				PlayerToPoint(3.0,playerid,338.5725,-1398.6853,14.3753)||
				PlayerToPoint(3.0,playerid,261.0875,-1337.7529,53.1289)||
				PlayerToPoint(3.0,playerid,1176.7507,-1329.0137,14.0322)||
				PlayerToPoint(3.0,playerid,1577.6366,-1881.5475,13.5469)||
				PlayerToPoint(3.0,playerid,1927.6925,-1862.9465,13.5619)||
				PlayerToPoint(3.0,playerid,2404.8967,-1230.2699,23.8293)||
				PlayerToPoint(3.0,playerid,2323.0044,-1645.3906,14.8270)||
				PlayerToPoint(3.0,playerid,359.9239,-1805.3857,4.6507)||
				PlayerToPoint(3.0,playerid,1479.4624,-1696.8491,14.0469)||
				PlayerToPoint(3.0,playerid,1478.6696,-1697.6906,14.0469)||
				PlayerToPoint(3.0,playerid,2258.6975,-1211.6608,23.9688)||
				PlayerToPoint(3.0,playerid,2257.6975,-1211.6608,23.9688))
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			SCM(playerid, COLOR_GRAD2, "SYSTEM :"#C_WHITE" /공중전화 [전화번호]");
			return 1;
			}
			if(Mobile[playerid] != 255)
			{
			SCM(playerid, COLOR_GRAD2, "SYSTEM :"#C_WHITE" 당신은 이미 통화 중입니다.");
			return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new phonenumb = strval(tmp);
			//동작----------------
			if(IsPlayerInAnyVehicle(playerid))
			{SCM(playerid,COLOR_GRAD2, "SYSTEM :"#C_WHITE" 차를 타고 계십니다.");
			}
			else
			{
			 if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			 {
			 SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			}
			}
			//동작----------------
			if(phonenumb == 911)
			{
			SCM(playerid, COLOR_WHITE, "SYSTEM :"#C_WHITE" 이제 'T' 버튼으로 말을 할 수 있습니다. (/끊기)로 전화를 끊을 수 있습니다.");
			SCM(playerid, COLOR_ALLDEPT, "911센터: 경찰이나 응급의료원이 필요하십니까? 둘중 하나 필요한 서비스를 말씀하세요.");
			Mobile[playerid] = 911;
			return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
			SCM(playerid, COLOR_GRAD2, "SYSTEM :"#C_WHITE" 띠─ 띠─ 띠─(못 받는 다는 소리가 난다)... (/끊기)");
			 return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			if(IsPlayerConnected(i))
			{
			if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
			{
			giveplayerid = i;
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnected(giveplayerid))
			{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			if(PhoneOnline[giveplayerid] > 0)
			{
			SCM(playerid, COLOR_GREY, "SYSTEM :"#C_WHITE" 그는 스마트폰 전원이 꺼져 있습니다.");
			return 1;
			}
			if (Mobile[giveplayerid] == 255)
			{
			format(string, sizeof(string), "SYSTEM :"#C_WHITE" 휴대 전화기가 울린다 (/받기)");
			SCM(giveplayerid, COLOR_ERROR, string);
			GetPlayerName(giveplayerid, sendername, sizeof(sendername));
			RingTone[giveplayerid] = 10;
			RingToner();
			format(string, sizeof(string), "* %s의 휴대 전화기가 울린다.", RPPlayerName(playerid));
			SCM(playerid, COLOR_WHITE, "SYSTEM :"#C_WHITE" 당신은 이제 T 버튼으로 말을 할 수 있습니다. /끊기 로 전화를 끊을 수 있습니다.");
			ProxDetector(3.0, i, string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
			Gongjungnum[playerid] = true;
			CellTime[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			return 1;
			}
			}
			}
			}
			}
			}
			 }//오류
			 else
			{
			SCM(playerid, COLOR_GRAD2, "INFO : "#C_WHITE" 공중전화기 근처가 아닙니다.");
			 return 1;
			}
			}
			SCM(playerid, COLOR_GRAD2, "INFO : "#C_WHITE" 띠─ 띠─ 띠─(못 받는 다는 소리가 난다)... (/끊기)");
			Mobile[playerid]=999;
			return 1;
			}
			if(c_strcmp(cmd, "/끊기") == 1 || c_strcmp(cmd, "/끊") == 1)
			{
			if(IsPlayerConnected(playerid))
			{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			 if(caller != INVALID_PLAYER_ID)
			 {
			if(caller != 255)
			{

			if(caller < 255)
			{
			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE)
			{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			 {
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			 }
			}
			if(GetPlayerSpecialAction(caller) == SPECIAL_ACTION_USECELLPHONE)
			{
			if(GetPlayerState(caller) == PLAYER_STATE_ONFOOT)
			 {
			SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
			 }
			}
			SCM(caller,COLOR_GRAD2, "INFO : "#C_WHITE" 그들이 전화를 끊었다.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			SCM(playerid,COLOR_GRAD2, "INFO : "#C_WHITE" 전화를 끊었다.");
			if(Gongjungnum[playerid] == true)
			{
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
			}
			Gongjungnum[playerid] = false;
			UnknownPhoneNum[playerid] = false;
			Gongjungnum[caller] = false;
			UnknownPhoneNum[caller] = false;
			Mobile[caller] = 255;
			}
			Mobile[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			return 1;
			}
			}
			}
			else if(caller != 255)
			{
			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE)
			{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			 {
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			 }
			}
			Mobile[playerid] = 255;
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			SCM(playerid,COLOR_GRAD2, "INFO : "#C_WHITE" 전화를 끊었다.");
			Gongjungnum[playerid] = false;
			UnknownPhoneNum[playerid] = false;
			Gongjungnum[caller] = false;
			UnknownPhoneNum[caller] = false;
			return 1;
			}
			SCM(playerid,COLOR_GRAD2, "INFO : "#C_WHITE" 전화기는 주머니에 있습니다.");
			}
			return 1;
			}
		if(strcmp(cmd, "/통", true) == 0 || strcmp(cmd, "/통화", true) == 0 || strcmp(cmd, "/call", true) == 0)//어?!
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/통)화 [전화번호]");
					SCM(playerid, COLOR_ERROR, "120 - [민원팀] / 111 - [FBI]    / 1577 - [대출&캐시] / 3900 - [C.N.N] / 1544 - [은행]");
					SCM(playerid, COLOR_ERROR, "444 - [콜택시] / 555 - [하이카] / 777 - [현대건설 / 911 - [경찰 또는 응급의료원] ");
					return 1;
				}
				new phonenumb = strval(tmp);
				if(PlayerInfo[playerid][pPnumber] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 휴대폰이 있지 않습니다");
					return 1;
				}
				if(PhoneOnline[playerid] == 1)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 핸드폰 전원이 꺼져있어 통화가 불가능합니다");
					return 1;
				}
				if(phonenumb == 1544)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 1544: Las Venturas Bank 입니다. 텔레 뱅킹를 원하시나요? (예/아니요)");
					Mobile[playerid] = 1545;
					return 1;
				}
				if(phonenumb == 111)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 111: Federal Bureau of Investigation 입니다. 상담을 원하시나요? (예/아니요)");
					Mobile[playerid] = 111;
					return 1;
				}
				if(phonenumb == 1577)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 1577: 사체그룹입니다. 상담을 요청하시겠습니까? (예/아니요)");
					Mobile[playerid] = 1577;
					return 1;
				}
				if(phonenumb == 444)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 444: LS-PCT입니다. 택시를 호출하시겠습니까? (예/아니요)");
					Mobile[playerid] = 4445;
					return 1;
				}
				if(phonenumb == 555)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 555: HI-Motors입니다. 정비사를 호출하시겠습니까? (예/아니요)");
					Mobile[playerid] = 5556;
					return 1;
				}
				if(phonenumb == 120)
					{
						SCM(playerid, COLOR_ERROR, "(INFO) "#C_WHITE" 상대방이 전화를 받았습니다");
						SCM(playerid, COLOR_WHITE, "* Phone 120: 시청민원팀입니다. 상담을 요청하시겠습니까? (예/아니요)");
						Mobile[playerid] = 120;
						return 1;
					}
				if(phonenumb == 777)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 777: 현대건설 입니다. 상담을 요청하시겠습니까? (예/아니요)");
					Mobile[playerid] = 777;
					return 1;
				}
				if(phonenumb == 3900)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_WHITE, "* Phone 3900: C.N.N 방송국입니다. 상담을 요청하시겠습니까? (예/아니요)");
					Mobile[playerid] = 3900;
					return 1;
				}
				if(phonenumb == 911)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 받았습니다");
					SCM(playerid, COLOR_ERROR, "911 Center : 정부센터입니다. 무엇을 도와드릴까요? ");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [경찰] [응급의료원] [취소]중 한가지를 말씀하세요");
					Mobile[playerid] = 911;
					return 1;
				}
				if(phonenumb == PlayerInfo[playerid][pPnumber])
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 전화기에서는 아무 응답도 들리지 않습니다");
					return 1;
				}
				if(Mobile[playerid] != 255)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 전화를 받고 있습니다");
					return 1;
				}
				for(new i = 0; i < M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
						{
							giveplayerid = i;
							Mobile[playerid] = giveplayerid; //caller connecting
							if(IsPlayerConnected(giveplayerid))
							{
								if(giveplayerid != INVALID_PLAYER_ID)
								{
									if(PhoneOnline[giveplayerid] > 0)
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 폰전원이 꺼져있습니다");
										return 1;
									}
									if (Mobile[giveplayerid] == 255)
									{

										format(string, sizeof(string), "INFO : "#C_WHITE" 전화벨이 울리기 시작했습니다 (/받기) (발신자: %d)", PlayerInfo[playerid][pPnumber]);
										SCM(giveplayerid, COLOR_ERROR, string);//어?
										GetPlayerName(giveplayerid, sendername, sizeof(sendername));//어쫄까
										RingTone[giveplayerid] = 10;
										format(string, sizeof(string), "＊ %s의 휴대 전화기가 울린다", RPPlayerName(giveplayerid));
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이제 통화를 합니다. (/끊기)로 전화를 끊을 수 있습니다");
										ProxDetector(10.0, i, string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
										SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
										CellTime[playerid] = 1;
										return 1;
									}
								}
							}
						}
					}
				}
				SCM(playerid, COLOR_RED, "Phone : "#C_WHITE" 전화를 받을수 없어 삐 소리후 통화료가 부과됩니다.");
			}
			return 1;
		}

		if(strcmp(cmd, "/문자", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/문", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 로그인 부터 하십시오");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /문자 [핸드폰번호] [내용]");
					return 1;
				}
				if(PlayerInfo[playerid][pSmart] == 0)
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 스마트폰이 없습니다.");
					return 1;
				}
				if(PhoneOnline[playerid] == 1)
				{
					SCM(playerid,COLOR_YELLOW, "SYSTEM :"#C_WHITE" 핸드폰 전원이 꺼져있어 문자가 불가능합니다.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 이(가) 스마트폰을 꺼내 문자를 보낸다.", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				new phonenumb = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /문자 [핸드폰번호] [내용]");
					return 1;
				}
				if(phonenumb == 555)
				{
					if ((strcmp("예", result, true, strlen(result)) == 0) && (strlen(result) == strlen("예")))
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 문자가 전송되었습니다.");
						if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
						{
							SCM(playerid, COLOR_YELLOW, "* Phone 당신이 무슨얘기를 하는지 모르겠습니다. 발신자: 비밀정보원 (555)");
							RingTone[playerid] = 20;
							return 1;
						}
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 간단히 [예]만 해주세요 , 발신자: 비밀정보원 (555)");
						RingTone[playerid] = 20;
						return 1;
					}
				}
				for(new i = 0; i < M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
						{
							giveplayerid = i;
							Mobile[playerid] = giveplayerid; //caller connecting
							if(IsPlayerConnected(giveplayerid))
							{
								if(giveplayerid != INVALID_PLAYER_ID)
								{
									if(PhoneOnline[giveplayerid] > 0)
									{
										SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 그는 스마트폰이 꺼져있습니다.");
										return 1;
									}
									format(string, sizeof(string), "* Phone %s, 발신자번호: %d", result,PlayerInfo[playerid][pPnumber]);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									//format(string, sizeof(string), "* %s's phone beeps", sendername);
									RingTone[giveplayerid] =20;
									SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 문자가 전송되었습니다.");
									SCM(giveplayerid, COLOR_YELLOW, string);
									SCM(playerid,  COLOR_YELLOW, string);
									format(string, sizeof(string), "~r~$-%d", txtcost);
									GameTextForPlayer(playerid, string, 5000, 1);
									GiveMoney(playerid, -txtcost);
									SBizzInfo[1][sbTill] += txtcost;
									ExtortionSBiz(1, txtcost);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
									Mobile[playerid] = 255;
									return 1;
								}
							}
						}
					}
				}
				SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 문자 메시지 전송 실패됨");
			}
			return 1;
		}
		//----------------------------------발신자문자---------------------------------------
		if(strcmp(cmd, "/발신자문자", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 로그인 부터 하십시오");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /발신자문자 [핸드폰번호] [내용]");
					return 1;
				}
				if(PlayerInfo[playerid][pSmart] == 0)
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 스마트폰이 없습니다.");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 이(가) 스마트폰을 꺼내 문자를 보낸다.", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				new phonenumb = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /문자 [핸드폰번호] [내용]");
					return 1;
				}
				if(phonenumb == 555)
				{
					if ((strcmp("예", result, true, strlen(result)) == 0) && (strlen(result) == strlen("예")))
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 문자가 성공적으로 전송되었습니다.");
						if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
						{
							SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신이 무슨얘기를 하는지 모르겠습니다. (발신자: 비밀정보원)");
							RingTone[playerid] = 20;
							return 1;
						}
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 간단히 \"예\"만 입력해주십시오, (발신자: 비밀정보원)");
						RingTone[playerid] = 20;
						return 1;
					}
				}
				for(new i = 0; i < M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
						{
							giveplayerid = i;
							Mobile[playerid] = giveplayerid; //caller connecting
							if(IsPlayerConnected(giveplayerid))
							{
								if(giveplayerid != INVALID_PLAYER_ID)
								{
									if(PhoneOnline[giveplayerid] > 0)
									{
										SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 그는 스마트폰이 꺼져있습니다.");
										return 1;
									}
									format(string, sizeof(string), "SYSTEM :"#C_WHITE" 문자메시지 도착 (%s), (발신자번호: 발신번호표시제한)", result);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									//format(string, sizeof(string), "* %s's phone beeps", sendername);
									RingTone[giveplayerid] =20;
									SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 문자가 성공적으로 전송되었습니다.");
									SCM(giveplayerid, COLOR_YELLOW, string);
									SCM(playerid,  COLOR_YELLOW, string);
									format(string, sizeof(string), "~r~$-%d", txtcost);
									GameTextForPlayer(playerid, string, 5000, 1);
									GiveMoney(playerid, -txtcost);
									SBizzInfo[1][sbTill] += txtcost;
									ExtortionSBiz(1, txtcost);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
									Mobile[playerid] = 255;
									return 1;
								}
							}
						}
					}
				}
				SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 문자메세지의 전송이 실패하였습니다.");
			}
			return 1;
		}
		//----------------------------------[pickup]-----------------------------------------------

		if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/받", true) == 0 || strcmp(cmd, "/받기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(Mobile[playerid] != 255)
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 이미 통화중 입니다.");
					return 1;
				}
				for(new i = 0; i < M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Mobile[i] == playerid)
						{
							Mobile[playerid] = i; //caller connecting
							SCM(i,  COLOR_YELLOW, "SYSTEM :"#C_WHITE" 상대방이 전화를 받았습니다.");
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 이(가) 스마트폰에 대답한다.", RPPlayerName(playerid));
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							RingTone[playerid] = 0;
						}
					}
				}
			}
			return 1;
		}
		if (strcmp(cmd, "/끊기", true) == 0 || strcmp(cmd, "/h", true) == 0 || strcmp(cmd, "/끊", true) == 0)
		{
			if (IsPlayerConnected(playerid))
			{
				new caller = Mobile[playerid];
				if (IsPlayerConnected(caller))
				{
					if (caller != INVALID_PLAYER_ID)
					{
						if (caller != 255)
						{
							Mobile[playerid] = 255;
							CellTime[playerid] = 0;
							RingTone[playerid] = 0;
							PlayerInfo[playerid][pSpeaker] = 0;
							UnidentifedCall[playerid] = 0;

							Mobile[caller] = 255;
							CellTime[caller] = 0;
							RingTone[caller] = 0;
							PlayerInfo[caller][pSpeaker] = 0;
							UnidentifedCall[caller] = 0;
							if(Gongjungnum[playerid] == true)
							{
							SetPlayerFreeze(playerid, false, 0);
							TogglePlayerControllable(playerid, 1);
							}
							SCM(caller,  COLOR_YELLOW, "SYSTEM :"#C_WHITE" 상대방이 전화를 끊었습니다.");
							SCM(playerid,  COLOR_YELLOW, "SYSTEM :"#C_WHITE" 전화를 끊었습니다.");
							Gongjungnum[playerid] = false;
							UnknownPhoneNum[playerid] = false;
							Gongjungnum[caller] = false;
							UnknownPhoneNum[caller] = false;
							SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						}
						else if(caller == 255)
						{
							SCM(playerid,  COLOR_YELLOW, "SYSTEM :"#C_WHITE" 스마트폰을 들고 있지 않습니다.");
						}
					}
				}
			}
			return 1;
		}
		//----------------------------------[TIME]-----------------------------------------------
		if(strcmp(cmd, "/fixr", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				PlayerFixRadio(playerid);
			}
			return 1;
		}
		if(strcmp(cmd, "/시간", true) == 0 || strcmp(cmd, "/시계", true) == 0 || strcmp(cmd, "/time", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new mtext[20];
				getdate(year, month, day);
				if(month == 1) { mtext = "January"; }
				else if(month == 2) { mtext = "February"; }
				else if(month == 3) { mtext = "March"; }
				else if(month == 4) { mtext = "April"; }
				else if(month == 5) { mtext = "May"; }
				else if(month == 6) { mtext = "June"; }
				else if(month == 7) { mtext = "July"; }
				else if(month == 8) { mtext = "August"; }
				else if(month == 9) { mtext = "September"; }
				else if(month == 10) { mtext = "October"; }
				else if(month == 11) { mtext = "November"; }
				else if(month == 12) { mtext = "December"; }

				new hour,minuite,second;
				gettime(hour,minuite,second);

				new THour,Timetext[32];

				if( hour >= 0 && hour < 13 )
				{
					THour = hour;
					Timetext="AM";
				} else {
					THour = hour - 12;
					Timetext="PM";
				}

				if (minuite < 10)
				{
					if (PlayerInfo[playerid][pJailTime] > 0)
					{
						if(PlayerInfo[playerid][pWatch] == 1)
						{
							format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%s %d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext,Timetext,THour, minuite, PlayerInfo[playerid][pJailTime]-10);
						}
						else
						{
							format(string, sizeof(string), "~w~Jail Time Left: %d sec", PlayerInfo[playerid][pJailTime]-10);
						}
					}
					else
					{
						if(PlayerInfo[playerid][pWatch] == 1)
						{
							format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%s %d:0%d~g~|", day, mtext,Timetext,THour, minuite);
						}
						else
						{
							format(string, sizeof(string), "~r~You don't have a watch");
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 시계가 없습니다.");
						}
					}
				}
				else
				{
					if (PlayerInfo[playerid][pJailTime] > 0)
					{
						if(PlayerInfo[playerid][pWatch] == 1)
						{
							format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%s %d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext,Timetext,THour, minuite, PlayerInfo[playerid][pJailTime]-10);
						}
						else
						{
							format(string, sizeof(string), "~w~Jail Time Left: %d sec", PlayerInfo[playerid][pJailTime]-10);
						}
					}
					else
					{
						if(PlayerInfo[playerid][pWatch] == 1)
						{
							format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%s %d:%d~g~|", day, mtext,Timetext,THour, minuite);
						}
						else
						{
							format(string, sizeof(string), "~r~You don't have a watch");
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 시계가 없습니다.");
						}
					}
				}
				GameTextForPlayer(playerid, string, 5000, 1);
				GetPlayerName(playerid, sendername, sizeof(sendername));//아 이것도네
				if(PlayerInfo[playerid][pWatch] == 1)
				{
					if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s 손을 올려 시계를 확인한다", RPPlayerName(playerid)); }
					else { format(string, sizeof(string), "* %s 손을 올려 시계를 확인한다", RPPlayerName(playerid)); }
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				//Anim(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,1,1,1,1);
			}
			return 1;
		}
		//----------------------{HOUSES}-------------------
		if(strcmp(cmd, "/사업장으로", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 1000)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /사업장으로 [사업장번호]");
						return 1;
					}
					new housenum = strval(tmp);
					SetPlayerInterior(playerid,SBizzInfo[housenum][sbInterior]);
					SetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
					GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/ckworh", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				if((tmpcar >= 99 && tmpcar <= 102))
				{
					format(string, sizeof(string), "| Truck | 재고[%d/%d]", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
					SCM(playerid, TEAM_GROVE_COLOR, string);
				}
				else
				{
					GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/wpvnarnao", true) == 0 || strcmp(cmd, "/buyprods", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				new compcost = 2;
				if(PlayerToPoint(50.0, playerid, 2468.4919,-2092.9902,13.5469))
				{
					if(PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity])
					{
						new amount;
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /제품구매 [수량]");
							return 1;
						}
						amount = strval(tmp);
						if(amount < 1 || amount > 500) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 제품은 1~500개 사이에서만 구매가능하십니다"); return 1; }
						new check = PlayerHaul[tmpcar][pLoad] + amount;
						if(check > PlayerHaul[tmpcar][pCapasity])
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 차량에 %d 만큼 실을수 있고 당신의 차에는 현재 %d 만큼 있습니다",PlayerHaul[tmpcar][pCapasity],PlayerHaul[tmpcar][pLoad]);
							SCM(playerid, COLOR_ERROR, string);
							return 1;
						}
						new cost = amount  *compcost;
						if(GetMoney(playerid) >= cost)
						{
							PlayerHaul[tmpcar][pLoad] += amount;
							format(string, sizeof(string), "*제품: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SCM(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "*당신은 제품을 %d개를 $%d에 구매하였습니다", amount,cost);
							SCM(playerid, TEAM_GROVE_COLOR, string);
							GiveMoney(playerid, -cost);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "*당신 돌각은 $%d에(서)%d 제품을 공급한다", amount,cost);
							SCM(playerid, TEAM_GROVE_COLOR, string);
							return 1;
						}
					}
					else
					{
						format(string, sizeof(string), "*제품: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SCM(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 트럭회사 근처에 있지 않습니다");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/내리기", true) == 0 || strcmp(cmd, "/내림", true) == 0)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid,1);
				SetPlayerFreeze(playerid, false, 0);
				return 1;
			}
			return 1;
		}


		if(strcmp(cmd, "/opendoor", true) == 0 || strcmp(cmdtext, "/od", true)==0 || strcmp(cmd, "/문열기", true) == 0)
		{
			if (GetPlayerState(playerid) == 1) CheckForWalkingTeleport(playerid);
			return 1;
		}
		//-----------------------------[TOW CAR]--------------------------------------------------------
		if(strcmp(cmd,"/tow",true)==0 || strcmp(cmd, "/견인", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 11 || IsACop(playerid))
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
						{
							if(GetPlayerState(playerid)==2)
							{
								new Float:pX,Float:pY,Float:pZ;
								GetPlayerPos(playerid,pX,pY,pZ);
								new Float:vX,Float:vY,Float:vZ;
								new Found=0;
								new vid=0;
								while((vid<MAX_VEHICLES)&&(!Found))
								{
									vid++;
									GetVehiclePos(vid,vX,vY,vZ);
									if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
									{
										Found=1;
										if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
										{
											DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
										}
										else
										{
											AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
										}
									}
								}
								if(!Found)
								{
									SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 이 주변엔 아무 차량도 없습니다");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 운전자가 되어야 합니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 견인을 하려면 견인트럭에 타야만 합니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 견인을 하려면 차량안에 타야만 합니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 견인할 수 없습니다");
					return 1;
				}
			}
			return 1;
		}
		if (strcmp(cmd, "/포도당주사") == 0||strcmp(cmd, "/포주") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember]!=4)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /포주 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (!ProxDetectorS(3.0, playerid, giveplayerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다.");
							return 1;
						}
						if(giveplayerid == playerid)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자신에게 투여 할 수 없습니다.");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 포도당주사를 놔주었고 체력이 올라갑니다.", RPPlayerName(playerid));
						SCM(giveplayerid, COLOR_ERROR, string);
						format(string, sizeof(string), "* %s %s에게 포도당주사를 놔주었습니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						PlayerStoned[giveplayerid] =0;
						Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
						Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
						SetHealth(giveplayerid, 100);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알맞지 않은 플레이어 입니다. ");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/알판", true) == 0 || strcmp(cmd, "/알약판매", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /알판 [플레이어의번호/이름의부분] [가격]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /알판 [플레이어의번호/이름의부분] [가격]");
								return 1;
							}
							new price;
							price = strval(tmp);
							if(price < 10 || price > 100)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가격은 $10 에서 $100 까지만 가능합니다");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pPill] >= 10)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 알약이 너무 많습니다.");
								return 1;
							}
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 에게 알약을 가격 $%d 에 주려고 합니다", giveplayer, price);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), " 의사 %s가 당신에게 알약을 가격 $%d 에 주려고 합니다. (/동의 알약)로 받으세요", sendername, price);
							SCM(giveplayerid, COLOR_ERROR, string);
							PillOffer[giveplayerid] = playerid;
							PillPrice[giveplayerid] = price;
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다 ");
					return 1;
				}
			}
			return 1;
		}
		//-----------------------------AGL-------------------------------------------------------------------
		if(strcmp(cmd, "/무기면허발급", true) == 0)
		{
			if(IsPlayerConnected(playerid))//
			{
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 32)
				{
					new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /무기면허발급 무기 [플레이어의번호/이름의부분]");
						return 1;
					}
					new wanted[256];
					if(strcmp(x_nr,"무기",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /무기면허발급 무기 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 무기면허를 %s님에게 지급했습니다",giveplayer);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "(정부군알림) 경찰 %s님이 당신에게 무기면허를 지급했습니다",sendername);
								SCM(giveplayerid, COLOR_BLUE, string);
								PlayerInfo[giveplayerid][pGunLic] = 1;
								if(PlayerInfo[playerid][pMember] == 1)
								{
									format(wanted, sizeof(wanted), "(정부군알림) 경찰 %s  %s 에게 무기면허를 줍니다",sendername,giveplayer);
									SendFamilyMessage(1, COLOR_BLUE, wanted);
								}
								else {}
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
 //====================================================================================================
				if(strcmp(cmd, "/비행면허발급", true) == 0)
		{
			if(IsPlayerConnected(playerid))//
			{
				if (PlayerInfo[playerid][pLeader] == 33)
				{
					new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SCM(playerid, COLOR_HINT,"HINT : /비행면허발급 [이름] [플레이어의번호/이름의부분]");
						SCM(playerid, COLOR_INFO1, "[이름] 비행");
						return 1;
					}
					new wanted[256];
					if(strcmp(x_nr,"비행",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_HINT,"HINT : /비행면허발급 비행 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "INFO : 당신은 비행면허를 %s님에게 지급했습니다",giveplayer);
								SCM(playerid, COLOR_INFO1, string);
								format(string, sizeof(string), "(정부군알림) 파일럿 %s님이 당신에게 비행면허를 지급했습니다",sendername);
								SCM(giveplayerid, COLOR_BLUE, string);
								PlayerInfo[giveplayerid][pFlyLic] = 1;
								if(PlayerInfo[playerid][pMember] == 19)
								{
									format(wanted, sizeof(wanted), "(정부군알림)파일럿 %s %s 에게 비행면허를 줍니다",sendername,giveplayer);
									SendFamilyMessage(19, COLOR_BLUE, wanted);
								}
								else {}
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_ERROR, "ERROR : 존재하지 않는 플레이어입니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "ERROR : 당신은 항공사 리더가 아닙니다");
					return 1;
				}
			}
			return 1;
		}
		//----------------------------------[HQ]-----------------------------------------------
		if(strcmp(cmd, "/hq", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /hq [정부군 할말]");
					return 1;
				}
				format(string, sizeof(string), "본부: %s, 오버", result);
				if (gTeam[playerid] != 2 ){SCM(playerid, COLOR_BLUE, string);}
				SendTeamBeepMessage(2, COLOR_DBLUE, string);
				printf("HQ: %s", result);
			}
			return 1;
		}
		//----------------------------------[RECON]-----------------------------------------------
		if(strcmp(cmd, "/귀", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
		{
			if(IsPlayerConnected(playerid))
			{
				if (!BigEar[playerid])
				{
					BigEar[playerid] = 1;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 귀는 엄청나게 커졌고 모든 말을 다 들을수 있게 되었습니다");
				}
				else if (BigEar[playerid])
				{
					(BigEar[playerid] = 0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 귀는 정상으로 돌아왓고 이제부터 가까이 들리는 말만 듣습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/id", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /id [플레이어의번호/이름의부분]");
					return 1;
				}
				new target;
				target = ReturnUser(tmp);
				new sstring[256];
				if(IsPlayerConnected(target))
				{
					if(target != INVALID_PLAYER_ID)
					{
						GetPlayerName(target, giveplayer, sizeof(giveplayer));
						format(sstring, sizeof(sstring), "INFO : "#C_WHITE" 아이디: (%d)%s",target,giveplayer);
						SCM(playerid, COLOR_ERROR, sstring);
					}
				}
			}
			return 1;
		}

		//----------------------------------[AdminChat]-----------------------------------------------
		if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
			    if(gOoc[playerid] == 1)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 어드민 채널이 닫혀있습니다. 그러므로 메세지가 전송되지 않습니다");
					return 1;
				}
				if(noadmin==1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 어드민 채널이 닫있습니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/a(dmin) [어드민채팅]");
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
  				   format(string, sizeof(string), "*  Admin %s : %s", sendername, result);
				}
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					SendAdminMessage(0xFFC0CBAA, string);
					printf("(관리자) %s : %s", sendername, result);
				}

			}
			return 1;
		}
		//-------------------------------[Logout]--------------------------------------------------------------------------
		if(strcmp(cmd,"/저장", true)==0 || strcmp(cmd,"/sav", true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인을 먼저 해주세요.");
					return 1;
				}
				SCM(playerid,COLOR_SUC,"INFO : "#C_WHITE" 저장을 정상적으로 완료하였습니다. 즐거운RP하세요.");

				PlayerUpdate();
				PlayerSave[playerid]=true;
			}
			return 1;
		}
		//------------------------------------Payday공고----------------------------------------
		if(strcmp(cmd, "/사광") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /사광 [할말]");
					return 1;
				}
				if(PlayerInfo[playerid][pMember] == 8)
				{
					if(PlayerInfo[playerid][pMember] == 8)
					{
						format(string, sizeof(string), "[Payday] %s, ☎: 1577",result);
						SCMToAll(TEAM_GROVE_COLOR, string);
					}
					printf("%s", string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 Payday 아닙니다");
					return 1;
				}
			}
			return 1;
		}
		//====================================================================================================
		if(strcmp(cmd, "/페이데이", true) == 0 || strcmp(cmd, "/페이", true) == 0)
		{
			if (PlayerInfo[playerid][pAdmin] >= 8)
			{
				format(string, 256, " %s가 페이를 보내주셨습니다.", AdminName[playerid]);
				BroadCast(COLOR_ADMIN,string);
				ExpUp();
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
			}
			return 1;
		}
		//====================================================================================================
		if (strcmp(cmd, "/무직") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /무직 [플레이어번호/이름의 부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							PlayerInfo[giveplayerid][pLeader]= 0;
							gTeam[giveplayerid] = 3;
							PlayerInfo[giveplayerid][pTeam] = 3;
							PlayerInfo[giveplayerid][pMember] = 0;
							PlayerInfo[giveplayerid][pFMember] = 255;
							PlayerInfo[giveplayerid][pRank] = 0;
							PlayerInfo[giveplayerid][pPayCheck2] = 0;
							PlayerInfo[giveplayerid][pJob] = 0;
							GetPlayerName(playerid,playername,sizeof(playername));
							format(string,sizeof(string),"* 관리자님이 어떠한 이유로 당신을 무직 상태로 만들었습니다.",playername);
							SCM(giveplayerid, COLOR_ADMIN, string);
							GetPlayerName(giveplayerid,playername,sizeof(playername));
							format(string,sizeof(string),"INFO : 당신은 %s님을 무직 상태로 만들었습니다.",playername);
							SCM(playerid, COLOR_ADMIN, string);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알맞지 않은 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/칭찬",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /칭찬 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /칭찬 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							PlayerInfo[giveplayerid][pChingchan] += 1;
							if(PlayerInfo[giveplayerid][pChingchan] >= 3)
							{
								PlayerInfo[giveplayerid][pWarns] -= 1;
								PlayerInfo[giveplayerid][pChingchan] = 0;
								format(string, sizeof(string), "*%s님이 %s님을 칭찬했습니다. (이유: %s)",AdminName[playerid], giveplayer, (result));
								SCMToAll(COLOR_ADMIN1, string);
								SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 칭찬이 총 3개가 되어 경고지수가 1개 차감되었습니다. (/스탯)");
							}
							else
							{
							}
							PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "*%s님이 %s님을 칭찬했습니다. (이유: %s)",AdminName[playerid], giveplayer, (result));
							SCMToAll(COLOR_ADMIN1, string);
							return 1;
						}
					}
					else
					{
						format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다..");
						SCM(playerid, COLOR_ERROR, string);
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다.");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/칭찬차감",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /칭찬차감 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 2)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /칭찬 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							PlayerInfo[giveplayerid][pChingchan] -= 1;
							PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "*%s님이 %s님의 칭찬을 차감했습니다. (이유: %s)", AdminName[playerid], giveplayer, (result));
							SCMToAll(COLOR_ADMIN, string);
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/경고") == 0 || strcmp(cmd, "/경") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /경고 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[256];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /경고 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							PlayerInfo[giveplayerid][pWarns] += 1;
							if(PlayerInfo[giveplayerid][pWarns] >= 8)// == ;;
							{
								getdate(year, month, day);
								format(string, sizeof(string), "* %s님에 의해 %s님이 아이디밴 되었습니다. ((경고 8회 누적) %s) (%d-%d-%d)", AdminName[playerid], giveplayer, (result),year,month,day);
								BanLog(string);
								format(string, sizeof(string), "* %s님에 의해 %s님이 아이디밴 되었습니다. ((경고 8회 누적) %s)", AdminName[playerid], giveplayer, (result));
								SCMToAll(COLOR_ADMIN, string);
								PlayerInfo[giveplayerid][pLocked] = 1;
								Kick(giveplayerid);
								SetTimer("pkick",500,0);
								return 1;
							}
							PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s님에 의해 %s님이 경고를 받았습니다. (사유 : %s)", AdminName[playerid], giveplayer, (result));
							SCMToAll(COLOR_ADMIN, string);
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/경고차감") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /경고차감 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[256];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /경고차감 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pWarns] <= 0)
							{
								if(PlayerInfo[giveplayerid][pWarns2] >= 1)
								{
									PlayerInfo[giveplayerid][pWarns2] -= 1;
									format(string, sizeof(string), "* %s님이 %s님에게 만회할 수 있는 기회를 드렸습니다. (이유 : %s)",AdminName[playerid], giveplayer, (result));
									SCMToAll(COLOR_ADMIN1, string);
									return 1;
								}
								PlayerInfo[giveplayerid][pWarns] -= 1;
								format(string, sizeof(string), "* %s님이 %s님에게 만회할 수 있는 기회를 드렸습니다. (이유 : %s)",AdminName[playerid], giveplayer, (result));
								SCMToAll(COLOR_ADMIN1, string);
							}
							else
							{
								if(PlayerInfo[giveplayerid][pWarns2] >= 1)
								{
									PlayerInfo[giveplayerid][pWarns2] -= 1;
									format(string, sizeof(string), "* %s님이 %s님에게 만회할 수 있는 기회를 드렸습니다. (이유 : %s)",AdminName[playerid], giveplayer, (result));
									SCMToAll(COLOR_ADMIN1, string);
									return 1;
								}
								PlayerInfo[giveplayerid][pWarns] -= 1;
								format(string, sizeof(string), "* %s님이 %s님에게 만회할 수 있는 기회를 드렸습니다. (이유 : %s)",AdminName[playerid], giveplayer, (result));
								SCMToAll(COLOR_ADMIN1, string);
							}

							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/시간설정", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /시간설정 [시간] (0-23)");
					return 1;
				}
				new hour;
				hour = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					SetWorldTime(hour);
					format(string, sizeof(string), "* 시간이 %d시로 바뀌었습니다.", hour);
					SCMToAll(COLOR_ADMIN, string);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/로또추첨", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 8)
				{
					format(string, sizeof(string), "* News : 로또 추첨을 시작하겠습니다");
					OOCOff(COLOR_NEWS, string);
					new rand = random(80);
					if(rand < 500) { rand += 3; }
					Lotto(rand);
				}
				else
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/로또", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(10, playerid,1759.7456,-1804.0219,772.1852))
				{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 도구점에 있지 않습니다");
				return 1;
				}
				if(PlayerInfo[playerid][pLottoNr] > 0)
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 이미 복권이 있습니다");
					return 1;
				}
				if(GetMoney(playerid) < 499)
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 복권은 $500 입니다. 돈이 부족하십니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_ERROR," (정보) "#C_WHITE" /로또 [번호]");
					return 1;
				}
				new lottonr = strval(tmp);
				if(lottonr < 1 || lottonr > 500) { SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 로또 번호는 1~ 500 까지 있습니다"); return 1; }
				format(string, sizeof(string), "(정보) "#C_WHITE" 로또를 구매하셨습니다. 번호: %d", lottonr);
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, -500);
				PlayerInfo[playerid][pLottoNr] = lottonr;
			}
			return 1;
		}
		if(strcmp(cmd, "/setstat", true) == 0 || strcmp(cmd, "/정보수정", true) == 0 || strcmp(cmd, "/정보수", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new string1[128];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /정보수정 [플레이어의번호/이름의부분] [수정코드] [양]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [1 레벨] [2 시작체력] [3 업그레이드포인트] [4 스킨] [5 은행잔액]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [6 휴대폰번호] [7 경험치] [8 집열쇠] [9 사업장열쇠] [10 기부계급]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [11 패밀리멤버] [12 알약] [14 근육량] [15 기자] [17 마약판매상]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [21 차량열쇠] [22 배고픔] [24 마약개수] [25 총기재료]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [26 나이] [27 성별] [28 임대차량] [29 직업번호] [30 국적변경] [31 돈] [32 네비게이션] [33 철근]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /정보수정 [플레이어의번호/이름의부분] [수정코드] [양]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [1 레벨] [2 시작체력] [3 업그레이드포인트] [4 스킨] [5 은행잔액]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [6 휴대폰번호] [7 경험치] [8 집열쇠] [9 사업장열쇠] [10 기부계급]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [11 패밀리멤버] [12 알약] [14 근육량] [15 기자] [17 마약판매상]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [21 차량열쇠] [22 배고픔] [24 마약개수] [25 총기재료]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [26 나이] [27 성별] [28 임대차량] [29 직업번호] [30 국적변경] [31 돈] [32 네비게이션] [33 철근]");
							return 1;
						}
						new stat;
						stat = strval(tmp);
						tmp = strtok(cmdtext, idx);
						if(stat == 30)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적변경 번호입니다.");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 1. 한국 | 2. 미국 | 3. 중국 | 4. 일본 | 5. 프랑스 | 6. 이탈리아 | 7. 스페인 | 8. 러시아");
						}
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /정보수정 [플레이어의번호/이름의부분] [수정코드] [양]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [1 레벨] [2 시작체력] [3 업그레이드포인트] [4 스킨] [5 은행잔액]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [6 휴대폰번호] [7 경험치] [8 집열쇠] [9 사업장열쇠] [10 기부계급]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [11 패밀리멤버] [12 알약] [14 근육량] [15 기자] [17 마약판매상]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [21 차량열쇠] [24 마약개수] [25 총기재료]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [26 나이] [27 성별] [28 임대차량] [29 직업번호] [30 국적변경] [31 돈] [33 철근]");
							return 1;
						}
						new amount;
						amount = strval(tmp);
						if(IsPlayerNPC(giveplayerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 엔피씨를 대상으로 정보를 변경할 수 없습니다");
							return 1;
						}
						if (PlayerInfo[playerid][pAdmin] >= 7)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							switch (stat)
							{
							case 1:
								{
									PlayerInfo[giveplayerid][pLevel] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (레벨: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 레벨변경 %d", sendername, giveplayer,amount);
								}
							case 2:
								{
									PlayerInfo[giveplayerid][pSHealth] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (시작체력: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 시작체력 변경 %d", sendername, giveplayer,amount);
								}
							case 3:
								{
									PlayerInfo[giveplayerid][gPupgrade] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (업그레이드포인트: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 업그레이드포인트 변경 %d", sendername, giveplayer,amount);
								}
							case 4:
								{
									if(amount > 299 || amount < 1)
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스킨번호는 1~299까지만 가능합니다");
										return 1;
									}
									PlayerInfo[giveplayerid][pModel] = amount;
									SetPlayerSkin(playerid,PlayerInfo[giveplayerid][pModel]);
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (모델번호: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 모델 변경 %d", sendername, giveplayer,amount);
								}
							case 5:
								{
									PlayerInfo[giveplayerid][pAccount] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (은행잔액: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 은행잔액 변경 %d", sendername, giveplayer,amount);
								}
							case 6:
								{
									PlayerInfo[giveplayerid][pPnumber] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (휴대폰번호: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 휴대폰번호 변경 %d", sendername, giveplayer,amount);
								}
							case 7:
								{
									PlayerInfo[giveplayerid][pExp] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (경험치: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 경험치 변경 %d", sendername, giveplayer,amount);
								}
							case 8:
								{
									PlayerInfo[giveplayerid][pHouse] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (집열쇠: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 집열쇠 변경 %d", sendername, giveplayer,amount);
								}
							case 9:
								{
									PlayerInfo[giveplayerid][pPbiskey] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (사업장열쇠: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 집열쇠 변경 %d", sendername, giveplayer,amount);
								}
							case 10:
								{
									PlayerInfo[giveplayerid][pDonateRank] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (기부계급: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 기부계급 변경 %d", sendername, giveplayer,amount);
								}
							case 11:
								{
									PlayerInfo[giveplayerid][pFMember] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (패밀리번호: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 패밀리번호 변경 %d", sendername, giveplayer,amount);
								}
							case 12:
								{
									PlayerInfo[giveplayerid][pPill] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (알약개수: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 알약개수 변경 %d", sendername, giveplayer,amount);
								}
							case 14:
								{
									PlayerInfo[giveplayerid][rmsdbr] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (근육량: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 근육 변경 %d", sendername, giveplayer,amount);
								}
							case 15:
								{
									PlayerInfo[giveplayerid][pNewsSkill] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (기자스킬: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 기자스킬 변경 %d", sendername, giveplayer,amount);
								}
							case 21:
								{
									PlayerInfo[giveplayerid][Carkey] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (차키: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 차키를 변경 %d", sendername, giveplayer,amount);
								}
							case 24:
								{
									PlayerInfo[giveplayerid][pDrugs] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (마약개수: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 마약개수 변경 %d", sendername, giveplayer,amount);
								}
							case 25:
								{
									PlayerInfo[giveplayerid][pMats] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (총기재료: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 총기재료 변경 %d", sendername, giveplayer,amount);
								}
							case 26:
								{
									PlayerInfo[giveplayerid][pAge] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (나이: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 나이 변경 %d", sendername, giveplayer,amount);
								}
							case 27:
								{
									PlayerInfo[giveplayerid][pSex] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (성별: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 성별 변경 %d", sendername, giveplayer,amount);
								}
							case 28:
								{
									HireCar[giveplayerid] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (임대차키: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 임대차량 변경 %d", sendername, giveplayer,amount);
								}
							case 29:
								{
									PlayerInfo[giveplayerid][pJob] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (직업번호: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 직업번호 변경 %d", sendername, giveplayer,amount);
								}
							case 30:
								{
									PlayerInfo[giveplayerid][pOrigin] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (국적: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 국적 변경 %d", sendername, giveplayer,amount);
								}
							case 31:
								{
									if(PlayerInfo[playerid][pAdmin] < 6) { return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 불가능합니다."); }
									PlayerInfo[giveplayerid][pCash] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 돈을 수정 (돈: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 돈을 변경 %d", AdminName[playerid], giveplayer,amount);
								}
							case 33:
								{
									PlayerInfo[giveplayerid][pBaejin2] = amount;
									format(string, sizeof(string), "* %s님이 %s님의 정보를 수정 (철근갯수: %d)",AdminName[playerid], giveplayer, amount);
									printf("* %s %s의 철근갯수 변경 %d", AdminName[playerid], giveplayer,amount);
								}
							default:
								{
									format(string1, sizeof(string1), "INFO : "#C_WHITE" 알수없는 정보이름입니다", amount);
									SCM(playerid, COLOR_ERROR, string1);
								}
							}
							SendAdminMessage(COLOR_ADMIN, string);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
						}
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/setint", true) == 0 || strcmp(cmd, "/인테리어", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /인테리어 [플레이어의번호/이름의부분] [인테리어ID]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new intid;
				tmp = strtok(cmdtext, idx);
				intid = strvalEx(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SetPlayerInterior(playa, intid);
							PlayerInfo[playa][pInt] = intid;
							format(string, sizeof(string), "(관리자명령어) 당신은 %s님의 인테리어를 %d번으로 수정하였습니다", RPPlayerName(giveplayerid), intid);
							SCM(playerid, COLOR_ADMIN, string);
							format(string, sizeof(string), "(관리자명령어) %s님에 의해서 당신은 인테리어가 %d번으로 수정되었습니다", AdminName[playerid], intid);
							SCM(playa, COLOR_ADMIN, string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/setvw", true) == 0 || strcmp(cmd, "/현실세계", true) == 0 || strcmp(cmd, "/비추얼", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /현실세계 [플레이어의번호/이름의부분] [현실세계ID]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new virid;
				tmp = strtok(cmdtext, idx);
				virid = strvalEx(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SetPlayerVirtualWorld(playa, virid);
							format(string, sizeof(string), " 당신은 %s님의 현실세계 코드를 %d번으로 수정하였습니다", giveplayer, virid);
							SCM(playerid, COLOR_ADMIN, string);
							format(string, sizeof(string), " %s님에 의해 현실세계세계 코드가 %d번으로 수정되었습니다", AdminName[playerid], virid);
							SCM(playa, COLOR_ADMIN, string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/invite") == 0 || strcmp(cmd, "/초대") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /초대 [플레이어번호/이름의 부분]");
					return 1;
				}
				new para1;
				new ftext[256];
				para1 = ReturnUser(tmp);
				if (PlayerInfo[playerid][pLeader] > 0)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							if(PlayerInfo[para1][pMember] == 0 && PlayerInfo[para1][pFMember] == 255)
							{
								if(PlayerInfo[para1][pJob] > 0)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 이미 직업이 있습니다");
									return 1;
								}
								if (ProxDetectorS(3.0, playerid, para1))
								{
									ftext = GetMemberName(PlayerInfo[playerid][pMember]);
									GetPlayerName(para1, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님이 속한 (%s)그룹에 스카웃되었습니다. (/동의 초대)로 수락합니다", RPPlayerName(playerid), ftext);
									SCM(para1, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 (%s)그룹에 %s님을 초대하였습니다", ftext, RPPlayerName(para1));
									SCM(playerid, COLOR_ERROR, string);
									InviteOffer[para1] = playerid;
									InviteGroup[para1] = PlayerInfo[playerid][pLeader];
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 주변에 있지 않습니다");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 수배중이거나 이미 직업이있습니다");
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 리더가 아닙니다");
				}
			}
			return 1;
		}

		//----잉잉

			if(strcmp(cmd, "/부대설정") == 0 || strcmp(cmd, "/부대") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /부대설정 [플레이어번호/이름의 부분]");
					return 1;
				}
				new para1;
				para1 = ReturnUser(tmp);
				if (PlayerInfo[playerid][pLeader] > 0)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							if(PlayerInfo[para1][pMember] == 3)
							{
								if (ProxDetectorS(3.0, playerid, para1))
								{
								if(PlayerInfo[para1][pArmysp] == 0)
								{
									GetPlayerName(para1, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 CIA으로 스카웃되었습니다", RPPlayerName(playerid));
									SCM(para1, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님을 CIA으로 설정했습니다.",RPPlayerName(para1));
									SCM(playerid, COLOR_ERROR, string);
									PlayerInfo[para1][pArmysp] = 1;
								}
								else if(PlayerInfo[para1][pArmysp] == 1)
								{
									GetPlayerName(para1, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 CIA으로 스카웃되었습니다", RPPlayerName(playerid));
									SCM(para1, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님을 CIA으로 설정했습니다.",RPPlayerName(para1));
									SCM(playerid, COLOR_ERROR, string);
									PlayerInfo[para1][pArmysp] = 0;
								}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 주변에 있지 않습니다");
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 CIA이 아닙니다.");
								return 1;
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 리더가 아닙니다");
				}
			}
			return 1;
		}
		//----------------------------------[UNINVITE]------------------------------------------------
		if(strcmp(cmd, "/uninvite", true) == 0 || strcmp(cmd, "/해고", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /해고 [플레이어의번호/이름의부분]");
					return 1;
				}
				new para1 = ReturnUser(tmp);
				if(PlayerInfo[playerid][pLeader] != 0 || PlayerInfo[playerid][pMember] == 11 && PlayerInfo[playerid][pRank] >= 4)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							if(PlayerInfo[playerid][pMember] != PlayerInfo[para1][pMember])
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 당신의 단체에 속해있지 않습니다.");
								return 1;
							}//끝.
							if(PlayerInfo[para1][pMember] != 0)
							{
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								printf("INFO : "#C_WHITE" %s 님이 %s 님을 해고하였습니다.", sendername, giveplayer);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 패밀리혹은 정부군에서 리더 %s 님에 의해 해고되었습니다.", RPPlayerName(playerid));
								SCM(para1, COLOR_ERROR, string);
								SCM(para1, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 이제부터 무직입니다.");
								gTeam[para1] = 3;
								PlayerInfo[para1][pTeam] = 3;
								PlayerInfo[para1][pMember] = 0;
								PlayerInfo[para1][pLeader] = 0;
								PlayerInfo[para1][pRank] = 0;
								PlayerInfo[para1][pPayCheck2] = 0;
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 님을 당신의 패밀리혹은 정부CIA에서 해고 했습니다.", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR, string);
								SetPlayerColor(para1,0xFFFFFF00);
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할수 없습니다.");
				}
			}
			return 1;
		}
		//----------------------------------[MAKEADMIN]------------------------------------------------
		if(strcmp(cmd, "/makeadmin", true) == 0 || strcmp(cmd, "/어드민", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /어드민 [플레이어의번호/이름의부분] [어드민레벨]");
					return 1;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if(PlayerInfo[playerid][pAdmin] >= 8)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pAdmin] = level;
							printf(" 관리자가 %s님을 레벨 %d의 관리자로 임명했습니다", sendername, giveplayer, level);
							format(string, sizeof(string), " 당신은 관리자레벨 %d의 관리자가 되었습니다", level);
							SCM(para1, COLOR_ADMIN, string);
							format(string, sizeof(string), " [ 관리자 레벨 : %d ] '/어드민규칙' 필독바랍니다.", level);
							SCM(para1, COLOR_ADMIN, string);
							format(string, sizeof(string), " 당신은 %s님을 레벨 %d의 관리자로 임명했습니다", giveplayer,level);
							SCM(playerid, COLOR_ADMIN, string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/어드민규칙", true) == 0)
		{
		if(IsPlayerConnected(playerid))
		{
		if (PlayerInfo[playerid][pAdmin] < 1)
		{
			SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다 ! ");
			return 1;
				}
			ClearChatbox(playerid, 5);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	     	SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 어드민 규칙!   "#C_SUC"━━━━━");
			SendClientMessage(playerid, COLOR_WHITE2,"");
	        SCM(playerid, COLOR_WHITE,"대총괄 Orton_Nick 입니다.");
		    SCM(playerid, COLOR_WHITE,"규칙 1 , 유저를 존중하자 - OOC분쟁시 의견을 끝까지 듣습니다.");
		    SCM(playerid, COLOR_WHITE,"규칙 2 , 남용 , 부패를 하지말자 - 남용 부패 걸리면 어드민박탈");
  	        SCM(playerid, COLOR_WHITE,"규칙 3 , RP를 하지말자, RP는 유저들이 하는겁니다. 어드민은 하면안됩니다.");
		}
		return 1;
	}

		if(strcmp(cmd, "/nonewb", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if (newnoooc==0 && PlayerInfo[playerid][pAdmin] >= 3)
					{
						newnoooc = 1;
						format(string, sizeof(string), " 질문 채널이 %s님에 의해 불가능하게 되었습니다",sendername);
						SCMToAll(COLOR_ADMIN, string);
					}
					else if (newnoooc==1 && PlayerInfo[playerid][pAdmin] >=3 )
					{
						newnoooc = 0;
						format(string, sizeof(string), " 질문 채널이 %s님에 의해 가능하게 되었습니다",sendername);
						SCMToAll(COLOR_ADMIN, string);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					}
				}
			}
			return 1;
		}
		//----------------------------------[MAKELEADER]------------------------------------------------
		if(strcmp(cmd, "/makeleader", true) == 0 || strcmp(cmd, "/리더", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 남은 당파는 /카페의 남은당파 메뉴를 필독해주세요."); //
					SCM(playerid, COLOR_SUC, "정부 : [1 L.V.P.D] [2 FBI] [3 CIA] [4 EMT] [7 시장] [38 교도관]");
					SCM(playerid, COLOR_GREY, "사설 : [9 방송국] [11 하이카] [35 요리사] [36 대학교 교수]");
					SCM(playerid, COLOR_RED, "조직 : [6 마피아] [14 야쿠자] [15 삼합회] [18 해태] [22 칠성파] [25 대명회] [27 종로파] [31 대북파]");
					SCM(playerid, COLOR_RED, "조직 : [28 Niggia Detective Family] [23 동성로] [24 NGS] [19  T.F.O.A 9]");
					SCM(playerid, COLOR_ORANGE, " 갱  : [5 로코츠] [29 Uptown 424 Kilo Block] [16 세빌] [17 블러드] [12 크립스] [13 North Side Nortenos X4] [30 MS - 13]");
					return 1;
				}//5 29 16 17 12 13 30
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if(level < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 리더직 번호는 '1' 부터 입니다."); return 1; }
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							if(PlayerInfo[para1][pMember] > 0 || PlayerInfo[para1][pFMember] < 255)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 이미 팀혹은 패밀리에 속해있습니다");
								return 1;
							}
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pLeader] = level;
							PlayerInfo[para1][pMember] = level;
							format(string, sizeof(string), " 당신은 %s님에 의해서 그룹번호 %d번의 리더로 임명되었습니다", AdminName[playerid],level);
							SCM(para1, COLOR_ADMIN, string);
							format(string, sizeof(string), " 당신은 %s님을 그룹번호 %d번의 리더로 임명하였습니다", giveplayer,level);
							SCM(playerid, COLOR_ADMIN, string);
							if(level == 0) { PlayerInfo[para1][pChar] = 0; PlayerInfo[para1][pRank] = 0; gTeam[para1] = 3; PlayerInfo[para1][pTeam] = 0; return 1; }
							else if(level == 1) { PlayerInfo[para1][pChar] = 295; PlayerInfo[para1][pRank] = 11; } //Police Force
							else if(level == 2) { PlayerInfo[para1][pChar] = 286; PlayerInfo[para1][pRank] = 6; } //FBI/ATF
							else if(level == 3) { PlayerInfo[para1][pChar] = 287; PlayerInfo[para1][pRank] = 23; } //National Guard
							else if(level == 4) { PlayerInfo[para1][pChar] = 228; PlayerInfo[para1][pRank] = 6; } //Fire/Ambulance
							else if(level == 5) { PlayerInfo[para1][pChar] = 114; PlayerInfo[para1][pRank] = 6; } //Locotes
							else if(level == 6) { PlayerInfo[para1][pChar] = 113; PlayerInfo[para1][pRank] = 6; } //La Famiglia Sinatra
							else if(level == 7) { PlayerInfo[para1][pChar] = 147; PlayerInfo[para1][pRank] = 7; } //Mayor
							else if(level == 8) { PlayerInfo[para1][pChar] = 20; PlayerInfo[para1][pRank] = 6; } //Hitmans
							else if(level == 9) { PlayerInfo[para1][pChar] = 227; PlayerInfo[para1][pRank] = 11; } //News Reporters
							else if(level == 10) { PlayerInfo[para1][pChar] = 255; PlayerInfo[para1][pRank] = 5; } //Taxi Cab Company
							else if(level == 11) { PlayerInfo[para1][pChar] = 171; PlayerInfo[para1][pRank] = 5; } //School
							else if(level == 12) { PlayerInfo[para1][pChar] = 176; PlayerInfo[para1][pRank] = 7; } //크립스
							else if(level == 13) { PlayerInfo[para1][pChar] = 108; PlayerInfo[para1][pRank] = 5; } //North Side Nortenos X4
							else if(level == 14) { PlayerInfo[para1][pChar] = 294; PlayerInfo[para1][pRank] = 7; } //Yamaguchi
							else if(level == 15) { PlayerInfo[para1][pChar] = 249; PlayerInfo[para1][pRank] = 6; } //Chornaya 삼합
							else if(level == 16) { PlayerInfo[para1][pChar] = 293; PlayerInfo[para1][pRank] = 6; } //Seville boulevard
							else if(level == 17) { PlayerInfo[para1][pChar] = 19; PlayerInfo[para1][pRank] = 6; } //Bloodz
							else if(level == 18) { PlayerInfo[para1][pChar] = 294; PlayerInfo[para1][pRank] = 5; } //해태그룹
							else if(level == 19) { PlayerInfo[para1][pChar] = 120; PlayerInfo[para1][pRank] = 12; } // T.F.O.A 9
							else if(level == 21) { PlayerInfo[para1][pChar] = 78; PlayerInfo[para1][pRank] = 6; } //C.D
							else if(level == 22) { PlayerInfo[para1][pChar] = 294; PlayerInfo[para1][pRank] = 6; } //칠성파
							else if(level == 23) { PlayerInfo[para1][pChar] = 294; PlayerInfo[para1][pRank] = 6; } //동성로
							else if(level == 24) { PlayerInfo[para1][pChar] = 20; PlayerInfo[para1][pRank] = 6; } //N.G.S
							else if(level == 25) { PlayerInfo[para1][pChar] = 120; PlayerInfo[para1][pRank] = 12; } //대명회
							else if(level == 26) { PlayerInfo[para1][pChar] = 147; PlayerInfo[para1][pRank] = 4; } //교회
							else if(level == 27) { PlayerInfo[para1][pChar] = 186; PlayerInfo[para1][pRank] = 9; } //신종로
							else if(level == 28) { PlayerInfo[para1][pChar] = 18; PlayerInfo[para1][pRank] = 4; }
							else if(level == 29) { PlayerInfo[para1][pChar] = 102; PlayerInfo[para1][pRank] = 8; }//Uptown 424 Kilo Block
							else if(level == 30) { PlayerInfo[para1][pChar] = 292; PlayerInfo[para1][pRank] = 6; }//MS-13
							else if(level == 31) { PlayerInfo[para1][pChar] = 186; PlayerInfo[para1][pRank] = 8; }//대북
							else if(level == 32) { PlayerInfo[para1][pChar] = 295; PlayerInfo[para1][pRank] = 8; }//정부용병
							else if(level == 33) { PlayerInfo[para1][pChar] = 164; PlayerInfo[para1][pRank] = 8; }//항공사
							else if(level == 34) { PlayerInfo[para1][pChar] = 147; PlayerInfo[para1][pRank] = 8; }//모드IT회사
							else if(level == 35) { PlayerInfo[para1][pChar] = 155; PlayerInfo[para1][pRank] = 3; }//레스또랑
							else if(level == 36) { PlayerInfo[para1][pChar] = 155; PlayerInfo[para1][pRank] = 4; }//대학교
							else if(level == 37) { PlayerInfo[para1][pChar] = 155; PlayerInfo[para1][pRank] = 4; }//레이서
							else if(level == 38) { PlayerInfo[para1][pChar] = 155; PlayerInfo[para1][pRank] = 7; }//레이서
							if(level == 0)
							{
								gTeam[para1] = 3;
								PlayerInfo[para1][pTeam] = 3;
							}
							else if(level == 1 || level == 2 || level == 3)
							{
								gTeam[para1] = 2;
								PlayerInfo[para1][pTeam] = 2;
							}
							else if(level == 4)
							{
								gTeam[para1] = 1;
								PlayerInfo[para1][pTeam] = 1;
							}
							else
							{
								gTeam[para1] = 15;
								PlayerInfo[para1][pTeam] = 15;
							}
							SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		//----------------------------------[SETSKIN]------------------------------------------------
		if(strcmp(cmd, "/타투변경", true) == 0 || strcmp(cmd, "/nicks", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" /타투변경 [플레이어번호] [바꿀닉네임]");
					SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 자신이 원하는 타투 | < 양식, | < 필수");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 7)
					//if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								nicks[giveplayerid]="";
								SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신의 이름이 삭제되었습니다");
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방의 타투를 제거하셨습니다");
								return 1;
							}
							nicks[giveplayerid]=(result);
							SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신의 이름이 생겼습니다");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방에게 타투를 달아드렸습니다");
							format(string, 256, "(관리자알림) %s님이 %s에게 관리자 기능으로 타투를 변경해줍니다.", AdminName[playerid],giveplayer);
							ABroadCast(COLOR_ADMIN,string,1);
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/타투", true) == 0)
		{
			if(!PlayerToPoint(4,playerid,2507.4119,1242.3574,10.8270))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 타투하는 곳에 있지 않습니다.");
				return 1;
			}
			if(GetMoney(playerid)<1000)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 돈이 부족합니다.");
				return 1;
			}
			if(PlayerInfo[playerid][pLevel]<1)
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 신용도가 1이상 이여야 합니다.");
			    return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;

			if(!strlen(result))
			{
			    if(strlen(nicks[playerid]))
			    {
					nicks[playerid]="";
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 타투를 제거하셨습니다.");
					return 1;
				}
				SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" /타투 [닉네임]");
				SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 한글 6자 영어 12자 ");
				return 1;
			}

			if(strlen(result)>12)
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문자의 내용이 너무 깁니다.");
			    return 1;
			}
			format(nicks[playerid],256,"%s |",(result));
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 이름이 생겼습니다.");
			GiveMoney(playerid,-1000);
			return 1;
		}
		if(strcmp(cmd, "/런닝머신1", true) == 0)
		{
			if(!PlayerToPoint(3,playerid,2054.8152,2418.6477,312.2635))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 체육관 런닝머신 앞에 있지 않습니다.");
				return 1;
			}
			if(RunnigHealth[playerid] != 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 운동을 하고있습니다");
				return 1;
			}
			RunnigHealth[playerid] = 1
			HealthGage[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2054.8152,2418.6477,312.2635);
			SetPlayerFacingAngle(playerid, 182.0718);
			SetPlayerCameraPos(playerid, 2057.0547,2417.3423,312.8971);
			SetPlayerCameraLookAt(playerid, 2056.0354,2420.0381,312.0818);
			Anim(playerid,"PED","WALK_gang1",4.1,1,0,0,0,0);
			Anim(playerid,"GYMNASIUM","gym_tread_jog",4.1,1,0,0,0,0);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 시작했습니다 주어진게이지만큼 채우십시오");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 취소하시려면, (/운동취소)를 입력하십시오");
			return 1;
		}
		//-----------------------------런닝머신2----------------------------
				if(strcmp(cmd, "/런닝머신2", true) == 0)
		{
			if(!PlayerToPoint(3,playerid,2054.5815,2422.0693,312.2635))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 체육관 런닝머신 앞에 있지 않습니다.");
				return 1;
			}
			if(RunnigHealth[playerid] != 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 운동을 하고있습니다");
				return 1;
			}
			RunnigHealth[playerid] = 1
			HealthGage[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2054.5815,2422.0693,312.2635);
			SetPlayerFacingAngle(playerid, 182.0718);
			SetPlayerCameraPos(playerid, 2056.0994,2422.7202,312.3785);
			SetPlayerCameraLookAt(playerid, 2055.6345,2420.6306,312.0813);
			Anim(playerid,"PED","WALK_gang1",4.1,1,0,0,0,0);
			Anim(playerid,"GYMNASIUM","gym_tread_jog",4.1,1,0,0,0,0);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 시작했습니다 주어진게이지만큼 채우십시오");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 취소하시려면, (/운동취소)를 입력하십시오");
			return 1;
		}
		//======================================================================
		if(strcmp(cmd, "/삽입", true) == 0 || strcmp(cmd, "/섹스", true) == 0)
		{
			if(SexHealth[playerid] != 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 섹스 중입니다.");
				return 1;
			}
  	       new Float: x, Float:y, Float:z, Float:a;
			if(GetPlayerWeapon(playerid) == 6)
			{
            GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, a);// X = 왼(+) 오(-)
			x += (-1 * floatsin(-a, degrees));// Y = 앞(+) 뒤(-)
			y += (-1 * floatcos(-a, degrees));// Z = 위(+) 밑(-)
			SexDildo[playerid] = CreateObject(2228,0,0,0,0,0,0);
			CreateObject(2228,0,0,0,0,0,0);
			AttachObjectToPlayer(SexDildo[playerid],playerid,0.0,-0.2,0.0,0,0,0);
			DWeapon[playerid] = 1;
			Dnumber[playerid] = GetPlayerWeapon(playerid);
			Dammo[playerid] = GetPlayerAmmo(playerid);
			RemovePlayerWeapon(playerid,GetPlayerWeapon(playerid));
			return 1;
			}
			SexHealth[playerid] = 1;
			SexGage[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			SetPlayerSkin(playerid, 252);//섹스스킨
			SetPlayerAttachedObject( playerid, 0, 323, 7, 0.000000, 0.075390, 0.159409, 280.146545, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // gun_vibe1 - comdo
            Anim(playerid,"BIKES","BIKEs_Back",4.1,0,1,1,1,0);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 섹스를 하기위해 좆을 집어 넣습니다.");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그녀의 보지에서 피가 흐릅니다. 첫경험인가봅니다.");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그녀의 신음소리에 좆이 더 커집니다.");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 여성의 몸에 자신의 정액을 묻히려면(/사정)");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 옷은 정액이 묻어 버려집니다.");
			return 1;
		}
       //=======================================================================
		if(strcmp(cmd, "/사정", true) == 0 || strcmp(cmd, "/좆멈춰", true) == 0)
		{
			if(SexHealth[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 섹스중 이지 않습니다");
				return 1;
			}
			//DestroyObject(SexDildo[playerid]);
			SetPlayerFreeze(playerid, false, 0);
			RemovePlayerAttachedObject(playerid,0);
    		RemovePlayerAttachedObject(playerid,1);
    		RemovePlayerAttachedObject(playerid,2);
    		RemovePlayerAttachedObject(playerid,3);
    		RemovePlayerAttachedObject(playerid,4);
			TogglePlayerControllable(playerid, 1);
			SexHealth[playerid] = 0; SexGage[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(SexHealth[playerid] == 0)
			{
				Anim(playerid,"PED","facgum",4.1,0,1,1,1,1);
			}
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 섹스를 하다가 사정을 하엿습니다.");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그녀의 몸은 당신의 정액으로 덮엿습니다");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 섹시한 그녀를 보고 다시 좆이 섭니다.");
			return 1;
		}
	   //=======================================================================
		if(strcmp(cmd, "/싸이클1", true) == 0)
		{
			if(!PlayerToPoint(3,playerid,2054.9719,2432.5479,313.3567))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 체육관 싸이클 머신 앞에 있지않습니다");
				return 1;
			}
			if(RunnigHealth[playerid] != 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 운동을 하고있습니다");
				return 1;
			}
			RunnigHealth[playerid] = 2; HealthGage[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2054.9719,2432.5479,313.3567);
			SetPlayerFacingAngle(playerid, 91.2276);
			SetPlayerCameraPos(playerid, 2055.5505,2433.7908,313.3567);
			SetPlayerCameraLookAt(playerid, 2055.5374,2432.3054,312.0889);
			Anim(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 시작했습니다 주어진게이지만큼 채우십시오");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 취소하시려면, (/운동취소)를 입력하십시오");
			return 1;
		}
		if(strcmp(cmd, "/싸이클2", true) == 0)
		{
			if(!PlayerToPoint(3,playerid,2055.0391,2435.3198,313.3567))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 체육관 싸이클 머신 앞에 있지않습니다");
				return 1;
			}
			if(RunnigHealth[playerid] != 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 운동을 하고있습니다");
				return 1;
			}
			RunnigHealth[playerid] = 2; HealthGage[playerid] = 0;
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2055.0391,2435.3198,313.3567);
			SetPlayerFacingAngle(playerid, 91.2276);
			SetPlayerCameraPos(playerid, 2056.8840,2436.5935,313.3567);
			SetPlayerCameraLookAt(playerid, 2055.8591,2433.9097,312.0893);
			Anim(playerid,"GYMNASIUM","gym_bike_celebrate",4.1,0,1,1,1,1);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 시작했습니다 주어진게이지만큼 채우십시오");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 취소하시려면, (/운동취소)를 입력하십시오");
			return 1;
		}
		if(strcmp(cmd, "/운동취소", true) == 0)
		{
			if(RunnigHealth[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 운동중이지 않습니다");
				return 1;
			}
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
			RunnigHealth[playerid] = 0; HealthGage[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(RunnigHealth[playerid] == 1)//런닝머신
			{
				Anim(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,0,0,0,0);
			}
			if(RunnigHealth[playerid] == 2)//싸이클
			{
				Anim(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,0,0,0,0);
			}
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 마쳤습니다");
			return 1;
		}
		if(strcmp(cmd, "/농구취소", true) == 0)
		{
			if(RunnigHealth[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농구중이지 않습니다.");
				return 1;
			}
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
			RunnigHealth[playerid] = 0; HealthGage[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(RunnigHealth[playerid] == 1)//런닝머신
			{
				Anim(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,0,0,0,0);
			}
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농구를 끝맞쳤습니다.");
			return 1;
		}
		//==============================================================================
		if(strcmp(cmd, "/스킨변경", true) == 0 || strcmp(cmd, "/setskin", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /스킨변경 [플레이어의번호/이름의부분] [스킨번호]");
					return 1;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if(level > 299 || level < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스킨번호는 1~299까지만 가능합니다"); return 1; }
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							if(IsPlayerNPC(para1))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 엔피씨를 대상으로 스킨을 변경할 수 없습니다");
								return 1;
							}
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pChar] = level;
							format(string, sizeof(string), " 당신의 스킨이 %s님에 의하여 변경되었습니다", AdminName[playerid]);
							SCM(para1, COLOR_ADMIN, string);
							format(string, sizeof(string), " 당신은 %s님의 스킨을 %d번으로 변경시켰습니다", giveplayer,level);
							SCM(playerid, COLOR_ADMIN, string);
							SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/팩션접", true) == 0)
		{
			if(PlayerInfo[playerid][pFMember] != 255)
			{
				new member = PlayerInfo[playerid][pFMember];
				format(string, sizeof(string), "_____[%s]_____", FamilyInfo[member][FamilyName]);
				SCM(playerid, COLOR_ERROR, string);
				for(new i=0; i<PLAYERS; i++)
				{
					if(IsPlayerConnected(i) && PlayerInfo[playerid][pFMember] == PlayerInfo[i][pFMember])
					{
						format(string, sizeof(string), "  %s",  RPPlayerName(i));
						SCM(playerid, COLOR_ERROR, string);//완료
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 직업이 없습니다 !");
			}
			return 1;
		}
		if(strcmp(cmd, "/직원접", true) == 0)
		{
			if(PlayerInfo[playerid][pMember] != 0)
			{
				format(string, sizeof(string), "_____[%s]_____", GetMemberName(PlayerInfo[playerid][pMember]));//이게 안뜰거란말이요 이게 이제 뜰꺼빈다 하하
				SCM(playerid, COLOR_ERROR, string);
				for(new i=0; i<M_P; i++)
				{
					if(IsPlayerConnected(i) && PlayerInfo[playerid][pMember] == PlayerInfo[i][pMember])
					{
						format(string, sizeof(string), "%s : %s", GetRankName(PlayerInfo[i][pMember], PlayerInfo[i][pRank]), RPPlayerName(i));
						SCM(playerid, COLOR_ERROR, string);
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 직업이 없습니다.");
			}
			return 1;
		}
		//----------------------------------[GIVERANK]------------------------------------------------
		if(strcmp(cmd, "/giverank", true) == 0 || strcmp(cmd, "/계급", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /계급 [플레이어의번호/이름의부분] [번호]");
					return 1;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				if (PlayerInfo[playerid][pLeader] >= 1)
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							if(PlayerInfo[playerid][pMember]!=PlayerInfo[para1][pMember]){SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 집단에 속해있지 않습니다.");return 1;}
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pRank] = level;
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 계급은 리더 %s님에 의해서 계급 %d로 조정되었습니다", sendername, level);
							SCM(para1, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님의 계급을 %d로 조정하였습니다", giveplayer,level);
							SCM(playerid, COLOR_ERROR, string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 리더가 아닙니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/gotocar") == 0||strcmp(cmd, "/차로") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차로 [차량번호]");
					return 1;
				}
				new testcar = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					new Float:cwx2,Float:cwy2,Float:cwz2;
					GetVehiclePos(testcar, cwx2, cwy2, cwz2);
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					}
					else
					{
						SetPlayerPos(playerid, cwx2, cwy2, cwz2);
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 텔레포트 되었습니다");
					SetPlayerInterior(playerid,0);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		//-----------------------------------------------------------------------------차소환
		if(strcmp(cmd, "/차량소환", true) == 0 ||strcmp(cmd, "/getcar") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /차량소환 [차량번호]");
					return 1;
				}
				new testcar = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					new Float:cwx2,Float:cwy2,Float:cwz2;
					GetPlayerPos(playerid, cwx2, cwy2, cwz2);
					SetVehiclePos(testcar, cwx2, cwy2, cwz2);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 텔레포트 되었습니다");
					SetPlayerInterior(playerid,0);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(c_strcmp(cmd, "/계정삭제") == 1)
		{
			if(PlayerInfo[playerid][pAdmin] >= 7)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid,COLOR_ERROR," INFO : "#C_WHITE" /계정삭제 [이름]");
					return 1;
				}
				format(string, 128, "user/%s.ini", tmp);
				if(!fexist(string))
				{
					SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 이 이름을 찾을수 없습니다. ");
					return 1;
				}
				new pName[24];
				for(new i = 0; i < M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
					GetPlayerName(i, pName, 24);
					if(c_strcmp(pName, tmp) == 1)
					Kick(i);
					else
					format(pName, 24, "");
					}
				}
				fremove(string);
			}
			else
			SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 어드민이 아닙니다. ");
			return 1;
		}
		//----------------------------------[GOTO]-----------------------------------------------
		if(c_strcmp(cmd, "/좌표설정") == 1 || c_strcmp(cmd, "/setpos") == 1)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 5)
				{
					new Float:X, Float:Y, Float:Z;
					tmp = strtok(cmdtext, idx);
					X = strval(tmp);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_ERROR, " INFO : "#C_WHITE" /setpos [x값] [y값] [z값]");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					Y = strval(tmp);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_ERROR, " INFO : "#C_WHITE" /setplayerpos [x값] [y값] [z값]");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					Z = strval(tmp);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_ERROR, " INFO : "#C_WHITE" /setplayerpos [x값] [y값] [z값]");
						return 1;
					}
					SetPlayerPos(playerid, X, Y, Z);
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신이 이동한 위치 좌표는 X:%f, Y:%f, Z:%f 입니다.", X, Y, Z);
					SendClientMessage(playerid, COLOR_ERROR, string);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_YELLOW" 당신은 이 명령어를 사용할 권한이 없습니다 !");
					return 1;
				}
			}
			return 1;
		}
        if(strcmp(cmd, "/프리미엄", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
			    new playa;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_HINT, ""#C_RED"(INFO) "#C_LBLUE": /프리미엄 [플레이어의번호] [이유]");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_HINT, ""#C_RED"(INFO) "#C_LBLUE": /프리미엄 [플레이어의번호] [이유]");
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] >= 10)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
						    if(PlayerInfo[playa][premium] == 0)
						    {
						    	PlayerInfo[playa][premium] = 1;
								GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								format(string, 256, "관리자 : %s 님께서 User : %s 님을 프리미엄 계정으로 임명 하였습니다.",sendername,giveplayer,result);
								SCM(playerid ,COLOR_ADMIN, string);
								format(string, 256, "이유 : %s  - 대총관리자: [GM]만개",(result));
								SCM(playerid ,COLOR_ADMIN, string);
							}
							else if(PlayerInfo[playa][premium] == 1)
					    	{
						    	PlayerInfo[playa][premium] = 0;
								GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								format(string, 256, "관리자 : %s 님께서 User : %s 님을 프리미엄 계정을 해제 하였습니다.",sendername,giveplayer,result);
								SCM(playerid ,COLOR_ADMIN, string);
								format(string, 256, "이유 : %s  - 대총관리자: [GM]만개",(result));
								SCM(playerid,COLOR_ADMIN, string);
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_ERROR, ""#C_RED"(INFO) "#C_GREY": 존재하지 않는 명령어입니다");
				}
			}
			return 1;
		}
//===============================================================
		if(strcmp(cmd, "/자지", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 2022.2963,1911.3375,12.2984);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					}
					else
					{
						SetPlayerPos(playerid, 2022.2963,1911.3375,12.2984);
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 비밀의 방에 오셨습니다.");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
//===============================================================
		if(strcmp(cmd, "/오류장소", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 0.0,0.0,0.0);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					}
					else
					{
						SetPlayerPos(playerid, 0.0,0.0,0.0);
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 오류장소로 텔레포트 되었습니다");
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/텔레포트", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 1)
				{
					ShowPlayerDialog(playerid,DIALOG_5,DIALOG_STYLE_LIST,"관리자 텔레포트","라스 벤츄라\n아크엔젤\n샌피에로\n드모르간\n광고소\n싱글 드라이빙 면허소\n폐건물\n항구\n광산\n바위산\n응가 온천\n항구\n체육관\n시골","이동","취소");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/gotoin", true) == 0 || strcmp(cmd,"/어드전",true) == 0 || strcmp(cmd,"/어드전용방",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
					}
					else
					{
						SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
					}
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 텔레포트 되었습니다");
					SetPlayerInterior(playerid,1);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/gotojet", true) == 0 || strcmp(cmd,"/회의실",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
					}
					else
					{
						SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
					}
					SetPlayerInterior(playerid,1);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 텔레포트 되었습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/가", true) == 0 || strcmp(cmd, "/출두", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /가 [플레이어의번호/이름의부분]");
					return 1;
				}
				new Float:plocx,Float:plocy,Float:plocz;
				new plo;
				plo = ReturnUser(tmp);
				if (IsPlayerConnected(plo))
				{
					if(plo != INVALID_PLAYER_ID)
					{
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
							if(Spectate[playerid] != 255)
							{
								Spectate[playerid] = 256;
							}
							GetPlayerPos(plo, plocx, plocy, plocz);
							if(PlayerInfo[plo][pInt] > 0)
							{
								SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
								PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
								PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
							}
							if(PlayerInfo[playerid][pInt] == 0)
							{
								SetPlayerInterior(playerid,0);
							}
							if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0)
							{
								SetPlayerInterior(playerid,1);
								PlayerInfo[playerid][pInt] = 1;
							}
							if (GetPlayerState(playerid) == 2)
							{
								new tmpcar = GetPlayerVehicleID(playerid);
								SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
								TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
							}
							else
							{
								new inte = GetPlayerInterior(plo);
								SetPlayerPos(playerid,plocx,plocy+2, plocz);
								SetPlayerInterior(playerid, inte);
							}
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 텔레포트 되었습니다");
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}

		//----------------------------------[GETHERE]-----------------------------------------------
		if(strcmp(cmd, "/소", true) == 0 || strcmp(cmd, "/소환", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/소)환 [플레이어의번호/이름의부분]");
					return 1;
				}
				new Float:plocx,Float:plocy,Float:plocz;
				new plo;
				plo = ReturnUser(tmp);
				if (IsPlayerConnected(plo))
				{
					if(plo != INVALID_PLAYER_ID)
					{
						if (PlayerInfo[plo][pAdmin] > 1337)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 관리자는 소환할 수 없습니다");
							return 1;
						}
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
							GetPlayerPos(playerid, plocx, plocy, plocz);
							if(PlayerInfo[playerid][pInt] > 0)
							{
								SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
								PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
								PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
							}
							if(PlayerInfo[playerid][pInt] == 0)
							{
								SetPlayerInterior(plo,0);
							}
							if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0)
							{
								SetPlayerInterior(plo,1);
								PlayerInfo[plo][pInt] = 1;
							}
							if (GetPlayerState(plo) == 2)
							{
								TelePos[plo][0] = 0.0;
								TelePos[plo][1] = 0.0;
								new tmpcar = GetPlayerVehicleID(plo);
								SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							}
							else
							{
								SetPlayerPos(plo,plocx,plocy+2, plocz);
								new inte = GetPlayerInterior(playerid);
								SetPlayerInterior(plo, inte);
							}
							SCM(plo, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 텔레포트 되었습니다");
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/탄차", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 탄차 번호: %d번",gLastCar[playerid]);
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}
		if(strcmp(cmd, "/모든차기름", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 3)
				{
					for(new c=0;c<CAR_AMOUNT;c++)
					{
						Gas[c] = GasMax;
					}
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 모든차에 기름을 채웠습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
			}
			return 1;
		}
		//----------------------------------[GiveGun]------------------------------------------------
				if(strcmp(cmd, "/돈무기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /돈무기 [플레이어의번호/이름의부분] [돈]");
					return 1;
				}
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 7)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GiveMoney(playa, money);
							if(strcmp(sendername, "a_a", true) == 0) { } else {
								format(string, 256, " %s님이 %s님에게 무기번호 24번 을 드렷습니다", AdminName[playerid],giveplayer,money);
								ABroadCast(COLOR_ADMIN,string,1);
								printf(" %s님이 %s님에게 무기번호 24번 을 드렷습니다.", AdminName[playerid], giveplayer, money);
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 명령어입니다");
				}
			}
			return 1;
		}
		//-------------------------------------------------------------------------------------------
		if(strcmp(cmd, "/무기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /무기 [플레이어의번호/이름의부분] [무기번호] [탄약]");
					return 1;
				}
				new playa;
				new gun;
				new ammo;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				gun = strval(tmp);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /무기 [플레이어의번호/이름의부분] [무기번호] [탄약]");
					SCM(playerid, COLOR_ERROR, "| 무기 | : 3(클럽) 4(나이프) 5(알루미늄방망이) 6(삽) 7(당구큐) 8(카타나) 10-13(딜도) 14(꽃) 15(지팡이) 16(수류탄) 17(연막탄) 18(화염병)");
					SCM(playerid, COLOR_ERROR, "| 무기 | : 22(콜트) 23(소음권총) 24(데저트이글) 25(샷건) 28(UZI) 29(MP5) 30(AK47) 31(M4) 33(라이플) 34(스나이퍼)");
					SCM(playerid, COLOR_ERROR, "| 무기 | : 37(화염방사기) 39(C4) 41(스프레이) 42(소화기) 43(카메라) 46(낙하산)");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				ammo = strval(tmp);
				if(ammo <1)
				{ SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 탄약은 1발 이상부터 가능합니다"); return 1; }
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GiveWeapon(playa, gun, ammo);
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(strcmp(sendername, "a_a", true) == 0)
							{ } else {
								format(string, 256, " %s님이 %s님에게 무기번호 %d번을 주었습니다", sendername,giveplayer,gun);
								ABroadCast(COLOR_ADMIN,string,1); }
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		//----------------------------------[sethp]------------------------------------------------
		if(strcmp(cmd, "/체력", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /체력 [플레이어의번호/이름의부분] [체력량]");
					return 1;
				}
				new playa;
				new health;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				health = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							SetHealth(playa, health);
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, 256, "(관리자알림) %s님이 %s님의 체력을 %d으로 바꾸었습니다.", AdminName[playerid],giveplayer,health);
							ABroadCast(COLOR_ADMIN,string,1);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/관리자응급") == 0 || strcmp(cmd, "/관응") == 0)
		{
		if(IsPlayerConnected(playerid))
		{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) {
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /관리자응급 [플레이어번호/이름의 부분]");
		return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(IsPlayerConnected(giveplayerid))
		{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[giveplayerid][pJailed] != 3 && PlayerInfo[giveplayerid][pJailed] != 300)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 기절해 있지 않습니다");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			PlayerInfo[giveplayerid][pJailed] = 0;
			PlayerInfo[giveplayerid][pJailTime] = 0;
			PlayerInfo[giveplayerid][pMuted] = 0;
			TogglePlayerControllable(giveplayerid, 1);
			PlayerInfo[giveplayerid][pDeaths] += 1;
			PlayerFixRadio(giveplayerid);
			ClearAnimations(giveplayerid);
			GameTextForPlayer(giveplayerid, "~w~You are ~g~Survived ~w~!!", 5000, 3);
			SCM(giveplayerid, COLOR_ADMIN, "* 당신은 관리자의 도움으로 인해 살아났습니다.");
			format(string, 256, "(관리자알림) %s님이 %s를 관리자 기능으로 살려줍니다.", AdminName[playerid],giveplayer);
			ABroadCast(COLOR_ADMIN,string,1);
			Anim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
			Anim(giveplayerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
			SetCameraBehindPlayer(giveplayerid);
		}
		}
		else
		{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다 !");
		return 1;
		}
		}
		else
		{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 관리자가 아닙니다 !");
		}
		}
		return 1;
		}
				if(strcmp(cmd, "/위성", true) == 0) {
			tmp = adminspec_strtok(cmdtext, idx);

			if(!strlen(tmp)) {
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /위성 [플레이어번호]");
				return 1;
			}
			specplayerid = strval(tmp);

			if(!IsPlayerConnected(specplayerid)) {
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				NellInte[playerid] = GetPlayerInterior(playerid);
				GetPlayerPos(playerid,NellPos[0],NellPos[1],NellPos[2]);
				GetPlayerName(specplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, specplayerid);
				SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specplayerid));
				gSpectateID[playerid] = specplayerid;
				gSpectateType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
				Specate[playerid]=true;
				format(string, 256, "(관리자알림) %s님이 %s를 감시합니다.(/위성)", AdminName[playerid],giveplayer);
				ABroadCast(COLOR_ADMIN,string,1);
			}
			return 1;
		}
		if(strcmp(cmd, "/위성끄기", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				TogglePlayerSpectating(playerid, 0);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				gSpectateID[playerid] = INVALID_PLAYER_ID;
				gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
				SetTimerEx("dnltjdRmx", 2000, 0, "d", playerid);
				Specate[playerid]=false;
			}
			return 1;
		}
		if(strcmp(cmd, "/아머", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /아머 [플레이어의번호/이름의부분] [아머량]");
					return 1;
				}
				new playa;
				new health;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				health = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							SetArmour(playa, health);
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, 256, "(관리자알림) %s님이 %s님의 아머를 %d으로 바꾸었습니다", AdminName[playerid],giveplayer,health);
							ABroadCast(COLOR_ADMIN,string,1);
  					        AttachObjectCorrectly(playerid, 373);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/healall", true) == 0 || strcmp(cmd, "/모두체력", true) == 0)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));

			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					format(string, sizeof(string), "%s님이 모든사람의 체력을 채워드렸습니다.", AdminName[playerid]);
					SCMToAll(COLOR_ADMIN, string);
					for(new i = 0; i < M_P; i ++)
					{
						if(IsPlayerConnected(i))
						{
							SetHealth(i, 100);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인후에 이 명령어를 사용해 주세요");
			}
			return 1;
		}
		if(strcmp(cmd, "/armourall", true) == 0 || strcmp(cmd, "/모두아머", true) == 0)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));

			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					format(string, sizeof(string), " %s님이 모든사람의 아머를 채워드렸습니다", AdminName[playerid]);
					SCMToAll(COLOR_ADMIN, string);
					for(new i = 0; i < M_P; i ++)
					{
						if(IsPlayerConnected(i))
						{
							SetArmour(i, 100);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인후에 이 명령어를 사용해 주세요");
			}
			return 1;
		}
		if(strcmp(cmd, "/차소환", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] < 7)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차소환 [차번호] [색상1] [색상2]");
					return 1;
				}
				new car;
				car = strval(tmp);
				if(car < 400 || car > 611) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차번호는 400~611까지만 가능합니다"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차소환 [차번호] [색상1] [색상2]");
					return 1;
				}
				new color1;
				color1 = strval(tmp);
				if(color1 < 0 || color1 > 126) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 색코드는 0~126까지만 가능합니다"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차소환 [차번호] [색상1] [색상2]");
					return 1;
				}
				new color2;
				color2 = strval(tmp);
				if(color2 < 0 || color2 > 126) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 색코드는 0~126까지만 가능합니다"); return 1; }
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(playerid, X,Y,Z);
				new carid = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, 60000);
				CreatedCars[CreatedCar] = carid;
				CreatedCar ++;
				format(string, sizeof(string), "INFO : "#C_WHITE" 차량번호 %d번이 리스폰되었습니다", carid);
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}
		if(strcmp(cmd, "/차수리", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 2)
			{
				RepairCar[playerid] = GetPlayerVehicleID(playerid);
				SetVehicleHealth(RepairCar[playerid], 1000.0);
				RepairVehicle(RepairCar[playerid]);

   				if(RepairCar[playerid] >= MCAR[1][0] && RepairCar[playerid] <= MCAR[1][1])
				{
					SetVehicleHealth(RepairCar[playerid],1500);
				}
				else if(RepairCar[playerid] >= MCAR[2][0] && RepairCar[playerid] <= MCAR[2][1])
				{
					SetVehicleHealth(RepairCar[playerid],1500);
				}
				else if(RepairCar[playerid] >= MCAR[3][0] && RepairCar[playerid] <= MCAR[3][1])
				{
					SetVehicleHealth(RepairCar[playerid],1500);
				}

				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, " %s님이 그의 차량을 수리했습니다", sendername);
				ABroadCast(COLOR_ADMIN,string,1);

			}
			return 1;
		}
		if(strcmp(cmd, "/차폭파", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] < 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
				SetVehicleHealth(GetPlayerVehicleID(playerid),0);
				SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 차량에 성공적으로 불을붙였습니다");
			}
			return 1;
		}
		if(strcmp(cmd, "/긴급어드민", true) == 0)
		{
	 		if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"[ 미공개 ] 숨겨진 명령어입니다.");
					return 1;
				}
				new para1;
				new level;
				para1 = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				level = strval(tmp);
				{
					if(IsPlayerConnected(para1))
					{
						if(para1 != INVALID_PLAYER_ID)
						{
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pAdmin] = level;
							format(string, sizeof(string), "당신은 긴급 어드민 명령어로 인해 관리자레벨 %d 이 됩니다.", level);
							SCM(para1, COLOR_ADMIN, string);
						}
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/날씨설정", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] < 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /날씨설정 [날씨번호]");
					return 1;
				}
				new weather;
				weather = strval(tmp);
				if(weather < 0||weather > 45) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 날씨번호는 0~45까지만 가능합니다"); return 1; }
				SetWeather(weather);
				SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 시티의 날씨를 성공적으로 변경하였습니다");
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, " %s님이 날씨번호를 %d번으로 바꾸었습니다", sendername,weather);
				ABroadCast(COLOR_ADMIN,string,1);
				DefaultWeather = weather;
			}
			return 1;
		}
		if(strcmp(cmd, "/돈주기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /돈주기 [플레이어의번호/이름의부분] [돈]");
					return 1;
				}
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 7)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GiveMoney(playa, money);
							if(strcmp(sendername, "a_a", true) == 0) { } else {
								format(string, 256, " %s님이 %s님의 돈을 $%d만큼 증가시켰습니다", AdminName[playerid],giveplayer,money);
								ABroadCast(COLOR_ADMIN,string,1);
								printf(" %s님이 %s님의 돈을 $%d만큼 증가시켰습니다", AdminName[playerid], giveplayer, money);
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 명령어입니다");
				}
			}
			return 1;
		}
		//---------------------------[돈회수]-----------------------------------------------------
		if(strcmp(cmd, "/돈회수", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /돈회수 [플레이어번호/이름의 부분] [돈]");
					return 1;
				}
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				money = strval(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 7)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GiveMoney(playa, -money);
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, 256, "%s님이 %s님의 돈을 $%d만큼 회수하였습니다", AdminName[playerid],giveplayer,money);
							ABroadCast(COLOR_ADMIN,string,1);
							printf("%s님이 %s님의 돈을 $%d만큼 회수하였습니다", AdminName[playerid], giveplayer, money);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 명령어입니다");
				}
			}
			return 1;
		}
		//-----------------------------------[Slap]-----------------------------------------------

		if(strcmp(cmd, "/강제튜토", true) == 0 || strcmp(cmd, "/튜토", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /강제튜토 [플레이어의번호/이름의부분]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >=1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " 당신은 %s님에 의해 튜토리얼을 다시봅니다.",AdminName[playerid]);
							SCM(playa, COLOR_ADMIN, string);
							format(string, sizeof(string), " %s님이 %s님에게 튜토를 보여줍니다",AdminName[playerid],  giveplayer);
							printf("%s",string);
							format(string, sizeof(string), " %s님이 %s님에 의해 튜토를 봅니다",giveplayer ,AdminName[playerid]);
							ABroadCast(COLOR_ADMIN,string, 1);
							TutTime[playa] = 1;
							PlayerInfo[playa][pTut] = 0;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/어드민이름", true) == 0 || strcmp(cmd, "/관리자이름", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 10)//
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid,COLOR_WHITE, " (HINT) /어드민이름 [플레이어번호] [내용]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
							idx++;
							}
							new offset = idx;
							new result[256];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
							result[idx - offset] = cmdtext[idx];
							idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								AdminName[giveplayerid]="";
								format(string, sizeof(string), " (SERVER) 당신의 어드민네임은 %s님의 의해 삭제됐습니다.",AdminName[playerid]);
								SCM(giveplayerid, COLOR_INFO, string);
								return 1;
							}
							AdminName[giveplayerid] = (result);
							format(string, sizeof(string), " (SERVER) 당신의 %s님의 어드민네임(%s)을 만들었습니다.",giveplayer,(result));
							SCM(playerid, COLOR_ORANGE, string);
							format(string, sizeof(string), " (SERVER) 당신은 %s님에 의해 %s라는 어드민네임 이 생겼습니다.",AdminName[playerid],(result));
							SCM(giveplayerid, COLOR_INFO, string);
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_ERROR, " (ERROR) 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_ERROR, " (ERROR) 어드민레벨이 부족합니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/계정완료", true) == 0 || strcmp(cmd, "/계완", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /계정완료 [플레이어의번호/이름의부분]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >=1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " 당신은 %s님에 의해 계정이 완료됩니다.",AdminName[playerid]);
							SCM(playa, COLOR_ADMIN, string);
							format(string, sizeof(string), " %s님이 %s님에게 계정이 완료시켜줍니다",AdminName[playerid],  giveplayer);
							printf("%s",string);
							format(string, sizeof(string), " %s님이 %s님에 의해 계정이 완료됩니다",giveplayer ,AdminName[playerid]);
							ABroadCast(COLOR_ADMIN,string,1);
							SetTimerEx("dlqwkd2", 4000, false, "i", playa);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/칭찬교환", true) == 0 || strcmp(cmd, "/칭교", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
					if(IsPlayerConnected(playerid))
					{
						if(PlayerInfo[playerid][pChingchan] > 0)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[playerid][pChingchan] -= 1;//실수로 돈뺏을뻔햇넼ㅋㅋㅋ 야 그거해야지 당신은 칭찬이 없습니다.할꺼야 이미 생각해둿어
							GiveMoney(playerid, 500);
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 칭찬을 차감하고 돈을 받았습니다.",sendername);
							printf("%s",string);
							SCM(playerid, COLOR_ADMIN,"INFO : "#C_WHITE" 칭찬을 차감하고 돈을 받았습니다. ($500)");//완료
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 칭찬을 차감하고 돈을 받았습니다($500)",sendername);
							ABroadCast(COLOR_ADMIN,string,1);//햇어 아 무슨순이더라
						}
							else
							{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 칭찬을 가지고 있지 않습니다 (/스탯)");
							return 1;
							}
						}
					}
		return 1;
		}
						if(strcmp(cmd, "/주의", true) == 0 || strcmp(cmd, "/퍽", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" /퍽 [플레이어의번호/이름의부분]");
						return 1;
					}
					new playa;
					new Float:slx, Float:sly, Float:slz;
					playa = ReturnUser(tmp);
					if (PlayerInfo[playerid][pAdmin] >=1)
					{
						if(IsPlayerConnected(playa))
						{
							if(playa != INVALID_PLAYER_ID)
							{
								GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GiveHealth(playa, -5);
								GetPlayerPos(playa, slx, sly, slz);
								SetPlayerPos(playa, slx, sly, slz+5);
								PlayerPlaySound(playa, 1130, slx, sly, slz+5);
								format(string, sizeof(string), "  당신은 %s님에 의해 주의를 받았습니다.",AdminName[playerid]);
								SCM(playa, COLOR_ADMIN, string);
								format(string, sizeof(string), "  %s님이 %s님을 주의를 주었습니다.",AdminName[playerid],  giveplayer);
								printf("%s",string);
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					}
				}
				return 1;
			}

		if(strcmp(cmd, "/닥", true) == 0 || strcmp(cmd, "/닥쳐", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/닥)쳐 [플레이어의번호/이름의부분]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(PlayerInfo[playa][pMuted] == 0)
							{
								PlayerInfo[playa][pMuted] = 1;
								format(string, sizeof(string), " 당신은 %s님에 의해 말을 할 수 없게 되었습니다",AdminName[playerid]);
								SCM(playa, COLOR_ADMIN, string);
								format(string, sizeof(string), " 당신은 %s님을 말을 할 수 없게 했습니다",giveplayer);
								SCM(playerid, COLOR_ADMIN, string);
								format(string, sizeof(string), " %s님이 %s님을 말을 할 수 없게했습니다",AdminName[playerid],  giveplayer);
								printf("%s",string);
							}
							else
							{
								PlayerInfo[playa][pMuted] = 0;
								format(string, sizeof(string), "당신은 %s님에 의해 말을 할 수 있게 되었습니다",AdminName[playerid]);
								SCM(playa, COLOR_ADMIN, string);
								format(string, sizeof(string), "당신은 %s님을 말을 할 수 있게 했습니다",giveplayer);
								SCM(playerid, COLOR_ADMIN, string);
								format(string, sizeof(string), "%s님이 %s님을 말을 할 수 없게했습니다",AdminName[playerid],  giveplayer);
								printf("%s",string);
							}
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		//-----------------------------------[Force tutorial]-------------------------------------
		if(strcmp(cmd, "/아킥", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /아킥 [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s님이 %s님에 의해 부적절한 이름으로 인해 킥 됩니다.", giveplayer, AdminName[playerid]);
							SendAdminMessage(COLOR_ADMIN, string);
							format(string, sizeof(string), "당신은 %s님에 의해 부적절한 이름으로 킥 되었습니다.", AdminName[playerid]);
							SCM(giveplayerid, COLOR_ADMIN, string);
							format(string, sizeof(string), "(ex : Dongho_Lee) (ex : George_Foreman) 대 소문자 주위!");
							SCM(giveplayerid, COLOR_ADMIN, string);
							Kick(giveplayerid);
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/setname", true) == 0 || strcmp(cmd, "/이름변경") == 0)
		{
			new newname[128];
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /이름변경 [플레이어번호/이름의일부분] [새로운이름]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 닉네임 변경은 영어만 가능합니다. ex)이름_성");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					while ((idx < length) && ((idx - offset) < (sizeof(newname) - 1)))
					{
						newname[idx - offset] = cmdtext[idx];
						idx++;
					}
					newname[idx - offset] = EOS;
					if(!strlen(newname))
					{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /이름변경 [플레이어번호/이름의일부분] [새로운이름]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 닉네임 변경은 영어만 가능합니다. ex)이름_성");
						return 1;
					}
					format(string, sizeof(string), "%s님이 %s님의 이름을 %s로 바꾸셨습니다.", AdminName[playerid],RPPlayerName(giveplayerid),newname);
					SCMToAll(COLOR_ADMIN, string);
					new filename[64];
					format(filename, sizeof(filename), "user/%s.ini",giveplayer);
					fremove(filename);
					SetPlayerName(giveplayerid, newname);
				}
				else if(giveplayerid == INVALID_PLAYER_ID)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" %d님은 활동중인 유저가 아닙니다.", giveplayerid);
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 관리자가 아닙니다.");
			}
			return 1;
		}

		//---------------------------------------------[Kick]-----------------------------------------------------pArmysp
		if(strcmp(cmd, "/kick", true) == 0 || strcmp(cmd, "/킥", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /킥 [플레이어의번호/이름의부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /킥 [플레이어의번호/이름의부분] [이유]");
								return 1;
							}
							if(IsPlayerNPC(giveplayerid))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 엔피씨를 대상으로 킥이나 밴을 할 수 없습니다");
								return 1;
							}
							getdate(year, month, day);
							format(string, sizeof(string), "[%s] - Kick by [%s], (Case: %s) (%d-%d-%d)", giveplayer, AdminName[playerid], (result),month,day,year);//Log 에는 한글안남는다 일부러영어로바꿈
							KickLog(string);
							format(string, sizeof(string), "%s님이 %s님에 의해 킥되었습니다. (이유: %s)", giveplayer, AdminName[playerid], (result));
							SCMToAll(COLOR_ADMIN, string);
							Kick(giveplayerid);
							printf("%s", string);
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}





		if(strcmp(cmd, "/대상행동", true) == 0 || strcmp(cmd, "/mw", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /대상행동(mw) [플레이어의번호/이름의부분] [행동서술 (어떻게 한다. 로 끝나게)]");
					return 1;
				}
				if(PlayerInfo[playerid][pMuted] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
				return 1;
			}
				giveplayerid = ReturnUser(tmp);
					new Float:x;
					new Float:y;
					new Float:z;
					GetPlayerPos(playerid, x,y,z);
					if(!PlayerToPoint(10, giveplayerid, x, y, z))
					{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
					return 1;
					}//미친 커넥트에서 리턴하니까 안되지 ㅋㅋ;;; 이크 실수햇네
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /대상행동(mw) [플레이어의번호/이름의부분] [행동서술]");
								return 1;
							}
							format(string, sizeof(string), "* %s %s을 %s",sendername, giveplayer, result);
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							return 1;//아맞다
						}
					}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/노트", true) == 0 || strcmp(cmd, "/note", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /노트(note) [플레이어의번호/이름의부분] [내용]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
					new Float:x;
					new Float:y;
					new Float:z;
					GetPlayerPos(playerid, x,y,z);
					if(!PlayerToPoint(10, giveplayerid, x, y, z))
					{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에있어야만 사용이 가능합니다");
					return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /노트(note) [플레이어의번호/이름의부분] [내용]");
								return 1;
							}
							new stringding[264];
							format(string, sizeof(string), "* %s %s에게 노트를 건낸다.",sendername, giveplayer, result);
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							format(stringding, sizeof(stringding), " %s 건낸 노트에는 %s (이)라고 적혀있다.",sendername, result);
							SCM(giveplayerid, COLOR_ERROR, stringding);
							return 1;//아맞다
						}
					}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		//--------------------------------------[Ban]----------------------------------------------------
		if(strcmp(cmd, "/ban", true) == 0 || strcmp(cmd, "/영", true) == 0 || strcmp(cmd, "/영밴", true) == 0 || strcmp(cmd, "/영구밴", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/영)구밴 [플레이어의번호/이름의부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 6)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(gPlayerLogged[giveplayerid] == 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인 부터 해주셔야합니다");
								return 1;
							}
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/영)구밴 [플레이어의번호/이름의부분] [이유]");
								return 1;
							}
							if(IsPlayerNPC(giveplayerid))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 엔피씨를 대상으로 킥이나 밴을 할 수 없습니다.");
								return 1;
							}
							getdate(year, month, day);
							format(string, sizeof(string), "[%s] - Ban, (Case: %s) (%d-%d-%d)", giveplayer, AdminName[playerid], (result),month,day,year);
							BanLog(string);
							format(string, sizeof(string), "%s님이 %s님에 의해 영구밴 되셨습니다. (이유: %s)", giveplayer, AdminName[playerid], (result));
							SCMToAll(COLOR_ADMIN, string);
                            SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 카페 [밴 보고서] 게시판에 글을 올려주세요. 밴을 하면 증거물로 [F8] 스샷 찍어두세요.");
							//PlayerInfo[giveplayerid][pLevel] =-999;
							printf("%s", string);
							Ban(giveplayerid);
							new playersip[256];
							GetPlayerIp(giveplayerid, playersip, sizeof(playersip));
							format(string, 256, "banip %s", playersip);
							SendRconCommand(string);
							SendRconCommand("reloadbans");
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
//======================================================================================================================================================================
		if (strcmp(cmd, "/아밴해제", true)==0)
		{
		    if((IsPlayerAdmin(playerid)) || PlayerInfo[playerid][pAdmin] >=6)
		    {
		        tmp = strtok(cmdtext, idx);
		        if(!strlen(tmp))
				{
			        SCM(playerid, COLOR_ERROR, "사용법: /아디밴해제 (아이디)");
		            return 1;
			 	}
			 	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			 	GetPlayerName(playerid, sendername, sizeof(giveplayer));
			 	format(string, 256, " 어드민경고: %s 님이 %s 님의 아이디를 아밴해제 하셨습니다.", sendername, tmp);
			 	ABroadCast(COLOR_WHITE,string,1);
				format(string, 256, " 어드민경고: %s 님이 %s 님의 아이디를 아밴해제 하셨습니다.", sendername, tmp);
				printf(string);
				format(string,sizeof(string),"%s.ini",tmp);
				fremove(string);
				SCM(playerid, COLOR_ERROR, "플레이어가 밴해제 되었습니다.");
				SendRconCommand(string);
				SendRconCommand("reloadbans");
	   			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				PlayerInfo[giveplayerid][pLocked] = 0;
				PlayerUpdate();
						}
						return 1;
			}
		//--------------------------------------[Ban]----------------------------------------------------
		if(strcmp(cmd, "/아디밴") == 0 || strcmp(cmd,"/이름밴")==0 || strcmp(cmd,"/아밴")==0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /아디밴 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /아디밴 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							if(gPlayerLogged[giveplayerid] == 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
								return 1;
							}
							getdate(year, month, day);
							format(string, sizeof(string), "(관리자명령어) %s님이 %s님에 의해 아이디밴 되셨습니다. (이유: %s) (%d-%d-%d)",giveplayer,AdminName[playerid], (result),year,month,day);
							KickLog(string);
							format(string, sizeof(string), "(관리자명령어) %s님이 %s님에 의해 아이디밴 되셨습니다. (이유: %s)",giveplayer,AdminName[playerid], (result));
							SCMToAll(COLOR_ADMIN1, string);
							PlayerInfo[giveplayerid][pLocked] = 1;
							PlayerUpdate();

							Kick(giveplayerid);
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		//--------------------------------------[숫자칸트!!]----------------------------------------------------
				if(strcmp(cmd, "/불량닉") == 0 || strcmp(cmd,"/불량닉네임")==0 || strcmp(cmd,"/불닉")==0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /불닉 [플레이어번호]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /불닉 [플레이어번호]");
								return 1;
							}
							if(gPlayerLogged[giveplayerid] == 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
								return 1;
							}
							getdate(year, month, day);
							format(string, sizeof(string), "(관리자명령어) %s님이 불량닉네임의 이유로 아이디 밴 되셨습니다.",giveplayer,AdminName[playerid], (result),year,month,day);
							KickLog(string);
							format(string, sizeof(string), "(관리자명령어) %s님이 불량닉네임의 이유로 아이디 밴 되셨습니다.",giveplayer,AdminName[playerid], (result));
							SCMToAll(COLOR_ADMIN1, string);
							PlayerInfo[giveplayerid][pLocked] = 1;
							PlayerUpdate();

							Kick(giveplayerid);
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}
		
  //=====================================================================================================
		if(strcmp(cmd,"/카운트",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					if(COunt!=0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 카운트가 진행중입니다.");
						return 1;
					}
					new x_job[256];
					x_job = strtok(cmdtext, idx);
					if(!strlen(x_job)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /카운트 [시간초]");
						return 1; }
					if(strcmp(x_job,"1",true) == 0) {
						COunt = 1; }
					if(strcmp(x_job,"2",true) == 0) {
						COunt = 2; }
					if(strcmp(x_job,"3",true) == 0) {
						COunt = 3; }
					if(strcmp(x_job,"4",true) == 0) {
						COunt = 4; }
					if(strcmp(x_job,"5",true) == 0) {
						COunt = 5; }
					if(strcmp(x_job,"6",true) == 0) {
						COunt = 6; }
					if(strcmp(x_job,"7",true) == 0) {
						COunt = 7; }
					if(strcmp(x_job,"8",true) == 0) {
						COunt = 8; }
					if(strcmp(x_job,"9",true) == 0) {
						COunt = 9; }
					if(strcmp(x_job,"10",true) == 0) {
						COunt = 10; }
					if(strcmp(x_job,"11",true) == 0) {
						COunt = 11; }
					if(strcmp(x_job,"12",true) == 0) {
						COunt = 12; }
					if(strcmp(x_job,"13",true) == 0) {
						COunt = 13; }
					if(strcmp(x_job,"14",true) == 0) {
						COunt = 14; }
					if(strcmp(x_job,"15",true) == 0) {
						COunt = 16; }
					if(strcmp(x_job,"16",true) == 0) {
						COunt = 17; }
					if(strcmp(x_job,"17",true) == 0) {
						COunt = 18; }
					if(strcmp(x_job,"18",true) == 0) {
						COunt = 19; }
					if(strcmp(x_job,"19",true) == 0) {
						COunt = 19; }
					if(strcmp(x_job,"20",true) == 0) {
						COunt = 20; }
					if(strcmp(x_job,"21",true) == 0) {
						COunt = 21; }
					if(strcmp(x_job,"22",true) == 0) {
						COunt = 22; }
					if(strcmp(x_job,"23",true) == 0) {
						COunt = 23; }
					if(strcmp(x_job,"24",true) == 0) {
						COunt = 24; }
					if(strcmp(x_job,"25",true) == 0) {
						COunt = 25; }
					if(strcmp(x_job,"26",true) == 0) {
						COunt = 26; }
					if(strcmp(x_job,"27",true) == 0) {
						COunt = 27; }
					if(strcmp(x_job,"28",true) == 0) {
						COunt = 28; }
					if(strcmp(x_job,"29",true) == 0) {
						COunt = 29; }
					if(strcmp(x_job,"30",true) == 0) {
						COunt = 30; }
					//숫자더추가하면 아래더추가해야함 Countdown 이거

					COunt = strval(x_job);
					Countdown();
					new name[MAX_PLAYER_NAME];
					GetPlayerName(playerid,name,sizeof(name));
					format(string,sizeof(string),"%s 카운트다운을 시작하셨습니다",name);
					SCMToAll(COLOR_ADMIN,string);
				}
			}
			return 1;
		}
		//----------------------------------[Freeze]------------------------------------------------
		if(strcmp(cmd, "/freeze", true) == 0 || strcmp(cmd, "/얼림", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /얼림 [플레이어의번호/이름의부분]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if(PlayerInfo[playa][pAdmin] > 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 관리자는 얼릴 수 없습니다");
					return 1;
				}
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SetPlayerFreeze(playa, true, 1);
							TogglePlayerControllable(playa, 0);
							GameTextForPlayer(playa, "~r~Frozen", 5000, 3);
							format(string, sizeof(string), "%s님에 의해 당신은 얼었습니다.",AdminName[playerid]);
							SCM(playa, COLOR_ADMIN, string);
							format(string, sizeof(string), "%s님이 %s님을 얼렷습니다.",AdminName[playerid],giveplayer);
							ABroadCast(COLOR_ADMIN, string,1);
							printf("%s",string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

		//----------------------------------[unfreeze]------------------------------------------------
		if(strcmp(cmd, "/unfreeze", true) == 0 || strcmp(cmd, "/녹임", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /녹임 [플레이어의번호/이름의부분]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SetPlayerFreeze(playa, false, 0);
							TogglePlayerControllable(playa, 1);
							GameTextForPlayer(playa, "~w~Unfrozen", 5000, 3);
							format(string, sizeof(string), "%s 당신을 녹였습니다",AdminName[playerid]);
							SCM(playa, COLOR_ADMIN, string);
							format(string, sizeof(string), "%s님이 %s님을 녹였습니다 ",AdminName[playerid],  giveplayer);
							ABroadCast(COLOR_ADMIN, string,1);
							SetCameraBehindPlayer(playa);
							printf("%s",string);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}

        if (strcmp(cmd, "/도우미접속", true) == 0 || strcmp(cmd, "/도우미접", true) == 0 || strcmp(cmd, "/도접", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				SCM(playerid, COLOR_SUN, "━━━━ Newbe Team ━━━━");
				AP
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pNewbie] != 0)
						{
								format(string, 256, "%s", RPPlayerName(i));
								SCM(playerid, COLOR_ERROR, string);
						}
					}
				}
			}
			return 1;
   }
		//-------------------------------------------------------------------
		if (strcmp(cmd, "/성전환") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /성전환 [플레이어번호/이름의 부분] [남자/여자]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(3.0, playerid, giveplayerid))
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /성전환 [플레이어번호/이름의 부분] [남자/여자]");
									return 1;
								}
								if(giveplayerid == playerid) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자신에게 거세를 시도 할수는 없습니다"); return 1; }
								if(strcmp(tmp,"남자",true) == 0)
								{
									PlayerInfo[giveplayerid][pSex] = 1;
									GetPlayerName(playerid,playername,sizeof(playername));
									format(string,sizeof(string),"INFO : "#C_WHITE" %s 당신을 남자로 바꿔버렸습니다 ",RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
									GetPlayerName(giveplayerid,playername,sizeof(playername));
									format(string,sizeof(string),"INFO : "#C_WHITE" 당신은 %s(을)를 남자로 바꿔버렸습니다 ",RPPlayerName(giveplayerid));
									SCM(playerid, COLOR_ERROR, string);
								}
								else if(strcmp(tmp,"여자",true) == 0)
								{
									PlayerInfo[giveplayerid][pSex] = 2;
									GetPlayerName(playerid,playername,sizeof(playername));
									format(string,sizeof(string),"INFO : "#C_WHITE" %s 당신을 여자로 바꿔버렸습니다",RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
									GetPlayerName(giveplayerid,playername,sizeof(playername));
									format(string,sizeof(string),"INFO : "#C_WHITE" 당신은 %s(을)를 여자로 바꿔버렸습니다",RPPlayerName(giveplayerid));
									SCM(playerid, COLOR_ERROR, string);
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알맞지 않은 플레이어 입니다.");
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/알콜치료") == 0 || strcmp(cmd, "/알콜") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/알콜)치료 [플레이어번호/이름의 부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								giveplayerid = ReturnUser(tmp);
								//GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								//GetPlayerName(playerid, sendername, sizeof(sendername));
								SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 의사의도움으로 알콜에서 해독되었습니다");
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 환자를 해독시켰습니다");
								SetPlayerDrunkLevel (giveplayerid, 2000);
								Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
								Anim(giveplayerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의사가 아닙니다 ");
				}
			}
			return 1;
		}

			if(strcmp(cmd, "/차량수리", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMember] != 11)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정비사가 아닙니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /차량수리 [플레이어번호/플레이어이름] [가격]");
						return 1;
					}
					new playa;
					new money;
					playa = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					money = strval(tmp);
					if(money < 1 || money > 500) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 수리 가격은 1 - 500까지만 가능합니다"); return 1; }
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
							{
								if(playa == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 대상으로 수리할 수없습니다"); return 1; }
								GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 $%d의 금액으로 수리를 권유합니다",giveplayer,money);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 정비사 %s님이 $%d로 수리를 권유합니다. (/동의 차량수리)로 수락합니다",sendername,money);
								SCM(playa, COLOR_ERROR, string);
								RepairOffer[playa] = playerid;
								RepairPrice[playa] = money;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처가 아니거나 차에 타고 있지 않습니다");
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				return 1;
			}

			if(strcmp(cmd, "/기름충전", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMember] != 11)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정비사가 아닙니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /기름충전 [플레이어번호/플레이어이름] [리터] [가격]");
						return 1;
					}
					new playa;
					new money;
					playa = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					money = strval(tmp);
					if(money < 1 || money > 100) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 리터는 1 - 100 리터 사이여야합니다"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /기름충전 [플레이어번호/플레이어이름] [리터] [가격]");
						return 1;
					}
					new moneyss;
					moneyss = strval(tmp);
					if(moneyss < 1 || moneyss > 500) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 충전가격은 1 - 500 사이여야합니다"); return 1; }
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
							{
								if(playa == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 충전할 수없습니다"); return 1; }
								GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 $%d의 금액으로 %dL충전을 권유합니다",giveplayer,moneyss, money);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 정비사 %s님이 $%d로 %dL충전을 권유합니다. (/동의 주유)로 수락합니다",sendername,moneyss,money);
								SCM(playa, COLOR_ERROR, string);
								RefillOffer[playa] = playerid;
								RefillLiter[playa] = money;
								RefillPrice[playa] = moneyss;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처가 아니거나 차에 타고 있지 않습니다");
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				return 1;
			}

			if(strcmp(cmd, "/튜닝제거", true) == 0)
			{
				if(PlayerInfo[playerid][pMember] == 11)
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						new vehicleid = GetPlayerVehicleID(playerid);
						for(new ce=0;ce<17;ce++)
						{
							if(VehicleInfo[vehicleid][vTune][ce] != 0)
							{
								RemoveVehicleComponent(vehicleid, VehicleInfo[vehicleid][vTune][ce]);
								VehicleInfo[vehicleid][vTune][ce] = 0;
							}
						}
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모든 튜닝이 제거되었습니다.");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승하고 있지 않습니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정비사 사원이 아닙니다");
				}
				return 1;
			}
			if(strcmp(cmd, "/도색", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMember] == 11)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /도색 [플레이어의번호/이름의부분] [가격] [색상1] [색상2]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 도색권유를 할 수 없습니다 "); return 1; }
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /도색 [플레이어의번호/이름의부분] [가격] [색상1] [색상2]");
									return 1;
								}
								new price;
								price = strval(tmp);
								if(price < 0 || price > 1000) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가격은 $1 ~ $1000 까지만 가능합니다 "); return 1; }
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /도색 [플레이어의번호/이름의부분] [가격] [색상1] [색상2]");
									return 1;
								}
								new color1;
								color1 = strval(tmp);
								if(color1 < 0 || color1 > 255) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 색 번호는 0 에서 255 까지만 가능합니다 "); return 1; }
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /도색 [플레이어의번호/이름의부분] [가격] [색상1] [색상2]");
									return 1;
								}
								if(ProxDetectorS(10.0, playerid, giveplayerid))
								{
									new color2;
									color2 = strval(tmp);
									if(color2 < 0 || color2 > 255) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 색 번호는 0 에서 255 까지만 가능합니다 "); return 1; }
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									ChangePrice[giveplayerid] = price;
									ChangeColor1[giveplayerid] = color1;
									ChangeColor2[giveplayerid] = color2;
									ChangeColorOffer[giveplayerid] = playerid;
									format(string, sizeof(string), " 당신은 %s 님에게 차량도색 색1[%d], 색2[%d], 가격 $%d에 권유하였습니다",giveplayer,color1,color2,price);
									SCM(playerid, COLOR_ACT, string);
									format(string, sizeof(string), " 차량정비사 %s 님이 당신에게 차량도색 색1[%d], 색2[%d], 가격 $%d에 권유하였습니다",sendername,color1,color2,price);
									SCM(giveplayerid, COLOR_ACT, string);
									SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 도색을 하시려면 (/동의 도색)을 입력하세요");
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 근처에 없습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정비사 사원이 아닙니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인부터 해야 합니다");
				}
				return 1;
			}

			if(strcmp(cmd, "/피핵", true) == 0 || strcmp(cmd, "/뇌폭파", true) == 0)
			 {
			     if(IsPlayerConnected(playerid))
			     {
			   tmp = strtok(cmdtext, idx);
			   if(!strlen(tmp))
			   {
			    SendClientMessage(playerid, COLOR_GRAD2, "사용법: /피핵 [플레이어의번호/이름의부분]");
			    return 1;
			   }
			   new playa;
			   playa = strval(tmp);
			   if (PlayerInfo[playerid][pAdmin] >= 1)
			   {
			       if(IsPlayerConnected(playa))
			       {
			           if(playa != INVALID_PLAYER_ID)
			           {
			               new Float:x,Float:y,Float:z;
			               GetPlayerPos(playa,x,y,z);
			      CreateExplosion(x, y, 2 + z, 12, 0.0);
			     }
			    }
			   }
			   else
			   {
			    SendClientMessage(playerid, COLOR_RED, " 관리자가 아닙니다.");
			   }
			  }
			  return 1;
			 }

		if(strcmp(cmd, "/시민직", true) == 0)
		{
		if(IsPlayerConnected(playerid))
		{
		    ClearChatbox(playerid, 10);
			SCM(playerid, COLOR_SUC,"합법직업 : [피자 배달부] [트럭기사]");
		}
		return 1;
		}
		if(strcmp(cmd, "/전화번호부", true) == 0)
		{
			if(PlayerInfo[playerid][pPhoneBook] == 1)
			{
				ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "전화번호부", "번호등록\n번호삭제\n번호보기", "열기", "닫기");
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 전화번호부를 가지고 있지 않습니다");
			}
			return 1;
		}
		if(strcmp(cmd, "/0000", true) == 0)
		{
			ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
			return 1;
		}
		if(strcmp(cmd, "/직업", true) == 0 || strcmp(cmd, "/직업도움말", true) == 0)
		{
			SCM(playerid,COLOR_SUN,"━━━━━━━━━━━━━━━");
			if (PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pJob] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 직업 리스트는 (/시민직)으로 열람할 수 있습니다");
			}
			if (PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
			{
				SCM(playerid, COLOR_ERROR,"(공통) /f /리더복 /팸문열기(/og) /무전모드(/rm) /직원접");//ㅇ
			}
			if(PlayerInfo[playerid][pJob] == 3) {
			SCM(playerid,COLOR_ERROR,"(피자배달부) /배달시작 /배달중지 /택배도움말"); }
			if(PlayerInfo[playerid][pJob] == 4) {
			SCM(playerid,COLOR_ERROR,"(마약판매상) /주기 /얻기 /불법지도"); }//
			if(PlayerInfo[playerid][pJob] == 20) {
			SCM(playerid,COLOR_ERROR,"(택시기사) /운임비 (/방)송(버스시 광고)  [운임비]"); }//
			if(PlayerInfo[playerid][pJob] == 5) {
			SCM(playerid,COLOR_ERROR,"(노점상인) /장사 /판매 /얻기 /주머니 /노점도움말"); }
			if(PlayerInfo[playerid][pJob] == 6) {
			SCM(playerid,COLOR_ERROR,"(총기상) /얻기 /가공 /총기판매 /불법지도 /밀수도움말"); }
			if(PlayerInfo[playerid][pJob] == 11) {
			SCM(playerid,COLOR_ERROR,"(농부) /얻기 /판매 /심기 /수확 /주머니 /제작 /농부도움말"); }
			if(PlayerInfo[playerid][pJob] == 12) {
			SCM(playerid,COLOR_ERROR,"(어부) /낚시 /물고기 /판매 /번호놔주기 /모두놔주기 /어부도움말"); }//
			if(PlayerInfo[playerid][pJob] == 13) {
			SCM(playerid,COLOR_ERROR,"(트럭기사) /트럭시작 /트럭중지 /트럭도움말"); }//
			if(PlayerInfo[playerid][pJob] == 16) {
			SCM(playerid,COLOR_ERROR,"(환경미화원) /청소시작 /청소중지 /청소도움말"); }//
			if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
			{
				SCM(playerid, COLOR_ERROR, "(L.V.P.D) /무기면허발급 (/부)서말 (/확)성기 (/용)의자 (/신)원조회 /체포 /업무 /수갑 /수갑풀기 /풀기 /안전상");
				SCM(playerid, COLOR_ERROR, "(L.V.P.D) /수색 /가방수색 /회수 /벌금 /공고 /해머 /스왓 /뱃보 /콩밥");
				SCM(playerid, COLOR_ERROR, "(L.V.P.D) /경찰특공대(/경특) /고위급업무(/고업) /CK");
				SCM(playerid, COLOR_ERROR, "(L.V.P.D) (/테)이저건 (/덮)치기 (/응)급 /벌점(제거) ");
				SCM(playerid, COLOR_ERROR, "(L.V.P.D) /전과삭제 /지원(/bk) /지원끝(/bkc) /음주측정 /사복 /추적 /석방 /형벌 /견인 /감확");
				SCM(playerid, COLOR_ERROR, "(L.V.P.D) (/착용 방패) /영장 /영장보 /사이렌 /사이렌제거 [불법주차 검거: /차 주차] /전과수정 (추가중50%:/패키지[/패키지넣기./패키지꺼냄]");
			}
			if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
				SCM(playerid, COLOR_ERROR, "(F.B.I) (/부)서말 (/확)성기 (/용)의자 (/신)원조회 /체포 /수갑 /수갑풀기 /풀기 (/덮)치기 /추적 /석방 /형벌");
				SCM(playerid, COLOR_ERROR, "(F.B.I) /수색 /회수 /벌금 /공고 /해머 /추적 /신분증보(/신보) /가방수색 /가명보(가짜명함) (/테)이저건 (/응)급");
				SCM(playerid, COLOR_ERROR, "(F.B.I) /fbi무장 /무전 /음주측정 /FBI잠복(끝) /전과삭제 /감확 /bk /bkc /네임테그");
			}
			if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
			{
				SCM(playerid, COLOR_ERROR, "(CIA) /카드 (/부)서말 (/용)의자 /음주측정 (/신)원조회 /체포 /수갑 /수갑풀기 /풀기 (/덮)치기");
				SCM(playerid, COLOR_ERROR, "(CIA) /수색 /가방수색 /회수 /벌금 /공고 /해머 /전과삭제 (/테)이저건");
				SCM(playerid, COLOR_ERROR, "(CIA) /카메라 (/응)급 /CIA감형");
			}
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
				SCM(playerid, COLOR_ERROR, "(EMT) /포도당주사 /업무 (/응)급 (/알콜)치료 /추적 /EMT");
				SCM(playerid, COLOR_ERROR, "(EMT) /몸검사 /성전환 /알약판매 /의료자격증발급 /입원");
			}
			if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
			{
				SCM(playerid, COLOR_ERROR, "(로코츠) (/spa)스페인언어 /뺏기 /수금시작 /털기 /문신보 /가방수색");
			}
			if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
			{//Corleone Family (Mafia)
				SCM(playerid, COLOR_ERROR, "(Capone Crime Family) (/ita)이태리언어 /뺏기 /문신보 /수금시작 /털기 /가방수색");
			}
			if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7)
			{
				SCM(playerid, COLOR_ERROR, "(Government) /업무 /재산 /세금 /추적 /덮 /테 /백악관무장");
			}
			if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
				SCM(playerid,COLOR_ERROR,"(Payday) /추적 /은신 /의뢰확인 /og /네임테그 ");
				SCM(playerid,COLOR_ERROR,"(Payday) /가명보 /정보 /사광 /가방수색");
				SCM(playerid,COLOR_ERROR,"(Payday) Payday는 정부군 기능이 전부 가능하게 되었습니다.");
			}
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
				SCM(playerid,COLOR_ERROR, "(Studio) (/케)이블광고 /라이브 /자막 /라디오방송 /뉴스 [할말] /취재 /게시판");
			}
			if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11)
			{
				SCM(playerid,COLOR_ERROR, "(하이카) /업무 /차량수리 /튜닝제거 /기름충전 /도색 /금고 /도색도움말 /네온");
			}
			if(PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12)
			{
				SCM(playerid, COLOR_ERROR, "(크립스) /뺏기  /문신보 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pMember] == 13)
			{
				SCM(playerid, COLOR_ERROR, "(North Side Nortenos X4) /뺏기 /문신보 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14)
			{
				SCM(playerid, COLOR_ERROR, "(Dokugawa Kai) (/jap)일본어 /문신보 /뺏기 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15)
			{
				SCM(playerid, COLOR_ERROR, "(三合會) (/chs)중국어 /문신보 /뺏기 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pMember] == 16)
			{
				SCM(playerid, COLOR_ERROR, "(세빌) /뺏기 /수금시작 /문신보 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 17 || PlayerInfo[playerid][pMember] == 17)
			{
				SCM(playerid, COLOR_ERROR, "(블러드) /뺏기 /수금시작 /문신보 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pMember] == 18)
			{
				SCM(playerid, COLOR_ERROR, "(해태그룹) (/kor)한국어 /문신보 /뺏기 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pMember] == 19)
			{
				SCM(playerid, COLOR_ERROR, "( T.F.O.A 9) /문신보 /뺏기 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 20)
			{
				SCM(playerid, COLOR_ERROR, "(LC HIT) /업무 /확성기 /가명보 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 21 || PlayerInfo[playerid][pMember] == 21)
			{
				SCM(playerid, COLOR_ERROR, "(C.D) (/무)전 /공고 /건물생성 /건물삭제 /삽조립");
				}
			if(PlayerInfo[playerid][pLeader] == 22 || PlayerInfo[playerid][pMember] == 22)
			{
				SCM(playerid, COLOR_ERROR, "(칠성파) (/kor)한국어 /문신보 /뺏기 /수금시작 /털기 /가방수색 /지갑찾기");
			}
  			if(PlayerInfo[playerid][pLeader] == 23 || PlayerInfo[playerid][pMember] == 23)
			{
				SCM(playerid, COLOR_ERROR, "(동성로) /뺏기 /수금시작 /문신보 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 24 || PlayerInfo[playerid][pMember] == 24)
			{
				SCM(playerid, COLOR_ERROR, "(NGS) /뺏기 /밀수배 /문신보 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 25 || PlayerInfo[playerid][pMember] == 25)
			{
				SCM(playerid, COLOR_ERROR, "(大命會) /뺏기 /문신보 /수금시작 /털기 /가방수색 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 26 || PlayerInfo[playerid][pMember] == 26)
			{
				SCM(playerid, COLOR_ERROR, "(교회) /공 /헌금 /헌금창고(추가예정).");
			}
			if(PlayerInfo[playerid][pLeader] == 27 || PlayerInfo[playerid][pMember] == 27)
			{
				SCM(playerid, COLOR_ERROR, "(신(新)종로파) /뺏기 /문신보 /수금시작 /가방수색 /털기 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 28 || PlayerInfo[playerid][pMember] == 28)
			{
				SCM(playerid, COLOR_ERROR, "(N.D.F) /털기 /뺏기 /문신보 /수금시작 /가방수색 /털기 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 29 || PlayerInfo[playerid][pMember] == 29)
			{
				SCM(playerid, COLOR_ERROR, "(업타운) /털기 /뺏기 /문신보 /수금시작 /가방수색 /털기 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 30 || PlayerInfo[playerid][pMember] == 30)
			{
				SCM(playerid, COLOR_ERROR, "(MS - 13) /털기 /뺏기 /문신보 /수금시작 /가방수색 /털기 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 31 || PlayerInfo[playerid][pMember] == 31)
			{
				SCM(playerid, COLOR_ERROR, "(대북파) /털기 /뺏기 /문신보 /수금시작 /가방수색 /털기 /지갑찾기");
			}
			if(PlayerInfo[playerid][pLeader] == 36 || PlayerInfo[playerid][pMember] == 32)
			{
				SCM(playerid, COLOR_ERROR, "(정부용병) (/부)서말 (/확)성기 (/용)의자 (/신)원조회 /체포 /업무 /수갑 /수갑풀기 /풀기 /안전상 /추적");
				SCM(playerid, COLOR_ERROR, "(정부용병) (/테)이저건 (/덮)치기 (/응)급 /벌점(제거)");
				SCM(playerid, COLOR_ERROR, "(정부용병) (/지원(/bk) /지원끝(/bkc) /사복 /추적 /감확");
				SCM(playerid, COLOR_ERROR, "(정부용병) (/착용 방패) /영장 /영장보 /사이렌 /사이렌제거  ");
			}
			if(PlayerInfo[playerid][pLeader] == 33 || PlayerInfo[playerid][pMember] == 33)
			{
				SCM(playerid, COLOR_INFO1, "(Air Line) /비행면허발급 /(덮)치기 /(확)성기 /(테)이저건 /(부)서말 /(긴)급");
			}
			if(PlayerInfo[playerid][pLeader] == 34 || PlayerInfo[playerid][pMember] == 34)
			{
				SCM(playerid, COLOR_ERROR, "(현대건설) (/무)전 /공고 /건물생성 /건물삭제 /삽조립 ");
			}
			if(PlayerInfo[playerid][pLeader] == 35 || PlayerInfo[playerid][pMember] == 35)
			{
				SCM(playerid, COLOR_ERROR, "(요리사) /요리만들기 /요리주기 ");
			}
		    if(PlayerInfo[playerid][pLeader] == 36 || PlayerInfo[playerid][pMember] == 36)
			{
				SCM(playerid, COLOR_ERROR, "[대학교] /공고 /리더복 /수업시작 /수업종료 ");
			}
			if(PlayerInfo[playerid][pLeader] == 37 || PlayerInfo[playerid][pMember] == 37)
			{
				SCM(playerid, COLOR_ERROR, "[레이서] /공고 /리더복 /레이스시작 /레이스카운트 /레체포[체크포인트]");
			}
			if(PlayerInfo[playerid][pLeader] == 38 || PlayerInfo[playerid][pMember] == 38)
			{
				SCM(playerid, COLOR_ERROR, "[교도관] /공고 /업무 /추적 /리더복");
			}
			if(PlayerInfo[playerid][pFMember] != 255)
			{
				format(string, sizeof(string), "(%s) 무전 /f ", FamilyInfo[playerid][FamilyName]);
				SCM(playerid, COLOR_ERROR,string);
			}
			return 1;
		}
		if(strcmp(cmdtext,"/회사업무",true)==0)
		{
			if(PlayerInfo[playerid][pLeader] == 28 || PlayerInfo[playerid][pMember] == 28)
			{
			    SCM(playerid,COLOR_GREY,"INFO : "#C_WHITE" N.D.F가 아닙니다 .");
			    return 1;
			}

			return 1;
		}
  		if (strcmp(cmd, "/잠수목록", true) == 0)
		{
		    if (PlayerInfo[playerid][pAdmin] < 1) return 1;
		    SendClientMessage(playerid, COLOR_WHITE, "잠수유저목록:");
		    for (new a = 0; a < PLAYERS; a++)
		    {
		        if (Sibsaki[a] == true && IsPlayerConnected(a))
		        {
		            format(string, sizeof(string), "잠수플레이어 : 번호[%d] 아이디[%s]", a, GetName(a));
		            SendClientMessage(playerid, COLOR_WHITE, string);
		        }
	         	if (!IsPlayerConnected(a) || !gPlayerLogged[a]) Sibsaki[a] = false;
	        }
	        return 1;
	    }
		if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
                GetPlayerName(playerid, sendername, sizeof(sendername));
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					SCM(playerid, COLOR_GREY,"[1 : 초급어드민] /a /관리업무 /모두저장 /계정완료 /강제튜토 /관리자응급 /피핵도움말 /시동 [업무시]");
         			SCM(playerid, COLOR_GREY,"[1 : 초급어드민] /답 /위성 /위성끄기 /로산 /텔레포트 /인테리어 /현실세계 /플리");
					SCM(playerid, COLOR_GREY,"[1 : 초급어드민] /주의 /얼림 /녹임 /어드전 /킥 /드모 /아밴 /경고 /스킨변경 /귓말감시");
				}
				if (PlayerInfo[playerid][pAdmin] >= 2)
				{
                    SCM(playerid, COLOR_GREY,"[2 : 중급어드민] /주머니검사 /차검사 /검사 /총검사 /자격증검사 /가방검사 /경고차감");
                    SCM(playerid, COLOR_GREY,"[2 : 중급어드민] /영밴 /총회수 /차수리 /차리스폰 /차로 /차량소환 /체력 /아머");
				}
				if (PlayerInfo[playerid][pAdmin] >= 3)
				{
					SCM(playerid, COLOR_GREY,"[3 : 정식어드민] /자격 /모든차기름 /모든차리스폰 /카운트 /칭찬 /칭찬차감 /시간설정 /날씨설정 /공지 /noooc /nonewb ");
					SCM(playerid, COLOR_GREY,"[3 : 정식어드민] /차폐차 ");
				}
				if (PlayerInfo[playerid][pAdmin] >= 4)
				{
					SCM(playerid, COLOR_GREY,"[4 : 팩션관리자]/리더 /무직 /무기 /귀 /팩션삭제 /팩션추가");
					SCM(playerid, COLOR_GREY,"[4 : 팩션관리자]/관리도색 /이름변경 /타투변경 /리더 [유저 /팩션관리]");
				}
				if (PlayerInfo[playerid][pAdmin] >= 5)
				{
					SCM(playerid, COLOR_GREY,"[5 : 모드메이커] /좌표설정 /모든바리제거 /모든광고판제거 /모든장사제거");
				}
				if (PlayerInfo[playerid][pAdmin] >= 6)
				{
					SCM(playerid, COLOR_GREY,"[6 : 서버돌리미] /밴해제 /밴추가 /아밴해제 /이벤트주사위 /리붓");
				}
				if (PlayerInfo[playerid][pAdmin] >= 7)
				{
					SCM(playerid, COLOR_GREY,"[7 : 부총어드민]/정보수정 /도우미임명 /건물생성 /대학생임명 /프리미엄");
					SCM(playerid, COLOR_GREY,"[7 : 부총어드민]/돈회수 /정보수정 /돈주기 /건물생성 /차소환");
				}
				if (PlayerInfo[playerid][pAdmin] >= 8)
				{
					SCM(playerid, COLOR_GREY,"[8 : 대총어드민]/돈주기 /돈회수 /정보수정 /건물생성 /도우미임명 /이벤트 /noadmin");
					SCM(playerid, COLOR_GREY,"[8 : 대총어드민]/계정삭제 /도우미임명(뉴비팀) /페이 /급료설정 /프리미엄 /정보수정");
				}
				if (strcmp(sendername, "Orton_Nick", true) == 0)
				{
				SCM(playerid, COLOR_WHITE,"[초기화이벤트]/이벤트 [플레이어번호]");
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/관리도색",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						new x_job[256];
						x_job = strtok(cmdtext, idx);
						if(!strlen(x_job))
						{
							SCM(playerid, COLOR_HINT,""#C_RED"(INFO) "#C_LBLUE" /관리도색 [도색번호 1~8]");
							SCM(playerid,COLOR_HINT,"(번호) [1=살색] [2=박하색] [3=밝은빨강] [4=자주색] [5=하늘색] [6=검은색] [7=흰색] [8=연두]");
						return 1;
						}
						if(strcmp(x_job,"1",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=131;//살색
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=131;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 131, 131);
						}
						if(strcmp(x_job,"2",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=144;//박하
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=144;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 144, 144);
						}
						if(strcmp(x_job,"3",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=166;//밝은빨강
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=166;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 166, 166);
						}
						if(strcmp(x_job,"4",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=186;//자주색
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=186;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 186, 186);
						}
						if(strcmp(x_job,"5",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=184;//하늘색
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=184;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 184, 184);
						}
						if(strcmp(x_job,"6",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=0;//검은색
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=0;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 0);
						}
						if(strcmp(x_job,"7",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=1;//흰색
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=1;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 1, 1);
						}
						if(strcmp(x_job,"8",true) == 0)
						{
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=182;//연두색
							VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=182;
							ChangeVehicleColor(GetPlayerVehicleID(playerid), 182, 182);
						}
					}
					else
					{
						SCM(playerid, COLOR_ERROR, "(에러) 차량에 탑승하시기 바랍니다.");
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/리",true)==0||strcmp(cmd,"/리스폰",true)==0||strcmp(cmd,"/플리",true)==0||strcmp(cmd,"/플레이어리스폰",true)==0)
		{
		    if(PlayerInfo[playerid][pAdmin] == 0)
			{
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 관리자가 아닙니다");
				return 1;
			}
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /플리 [플레이어의번호/이름의부분]");
					return 1;
				}
				new givep;
				givep = ReturnUser(tmp);
				if(IsPlayerConnected(givep))
				{
					OnPlayerSpawn(givep);
					GetPlayerName(givep, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, 256, "(관리자명령어) %s님이 %s님을 리스폰 시켰습니다.", AdminName[playerid],giveplayer);
					ABroadCast(COLOR_ADMIN,string,1);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/리붓", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 6)
				{
					xhlwkdTlqkf=1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string),"%s님이 서버를 리붓중입니다. 잠시만 기다려주세요. ", AdminName[playerid]);
					OOCOff(COLOR_ADMIN,string);
					GameTextForAll("L I L Y R E B O T !~n~~n~~r~Please Wait ....",15000,3);
					restart=true;
					SendRconCommand("gmx");
					printf("%s",string);
				}
			}
			return 1;
		}
        if(strcmp(cmd, "/털기", true) == 0)
	    {
        if(PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53))//
		{
        if(IsAMember(playerid))//
		{
		if(rkdehwlf[playerid] != 0)
		{
			SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 이미 강도질을 하고있습니다");
			return 1;
		}
		if(PlayerInfo[playerid][pLevel] < 3)
		{
		    SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 신용이 '3' 이상이 아니라 불가능합니다.");
		    return 1;
		}
		if(PlayerInfo[playerid][pCarTime2] != 0)
		{
			format(string, sizeof(string), "(정보) "#C_WHITE" 이 명령어는 %d초 후 사용할 수 있습니다.", PlayerInfo[playerid][pCarTime2]);
			SCM(playerid, COLOR_ERROR, string);
			return 1;
		}
	 		Anim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0); // Rob
			GetPlayerName(playerid, sendername, sizeof(sendername));
			SCM(playerid, COLOR_WHITE2, " ");
	  		AttachObjectCorrectly(playerid, 1550);
			format(string,sizeof(string), "* %s 이(가) 편의점 직원을 협박한다.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SCM(playerid, COLOR_ADMIN, "지금부터 [키보드 : 스페이스바] 타이핑 50회를 연타해주세요!!");
			format(string, sizeof(string), " * Radio ", sendername);
			SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			WantedPoints[playerid]+=3;
			SetPlayerCriminal(playerid,255, " 24/7 편의점 털이 ");
			rkdehwlf[playerid] = 1;
	  		TogglePlayerControllable(playerid, 0);
		}
		else
		{
  			SCM(playerid, COLOR_GREY, "(정보) 당신은 갱/조직이 아닙니다.");
		}
		}
		else
		{
  			SCM(playerid, COLOR_GREY, "(정보) 당신은 '24/7' 에 있지 않습니다.");
		}
		return 1;
	}
		if(strcmp(cmd, "/모든광고판제거", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				for(new i=0; i<M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(rhkdslot1[i] != 0) RemoveAD(i);
						if(rhkdslot2[i] != 0) RemoveAD2(i);
						if(rhkdslot3[i] != 0) RemoveAD3(i);
					}
				}
				SCM(playerid, COLOR_ADMIN, "모든 광고판이 제거되었습니다");
			}
			return 1;
		}
		if(strcmp(cmd, "/모든바리제거", true) == 0)
		{
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				for(new i=0; i<M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						RemoveRoadblock2();
					}
				}
				SCM(playerid, COLOR_ADMIN, "모든 바리게이트가 제거되었습니다");
			}
			return 1;
		}
		//----------------------------- Gravity -------------------------------------------
		if(strcmp(cmd,"/stopani",true)==0 || strcmp(cmd,"/정상",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				ClearAnimations(playerid);
				if(UsingSmokeAnim[playerid] == 1)
				{
					UsingSmokeAnim[playerid] = 0;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/기술",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "스킬 정보");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /기술 [번호]");
					SCM(playerid, COLOR_ERROR, "[1]:낚시꾼");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				else if(strcmp(x_nr,"1",true) == 0)//Fishing
				{
					new level = PlayerInfo[playerid][pFishSkill];
					if(level >= 0 && level <= 50) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 낚시 스킬 = 1"); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up", 50 - level); SCM(playerid, COLOR_WHITE, string); }
					else if(level >= 51 && level <= 250) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 낚시 스킬 = 2"); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up", 250 - level); SCM(playerid, COLOR_WHITE, string); }
					else if(level >= 251 && level <= 500) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 낚시 스킬 = 3"); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up", 500 - level); SCM(playerid, COLOR_WHITE, string); }
					else if(level >= 501 && level <= 999) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 낚시 스킬 = 4"); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up", 1000 - level); SCM(playerid, COLOR_WHITE, string); }
					else if(level >= 1000) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 낚시 스킬 = Master(5)"); }
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 기술번호 입니다");
					return 1;
				}
			}
			return 1;
		}
		    if(strcmp(cmd, "/팩션관리", true) == 0)//이게 다 기능
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFMember] == 255)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   당신은 팩션을 가지고있지 않습니다.");
	            return 1;
	        }
	        new family = PlayerInfo[playerid][pFMember];
	        new wstring[128];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s", sendername);
			strmid(wstring, string, 0, strlen(string), 255);
	        if(strcmp(FamilyInfo[family][FamilyLeader],wstring, true ) == 0 )
			{
			    new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션관리 [이름]");
					return 1;
				}
			    if(strcmp(x_nr,"이름",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{//조직원 제한도잇어 10명
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
				    }
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 이름 [팩션 이름]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyName], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 조직의 이름을 변경했습니다.");
				}
				else if(c_strcmp(tmp,"차량"))
				{
					new x3[128];
					x3 = strtok(cmdtext, idx);
					if(!strlen(x3))
					{
					    SendClientMessage(playerid,COLOR_HINT,""#C_SUC"System :"#C_WHITE" /팩션 설정 차량 [이름]");
					    SendClientMessage(playerid,COLOR_HINT,""#C_SUC"System :"#C_WHITE" 등록 등록해제");
					    return 1;
					}
					if(c_strcmp(x3,"등록"))
					{
			    		tmp=strtok2(cmdtext,idx);
			    		if(!strlen(tmp))
			    		{
			    		    SCM(playerid, COLOR_HINT, ""#C_SUC"System :"#C_WHITE" /팩션 설정 차량 등록 [등록차량 번호판]");
			    		    return 1;
			    		}
						AP
						{
							if(IsPlayerConnected(i))
							{
							    if(PI(i,pFMember) == PI(playerid,pFMember))
								{
									for(new hc=0;hc<MAX_HVCAR;hc++)
									{
										if(c_strcmp(PVSign[i][hc],tmp)==1)
										{
											new v = PlayerVeh[i][hc];
											VehicleInfo[v][vFaction] = 1;
											return SCM(playerid, COLOR_INFO, ""#C_SUC"System :"#C_WHITE" 팩션차량이 등록 되었습니다.");
										}
									}
								}
							}
						}
						return SCM(playerid, COLOR_INFO, ""#C_SUC"System :"#C_WHITE" 팩션차량 등록에 실패했습니다.");
					}
					if(c_strcmp(x3,"등록해제"))
					{
                        tmp=strtok2(cmdtext,idx);
			    		if(!strlen(tmp))
			    		{
			    		    SCM(playerid, COLOR_HINT, ""#C_SUC"System :"#C_WHITE" /팩션 설정 차량 등록해제 [등록차량 번호판]");
			    		    return 1;
			    		}
						AP
						{
							if(IsPlayerConnected(i))
							{
							    if(PI(i,pFMember) == PI(playerid,pFMember))
								{
									for(new hc=0;hc<MAX_HVCAR;hc++)
									{
										if(c_strcmp(PVSign[i][hc],tmp)==1)
										{
											new v = PlayerVeh[i][hc];
											VehicleInfo[v][vFaction] = 0;
											return SCM(playerid, COLOR_INFO, ""#C_SUC"System :"#C_WHITE" 팩션차량이 등록해제 되었습니다.");
										}
									}
								}
							}
						}
						return SCM(playerid, COLOR_INFO, ""#C_SUC"System :"#C_WHITE" 팩션차량 등록해제에 실패했습니다.");
					}
				}
				else if(strcmp(x_nr,"공지",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 공지 [팩션 공지사항]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 팩션의 공지를 수정했습니다.");
				}
				else if(strcmp(x_nr,"스폰지역",true) == 0)
				{
				    GetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
				    GetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
				    FamilyInfo[family][FamilyInterior] = GetPlayerInterior(playerid);
				    SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 이제 이곳이 리스폰 지역입니다.");
				}
				else if(strcmp(x_nr,"초대",true) == 0)
				{
				    if(FamilyInfo[family][FamilyMembers] >= 10)
				    {
				        SendClientMessage(playerid, COLOR_GREY, " 조직원이 너무 많습니다. (제한 10명)");
				        return 1;
				    }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션관리 초대 [플레이어 번호/이름]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != 255)
					        {
					            SendClientMessage(playerid, COLOR_GREY, " 그 플레이어는 당신의 조직원이 아닙니다.");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* %s 이(가) 당신을 \"%s\"조직에 초대했습니다.",giveplayer, FamilyInfo[family][FamilyName]);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* 당신은 %s를  \"%s\"조직에 초대했습니다.",sendername, FamilyInfo[family][FamilyName]);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = family;
					        PlayerInfo[giveplayerid][pRank] = 1;
					        FamilyInfo[family][FamilyMembers] ++;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, " 그 플레이어는 오프라인입니다.");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"해고",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션관리 해고 [플레이어 번호/이름]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, " 그 플레이어는 당신의 조직원이 아닙니다.");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* 당신은 %s를 조직에서 추방시켰습니다.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* %s 이(가) 조직에서 당신을 추방했습니다.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = 255;
					        PlayerInfo[giveplayerid][pRank] = 0;
					        FamilyInfo[family][FamilyMembers] --;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, " 그 플레이어는 오프라인입니다.");
					    return 1;
					}
				}

				else if(strcmp(x_nr,"랭크1",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 랭크1 [계급명]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyRankName1], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 1번랭크를 수정했습니다.");
				}
				else if(strcmp(x_nr,"랭크2",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 랭크2 [계급명]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyRankName2], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 2번랭크를 수정했습니다.");
				}
				else if(strcmp(x_nr,"랭크3",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 랭크3 [계급명]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyRankName3], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 3번랭크를 수정했습니다.");
				}
				else if(strcmp(x_nr,"랭크4",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 랭크4 [계급명]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyRankName4], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 4번랭크를 수정했습니다.");
				}
				else if(strcmp(x_nr,"랭크5",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 랭크5 [계급명]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyRankName5], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 5번랭크를 수정했습니다.");
				}
				else if(strcmp(x_nr,"랭크6",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, " 사용법: /팩션관리 랭크6 [계급명]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyRankName6], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, " 6번랭크를 수정했습니다.");
				}

				else if(strcmp(x_nr,"계급",true) == 0)//ㅇㅋ완료
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션관리 계급 [계급] [플레이어 번호/이름]");
					    return 1;
					}
					new rank = strval(tmp);
					if(rank < 1 || rank > 6) { SendClientMessage(playerid, COLOR_GREY, "   계급은 1이상 6이하만 가능합니다. !"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션관리 계급 [계급] [플레이어 번호/이름]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   그사람은 당신의 조직원이 아닙니다.");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* 당신은 %s에게 %d의 계급을 부여했습니다.",giveplayer,rank);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* %s 이(가) 당신에게 %d의 계급을 부여헀습니다.",sendername,rank);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pRank] = rank;
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, " 그 플레이어는 오프라인입니다.");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, " 가능한 이름이 아닙니다.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   당신은 조직의 리더가 아닙니다.");
			    return 1;
			}
	    }
	    return 1;
	}
    if(strcmp(cmd, "/팩션추가", true) == 0)//
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션추가 [팩션 번호] [플레이어 번호/이름]");
					return 1;
				}//제한 몇개로둘꺼?255가 최대임 15
				new family = strval(tmp);
				if(family < 1 || family > 15) { SendClientMessage(playerid, COLOR_GREY, "   팩션 번호는 1이상 15이하만 가능합니다."); return 1; }
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션추가 [팩션 번호] [플레이어 번호/이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(FamilyInfo[family][FamilyTaken] == 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, " 이미 추되있는 팩션입니다.");
				            return 1;
				        }
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), " 당신은 %s에게 %d번 팩션을 부여했습니다.",giveplayer,family);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
       				 	format(string, sizeof(string), " 어드민 %s 이(가) 당신을 팩션의 리더로 받았습니다.",sendername);
			        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "%s",giveplayer);
				        strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
				        FamilyInfo[family][FamilyMembers] ++;
				        FamilyInfo[family][FamilyTaken] = 1;
				        PlayerInfo[giveplayerid][pFMember] = family;
				        PlayerInfo[giveplayerid][pRank] = 6;
				        SaveFamilies();
				    }
				}
				else
				{
                    SendClientMessage(playerid, COLOR_GREY, " 그 플레이어는 오프라인입니다.");
                    return 1;
				}
	        }
	        else
	        {
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/팩션삭제", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)//이거 하면 Torta부터 만들어주길ㅋㅋㅋㅋ 진짜 1번이 토르타아니면 나 박칠꺼ㅇ팩션 기능
	        {//이거
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, " 사용법: /팩션삭제 [팩션 번호]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 15) { SendClientMessage(playerid, COLOR_GREY, "   팩션 번호는 1이상 15이하만 가능합니다.!"); return 1; }
				family -= 0;
				if(FamilyInfo[family][FamilyTaken] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   없는 팩션 번호입니다.");
				    return 1;
				}
				ClearFamily(family);
				SaveFamilies();
	        }
	        else
	        {
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/팩션", true) == 0)
	{//이게 왜안돼 /팩션주기 이거 계급 4로해노ㅑㅏ,.
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    new number = -1;
		        for(new i = 0; i < sizeof(FamilyInfo); i++)
		        {//완료 내가알기론 이거 내가 NCRPG에서 햇던거니까 될꺼야
		            number ++;
		            format(string, sizeof(string), " 팩션번호 %d| 팩션이름: %s | 팩션리더: %s | 팩션 멤버수: %d.",number,FamilyInfo[i][FamilyName],FamilyInfo[i][FamilyLeader],FamilyInfo[i][FamilyMembers]);
		            SendClientMessage(playerid, COLOR_WHITE, string);
		        }
   		        return 1;
	        }
	        new family = strval(tmp);
	        if(family < 1 || family > 12) { SendClientMessage(playerid, COLOR_GREY, "   팩션 번호는 1이상 10이하만 가능합니다. !"); return 1; }
			if(FamilyInfo[family][FamilyTaken] != 1 && family < 13)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   그 번호의 팩션은 제작되지 않았습니다.");
			    return 1;
			}
			for(new i = 0; i < PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pFMember] == family)
			        {
			            GetPlayerName(i, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* %s: %s | 계급: %d.",FamilyInfo[family][FamilyName],giveplayer,PlayerInfo[i][pRank]);
			            SendClientMessage(playerid, COLOR_GREY, string);
			        }
			    }
			}
	    }
	    return 1;
	}
		if(strcmp(cmd, "/camera", true) == 0 || strcmp(cmd, "/카메라", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))
				{
					if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 Area51(드모르간)의 커맨드 센터에 있지 않습니다. ");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /카메라 [번호 1 - 6]  (6 = 끄기)");
						return 1;
					}
					new number = strval(tmp);
					if(number < 1 || number > 6) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 카메라 번호는 1 에서 6 까지만 가능합니다 "); return 1; }
					SetPlayerFreeze(playerid, true, 1);
					TogglePlayerControllable(playerid, 0);
					GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
					if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
					else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
					else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
					else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
					else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
					else if(number == 6)
					{
						SetPlayerFreeze(playerid, false, 0);
						TogglePlayerControllable(playerid, 1);
						SetCameraBehindPlayer(playerid);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 CIA이 아닙니다 ");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/이혼",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMarried] < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 결혼하지 않았습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /이혼 [플레이어ID/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신이 이혼할 수없습니다"); return 1; }
							new dstring[MAX_PLAYER_NAME];
							new wstring[MAX_PLAYER_NAME];
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s", giveplayer);
							strmid(wstring, string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
							strmid(dstring, string, 0, strlen(string), 255);
							if(strcmp(dstring ,wstring, true ) == 0 )
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 에게 이혼을 권유했습니다", giveplayer);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s  당신에게 이혼을 권유합니다. (/동의 이혼)", sendername);
								SCM(giveplayerid, COLOR_ERROR, string);
								DivorceOffer[giveplayerid] = playerid;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그 사람과 결혼하지 않았습니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그분은 당신근처에 있어야합니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인입니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/프로포즈",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(GetMoney(playerid) < 200)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 결혼할려면 최소 $200 이상이 필요합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pMarried] > 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 이미 결혼을 했습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /프로포즈 [플레이어ID/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pMarried] > 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 사람은 이미 결혼을 했습니다");
							return 1;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 권유할 수없습니다"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 에게 프로포즈를 합니다", giveplayer);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" %s  당신에게 프로포즈를 합니다. (/동의 결혼)", sendername);
							SCM(giveplayerid, COLOR_ERROR, string);
							ProposeOffer[giveplayerid] = playerid;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 결혼하는 사람끼리 근처에 있어야합니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인입니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/증인",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /증인 [플레이어ID/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신이 증인이 될수없습니다"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 에게 증인을 신청합니다", giveplayer);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 증인을 신청합니다. (/동의 증인)", sendername);
							SCM(giveplayerid, COLOR_ERROR, string);
							MarryWitnessOffer[giveplayerid] = playerid;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신 근처에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/재산",true)==0)
		{
			if(PlayerInfo[playerid][pLeader] == 7)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /재산 [플레이어ID/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				new allmoney = PlayerInfo[giveplayerid][pCash]+PlayerInfo[giveplayerid][pAccount];
				format(string, sizeof(string), "INFO : "#C_WHITE" %s의 정보", RPPlayerName(giveplayerid));
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 총 재산 : $[%d]", allmoney);
				SCM(playerid, COLOR_ERROR, string);
				showcar(giveplayerid, playerid, 2);
			}
			return 1;
		}
		if(strcmp(cmd, "/이벤트", true) == 0 || strcmp(cmd, "/O.N", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
 				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strcmp(sendername, "Lily_Jack", true) == 0)
				{
					if(gPlayerLogged[playerid] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인 부터 해주셔야합니다");
						return 1;
					}
					ShowPlayerDialog(playerid, DIALOG_EVENT, DIALOG_STYLE_LIST, "이벤트목록", "초기화이벤트", "이벤트보기", "이벤트취소");
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/급료설정", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] <= 8)
				{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 어드민 레벨이 부족하거나 어드민이 아닙니다."); }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" /급료설정 [기능]");
					SCM(playerid, COLOR_ERROR, "[기능] 잔액 어드민 뉴비팀 직업세금(따로설정)");
					return 1;
				}
				if(strcmp(tmp,"잔액",true) ==0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 현재까지 모아진 세금은 $%d입니다", Tax);
					SCM(playerid, COLOR_ERROR, string);
				}
				else if(strcmp(tmp,"어드민",true) ==0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /어드민급료 어드민 [지원금액]");
					}
					new admoneys = strval(tmp);
					if(admoneys < 1 || admoneys > 10000000) { SCM(playerid, COLOR_ERROR, " $1에서 $3500까지만 가능합니다 "); return 1; }
					admin = admoneys;
					SaveStuff();
					format(string, sizeof(string), "INFO : "#C_WHITE" 알립니다. Admin Team 보너스는 $%d 입니다", admin);
					ABroadCast(COLOR_ADMIN,string,1);
				}
				else if(strcmp(tmp,"뉴비팀",true) ==0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /어드민급료 뉴비팀 [지원금액]");
					}
					new admoneys2 = strval(tmp);
					if(admoneys2 < 1 || admoneys2 > 3500) { SCM(playerid, COLOR_ERROR, " $1에서 $3500까지만 가능합니다 "); return 1; }
					goodnewbie = admoneys2;
					SaveStuff();
					format(string, sizeof(string), "INFO : "#C_WHITE" 알립니다. Newbie Team 보너스는 $%d 입니다", goodnewbie);
					ABroadCast(COLOR_ADMIN,string,1);
				}
				else if(strcmp(tmp,"직업세금",true) ==0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /급료설정 직업세금 [금액]");
					}
					new admoneys2 = strval(tmp);
					if(admoneys2 < 1 || admoneys2 > 3500) { SCM(playerid, COLOR_ERROR, " $1에서 $3500까지만 가능합니다 "); return 1; }
					TaxValue2 = admoneys2;
					SaveStuff();
					format(string, sizeof(string), "INFO : "#C_WHITE" 알립니다. 직업세금은 $%d 입니다", TaxValue2);
					ABroadCast(COLOR_ADMIN,string,1);
				}
			}
			return 1;
		}
		//======================================================================
              if(strcmp(cmd, "/세금", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pLeader] != 7)
					{ return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 시장이 아닙니다."); }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" /세금 [기능]");
						SCM(playerid, COLOR_ERROR, "(세금) 설정 잔액 입금 [출금은 총관리자 허락]");
						SCM(playerid, COLOR_ERROR, "(지원금) 경찰 fbi CIA 시청 (의사,대학교) (방송국,용병) 리더");
						SCM(playerid, COLOR_ERROR, "(지원금) 경찰 fbi CIA 시청 의사 방송국 리더");
						return 1;
					}
				if(strcmp(tmp,"잔액",true) ==0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 현재까지 모아진 세금은 $%d입니다", Tax);
					SCM(playerid, COLOR_ERROR, string);
				}
				else if(strcmp(tmp,"추울금",true) ==0) // <- 관리자 전용 [돈풀림방지]
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 추울금 [액수]");
					}
					moneys = strval(tmp);
					if(Tax < moneys || moneys < 0) { return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그만큼 세금이 없습니다."); }
					Tax -= moneys;
					GiveMoney(playerid, moneys);
					SaveStuff();
					format(string, sizeof(string), "* 시장 %s가 세금 $%d를 출금했습니다.", RPPlayerName(playerid), moneys);
					ABroadCast(COLOR_ADMIN,string,1);
					format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 세금 $%d를 출금했습니다.", moneys);
					SCM(playerid, COLOR_ERROR, string);
				}
				else if(strcmp(tmp,"입금",true) ==0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 입금 [액수]");
					}
					moneys = strval(tmp);
					if(GetMoney(playerid) < moneys || moneys < 0) { return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그만큼 돈이 없습니다."); }
					Tax += moneys;
					GiveMoney(playerid, -moneys);
					SaveStuff();
					format(string, sizeof(string), "* 시장 %s가 세금 $%d를 입금했습니다.", RPPlayerName(playerid), moneys);
					ABroadCast(COLOR_ADMIN,string,1);
					format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 세금 $%d를 입금했습니다.", moneys);
					SCM(playerid, COLOR_ERROR, string);
				}
				else if(strcmp(tmp,"설정",true) ==0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 설정 [액수]");
					}
					moneys = strval(tmp);
					if(moneys < 0 || moneys > 50) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 세금은 $0에서 $100까지만 가능합니다 "); return 1; }
					TaxValue = moneys;
					SaveStuff();
					format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 세금은 $%d 입니다", TaxValue);
					SCMToAll(COLOR_NEWS, string);
				}
					else if(strcmp(tmp,"리더",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 리더 [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 500) { SCM(playerid, COLOR_ERROR, " $0에서 $500까지만 가능합니다 "); return 1; }
						ri = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 리더 지원금은 $%d 입니다", ri);
						SCMToAll(COLOR_NEWS, string);
					}
					else if(strcmp(tmp,"경찰",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 경찰 [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 1500) { SCM(playerid, COLOR_ERROR, " $0에서 $1500까지만 가능합니다 "); return 1; }
						fl = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 LVPD 수당은 $%d 입니다", fl);
						SCMToAll(COLOR_NEWS, string);
						}
										else if(strcmp(tmp,"익금",true) ==0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 입금 [액수]");
					}
					moneys = strval(tmp);
					if(Tax < moneys || moneys < 0) { return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그만큼 세금이 없습니다."); }
					Tax -= moneys;
					GiveMoney(playerid, moneys);
					SaveStuff();
					format(string, sizeof(string), "* Admin : 시장 %s가 세금 $%d를 입금했습니다.", RPPlayerName(playerid), moneys);
					ABroadCast(COLOR_ADMIN,string,1);
					format(string, sizeof(string), "INFO : "#C_WHITE" 성공적으로 세금 $%d를 입금했습니다.", moneys);
					SCM(playerid, COLOR_ERROR, string);
				}
					else if(strcmp(tmp,"fbi",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 fbi [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 1500) { SCM(playerid, COLOR_ERROR, " $0에서 $1500까지만 가능합니다 "); return 1; }
						fbi = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 FBI 수당은 $%d 입니다", fbi);
						SCMToAll(COLOR_NEWS, string);
					}
					else if(strcmp(tmp,"CIA",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 CIA [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 1500) { SCM(playerid, COLOR_ERROR, " $0에서 $1500까지만 가능합니다 "); return 1; }
						gnu = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 CIA 수당은 $%d 입니다", gnu);
						SCMToAll(COLOR_NEWS, string);
					}
					else if(strcmp(tmp,"시청",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 시청 [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 1500) { SCM(playerid, COLOR_ERROR, " $0에서 $1500까지만 가능합니다 "); return 1; }
						si = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 시청팀 수당은 $%d 입니다", si);
						SCMToAll(COLOR_NEWS, string);
					}
					else if(strcmp(tmp,"의사",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 의사 [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 1500) { SCM(playerid, COLOR_ERROR, " $0에서 $1500까지만 가능합니다 "); return 1; }
						emt = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 의사 지원금은 $%d 입니다", emt);
						SCMToAll(COLOR_NEWS, string);
                    }

					else if(strcmp(tmp,"방송국",true) ==0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /세금 방송국 [지원금액]");
						}
						moneys = strval(tmp);
						if(moneys < 0 || moneys > 1500) { SCM(playerid, COLOR_ERROR, " $0에서 $1500까지만 가능합니다 "); return 1; }
						bangsoso = moneys;
						SaveStuff();
						format(string, sizeof(string), "[!] 국회뉴스 : 이제부터 방송국 지원금은 $%d 입니다", bangsoso);
						SCMToAll(COLOR_NEWS, string);
					}
			}
			return 1;
		}
	   	if(strcmp(cmd, "/정부군해고", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /정부군해고 [플레이어ID/플레이어이름]");
						return 1;
					}
				if (!IsACop(playerid))
				{
					SCM(playerid, COLOR_ERROR, "당신이 해고하려는 사람은 정부군이 아닙니다.");
					return 1;
				}
				if (PlayerInfo[playerid][pLeader] == 7)
				{
				    if(IsPlayerConnected(playerid))
				    {
				        if(playerid != INVALID_PLAYER_ID)
				        {
								GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 시장(%s)에 의해 해고 되었습니다.", sendername);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "INFO : "#C_WHITE" 당신은 시장에 의해 당신의 직장에서 해고되었다.");
								GiveMoney(playerid, -700);
								Tax += 700;//세금추가, 세수
	     						gTeam[playerid] = 3;
								SetPlayerHealth(playerid, 0);
								PlayerInfo[playerid][pTeam] = 3;
								PlayerInfo[playerid][pLeader] = 0;
								PlayerInfo[playerid][pMember] = 0;
								PlayerInfo[playerid][pRank] = 0;
								PlayerInfo[playerid][pChar] = 250;
								MedicBill[playerid] = 0;
								SpawnPlayer(playerid);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 그의 정부/당파(%s) 에서 그 사람을 해고시켰습니다..", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							}

					}
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "당신은 시장이 아닙니다.");
				}
			}
			return 1;
		}
	   	if(strcmp(cmd, "/정부군직원해고", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /정부군직원해고 [플레이어ID/플레이어이름] (경찰/FBi/SWAT/CIA)");
						return 1;
					}
				if (!IsACop(playerid) || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pLeader] == 20)
				{
					SCM(playerid, COLOR_ERROR, "당신이 해고하려는 사람은 정부군이 아니거나 리더 또는 시청민원팀입니다.");
					return 1;
				}
				if (PlayerInfo[playerid][pMember] == 7)
				{
				    if(IsPlayerConnected(playerid))
				    {
				        if(playerid != INVALID_PLAYER_ID)
				        {
								GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* 당신은 시청팀(%s)에 의해 해고 되었습니다.", sendername);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "* 당신은 시청팀에 의해 당신의 직장에서 해고되었다.");
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "* 부당하게 해고된 경우 (/민원) 또는 (/통화 120)으로 연락하십시오.");
								GiveMoney(playerid, -700);
								Tax += 700;//세금추가, 세수
	     						gTeam[playerid] = 3;
								SetPlayerHealth(playerid, 0);
								PlayerInfo[playerid][pTeam] = 3;
								PlayerInfo[playerid][pMember] = 0;
								PlayerInfo[playerid][pRank] = 0;
								PlayerInfo[playerid][pChar] = 250;
								MedicBill[playerid] = 0;
								SpawnPlayer(playerid);
								format(string, sizeof(string), "*  당신은 그의 정부/당파(%s) 에서, 그 사람을 해고시켰습니다.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							}

					}
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "당신은 시청민원팀이 아닙니다.");
				}
			}
			return 1;
	    }
   		if(!strcmp(cmdtext, "/착용 헬멧1", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				SetPlayerAttachedObject( playerid, 0, 18977, 1, 0.421169, 0.061976, 0.000000, 93.171394, 87.211570, 0.000000, 1.300091, 1.000000, 1.177628 ); // MotorcycleHelmet3 - 7
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/착용 헬멧2", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
				PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
				SetPlayerAttachedObject( playerid, 0, 18979, 1, 0.398257, 0.069343, -0.003494, 357.262847, 90.629188, 89.780914, 1.134082, 1.000000, 1.069712 ); // MotorcycleHelmet5 - 9
			}
			return 1;
		}
			if(!strcmp(cmdtext, "/착용 망치", true))
			{
             if(IsPlayerConnected(playerid))
				{
				if(gPlayerLogged[playerid] == 0)
					{
					 SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
						return 1;
					}
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
					SetPlayerAttachedObject( playerid, 0, 18635, 5, -0.116485, 0.029056, 0.009388, 136.636413, 356.492919, 358.344024, 2.318902, 1.000000, 1.724537 ); // GTASAHammer1 - hammer
					}
				return 1;
			}
			if(!strcmp(cmdtext, "/착용", true))
			{
			if(IsPlayerConnected(playerid))
				{
				if(gPlayerLogged[playerid] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
						return 1;
					}
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
					SCM(playerid,COLOR_WHITE,"INFO : "#C_WHITE" /착용 [이름]");
					SCM(playerid,COLOR_WHITE,"[이름] : 망치 낚시대 헬멧 해제");
					}
				return 1;
			}
			if(!strcmp(cmdtext, "/착용 해제", true))
			{
			if(IsPlayerConnected(playerid))
				{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
					return 1;
				}
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
					RemovePlayerAttachedObject(playerid,0);
					RemovePlayerAttachedObject(playerid,4);
				}
				return 1;
			}
			if(!strcmp(cmdtext, "/착용 낚시대", true))
			{
             if(IsPlayerConnected(playerid))
				{
				if(gPlayerLogged[playerid] == 0)
					{
					 SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 하지 않았습니다");
						return 1;
						}
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
					SetPlayerAttachedObject( playerid, 0, 18632, 16, 0.075119, 0.147074, 0.554609, 3.394825, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // FishingRod - fishingrod
					}
				return 1;
			}
			if(strcmp(cmdtext, "/착용 방패", true)==0)
			{
				if (IsACop(playerid))
				{
					SetPlayerAttachedObject( playerid, 0, 18637, 5, -0.227577, -0.003535, 0.115427, 67.812446, 0.798736, 336.885894, 1.000000, 1.000000, 1.000000 );

				}
				return 1;
			}

		if(strcmp(cmd, "/옷", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsAtClothShop(playerid))
				{
				    if(PlayerInfo[playerid][pCash]<10){SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 옷을 구매할 돈이 부족합니다 !");return 1;}
					if(PlayerInfo[playerid][pSex] == 1) { ChosenSkin[playerid] = 2; SetPlayerSkin(playerid, 2); PlayerInfo[playerid][pChar] = 2; }
					else if(PlayerInfo[playerid][pSex] == 2) { ChosenSkin[playerid] = 55; SetPlayerSkin(playerid, 55); PlayerInfo[playerid][pChar] = 55; }
					else { return 1; }
					GetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
					ChangeWorld[playerid] = GetPlayerVirtualWorld(playerid);
					SetPlayerVirtualWorld(playerid, playerid);
					ChangePos2[playerid][0] = GetPlayerInterior(playerid);
					ChangePos2[playerid][1] = 1;
					SetPlayerPos(playerid, 218.19,-98.62,1005.26); // Warp the player
					SetPlayerFacingAngle(playerid, 269.7827);
					SetPlayerCameraPos(playerid, 216.0114,-97.7588,1005.2578);
					SetPlayerCameraLookAt(playerid, 218.6280,-98.6239,1005.2578);
					SetPlayerVirtualWorld(playerid, playerid);
					P_Cloth[playerid] = 1;
					SetPlayerInterior(playerid,15);
					SetPlayerVirtualWorld(playerid,playerid);
					SetPlayerFreeze(playerid, true, 1);
					TogglePlayerControllable(playerid, 0);
					SelectChar[playerid] = 255;
					if(PlayerInfo[playerid][pSex] == 1) { SelectCharID[playerid] = 20; }
					else if(PlayerInfo[playerid][pSex] == 2) { SelectCharID[playerid] = 30; }
					else { return 1; }
					SelectCharPlace[playerid] = 1;
					SetPlayerVirtualWorld(playerid,0);
					PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
					PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
					SetPlayerVirtualWorld(playerid,playerid);
					GiveMoney(playerid, -10);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 옷값으로 10달러를 지불하였습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" [NUM4] [NUM6] [스페이스바] 로 고르실 수 있습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스페이스바 = 확정 , 4 = 이전 , 6 = 다음");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 옷가게에 없습니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/회", true) == 0 || strcmp(cmd, "/회수", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gTeam[playerid] == 2 || IsACop(playerid))
				{
					new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
						SCM(playerid, COLOR_WHITE, "회수 목록");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 [회수이름] [플레이어번호]");
						SCM(playerid, COLOR_ERROR, "[회수이름] 운전면허 비행면허 항해면허 낚시면허 총기면허 대형면허 시민증");
						SCM(playerid, COLOR_ERROR, "[회수이름] 무기 마약 무기재료");
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
						return 1;
					}
					if(strcmp(x_nr,"운전면허",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 운전면허 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 운전면허증을 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 운전면허증을 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pCarLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"대형면허",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 대형면허 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 대형면허를 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 대형면허를 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][peogudLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"비행면허",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 비행면허 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 비행면허증을 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 비행면허증을 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pFlyLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"총기면허",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 총기면허 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 총기면허증을 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 총기면허증을 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pGunLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"항해면허",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 항해면허 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 보트면허증을 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 보트면허증을 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pBoatLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"낚시면허",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 낚시면허 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 낚시면허증을 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부군 %s 에게 낚시면허증을 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pFishLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"시민증",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 시민증 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 시민증을 가져갔습니다", giveplayername);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 시민증을 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pCityLic] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}

					else if(strcmp(x_nr,"무기",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 무기 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 무기를 가져갔습니다", giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 무기를 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									ResetPlayerWeapons(giveplayerid);
									PlayerInfo[giveplayerid][pGun1] = 0; PlayerInfo[giveplayerid][pAmmo1] = 0;
									PlayerInfo[giveplayerid][pGun2] = 0; PlayerInfo[giveplayerid][pAmmo2] = 0;
									PlayerInfo[giveplayerid][pGun3] = 0; PlayerInfo[giveplayerid][pAmmo3] = 0;
									PlayerInfo[giveplayerid][pGun4] = 0; PlayerInfo[giveplayerid][pAmmo4] = 0;
									PlayerInfo[giveplayerid][pInvWeapon] = 0; PlayerInfo[giveplayerid][pInvAmmo] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지 않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}

					else if(strcmp(x_nr,"마약",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 마약 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 마약을 가져갔습니다", giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 마약을 회수 당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pDrugs] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}

					else if(strcmp(x_nr,"무기재료",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /회수 무기재료 [플레이어ID/플레이어이름]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(8.0, playerid, giveplayerid))
								{
									new giveplayername[64];
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 무기재료를 가져갔습니다", giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부 %s 에게 무기재료를 회수당했습니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									PlayerInfo[giveplayerid][pMats] = 0;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 당신 근처에 있지않습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 옳지않은 회수이름입니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/마심", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsAtBar(playerid))
				{
					if(PlayerDrunk[playerid] < 10)
					{
						new Float:health;
						new x_nr[256];
						x_nr = strtok(cmdtext, idx);
						if(!strlen(x_nr)) {
							SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
							SCM(playerid, COLOR_WHITE, "주점 마실것 목록");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /마심 [이름]");
							SCM(playerid, COLOR_ERROR, "(음료) 물($SELF) 레몬에이드($3)");
							SCM(playerid, COLOR_ERROR, "(주류) 버드와이저($20) 루스까야보드카($50) 벨루가보드카($100)");
							SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
							return 1;
						}
						if(strcmp(x_nr,"버드와이저",true) == 0)
						{
							if(PlayerInfo[playerid][pAge] < 19)
							{
								SCM(playerid, COLOR_ERROR, "(바텐더) 죄송합니다만 미성년자에게는 주류를 판매하지 않습니다");
								return 1;
							}
							BizzMoney(playerid, -20);
							PlayerDrunk[playerid] += 1;
							Umju[playerid] = 1;
							SetPlayerSpecialAction(playerid, 22);
							if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
							GetPlayerHealth(playerid, health);
							if(health < 100)
							{
								if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; GiveHealth(playerid, hp); }
								else { GiveHealth(playerid, 5.0); }
							}
						}
						else if(strcmp(x_nr,"루스까야보드카",true) == 0)
						{
							if(PlayerInfo[playerid][pAge] < 19)
							{
								SCM(playerid, COLOR_ERROR, "(바텐더) 죄송합니다만 미성년자에게는 주류를 판매하지 않습니다");
								return 1;
							}
							BizzMoney(playerid, -50);
							PlayerDrunk[playerid] += 3;
							Umju[playerid] = 1;
							SetPlayerSpecialAction(playerid, 22);
							if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
							GetPlayerHealth(playerid, health);
							if(health < 100)
							{
								if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 10; GiveHealth(playerid, hp); }
								else { GiveHealth(playerid, 10.0); }
							}
						}
						else if(strcmp(x_nr,"벨루가보드카",true) == 0)
						{
							if(PlayerInfo[playerid][pAge] < 19)
							{
								SCM(playerid, COLOR_ERROR, "(바텐더) 죄송합니다만 미성년자에게는 주류를 판매하지 않습니다");
								return 1;
							}
							BizzMoney(playerid, -100);
							PlayerDrunk[playerid] += 4;
							Umju[playerid] = 1;
							SetPlayerSpecialAction(playerid, 22);
							if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
							GetPlayerHealth(playerid, health);
							if(health < 100)
							{
								if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 16; GiveHealth(playerid, hp); }
								else { GiveHealth(playerid, 20.0); }
							}
						}
							else if(strcmp(x_nr,"물",true) == 0)
						{
							GetPlayerHealth(playerid, health);
							if(health < 100)
							{
								if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 1; GiveHealth(playerid, hp); }
								else { GiveHealth(playerid, 0); }
							}
							else if(health > 100)
							{
								SetHealth(playerid, 100);
							}
						}
						else if(strcmp(x_nr,"레몬에이드",true) == 0)
						{
							BizzMoney(playerid, -3);
							GetPlayerHealth(playerid, health);
							if(health < 100)
							{
								if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 2; GiveHealth(playerid, hp); }
								else { GiveHealth(playerid, 2); }
							}
							else if(health > 100)
							{
								SetHealth(playerid, 100);
							}
						}
						else
						{
							SCM(playerid, COLOR_ERROR, "(바텐더) 그런 마실 것은 없습니다.");
							return 1;
						}
						if(health > 100) SetHealth(playerid, 100);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s %s를(을) 마십니다.", sendername ,x_nr);
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 더 이상 마실 수 없습니다.");
						return 1;
	            }
	        }
	        else
	        {
	            SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 당신은 술집에 있지 않습니다.");
	            return 1;
	        }
	    }
	    return 1;
	}

		if(strcmp(cmd, "/setchamp", true) == 0 || strcmp(cmd, "/챔피언", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pAdmin] >= 4)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /챔피언 [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							new nstring[MAX_PLAYER_NAME];
							format(nstring, sizeof(nstring), "%s", giveplayer);
							strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
							Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
							Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
							SaveBoxer();
							format(string, sizeof(string), " 당신은 %s님을 새로운 복싱 챔피언으로 임명했습니다", giveplayer);
							SCM(playerid, COLOR_ADMIN, string);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				}
			}
			return 1;
		}


	if(c_strcmp(cmd, "/music") == 1 || c_strcmp(cmd, "/음악") == 1)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gRadio[playerid])
	        {
		        new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SCM(playerid, COLOR_GRAD2,"  INFO : /음악 [이름]");
			  		SCM(playerid, COLOR_GRAD2,"  [이름] : 켬 끔 다음");
					return 1;
				}
				GetPlayerName(playerid,sendername,sizeof(sendername));
			    if(c_strcmp(x_nr,"on") == 1 || c_strcmp(x_nr,"켬") == 1)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s[이]가 MP3를 꺼내고 노래를 듣는다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2);
					printf("%s", string);
				}
	            else if(c_strcmp(x_nr,"off") == 1 || c_strcmp(x_nr,"끔") == 1)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
					format(string, sizeof(string), "* %s [이]가 MP3를 집어넣는다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2);
					printf("%s", string);
				}
				else if(c_strcmp(x_nr,"next") == 1 || c_strcmp(x_nr,"다음") == 1)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s MP3의 버튼을 조작한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2,COLOR_PURPLE2);
					printf("%s", string);
				}
				else
				{
					SCM(playerid, COLOR_GRAD2,"  INFO : /음악 [이름]");
			  		SCM(playerid, COLOR_GRAD2,"  [이름] : 켬 끔 다음");
					return 1;
				}
			}
			else
			{
			    SCM(playerid,COLOR_GRAD2,"ERROR : 당신은 이 명령어를 사용하기 위한 도구가 없습니다 !");
			    return 1;
			}
	    }
	    return 1;
	}

		if(strcmp(cmd, "/줄", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pRope] != 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /줄 [플레이어의번호/이름의부분]");
						return 1;
					}
					if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밧줄에 묶여있거나, 수갑에 차여있습니다");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(PlayerTied[giveplayerid] == 1 || PlayerCuffed[giveplayerid] == 1)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 이미 묶여있습니다");
								return 1;
							}
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신을 묶을 수는 없습니다"); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에 의해서 줄에 묶였습니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s을 줄로 묶었습니다", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "* %s 줄을 꺼내 %s(을)를 줄로 묶었습니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
								SetPlayerFreeze(giveplayerid, true, 1);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								PlayerInfo[playerid][pRope] -= 1;
								HidePM2[giveplayerid] = 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 줄을 가지고 있지 않습니다");
				}
			}
			return 1;
		}
				if(strcmp(cmd, "/안대", true) == 0 || strcmp(cmd, "/눈가리개", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pBandage] != 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /안대 [플레이어의번호/이름의부분]");
						return 1;
					}
					if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밧줄에 묶여있거나, 수갑에 차여있습니다");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(bandage[giveplayerid] == 1)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 이미 안대에 가려져 있습니다.");
								return 1;
							}
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 안대를 덮을 수 없습니다"); return 1; }
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							    GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 안대에 의해 눈이 가려졌습니다.", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 눈을 안대로 가렸습니다.", RPPlayerName(giveplayerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "* %s 안대를 꺼내 %s의 눈에 안대를 덮어 쒸웁니다.", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SetPlayerInterior(giveplayerid, 40);
								SetPlayerCameraLookAt(giveplayerid,-1037.9821,36.4963,-82.0382);
								SetPlayerCameraPos(giveplayerid,-1037.9821,36.4963,-82.0382);
							    PlayerInfo[playerid][pBandage] -= 1;
							   	bandage[giveplayerid] = 1;
							    SetPlayerAttachedObject(giveplayerid, 0, 19163, 18, 0, -0.06, 0, 82, -376, 90, 1, 1, 1);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 안대를 가지고 있지 않습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/안대풀기", true) == 0 || strcmp(cmd, "/안풀", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /안풀 [플레이어의번호/이름의부분]");
					return 1;
				}
				if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밧줄에 묶여있거나, 수갑에 차여있습니다");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(bandage[giveplayerid] == 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 안대가 덮어 쒸워져 있지 않습니다");
							return 1;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신의 안대를 풀어 줄 수 없습니다"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 의해서 앞이 보입니다.", RPPlayerName(playerid));
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 안대를 벗겨주었고 안대를 얻었습니다.", RPPlayerName(giveplayerid));
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "* %s %s의 눈에 있는 안대를 벗겨주었습니다.", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							new Float:X, Float:Y, Float:Z;
							GetPlayerPos(giveplayerid, X,Y,Z);
							SetPlayerCameraPos(giveplayerid, X,Y,Z);
							SetCameraBehindPlayer(giveplayerid);
							new inte;
							inte = GetPlayerInterior(playerid);
							SetPlayerInterior(giveplayerid, inte);
							bandage[giveplayerid] = 0;
							PlayerInfo[playerid][pBandage]++;
							RemovePlayerAttachedObject(giveplayerid,0);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}


		if(strcmp(cmd, "/입", true) == 0 || strcmp(cmd, "/재갈", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pShutupMouse] != 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /입(막기) [플레이어의번호/이름의부분]");
						return 1;
					}
					if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밧줄에 묶여있거나, 수갑에 차여있습니다");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if(ShutupMan[giveplayerid] == 1 || PlayerInfo[giveplayerid][pMuted] == 1)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 이미 안 막혀있거나, 관리자에 의해 말을 할 수 없습니다.");
								return 1;
							}
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 입을 막을 수 없습니다"); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에 의해서 입이 막혔습니다", RPPlayerName(playerid));
								SCM(giveplayerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 입을 재갈로 막았습니다", RPPlayerName(giveplayerid));
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "* %s 재갈을 꺼내 %s의 입에 물렸습니다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								PlayerInfo[giveplayerid][pMuted] = 1;
								ShutupMan[giveplayerid] = 1;
				    			PlayerInfo[playerid][pShutupMouse] -= 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 재갈을 가지고 있지 않습니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/입풀", true) == 0 || strcmp(cmd, "/입풀기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /입풀(기) [플레이어의번호/이름의부분]");
					return 1;
				}
				if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밧줄에 묶여있거나, 수갑에 차여있습니다");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(ShutupMan[giveplayerid] == 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그는 입이 막혀 있지 않습니다.");
							return 1;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신의 재갈을 풀어줄수 없습니다"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에 의해서 말을 할 수 있게 되었습니다", RPPlayerName(playerid));
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 입에 있던 재갈을 빼주었고 재갈을 얻었습니다", RPPlayerName(giveplayerid));
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "* %s %s의 입에 있는 재갈을 빼주었습니다.", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							PlayerInfo[giveplayerid][pMuted] = 0;
							ShutupMan[giveplayerid] = 0;
							PlayerInfo[playerid][pShutupMouse]++;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/줄풀", true) == 0 || strcmp(cmd, "/줄풀기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 묶여있습니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/줄풀)기 [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(PlayerCuffed[giveplayerid] == 1)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 수갑이 채워져 있습니다");
								if(IsACop(playerid))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/풀기)로 풀어주세요");
								}
								return 1;
							}
							if(PlayerTied[giveplayerid] == 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 줄에 묶여있지 않습니다");
								return 1;
							}
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 당신 스스로 줄을 풀 수 없습니다"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에 의해서 줄이 풀렸고, 당신은 이제 자유입니다", RPPlayerName(playerid));
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 줄을 풀어주었고, 밧줄을 얻었습니다", RPPlayerName(giveplayerid));
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "* %s %s을 줄을 풀어준다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
							ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
							SetPlayerFreeze(giveplayerid, false, 0);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							PlayerInfo[playerid][pRope]++;
							HidePM2[giveplayerid] = 0;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/풀기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerTied[playerid] == 1 || PlayerCuffed[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 묶여있습니다");
					return 1;
				}
				if(IsACop(playerid))
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /풀기 [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 스스로를 풀어줄 수 없습니다"); return 1; }
								if(PlayerTied[giveplayerid])
								{
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에 의해 풀립니다", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s을 풀었습니다", RPPlayerName(giveplayerid));
									SCM(playerid, COLOR_ERROR, string);
									GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
									SetPlayerFreeze(giveplayerid, false, 0);
									TogglePlayerControllable(giveplayerid, 1);
									PlayerTied[giveplayerid] = 0;
									format(string, sizeof(string), "* %s %s을(를) 풀어준다", RPPlayerName(playerid), RPPlayerName(giveplayerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 묶여있지 않습니다");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 가까이에 없습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/판매", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "판매 목록");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 [이름]");
					SCM(playerid, COLOR_ERROR, "[노점] : 핫도그 라면 아이스크림");
					SCM(playerid, COLOR_ERROR, "[어부] : 물고기");
					SCM(playerid, COLOR_ERROR, "[농부] : 밀");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				if(strcmp(x_nr,"핫도그",true) == 0)
				{
					if(IsPlayerConnected(playerid))
					{
						if(tkdwja_A[playerid] == 0)
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 상점을 연 후에 다시 시도해 주십시오");
							return 1;
						}
						if(IsPlayerConnected(playerid))
						{
							if(PlayerInfo[playerid][pgktehrm] >= 1)
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp)) {
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 핫도그 [플레이어의번호/이름의부분] [가격]");
									return 1;
								}
								giveplayerid = ReturnUser(tmp);
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 핫도그 [플레이어의번호/이름의부분] [가격]");
									return 1;
								}
								moneys = strval(tmp);
								if(100<moneys||1>moneys)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가격은 $1~100 만 됩니다.");
									return 1;
								}
								if(playerid==giveplayerid)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 판매를 못합니다.");
									return 1;
								}
								if(IsPlayerConnected(giveplayerid))
								{
									if(giveplayerid != INVALID_PLAYER_ID)
									{
										if (ProxDetectorS(5.0, playerid, giveplayerid))
										{
											GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
											GetPlayerName(playerid, sendername, sizeof(sendername));

											PayType[giveplayerid]=1;
											PayPlayer[giveplayerid]=playerid;
											Cost[giveplayerid]=moneys;

											format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 핫도그를 [$ %d ] 에 팔려고합니다.(/동의 판매)", RPPlayerName(playerid),Cost[giveplayerid]);
											SCM(giveplayerid, COLOR_ERROR, string);

										}
										else
										{
											SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 근처에 있지 않습니다");
											return 1;
										}
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 핫도그가 없습니다. 입사장소에서 구매해주세요");
								return 1;
							}
						}
					}
					return 1;
				}
				if(strcmp(x_nr,"아이스크림",true) == 0)
				{
					if(IsPlayerConnected(playerid))
					{
						if(tkdwja_A[playerid] == 0)
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 상점을 연 후에 다시 시도해 주십시오");
							return 1;
						}
						if(IsPlayerConnected(playerid))
						{
							if(PlayerInfo[playerid][pdkdltm] >= 1)
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp)) {
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 아이스크림 [플레이어의번호/이름의부분] [가격]");
									return 1;
								}
								giveplayerid = ReturnUser(tmp);
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 아이스크림 [플레이어의번호/이름의부분] [가격]");
									return 1;
								}
								moneys = strval(tmp);
								if(100<moneys||1>moneys)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가격은 $1~100 만 됩니다.");
									return 1;
								}
								if(playerid==giveplayerid)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 판매를 못합니다.");
									return 1;
								}
								if(IsPlayerConnected(giveplayerid))
								{
									if(giveplayerid != INVALID_PLAYER_ID)
									{
										if (ProxDetectorS(5.0, playerid, giveplayerid))
										{
											GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
											GetPlayerName(playerid, sendername, sizeof(sendername));

											PayType[giveplayerid]=2;
											PayPlayer[giveplayerid]=playerid;
											Cost[giveplayerid]=moneys;

											format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 아이스크림을 [$ %d ] 에 팔려고합니다. (/동의 판매)", RPPlayerName(playerid),Cost[giveplayerid]);
											SCM(giveplayerid, COLOR_ERROR, string);

										}
										else
										{
											SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 근처에 있지 않습니다.");
											return 1;
										}
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다.");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아이스크림이 없습니다. 입사장소에서 구매해주세요.");
								return 1;
							}
						}
					}
					return 1;
				}
				if(strcmp(x_nr,"라면",true) == 0)
				{
					if(IsPlayerConnected(playerid))
					{
						if(tkdwja_A[playerid] == 0)
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 상점을 연 후에 다시 시도해 주십시오");
							return 1;
						}
						if(IsPlayerConnected(playerid))
						{
							if(PlayerInfo[playerid][pfkaus] >= 1)
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp)) {
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 라면 [플레이어의번호/이름의부분] [가격]");
									return 1;
								}
								giveplayerid = ReturnUser(tmp);
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 라면 [플레이어의번호/이름의부분] [가격]");
									return 1;
								}
								moneys = strval(tmp);
								if(100<moneys||1>moneys)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가격은 $1~100 만 됩니다.");
									return 1;
								}
								if(playerid==giveplayerid)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신에게 판매를 못합니다.");
									return 1;
								}
								if(IsPlayerConnected(giveplayerid))
								{
									if(giveplayerid != INVALID_PLAYER_ID)
									{
										if (ProxDetectorS(5.0, playerid, giveplayerid))
										{
											GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
											GetPlayerName(playerid, sendername, sizeof(sendername));

											PayType[giveplayerid]=3;
											PayPlayer[giveplayerid]=playerid;
											Cost[giveplayerid]=moneys;

											format(string, sizeof(string), "INFO : "#C_WHITE" %s 당신에게 라면을 [$ %d ] 에 팔려고합니다. (/동의 판매)", RPPlayerName(playerid),Cost[giveplayerid]);
											SCM(giveplayerid, COLOR_ERROR, string);
										}
										else
										{
											SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신의 근처에 있지 않습니다.");
											return 1;
										}
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다.");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 라면사리가 없습니다. 입사장소에서 구매해주세요.");
							}
						}
					}
					return 1;
				}
				if(strcmp(x_nr,"밀",true) == 0)
				{
					if (PlayerInfo[playerid][pJob] == 11 && PlayerToPoint(3.0,playerid,-382.8919,-1438.9773,26.3300))
					{
						new ammount = PlayerInfo[playerid][pHarvestMeal];
						new price;
						if(ammount > 0)
						{
							price=JobMoney_7;
						}
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 수확한 밀 %d개를 $%d에 농주인장에게 판매했습니다",ammount,price);
						SCM(playerid, COLOR_ERROR, string);
						GiveMoney(playerid, price);
						PlayerInfo[playerid][pHarvestMeal] = 0;
					}
					return 1;
				}

				if(strcmp(x_nr,"물고기",true) == 0)
				{
					if (!PlayerToPoint(5, playerid,391.1463,-1757.3154,8.2380))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 어류 도매상가 픽업에 있지 않습니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 물고기 [물고기번호]");
						return 1;
					}
					new price;
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 물고기 번호는 1~5까지만 가능합니다"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 1번 슬롯엔 물고기가 없습니다"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 2번 슬롯엔 물고기가 없습니다"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 3번 슬롯엔 물고기가 없습니다"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 4번 슬롯엔 물고기가 없습니다"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 5번 슬롯엔 물고기가 없습니다"); return 1; }
					//ConsumingMoney[playerid] = 1;
					switch (fishid)
					{
					case 1:
						{
							if(Fishes[playerid][pWeight1] < 20)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 20파운드 이하의 물고기는 판매할 수 없습니다");
								return 1;
							}
							price = Fishes[playerid][pWeight1] * JobMoney_8;
							if(PlayerInfo[playerid][pTraderPerk] > 0)
							{
								new skill = price / 800;
								new payout = (skill)*(1);
								price += payout;
							}
							GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s(을)를 (무게: %d) $%d에 팔았습니다", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, price);

							ClearFishID(playerid, 1);
						}
					case 2:
						{
							if(Fishes[playerid][pWeight2] < 20)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 20파운드 이하의 물고기는 판매할 수 없습니다");
								return 1;
							}
							price = Fishes[playerid][pWeight2] * JobMoney_8;
							if(PlayerInfo[playerid][pTraderPerk] > 0)
							{
								new skill = price / 800;
								new payout = (skill)*(1);
								price += payout;
							}
							GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s(을)를 (무게: %d) $%d에 팔았습니다", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, price);
							ClearFishID(playerid, 2);
						}
					case 3:
						{
							if(Fishes[playerid][pWeight3] < 20)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 20파운드 이하의 물고기는 판매할 수 없습니다");
								return 1;
							}
							price = Fishes[playerid][pWeight3] * JobMoney_8;
							if(PlayerInfo[playerid][pTraderPerk] > 0)
							{
								new skill = price / 800;
								new payout = (skill)*(1);
								price += payout;
							}
							GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s(을)를 (무게: %d) $%d에 팔았습니다", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, price);
							ClearFishID(playerid, 3);
						}
					case 4:
						{
							if(Fishes[playerid][pWeight4] < 20)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 20파운드 이하의 물고기는 판매할 수 없습니다");
								return 1;
							}
							price = Fishes[playerid][pWeight4] * JobMoney_8;
							if(PlayerInfo[playerid][pTraderPerk] > 0)
							{
								new skill = price / 800;
								new payout = (skill)*(1);
								price += payout;
							}
							GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s(을)를 (무게: %d) $%d에 팔았습니다", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, price);
							ClearFishID(playerid, 4);
						}
					case 5:
						{
							if(Fishes[playerid][pWeight5] < 20)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 20파운드 이하의 물고기는 판매할 수 없습니다");
								return 1;
							}
							price = Fishes[playerid][pWeight5] * JobMoney_8;
							if(PlayerInfo[playerid][pTraderPerk] > 0)
							{
								new skill = price / 800;
								new payout = (skill)*(1);
								price += payout;
							}
							GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s(을)를 (무게: %d) $%d에 팔았습니다", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, price);
							ClearFishID(playerid, 5);
						}
					}
					Fishes[playerid][pLastFish] = 0;
					Fishes[playerid][pFishID] = 0;
					return 1;
				}
				else if(strcmp(x_nr,"요리",true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 요리 [요리번호] [플레이어의번호/이름의부분]");
						return 1;
					}
					new cookid = strval(tmp);
					if(cookid < 1 || cookid > 5) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 요리 번호는 오직 1 에서 5 가지만 가능합니다 "); return 1; }
					else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 1번 요리에 어떠한 요리도 하지 않았습니다 "); return 1; }
					else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 2번 요리에 어떠한 요리도 하지 않았습니다 "); return 1; }
					else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 3번 요리에 어떠한 요리도 하지 않았습니다 "); return 1; }
					else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 4번 요리에 어떠한 요리도 하지 않았습니다 "); return 1; }
					else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 5번 요리에 어떠한 요리도 하지 않았습니다 "); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /판매 요리 [요리번호] [플레이어의번호/이름의부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							switch(cookid)
							{
							case 1:
								{
									if(Cooking[giveplayerid][pCWeight1] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
										strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
										Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다.)",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight2] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
										strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
										Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight3] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
										strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
										Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight4] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
										strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
										Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight5] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
										strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
										Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 요리를 둘 공간이 더 없습니다");
										return 1;
									}
								}
							case 2:
								{
									if(Cooking[giveplayerid][pCWeight1] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
										strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
										Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight2] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
										strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
										Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight3] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
										strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
										Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight4] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
										strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
										Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight5] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
										strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
										Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 요리를 둘 공간이 더 없습니다");
										return 1;
									}
								}
							case 3:
								{
									if(Cooking[giveplayerid][pCWeight1] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
										strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
										Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight2] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
										strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
										Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight3] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
										strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
										Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight4] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
										strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
										Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight5] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
										strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
										Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 요리를 둘 공간이 더 없습니다");
										return 1;
									}
								}
							case 4:
								{
									if(Cooking[giveplayerid][pCWeight1] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
										strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
										Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight2] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
										strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
										Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight3] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
										strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
										Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight4] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
										strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
										Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight5] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
										strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
										Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 요리를 둘 공간이 더 없습니다");
										return 1;
									}
								}
							case 5:
								{
									if(Cooking[giveplayerid][pCWeight1] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
										strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
										Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight2] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
										strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
										Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight3] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
										strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
										Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight4] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
										strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
										Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else if(Cooking[giveplayerid][pCWeight5] < 1)
									{
										format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
										strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
										Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
										Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
										format(string, sizeof(string), "INFO : "#C_WHITE" %s 이 당신에게 %s 요리 무게 %d 를 주었습니다.(/요리 로 볼 수 있습니다)",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
										SCM(giveplayerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 요리 무게 %d 를 %s 에게 주었습니다",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 요리를 둘 공간이 더 없습니다");
										return 1;
									}
								}
							}//switch
							ClearCookingID(playerid, cookid);
						}//invalid giveplayerid
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알수없는 판매 이름 입니다");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd,"/운임비",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] != 20)
				{
					if(TransportDuty[playerid] > 0)
					{
  					    if(TransportDuty[playerid] == 1)
						{
							TaxiDrivers += 1;
						}
						else if(TransportDuty[playerid] == 2)
						{
							BusDrivers -= 1;
						}
						SetPlayerColor(playerid,COLOR_WHITE);
						TransportDuty[playerid] = 0;
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 운행을 그만두었고 $%d를 벌었습니다.", TransportMoney[playerid]);
						SCM(playerid, COLOR_ERROR, string);
						GiveMoney(playerid, TransportMoney[playerid]);
					 	TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
						SetPlayerFreeze(playerid, true, 2);
						CarInfo[idcar][cStarted]=false;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 차량에 꽂아 있던 열쇠를 왼쪽으로 돌려 시동을 끈다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						return 1;
					}
					new Veh = GetPlayerVehicleID(playerid);
					new modelid = GetVehicleModel(Veh);
					if(modelid == 431)
					{
						if(GetPlayerState(playerid) == 2)
						{
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /운임비 [가격]");
								return 1;
							}
							moneys = strval(tmp);
							if(moneys < 10 || moneys > 500) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운임비는 $10~500 까지 가능합니다."); return 1; }
							BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
							GetPlayerName(playerid,sendername,sizeof(sendername));
							format(string, sizeof(string), "(버스) %s이 버스를 운행을 합니다. (/통화 444), (운임비: $%d)", RPPlayerName(playerid), TransportValue[playerid]);
							OOCNews(0xD67B18FF,string);
							SetPlayerColor(playerid,0xD67B1800);

								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s 차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
								GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
								CarInfo[idcar][cStarted]=true;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (택시/버스) 운전사가 아닙니다.");
							return 1;
						}
					}
					else if(Veh >= JCAR[20][0] && Veh <= JCAR[20][1])
					{
						if(GetPlayerState(playerid) == 2)
						{
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /운임비 [가격]");
								return 1;
							}
							moneys = strval(tmp);
							if(moneys < 10 || moneys > 100) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운임비는 반드시 $10~100 까지 가능합니다."); return 1; }
							TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
							GetPlayerName(playerid,sendername,sizeof(sendername));
							format(string, sizeof(string), "(택시) %s 콜택시를 운행을 합니다 (/통화 444), (운임비: $%d)", RPPlayerName(playerid), TransportValue[playerid]);
							OOCNews(0xD67B18FF,string);
							SetPlayerColor(playerid,0xD67B1800);
							GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %s  차량에 열쇠를 꽂고는 오른쪽으로 돌려 시동을 건다.", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SetTimerEx("StartingTheVehicle",4500,0,"i",playerid);
								GameTextForPlayer(playerid, "~r~Engine Starting..",2500,1);
								CarInfo[idcar][cStarted]=true;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (택시/버스) 운전사가 아닙니다.");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (택시/버스) 타고 있지 않습니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (택시/버스) 운전사가 아닙니다.");
					return 1;
				}
			}
			return 1;
		}
		//------------------------------------수금시작-------------------------------
		if(!strcmp(cmdtext, "/수금시작", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsAMember3(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 조직원 갱이 아닙니다");
					return 1;
				}
               	if(PlayerInfo[playerid][pCarTime] != 0)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 이 명령어는 %d초 후 사용할 수 있습니다.", PlayerInfo[playerid][pCarTime]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				ResetCheckPoint(playerid);
				tnrmagkwk[playerid] = 1;
				SetTimerEx("tnrmagkwk1", 100, false, "i", playerid);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 수금일을 시작하셨습니다");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 일이 시작되었습니다. 체크포인트로 이동하십시오");
			}
			return 1;
		}
		//--------------------------------------------------------------------------------------------------
		if(!strcmp(cmdtext, "/트럭시작", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] != 13)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 트럭기사가 아닙니다 ! ");
					return 1;
				}
				if(PlayerIsSending[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 배달일을 시작했습니다 ! ");
					return 1;
				}
				if(PlayerInfo[playerid][pCarTime] > 0)
				{
        			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 일을 모두 끝마쳤습니다.");
					format(string, sizeof(string), "INFO : "#C_WHITE" 현재 남은 시간은 %d초 입니다",PlayerInfo[playerid][pCarTime]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				new veh = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(veh == 403)
				{
					ResetCheckPoint(playerid);
					PlayerIsTruck[playerid] = 1;
					Truck[playerid] = 1;
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					SetTimerEx("xmfjrqoekf1", 100, false, "i", playerid);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 배달일을 그만두려면 (/트럭중지)를 하세요. 단, 보수는 없습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 일이 시작되었습니다. 맵 상의 체크포인트로 가세요");
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=1200;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 트레일러에 타고 있지 않습니다");
					return 1;
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/트럭중지", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerIsTruck[playerid] == 1)
				{
					DisablePlayerCheckpoint(playerid);
					PlayerIsTruck[playerid] = 0;
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
					ResetCheckPoint(playerid);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 배달일을 중지했습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 배달일을 하고있지 않습니다");
					return 1;
				}
			}
			return 1;
		}
		if(!strcmp(cmdtext, "/배달시작", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] != 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 피자 배달부가 아닙니다");
					return 1;
				}
				if(PlayerIsSending[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 배달일을 시작했습니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pCarTime] > 0)
				{
        			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 일을 모두 끝마쳤습니다.");
					format(string, sizeof(string), "INFO : "#C_WHITE" 배달일은 %d초 후에 진행할 수 있습니다",PlayerInfo[playerid][pCarTime]);
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				new veh = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(veh == 462)
				{
					PlayerIsSending[playerid] = 1;
					Work[playerid]=1;
					SetPlayerCheckpoint(playerid, 2337.0398,1730.2997,10.8203, 2.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 배달을 시작합니다. 집 마다 다니면서 택배를 배달하세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 배달을 그만두려면 (/배달중지)를 하세요. 단, 보수는 없습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 일이 시작되었습니다. 체크포인트로 이동하세요");
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=1200;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 배달용 오토바이에 타고있지 않습니다");
					return 1;
				}
			}
			return 1;
		}

		if(!strcmp(cmdtext, "/택배중지", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerIsSending[playerid] == 1)
				{
					DisablePlayerCheckpoint(playerid);
					PlayerIsSending[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 택배일을 중지했습니다");
					ReTurnJobCar[GetPlayerVehicleID(playerid)]=0;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 택배일을 하고있지 않습니다");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd,"/fish",true)==0 || strcmp(cmd,"/낚시",true)==0)
		{
		if(IsPlayerConnected(playerid))
		{
		if(PlayerInfo[playerid][pJob] != 12)
		{
		SCM(playerid, COLOR_GREY, "   당신은 어부가 아닙니다");
		return 1;
		}
		if(PlayerInfo[playerid][pFishTool] != 1)
		{
		SCM(playerid, COLOR_GREY, "   당신은 낚시를 하기 위한 도구가 없습니다 ");
		return 1;
		}
		if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
		{
		SCM(playerid, COLOR_GREY, "   당신은 이미 5 마리의 물고기를 잡았습니다. 이것들을 먼저 팔거나 먹거나 놔주세요 ");
		return 1;
		}
		if(PlayerInfo[playerid][pFishLic] < 1)
		{
		WantedPoints[playerid] += 1;
		SetPlayerCriminal(playerid,255, "불법 어업");
		}
		if(skrtl[playerid] == 1)
		{
		SCM(playerid, COLOR_GREY, "당신은 이미 낚시를 하고 있습니다");
		return 1;
		}
		skrtl[playerid] = 1;
		SetPlayerFreeze(playerid, true, 1);
		TogglePlayerControllable(playerid, 0);
		SCM(playerid, COLOR_WHITE, "낚시줄을 힘차게 던집니다");
		Anim(playerid,"PED","SEAT_down",4.1,0,1,1,1,1);
		SetTimerEx("skRtl", 5000, false, "i", playerid);
		}
		return 1;
		}
		if(strcmp(cmd,"/fishes",true)==0 || strcmp(cmd,"/물고기",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "당신의 물고기 목록");
				format(string, sizeof(string), "1| 물고기: %s, 무게: %d", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "2| 물고기: %s, 무게: %d", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "3| 물고기: %s, 무게: %d", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "4| 물고기: %s, 무게: %d", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "5| 물고기: %s, 무게: %d", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
				SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
			}
			return 1;
		}
		if(strcmp(cmd,"/releasefish",true)==0 || strcmp(cmd,"/번호놔주기",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /번호놔주기 [물고기번호]");
					return 1;
				}
				if(skrtl[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 낚시를 하고 있습니다");
					return 1;
				}
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 물고기 번호는 1 에서 5 까지만 가능합니다 "); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 1번 어망에 물고기가 없습니다 "); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 2번 어망에 물고기가 없습니다 "); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 3번 어망에 물고기가 없습니다 "); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 4번 어망에 물고기가 없습니다 "); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 5번 어망에 물고기가 없습니다 "); return 1; }
				ClearFishID(playerid, fishid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
			}
			return 1;
		}
		if(strcmp(cmd,"/throwbackall",true)==0 || strcmp(cmd,"/모두놔주기",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(skrtl[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 낚시를 하고 있습니다");
					return 1;
				}
				if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
				{
					ClearFishes(playerid);
					Fishes[playerid][pLastFish] = 0;
					Fishes[playerid][pFishID] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 잡은 물고기들 모두를 강으로 집어 던졌습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 물고기를 아직 잡지 않았습니다 ! ");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/자격증",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new text1[20];
				new text2[20];
				new text3[20];
				new text4[20];
				new text5[20];
				new text6[20];
				new text7[20];
				new text8[20];
				if(PlayerInfo[playerid][pCarLic]) { text1 = "취득"; } else { text1 = "미취득"; }
				if(PlayerInfo[playerid][pFlyLic]) { text4 = "취득"; } else { text4 = "미취득"; }
				if(PlayerInfo[playerid][pBoatLic]) { text2 = "취득"; } else { text2 = "미취득"; }
				if(PlayerInfo[playerid][pFishLic]) { text3 = "취득"; } else { text3 = "미취득"; }
				if(PlayerInfo[playerid][pGunLic]) { text5 = "취득"; } else { text5 = "미취득"; }
				if(PlayerInfo[playerid][peogudLic]) { text6 = "취득"; } else { text6 = "미취득"; }
				if(PlayerInfo[playerid][dmdrmqLic]) { text7 = "취득"; } else { text7 = "미취득"; }
				if(PlayerInfo[playerid][pCityLic]) { text8 = "취득"; } else { text8 = "미취득"; }
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
				format(string, sizeof(string), "INFO : "#C_WHITE" 운전면허: %s, 벌점: (%d점/5점)", text1, PlayerInfo[playerid][pDemerit]);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 비행면허: %s", text4);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 항해면허: %s", text2);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 낚시면허: %s", text3);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 무기면허: %s", text5);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 대형면허: %s", text6);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 의료자격: %s", text7);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), "INFO : "#C_WHITE" 시민증: %s", text8);
			    SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
			}
			return 1;
		}

		if(strcmp(cmd,"/자격증보",true)==0 || strcmp(cmd,"/sl",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자격증보 [플레이어ID/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신의 자격증은 (/자격증)을 통해 보십시오"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new text1[20];
							new text2[20];
							new text3[20];
							new text4[20];
							new text5[20];
							new text6[20];
							new text7[20];
							new text8[20];
							if(PlayerInfo[playerid][pCarLic]) { text1 = "취득"; } else { text1 = "미취득"; }
							if(PlayerInfo[playerid][pFlyLic]) { text4 = "취득"; } else { text4 = "미취득"; }
							if(PlayerInfo[playerid][pBoatLic]) { text2 = "취득"; } else { text2 = "미취득"; }
							if(PlayerInfo[playerid][pFishLic]) { text3 = "취득"; } else { text3 = "미취득"; }
							if(PlayerInfo[playerid][pGunLic]) { text5 = "취득"; } else { text5 = "미취득"; }
							if(PlayerInfo[playerid][peogudLic]) { text6 = "취득"; } else { text6 = "미취득"; }
							if(PlayerInfo[playerid][dmdrmqLic]) { text7 = "취득"; } else { text7 = "미취득"; }
							if(PlayerInfo[playerid][pCityLic]) { text8 = "취득"; } else { text8 = "미취득"; }
							SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님의 자격증 목록", sendername);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 운전면허: %s, 벌점: (%d점/5점)", text1, PlayerInfo[playerid][pDemerit]);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 비행면허: %s", text4);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 항해면허: %s", text2);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 낚시면허: %s", text3);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 무기면허: %s", text5);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 대형면허: %s", text6);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 의료자격: %s", text7);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 시민증 : %s", text8);
							SCM(giveplayerid, COLOR_ERROR, string);
							SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
							format(string, sizeof(string), "INFO : "#C_WHITE" %s 님이 당신에게 자격증을 보여드립니다", sendername);
							SCM(giveplayerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 님에게 자격증을 보여드립니다", giveplayer);
							SCM(playerid, COLOR_ERROR, string);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/마약버리기", true) == 0 || strcmp(cmd, "/dropdrugs", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pLevel] > 0)
				{
					{
						if(PlayerInfo[playerid][pDrugs] >= 0)
						{
							PlayerInfo[playerid][pDrugs] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s 마약을 던져서 버립니다.", RPPlayerName(playerid));
							ProxDetector(15.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						}
						else if(PlayerInfo[playerid][pDrugs] == 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 마약이 없습니다");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 마약이 없어서 버리지 못합니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/수색",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /수색 [플레이어ID/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsACop(playerid))
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 수색할 수 없습니다"); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new text1[20], text2[20], text3[20], text4[20], text5[20], text7[20];
								if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "마약"; } else { text1 = "비어있다"; }
								if(PlayerInfo[giveplayerid][pMats] > 0) { text2 = "무기재료"; } else { text2 = "비어있다"; }
								if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text3 = "물고기"; } else { text3 = "비어있다"; }
								if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text4 = "전화번호부"; } else { text4 = "비어있다"; }
								if(PlayerInfo[giveplayerid][pWatch] > 0) { text5 = "시계"; } else { text5 = "비어있다"; }
    				            SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━");
								format(string, sizeof(string), "INFO : %s님의 소지품 목록", giveplayer);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : %s", text1);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : %s", text2);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : %s", text3);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : %s", text4);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : %s", text5);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : %s", text7);
								SCM(playerid, COLOR_ERROR, string);
								new x_wep, xamm;
								GetPlayerWeaponData(giveplayerid, 10, x_wep, xamm);
								if(x_wep == 10 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 보라색 딜도"); }
								if(x_wep == 11 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 짧은 딜도"); }
								if(x_wep == 12 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 긴 딜도"); }
								if(x_wep == 13 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 하얀색 딜도"); }
								if(x_wep == 14 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 꽃다발"); }
								if(x_wep == 15 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 지팡이"); }
								GetPlayerWeaponData(giveplayerid, 11, x_wep, xamm);
								if(x_wep == 44 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 야간 투시경"); }
								if(x_wep == 45 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 적외선 감지기"); }
								if(x_wep == 46 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 낙하산"); }
								GetPlayerWeaponData(giveplayerid, 9, x_wep, xamm);
								if(x_wep == 41 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 스프레이"); }
								if(x_wep == 42 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 소화기"); }
								if(x_wep == 43 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 카메라"); }
								GetPlayerWeaponData(giveplayerid, 1, x_wep, xamm);
								if(x_wep == 2 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 골프채"); }
								if(x_wep == 3 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 경찰봉"); }
								if(x_wep == 4 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 칼"); }
								if(x_wep == 5 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 알루미늄방망이"); }
								if(x_wep == 6 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 삽"); }
								if(x_wep == 7 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 당구채"); }
								if(x_wep == 8 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 카나타"); }
								if(x_wep == 9 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 전기톱"); }
								GetPlayerWeaponData(giveplayerid, 2, x_wep, xamm);
								if(x_wep == 22 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 콜트"); }
								if(x_wep == 23 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 소음기"); }
								if(x_wep == 24 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 데저트이글"); }
								GetPlayerWeaponData(giveplayerid, 3, x_wep, xamm);
								if(x_wep == 25 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 샷건"); }
								if(x_wep == 26 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 스완오프샷건"); }
								if(x_wep == 27 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 컴뱃샷건"); }
								GetPlayerWeaponData(giveplayerid, 4, x_wep, xamm);
								if(x_wep == 29 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : MP5"); }
								if(x_wep == 28 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : Mac10"); }
								if(x_wep == 32 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 텍구"); }
								GetPlayerWeaponData(giveplayerid, 5, x_wep, xamm);
								if(x_wep == 31 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 엠포"); }
								if(x_wep == 30 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : AK-47"); }
								GetPlayerWeaponData(giveplayerid, 6, x_wep, xamm);
								if(x_wep == 33 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 라이플"); }
								if(x_wep == 34 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 스나이퍼"); }
								GetPlayerWeaponData(giveplayerid, 7, x_wep, xamm);
								if(x_wep == 35 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 로켓런처"); }
								if(x_wep == 36 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 유도발사기"); }
								if(x_wep == 37 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 화염방사기"); }
								if(x_wep == 38 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 미니건"); }
								GetPlayerWeaponData(giveplayerid, 8, x_wep, xamm);
								if(x_wep == 17 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 최루탄"); }
								if(x_wep == 18 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 화염병"); }
								if(x_wep == 39 && xamm > 0){ SendClientMessage(playerid, COLOR_ADMIN, "INFO : 설치용폭탄"); }
								if(x_wep == 16 && xamm > 0){ SendClientMessage(playerid, COLOR_ERROR, "INFO : 수류탄"); }
								if(PlayerInfo[giveplayerid][pSex] == 1) { format(string, sizeof(string), " %s  %s의 몸을 수색합니다.", sendername ,giveplayer); }
								else { format(string, sizeof(string), "* %s %s의 몸을 수색합니다.", sendername ,giveplayer); }
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}

				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (경찰/FBI/CIA)이 아닙니다");
			}
			return 1;
		}
				if(strcmp(cmd,"/friskinv",true)==0 || strcmp(cmd,"/가방수색",true)==0)
			{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /가방수색 [플레이어번호/플레이어이름]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
							if(PlayerInfo[giveplayerid][pGabang] == 0)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 가방이 없습니다.");
								return 1;
							}
							if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신의 가방을 수색할 수 없습니다. (/가방)으로 확인하십시오"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							ClearChatbox(playerid, 2);
							format(string, sizeof(string), "%s님의 가방 정보", giveplayer);
							SCM(playerid, COLOR_WHITE, string);
							if(PlayerInfo[giveplayerid][pInvWeapon] != 0 && PlayerInfo[giveplayerid][pInvAmmo] != 0)
							{
								new gunname[100];
								GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon], gunname, sizeof(gunname));
								if(PlayerInfo[giveplayerid][pInvAmmo] == 65535)
								{
									format(string, sizeof(string), "[1.%s 1]", gunname);
								}
								else
								{
									format(string, sizeof(string), "[1.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo]);
								}
							}
							else
							{
								SCM(playerid, COLOR_ERROR, "[1.빈 공간 0]");
							}
							if(PlayerInfo[giveplayerid][pInvWeapon2] != 0 && PlayerInfo[giveplayerid][pInvAmmo2] != 0)
							{
								new gunname[100];
								GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon2], gunname, sizeof(gunname));
								if(PlayerInfo[giveplayerid][pInvAmmo2] == 65535)
								{
									format(string, sizeof(string), "[2.%s 1]", gunname);
								}
								else
								{
									format(string, sizeof(string), "[2.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo2]);
								}
							}
							else
							{
								SCM(playerid, COLOR_ERROR, "[2.빈 공간 0]");
							}
							if(PlayerInfo[giveplayerid][pInvWeapon3] != 0 && PlayerInfo[giveplayerid][pInvAmmo3] != 0)
							{
								new gunname[100];
								GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon3], gunname, sizeof(gunname));
								if(PlayerInfo[giveplayerid][pInvAmmo3] == 65535)
								{
									format(string, sizeof(string), "[3.%s 1]", gunname);
								}
								else
								{
									format(string, sizeof(string), "[3.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo3]);
								}
							}
							else
							{
								SCM(playerid, COLOR_ERROR, "[3.빈 공간 0]");
							}
							if(PlayerInfo[giveplayerid][pInvWeapon4] != 0 && PlayerInfo[giveplayerid][pInvAmmo4] != 0)
							{
								new gunname[100];
								GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon4], gunname, sizeof(gunname));
								if(PlayerInfo[giveplayerid][pInvAmmo4] == 65535)
								{
									format(string, sizeof(string), "[4.%s 1]", gunname);
								}
								else
								{
									format(string, sizeof(string), "[4.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo4]);
								}
							}
							else
							{
								SCM(playerid, COLOR_ERROR, "[4.빈 공간 0]");
							}
							if(PlayerInfo[giveplayerid][pInvWeapon5] != 0 && PlayerInfo[giveplayerid][pInvAmmo5] != 0)
							{
								new gunname[100];
								GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon5], gunname, sizeof(gunname));
								if(PlayerInfo[giveplayerid][pInvAmmo5] == 65535)
								{
									format(string, sizeof(string), "[5.%s 1]", gunname);
								}
								else
								{
									format(string, sizeof(string), "[5.%s %d]", gunname, PlayerInfo[giveplayerid][pInvAmmo5]);
								}
							}
							else
							{
								SCM(playerid, COLOR_ERROR, "[5.빈 공간 0]");
							}
							if(PlayerInfo[playerid][pga] != 0)
							{
								//new gunname[100];
								//GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon5], gunname, sizeof(gunname));
								if(PlayerInfo[playerid][pga] == 65535)
								{
									format(string, sizeof(string), "[6.%d]", PlayerInfo[playerid][pga]);
								}
								else
								{
									format(string, sizeof(string), "[6.%d]",PlayerInfo[playerid][pga]);
								}
							}
							else
							{
								SCM(playerid, COLOR_ERROR, "[6.빈 공간 0]");
							}
							format(string, sizeof(string), "* %s %s의 가방을 수색한다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							Anim(playerid,"OTB","betslp_loop",4.1,0,1,1,1,1);
							return 1;
						}
					}
				}
			}
			return 1;
		}
		//if(PlayerInfo[playerid][pga] != 0)
		//		{
		//			format(string, sizeof(string), "6| 방탄복 %f", PlayerInfo[playerid][pga]);
		//			SCM(playerid, COLOR_INFO, string);
		//		}
		//		else
		///		{
		///			SCM(playerid, COLOR_INFO, "6| 방탄복 없음");
		///		}
		//
		//
	if(strcmp(cmd, "/마피아감옥") == 0)
	{
		if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
		{
			new mafia[256];
			mafia = strtok(cmdtext, idx);
			if(!strlen(mafia))
			{
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "마피아 감옥");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /마피아감옥 [이름]");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 열기1,닫기1 , 열기2,닫기2");
			return 1;
		}

	if(strcmp(mafia,"열기1",true) == 0)
	{
		SetObjectRot(MafiaJail1,0.0,0.0,90.0);
	}
	if(strcmp(mafia,"닫기1",true) == 0)
	{
		SetObjectRot(MafiaJail1,0.0,0.0,0.0);
	}
	if(strcmp(mafia,"열기2",true) == 0)
	{
		SetObjectRot(MafiaJail2,0.0,0.0,90.0);
	}
	if(strcmp(mafia,"닫기2",true) == 0)
	{
		SetObjectRot(MafiaJail2,0.0,0.0,0.0);
	}
	}
	else
	{
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 마피아가 아닙니다 !");
	}
	return 1;
	}
		if(strcmp(cmd, "/뺏기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsAMember(playerid))
				{
					new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
						SCM(playerid, COLOR_YELLOW, "물건 뺏기 목록");
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /뺏기 [아이템이름] [플레이어의번호]");
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 폰 무기");
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
						return 1;
					}
					if(strcmp(x_nr,"폰",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /뺏기 폰 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(3.0, playerid, giveplayerid))
								{
									if(giveplayerid == playerid) { SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신의 물건을 스스로 훔칠 수 없습니다."); return 1; }
									format(string, sizeof(string), "SYSTEM :"#C_WHITE" 당신은 %s의 스마트폰을 뺏어서 버렸습니다.", RPPlayerName(giveplayerid));
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "SYSTEM :"#C_WHITE" %s이 당신의 스마트폰을 가져갑니다.", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
									format(string, sizeof(string), "* %s 이(가) %s의 스마트폰을 뺏어서 버린다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									PlayerInfo[giveplayerid][pPnumber] = 0;
									PlayerInfo[giveplayerid][pSmart] = 0;
								}
								else
								{
									SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 상대방이 당신 주변에 있지 않습니다.");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else if(strcmp(x_nr,"무기",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp)) {
							SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" /뺏기 무기 [플레이어의번호/이름의부분]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								if (ProxDetectorS(3.0, playerid, giveplayerid))
								{
									GetPlayerName(playerid, sendername, sizeof(sendername));
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									/*new gunID = GetPlayerWeapon(playerid);
									new gunAmmo = GetPlayerAmmo(playerid);*/
									new gunIDl = GetPlayerWeapon(giveplayerid);
									new gunAmmol = GetPlayerAmmo(giveplayerid);
									if(giveplayerid == playerid) { SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신의 물건을 스스로 훔칠 수 없습니다."); return 1; }
									format(string, sizeof(string), "SYSTEM :"#C_WHITE" 당신은 %s의 무기를 가져왔습니다.", RPPlayerName(giveplayerid));
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "SYSTEM :"#C_WHITE" %s이 당신의 무기를 가져갑니다.", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ERROR, string);
									GiveWeapon(playerid, gunIDl, gunAmmol);
									RemovePlayerWeapon(giveplayerid, gunIDl);
									format(string, sizeof(string), "* %s 이(가) %s의 무기를 뺏어간다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								}
								else
								{
									SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 상대방이 당신 주변에 있지 않습니다.");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 알수없는 아이템 이름입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 조직에 속해있지 않습니다.");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd,"/총기판매",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pJob] != 6)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 총기상인이 아닙니다.");
					return 1;
				}
				new x_weapon[256],weapon[M_P],ammo[M_P],price[M_P];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /총기판매 [플레이어의번호/이름의부분] [무기이름]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 소음콜트(500) 콜트(500) 데저트이글(1000) mp5(1000) 라이플(1500) ak47(2000)");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 샷건(750) 낙하산(100) 방탄복(500)");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						x_weapon = strtok(cmdtext, idx);
						if(!strlen(x_weapon))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /총기판매 [플레이어의번호/이름의부분] [무기이름]");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 소음콜트(500) 콜트(500) 데저트이글(1000) mp5(1000) 라이플(1500) ak47(2000)");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 샷건(750) 낙하산(100) 방탄복(500)");
							return 1;
						}
					}
				    if(strcmp(x_weapon,"소음콜트",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 23; price[playerid] = 500; ammo[playerid] = 35; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
					else if(strcmp(x_weapon,"콜트",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 22; price[playerid] = 500; ammo[playerid] = 70; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
					else if(strcmp(x_weapon,"데저트이글",true) == 0) { if(PlayerInfo[playerid][pMats] > 999) { weapon[playerid] = 24; price[playerid] = 1000; ammo[playerid] = 35; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
					else if(strcmp(x_weapon,"mp5",true) == 0) { if(PlayerInfo[playerid][pMats] > 999) { weapon[playerid] = 29; price[playerid] = 1000; ammo[playerid] = 150; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
					else if(strcmp(x_weapon,"샷건",true) == 0) { if(PlayerInfo[playerid][pMats] > 749) { weapon[playerid] = 25; price[playerid] = 750; ammo[playerid] = 25; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
					else if(strcmp(x_weapon,"낙하산",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 46; price[playerid] = 100; ammo[playerid] = 1; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
                    else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 1999) { weapon[playerid] = 30; price[playerid] = 2000; ammo[playerid] = 300; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
                    else if(strcmp(x_weapon,"방탄복",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { SetArmour(giveplayerid, 50); price[playerid] = 500; } else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 방탄복을 만들기엔 총기재료가 부족합니다"); return 1; } }
                    else if(strcmp(x_weapon,"라이플",true) == 0) { if(PlayerInfo[playerid][pMats] > 1499) { weapon[playerid] = 33; price[playerid] = 1500; ammo[playerid] = 25;} else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 무기를 만들기엔 총기재료가 부족합니다"); return 1; } }
					else { SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 알수없는 무기 이름입니다"); return 1; }
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(giveplayerid == playerid)
						{
							//if(giveplayerid == playerid) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 총기판매를 할 수 없습니다"); return 1; }
							//ConsumingMoney[playerid] = 1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 무기 %s(총알-%d)를 총기재료 %d만큼을 사용하여 주었습니다", giveplayer,x_weapon, ammo[playerid], price[playerid]);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 무기 %s(총알-%d)를 %s님에게 받았습니다", x_weapon, ammo[playerid], sendername);
							SCM(giveplayerid, COLOR_ERROR, string);
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							new gunname[100];
							GetWeaponName(weapon[playerid], gunname, sizeof(gunname));
							format(string, sizeof(string), "* %s %s의 무기를 제작한다", sendername, gunname);
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							GiveWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
							PlayerInfo[playerid][pMats] -= price[playerid];
							Anim(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1);
						}
						if(PlayerInfo[playerid][pMiserPerk] > 0)
						{
							new skill = 2 * PlayerInfo[playerid][pMiserPerk];
							new mats = price[playerid] / 100;
							price[playerid] -= (mats)*(skill);
						}
						if(giveplayerid != playerid)
						{
							//ConsumingMoney[playerid] = 1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 에게 %s의 무기 %d 발 만큼 총기재료 %d 만큼 사용하여 주었습니다", giveplayer,x_weapon, ammo[playerid], price[playerid]);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s의 무기 %d 발 만큼 %s 에게 받았습니다", x_weapon, ammo[playerid], sendername);
							SCM(giveplayerid, COLOR_ERROR, string);
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							new gunname[100];
							GetWeaponName(weapon[playerid], gunname, sizeof(gunname));
							format(string, sizeof(string), "* %s 무엇인가를 %s 에게 준다", sendername, giveplayer);
							ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							GiveWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
							PlayerInfo[playerid][pMats] -= price[playerid];
							Anim(playerid,"BOMBER","BOM_Plant_Crouch_In",4.1,0,1,1,1,1);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 상대방과 너무 멀리 있습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}

		if(strcmp(cmd,"/가공",true)==0)
		{
			if(PlayerInfo[playerid][pJob] == 6)
			{
				if(PlayerInfo[playerid][pPackage] != 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /가공 [개수]");
						return 1;
					}
					new number = strval(tmp);
					if(number > PlayerInfo[playerid][pPackage] || number < 0)
					{
						return 1;
					}
					new get = number*200;
					PlayerInfo[playerid][pMats] += get;
					PlayerInfo[playerid][pPackage] -= number;
					format(string, sizeof(string), "INFO : "#C_WHITE" 패키지 %d개를 가공해서 %d개의 총기재료를 얻었다.", number, get);
					SCM(playerid, COLOR_ERROR, string);
					format(string, sizeof(string), "* %s 패키지를 도구로 이용하여 가공한다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					Anim(playerid,"BOMBER","BOM_Plant_In",4.1,0,1,1,1,1);
			//		Bunhae[playerid] = 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 패키지가 없습니다.");
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 총기상인이 아닙니다.");
			}
			return 1;
		}
		
		if(strcmp(cmd,"/얻기",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);
				if(!strlen(x_job)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "얻기 목록");
					SCM(playerid, COLOR_ERROR,	"INFO : "#C_WHITE" /얻기 [이름]");
					SCM(playerid, COLOR_ERROR, "[노점] : 라면 아이스 핫도그");
					SCM(playerid, COLOR_ERROR, "[농부] : 씨앗 삽");
					SCM(playerid, COLOR_ERROR, "[일반] : 밀수 불법 시민증");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				if(strcmp(x_job,"시민증",true) == 0)
				{
				    if(PlayerToPoint(50.0,playerid,362.2445,173.5942,1008.4747))
				    {
				        if(GetMoney(playerid) >= 199)
				        {
				            CivilTest[playerid] = 1;
				        	CivilTime[playerid] = 1;
							SetPlayerFreeze(playerid, true, 1);
							TogglePlayerControllable(playerid, 0);
							GiveMoney(playerid, -200);
							SetPlayerInterior(playerid,3);
						}
						else
						{
					    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시민증을 발급 받을 수 있는 금액이 부족합니다.");
					    	return 1;
						}
					}
					else
					{
					      SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 시청에 있지 않습니다.");
					    return 1;
					}
				}
				if(strcmp(x_job,"불법",true) == 0)
				{
					if(PlayerInfo[playerid][pJob] == 4)
					{
						if(PlayerToPoint(50.0,playerid,1271.5930,295.0219,20.6563))//얻는 좌표,
						{
						if(PlayerInfo[playerid][pDrugs] >= 30)//얻을 수 있는 한도.
					    {
						format(string, sizeof(string), "INFO : "#C_WHITE" 마약은 30g 이상 갖고 다닐 수 없습니다.", PlayerInfo[playerid][pDrugs]);
						SCM(playerid, COLOR_ERROR, string);
						return 1;
				    	}
							new gunname[256];
							gunname = strtok(cmdtext, idx);
							if(!strlen(gunname))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /얻기 불법 [아이템] [개수]"); // 선택
								SCM(playerid, COLOR_ERROR, "[아이템] : 마약");
								return 1;
							}
							if(strcmp(gunname,"마약",true) == 0)//이거지
							{
								if(!BuyItem[playerid][0])
								{
									new jaru, price1;
									tmp = strtok(cmdtext, idx);
									if(!strlen(tmp))
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /얻기 불법 마약 [얻을 분량(g)]");
										return 1;
									}
									jaru = strval(tmp);
									if(jaru < 1 || jaru > 30){SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 1g당 $25 입니다. 최대 30g 까지 획득하실 수 있습니다."); return 1;}
									price1=jaru*25;
									if(GetMoney(playerid) >= price1)
									{
										PlayerInfo[playerid][pDrugs]+=jaru;
										AttachObjectCorrectly(playerid, 1575);
										GiveMoney(playerid, -price1);
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 마약 %dg을 $%d에 구매 하셨습니다. (/소지품)", jaru, price1);
										SCM(playerid, COLOR_ERROR, string);
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 한번 밀수하였습니다.");
								}
							}
							return 1;
						}
						else
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 마약획득장소에 있지 않습니다.");
							return 1;
						}
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 마약상이 아닙니다.");
						return 1;
					}
				}
				if(strcmp(x_job,"라면",true) == 0)
				{
					if(PlayerToPoint(3.0, playerid, 1074.4016,-1298.0721,17.0543))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 라면사리를 구매하셨습니다.");
						GiveMoney(playerid, -5);
						PlayerInfo[playerid][pfkaus] += 1;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 포장마차 판매점(입사위치)에 없습니다");
						return 1;
					}
				}
				if(strcmp(x_job,"밀수",true) == 0)
				{
					if(PlayerInfo[playerid][pJob] == 6)
					{
						if(PlayerToPoint(3.0, playerid, 2947.2197,-2004.6283,9.3792) || PlayerToPoint(3.0, playerid, 2101.6350,-104.7200,2.2769))//
						{
							if(milsugun==false)
							{
								return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밀수 약속된 시간이 아닙니다.");
							}
							new gunname[256];
							gunname = strtok(cmdtext, idx);
							if(!strlen(gunname))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /얻기 밀수 [밀수품] [개수]");
								SCM(playerid, COLOR_ERROR, "[밀수품] : 패키지");
								return 1;
							}
							if(strcmp(gunname,"패키지",true) == 0)//이거지
							{
								if(!BuyItem[playerid][0])
								{
									new jaru, price1;
									tmp = strtok(cmdtext, idx);
									if(!strlen(tmp))
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 	[개수]");
										return 1;
									}
									jaru = strval(tmp);
									if(jaru < 1 || jaru > 20){SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밀수할 패키지의 수는 최소 1개 이상 20개 이하입니다."); return 1;}
									price1=jaru*200;
									if(GetMoney(playerid) >= price1)
									{
										BuyItem[playerid][0]=true;
										PlayerInfo[playerid][pPackage]+=jaru;
										AttachObjectCorrectly(playerid, 1575);
										GiveMoney(playerid, -price1);
										format(string, sizeof(string), "INFO : "#C_WHITE" 패키지 %d개를 $%d에 밀수장에게 구매 하였습니다.", jaru, price1);
										SCM(playerid, COLOR_ERROR, string);
									}
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 한번 밀수하였습니다.");
								}
							}
							return 1;
						}
						else
						{
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 밀수장소에 있지 않습니다.");
							return 1;
						}
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 총기상이 아닙니다.");
						return 1;
					}
				}
				if(strcmp(x_job,"아이스",true) == 0)
				{
					if(PlayerToPoint(3.0, playerid, 1074.4016,-1298.0721,17.0543))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아이스크림을 구매하셨습니다.");
						GiveMoney(playerid, -5);
						PlayerInfo[playerid][pdkdltm] += 1;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 포장마차 판매점(입사위치)에 없습니다");
						return 1;
					}
				}
				if(strcmp(x_job,"핫도그",true) == 0)
				{
					if(PlayerToPoint(3.0, playerid, 1074.4016,-1298.0721,17.0543))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 핫도그를 구매하셨습니다.");
						GiveMoney(playerid, -5);
						PlayerInfo[playerid][pgktehrm] += 1;
						return 1;
					}
					else
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 포장마차 판매점(입사위치)에 없습니다");
						return 1;
					}
				}
				if(strcmp(x_job,"씨앗",true) == 0)
				{
					if(PlayerInfo[playerid][pMeal] >= 11)
					{
						format(string, sizeof(string), "INFO : "#C_WHITE" 씨앗은 10개 이상 갖고 다닐 수 없습니다.", PlayerInfo[playerid][pDrugs]);
						SCM(playerid, COLOR_ERROR, string);
						return 1;
					}
					new price;
					new ammount;
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /얻기 씨앗 [수량]");
						return 1;
					}
					ammount = strval(tmp);
					if (PlayerInfo[playerid][pJob] == 11 && PlayerToPoint(3.0,playerid,-382.8919,-1438.9773,26.3300))
					{
						if(ammount < 0) { SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 잘못된 개수입니다"); return 1; }
						price = ammount * 0;
						if(ammount + PlayerInfo[playerid][pMeal] >= 11)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" 씨앗은 10개 이상 갖고 다닐 수 없습니다", PlayerInfo[playerid][pDrugs]);
							SCM(playerid, COLOR_ERROR, string);
							return 1;
						}
						if(GetMoney(playerid) > price)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 씨앗을 %d개를 $%d에 구매했습니다", ammount, price);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, -price);
							PlayerInfo[playerid][pMeal] += ammount;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 씨앗을 사기엔 돈이 부족합니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농부가 아니거나 씨앗을 얻는 곳에 있지 않습니다");
						return 1;
					}
				}
				else { return 1; }
			}
			return 1;
		}
		if(strcmp(cmd,"/심기",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);

				if(!strlen(x_job)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "심기 목록");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /심기 [이름]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 씨앗");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				if(strcmp(x_job,"씨앗",true) == 0)
				{
					if(PlayerInfo[playerid][pJob] != 11)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농부가 아닙니다.");
						return 1;
					}
					if(PlayerInfo[playerid][pMeal] < 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밀씨앗이 없습니다.");
						return 1;
					}
					if(tlarl[playerid] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 씨앗은 하나만 심을 수 있습니다.");
						return 1;
					}
					if(!IsAtHarvest(playerid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밭에 있지 않습니다.");
						return 1;
					}
					if(IsPlayerInVehicle(playerid,GetPlayerVehicleID(playerid)))
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이동수단에 탑승하고 있어서 불가능합니다.");
					    return 1;
					}
					new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					alftlarl = CreateObject(872, X, Y, Z-8, 0, 0, A);
					tlarl[playerid] = alftlarl;
					GetPlayerPos(playerid, X, Y, Z);
					MoveObject(alftlarl, X, Y, Z-3, 0.4);
					PlayerInfo[playerid][pMeal] -= 1;
					GameTextForPlayer(playerid, "~w~you planting a meal", 5000, 5);
					format(string, sizeof(string), "* %s 삽으로 밭을 파고는 씨앗을 뿌려 심는다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					alftnghkr[playerid] = 1;
					SetPlayerFreeze(playerid, true, 1);
					TogglePlayerControllable(playerid, 0);
					SetTimerEx("alftnghkrtimer", 15000, false, "i", playerid);
					Anim(playerid,"CHAINSAW","WEAPON_csawlo",4.1,0,1,1,1,0);
				}
				else { return 1; }
			}
			return 1;
		}

		if(strcmp(cmd,"/수확",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);

				if(!strlen(x_job))
				{
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "수확 목록");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /수확 [이름]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밀");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				if(strcmp(x_job,"",true) == 0)
				{
					if(PlayerInfo[playerid][pJob] != 11)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농부가 아닙니다.");
						return 1;
					}
					if(tlarl[playerid] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 씨앗을 심지 않았습니다.");
						return 1;
					}
					if (alftnghkr[playerid] == 1 && alftnghkr[playerid] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밀이 다 자라지 않았습니다.");
						return 1;
					}
					DestroyObject(tlarl[playerid]);
					tlarl[playerid] = 0;
					alftnghkr[playerid] = 0;
					PlayerInfo[playerid][pHarvestMeal] += 1;
					GameTextForPlayer(playerid, "~w~you harvesting a meal", 5000, 5);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 밀을 수확했습니다.");
					PlayerInfo[playerid][pCarTime] = 0;
					Anim(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				}
				else { return 1; }
			}
			return 1;
		}

		if(strcmp(cmd, "/join", true) == 0 || strcmp(cmd, "/입사", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] == 0)
				{
					if(gTeam[playerid] == 20 || gTeam[playerid] == 21 || gTeam[playerid] == 24 || gTeam[playerid] == 25)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 직업이 있거나, 수배중인 사람입니다");
						return 1;
					}
					if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2752.2336,2478.6577,11.0625))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 피자 배달부원이 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 3;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2770.8308,-1628.5758,12.1775))
					{
					    if(!IsAMember(playerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 범죄 단체만 가능한 직업입니다.");
							return 1;
						}
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 마약판매자가 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 직업은 불법직업이므로 정부에서 제재를 가할 수도 있습니다");
						GettingJob[playerid] = 4;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1074.4016,-1298.0721,17.0543))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노점상이 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 5;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2744.2468,-2453.8977,13.8623))
					{
						if(!IsAMember(playerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 범죄 단체만 가능한 직업입니다.");
							return 1;
						}
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 총기상인이 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 직업은 불법직업이므로 정부에서 제재를 가할 수도 있습니다");
						GettingJob[playerid] = 6;
	 				}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,-382.9749,-1426.4969,26.3186))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 농부가 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 11;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,413.3022,-1757.6086,8.2427))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 어부가 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 12;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2620.6934,1079.9821,10.8203))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 트럭기사가 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 13;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2219.3840,-2666.3503,13.5399))
					{
						SCM(playerid, COLOR_RED, "* Warning : 이 직업은 불법직업이므로 정부에서 제재를 가할 수도 있습니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 위조면허판매자가 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 14;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,1810.7354,-1895.6010,13.5800))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 택시기사가 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 20;
					}
					else if (GetPlayerState(playerid) == 1 && PlayerToPoint(3.0, playerid,2194.3259,-1973.0719,13.5593))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 환경미화원이 되기를 희망합니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 일을 (/동의 직업)으로 시작할 수 있습니다");
						GettingJob[playerid] = 16;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 입사위치에 있지 않습니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 직업이 있습니다. (/사퇴)로 일을 그만둡니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/fill", true) == 0 || strcmp(cmd, "/주유", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsAtGasStation(playerid))
				{
					if(Gas[idcar] <= 99)
					{
						new string_S[128];
					    TogglePlayerControllable(playerid, 0);
						SetPlayerFreeze(playerid, true, 1);
						TogglePlayerControllable(playerid, 0);
						GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Fueling Vehicle, please wait",2000,3);
						SetTimer("Fillup",RefuelWait,0);
						Refueling[playerid] = 1;
						format(string_S, sizeof(string_S), "* %s 셀프주유소에서 주유건으로 주유구에 투입해 기름을 충전한다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string_S, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Gas can is full",2000,3);
					}
				}
				else
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 주유소에 있지 않습니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/연료", true) == 0 || strcmp(cmd, "/주유차", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pFuel] > 0)
				{
					if(Gas[GetPlayerVehicleID(playerid)] < 81)
					{
						if(!IsPlayerInAnyVehicle(playerid))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승해 주세요.");
							return 1;
						}
						new string_S[128];
						Gas[GetPlayerVehicleID(playerid)] += 20;
						PlayerInfo[playerid][pFuel] -= 1;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 차에 20리터의 기름을 채웠습니다");
						format(string_S, sizeof(string_S), "* %s 차량 내부 주유구에 가스캔을 삽입시켜 연료를 넣는다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string_S, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 기름이 충분합니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가스캔에 남은 기름이 없습니다");
				}
			}
			return 1;
		}
			if (strcmp(cmd, "/감확", true) == 0 || strcmp(cmd, "/감옥확인", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
					{
						SCM(playerid, COLOR_ERROR, "감옥 수감자 명단");
						for(new i = 0; i < M_P; i++)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJailTime] > 0 && PlayerInfo[i][pJailed] == 1 || PlayerInfo[i][pJailed] == 45)
								{
									new Jail[64];
									if(PlayerInfo[i][pJailed] == 1) { Jail = "경찰서감옥"; }
									else if(PlayerInfo[i][pJailed] == 2) { Jail = "드모르간"; }
									else if(PlayerInfo[i][pJailed] == 45) { Jail = "FBI감옥"; }
									GetPlayerName(i, sendername, sizeof(sendername));
									format(string, 256, "(죄수) [%s] 감옥위치:[%s] 수감시간:[%d초]", sendername,Jail,PlayerInfo[i][pJailTime]);
									SCM(playerid, COLOR_ERROR, string);
								}
							}
						}
					}
					else { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다"); }
				}
				return 1;
			}

   	if(strcmp(cmd, "/EMT", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 4)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 1.0,-34.5214,-1401.8560,863.6719))
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 관계자외출입금지 장소에 있지 않습니다.");
				}
				if(PlayerInfo[playerid][pGunLic]==0)
				{
					return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 무기면허증이 없습니다.");
			 	}
				if(SWAT[playerid]==false)
				{
					ResetPlayerWeapons(playerid);
					SetArmour(playerid, 80);
					GiveWeapon(playerid, 23, 25);
					GiveWeapon(playerid, 4, 1);
					GiveWeapon(playerid, 42, 1000);
					AttachObjectCorrectly(playerid, 373);
					format(string, sizeof(string), "* %s 칼, 소형방탄복, 콜트를 장착한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(SWAT[playerid]==true)
				{
					ResetPlayerWeapons(playerid);
					format(string, sizeof(string), "* %s 칼, 소형방탄복, 콜트를 해제한다.", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					RemovePlayerAttachedObject(playerid,4);
				}
			}
			else
			{
				return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의료원이 아닙니다.");
			}

		}
		return 1;
	}
//======================================================입원시스템 작업중======================================
            if (strcmp(cmd, "/입확", true) == 0 || strcmp(cmd, "/입원확인", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
					{
						SCM(playerid, COLOR_INFO1, "┏━━━━입원중인 환자━━━┓");
						AP
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJailTime] > 0 && (PlayerInfo[i][pJailed] == 99))
								{
									new Jail[64];
									if(PlayerInfo[i][pJailed] == 1) { Jail = "입원"; }
									GetPlayerName(i, sendername, sizeof(sendername));
									format(string, 256, "(환자) [%s] 입원시간:[%d초]", sendername,PlayerInfo[i][pJailTime]);
									SCM(playerid, COLOR_ERROR, string);
								}
							}
						}
					}
					else { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다."); }
				}
				return 1;
			}//WantedLevel[giveplayerid] = 2;
//-----------------------------------------------------------------------------------------------------------
          if (strcmp(cmd, "/입확2", true) == 0 || strcmp(cmd, "/입원확인2", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
						SCM(playerid, COLOR_INFO1, "┏━━━━입원중인 환자━━━┓");
						AP
						{
							if(IsPlayerConnected(i))
							{
								if(WantedLevel[playerid] > 0)
								{
									//new Jail[64];
									//if(PlayerInfo[i][pJailed] == 1) { Jail = "입원"; }
									new baejin23[128];
									//new married2[20];
		                            strmid(baejin23, PlayerInfo[playerid][pMarriedTo2], 0, strlen(PlayerInfo[playerid][pMarriedTo2]), 255);
									//strmid(PlayerInfo[playerid][pMarriedTo2], result, 0, strlen(result), 255);
									GetPlayerName(i, sendername, sizeof(sendername));
									format(string, 256, "(환자) [%s] 입원시간:[%s]", sendername,baejin23);
									SCM(playerid, COLOR_ERROR, string);
								}
							}
						}
					}
					else { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 의사가 아닙니다."); }
				}
				return 1;
			}//WantedLevel[giveplayerid] =
		if(!strcmp(cmdtext, "/FBI잠복", true))
		{
			if(IsPlayerConnected(playerid))
			{
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 먼저 해야 합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
				{
					if(wkaqhrahem[playerid] == 0)
					{
						wkaqhrahem[playerid] = 1;
						SCM(playerid, COLOR_ERROR," INFO : "#C_WHITE" 당신은 잠복을 시작합니다. (/리더복)으로 잠복용으로 모든 옷을 입을 수 있습니다");
						SCM(playerid, COLOR_ERROR, " INFO : "#C_WHITE" /리더복");
						return 1;
					}
					else if(wkaqhrahem[playerid] == 1)
					{
						wkaqhrahem[playerid] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 잠복수사를 그만두었습니다. 잠복관련 기능을 사용할 수 없습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 FBI가 아닙니다 ");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/총버림", true) == 0 || strcmp(cmd, "/총버리기", true) == 0 || strcmp(cmd, "/무기버림", true) == 0 || strcmp(cmd, "/무기버리기", true) == 0)
		{
			new weaponsa = GetPlayerWeapon(playerid);
			RemovePlayerWeapon(playerid, weaponsa);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(weaponsa == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 버리기를 원하시는 무기를 손에 들고 시도해주십시오");
				return 1;
			}
			else if(weaponsa == 1)
			{
				format(string, sizeof(string), "* %s 브레스너클을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 2)
			{
				format(string, sizeof(string), "* %s 골프채를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 3)
			{
				format(string, sizeof(string), "* %s 경찰곤봉을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 4)
			{
				format(string, sizeof(string), "* %s 나이프를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 5)
			{
				format(string, sizeof(string), "* %s 알루미늄방망이를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 6)
			{
				format(string, sizeof(string), "* %s 삽을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 7)
			{
				format(string, sizeof(string), "* %s 당구채를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 8)
			{
				format(string, sizeof(string), "* %s 카타나를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 9)
			{
				format(string, sizeof(string), "* %s 전기톱을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 14)
			{
				format(string, sizeof(string), "* %s 꽃을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 15)
			{
				format(string, sizeof(string), "* %s 지팡이를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 22)
			{
				format(string, sizeof(string), "* %s 듀얼피스톨을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 23)
			{
				format(string, sizeof(string), "* %s 소음권총을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 24)
			{
				format(string, sizeof(string), "* %s 데저트이글을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 25)
			{
				format(string, sizeof(string), "* %s 샷건을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 26)
			{
				format(string, sizeof(string), "* %s 듀얼샷건을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 27)
			{
				format(string, sizeof(string), "* %s 컴뱃샷건을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 28)
			{
				format(string, sizeof(string), "* %s 우지를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 29)
			{
				format(string, sizeof(string), "* %s MP5를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 30)
			{
				format(string, sizeof(string), "* %s AK-47을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 31)
			{
				format(string, sizeof(string), "* %s M4를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 32)
			{
				format(string, sizeof(string), "* %s Tec9를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 33)
			{
				format(string, sizeof(string), "* %s 라이플을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 34)
			{
				format(string, sizeof(string), "* %s 스나이퍼 라이플을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 35)
			{
				format(string, sizeof(string), "* %s RPG를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 36)
			{
				format(string, sizeof(string), "* %s 열추적 유도 RPG를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 37)
			{
				format(string, sizeof(string), "* %s 화염방사기를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 38)
			{
				format(string, sizeof(string), "* %s 미니건을 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 41)
			{
				format(string, sizeof(string), "* %s 스프레이를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 42)
			{
				format(string, sizeof(string), "* %s 소화기를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 43)
			{
				format(string, sizeof(string), "* %s 카메라를 버린다", RPPlayerName(playerid));
			}
			else if(weaponsa == 46)
			{
				format(string, sizeof(string), "* %s 낙하산을 버린다", RPPlayerName(playerid));
			}
			else
			{
				format(string, sizeof(string), "* %s 무기를 버린다", RPPlayerName(playerid));
			}
			ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			return 1;
		}
     	if(strcmp(cmd, "/총기재료버리기", true) == 0)
		{
		    PlayerInfo[playerid][pMats]=0;
		}
		if(strcmp(cmd, "/모든총버림", true) == 0 || strcmp(cmd, "/모든총버리기", true) == 0 || strcmp(cmd, "/모든무기버림", true) == 0 || strcmp(cmd, "/모든무기버리기", true) == 0)
		{
			new weaponsa = GetPlayerWeapon(playerid);
			ResetPlayerWeapons(playerid);
			 if(weaponsa == 0)
			 {
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 버리기를 원하시는 무기를 손에 들고 시도해주십시오");
			    return 1;
			 }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s 자신이 가진 모든 무기를 버린다", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			return 1;
		}
		if(strcmp(cmd, "/fbi무장", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(5.0,playerid,251.1769,185.6805,1008.1719))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" FBI 기지 에서만 사용가능합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pMember] != 2)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" FBI 요원만 가능합니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "FBI 무기고");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /FBI무장 [세트번호]");
					SCM(playerid, COLOR_ERROR, "(세트번호) 1 : 정보요원 2 : 진압세트 3 : 훈련세트");
					SCM(playerid, COLOR_ERROR, "(세트번호) 5 : 방탄복벗기 6 : 무장해제");
					return 1;
				}
				new item = strval(tmp);
				if (item == 1)
				{
					if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 24, 70);
						GiveWeapon(playerid, 43, 50);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 정보요원 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
 					    AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 2)
				{
					if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 24, 70);
						GiveWeapon(playerid, 29, 250);
						GiveWeapon(playerid, 31, 350);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), " %s  사물함에 있는 진압요원 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
 						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 3)
				{
					if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 23, 36);
						GiveWeapon(playerid, 34, 30);
						GiveWeapon(playerid, 31, 60);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 훈련 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
 						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 4)
				{
					if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
					{
						SetArmour(playerid, 0);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 방탄복을 벗어 넣는다.", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						RemovePlayerAttachedObject(playerid,4);
					}
				}
				else if (item == 5)
				{
					ResetPlayerWeapons(playerid);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), " %s 사물함에 총을 넣는다.", RPPlayerName(playerid));
					ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 FBI 세트번호 입니다.");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/군무장", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(5.0,playerid,317.4763,-161.8533,999.5938) || PlayerToPoint(5.0,playerid,1080.6841,-345.2799,73.9868))
				{

				if(PlayerInfo[playerid][pMember] != 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" CIA만 가능합니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "CIA 무장 창고");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /군무장 [세트번호]");
					SCM(playerid, COLOR_ERROR, "세트번호는 군 리더가 알려드립니다.");
					return 1;
				}
				new item = strval(tmp);
				if (item == 1)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 16, 3);
						GiveWeapon(playerid, 24, 170);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 31, 350);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 기본세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 2)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 16, 3);
						GiveWeapon(playerid, 24, 170);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 25, 64);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 근거리 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 5)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 16, 3);
						GiveWeapon(playerid, 24, 170);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 34, 25);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 원거리 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
   				else if (item == 1917)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 16, 3);
						GiveWeapon(playerid, 24, 170);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 34, 20);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 암살A 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 1904)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 16, 3);
						GiveWeapon(playerid, 23, 180);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 34, 30);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 암살B 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 1717)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 16, 3);
						GiveWeapon(playerid, 24, 170);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 35, 3);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 포병 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
   				else if (item == 707)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 75);
						GiveWeapon(playerid, 4, 1);
						GiveWeapon(playerid, 17, 5);
						GiveWeapon(playerid, 24, 170);
						GiveWeapon(playerid, 46, 1);
						GiveWeapon(playerid, 29, 250);
						GiveWeapon(playerid, 30, 150);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 있는 특수부대 세트로 무장한다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						AttachObjectCorrectly(playerid, 373);
					}
				}
				else if (item == 3)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						SetArmour(playerid, 0);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 방탄복을 벗어 넣는다.", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					    RemovePlayerAttachedObject(playerid,4);
					}
				}
				else if (item == 4)
				{
					if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						ResetPlayerWeapons(playerid);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 사물함에 총을 넣는다", RPPlayerName(playerid));
						ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잘못된 군무장 세트번호 입니다.");
					return 1;
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아직 업무를/무장을 할 수 없습니다. (딜레이 5분)");
			}
			}
			else
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 군기지 에서만 사용가능합니다");
			return 1;
			}
			return 1;
		}
		if(!strcmp(cmd, "/리더복", true))
		{
			new tmpp[256];
			new fmember = PlayerInfo[playerid][pFMember];
			tmpp = strtok(cmdtext, idx);
			if (!strlen(tmpp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /리더복 [스킨번호]");
				LeMem(playerid,1)
				{
					SCM(playerid,COLOR_ERROR,"(L.V.P.D) 71 141 150 265 266 267 280 281 282 283 284 285 288");
				}
				LeMem(playerid,2)
				{
					SCM(playerid,COLOR_ERROR,"(F.B.I) 163 164 165 166 286");
					if(wkaqhrahem[playerid] == 1)
					{
						SCM(playerid,COLOR_ERROR,"(F.B.I) 잠복부는 잠복중일때는 어떤 옷이든 입을 수 있습니다");
					}
				}
				LeMem(playerid,3)
				{
					SCM(playerid,COLOR_ERROR,"(CIA) 163 164 165 166 286");
					if(wkaqhrahem[playerid] == 1)
					{
						SCM(playerid,COLOR_ERROR,"(CIA) 잠복부는 잠복중일때는 어떤 옷이든 입을 수 있습니다");
					}
				}
				LeMem(playerid,4)
				{
					SCM(playerid,COLOR_ERROR,"(E.M.T) 70 71 228 274 275 276 148 172 216");
				}
				LeMem(playerid,5)
				{
					SCM(playerid,COLOR_ERROR,"(Locotes) 41 114 115 116 173 174 175");
				}
				LeMem(playerid,6)
				{
					SCM(playerid,COLOR_ERROR,"(Capone Crime Family) 113 290 111 258 127 126 125 124 98 55 91 272 46 40 165 223");
				}
				LeMem(playerid,7)
				{
					SCM(playerid,COLOR_ERROR,"(Government) 57 141 147 153 165 166 171 194 255");
				}
				LeMem(playerid,8)
				{
					SCM(playerid,COLOR_ERROR,"(Payday) 어떤옷이든 입을 수 있습니다");
				}
				LeMem(playerid,9)
				{
					SCM(playerid,COLOR_ERROR,"(C.N.N) 12 40 82 83 84 85 148 170 187 188 193 214 216 217 227");
				}
				LeMem(playerid,10)
				{
					SCM(playerid,COLOR_ERROR,"(P.C.T) 94 194 240 253 255");
				}
				LeMem(playerid,11)
				{
				    SCM(playerid, COLOR_ERROR, "(Hi-Car) 50 133 159 192 233");
				}
				LeMem(playerid,12)
				{
					SCM(playerid,COLOR_ERROR,"(Crips) 21 24 25 28 66 143 176 297");
				}
				LeMem(playerid,13)
				{
					SCM(playerid,COLOR_ERROR,"(North Side Nortenos X4) 108 109 110 30 29");
				}
				LeMem(playerid,14)
				{
					SCM(playerid,COLOR_ERROR,"(Dokugawa Kai) 117 123 294 186 120");
				}
				LeMem(playerid,15)
				{
					SCM(playerid,COLOR_ERROR,"(三合會) 206 117 118 59 185 186 187 223 224 43 46 57 261");
				}
				LeMem(playerid,16)
				{
					SCM(playerid,COLOR_ERROR,"(Seville) 105 106 107 269 270 271");
				}
				LeMem(playerid,17)
				{
					SCM(playerid,COLOR_ERROR,"(Bloodz) 19 22 28 40 67 144 180 ");
				}
				LeMem(playerid,18)
				{
					SCM(playerid, COLOR_ERROR, "(해태그룹) 186 120 122 118 117 240 294 59 57 58 263");
				}
				LeMem(playerid,19)
				{
					SCM(playerid, COLOR_ERROR, "( T.F.O.A 9) 60 170 250 188 181 217 101 203 204");
				}
				LeMem(playerid,21)
				{
					SCM(playerid, COLOR_ERROR, "(C.D) [MAN] 78 79 137 77");
				}
   				LeMem(playerid,22)
				{
					SCM(playerid, COLOR_ERROR, "(칠성파) 186 120 122 118 117 240 294 59 57 58 263");
				}
				LeMem(playerid,23)
				{
					SCM(playerid,COLOR_ERROR,"(동성로) 186 120 122 118 117 240 294 59 57 58 263 169");
				}
				LeMem(playerid,24)
				{
					SCM(playerid, COLOR_ERROR, "(N.G.S) [MAN] 20 240 294 120 165 44");
				}
				LeMem(playerid,25)
				{
					SCM(playerid, COLOR_ERROR, "(大命會) 120 186 240 59 294 249 187 202 60 117 118");
				}
				LeMem(playerid,26)
				{
					SCM(playerid, COLOR_ERROR, "(교회) 147 17 202 206 210 221 222 227 235 236 253 258 41 55 56");
				}
				LeMem(playerid,28)
				{
					SCM(playerid, COLOR_ERROR, "(N.D.F) 18,21,25,66,166,40,93,211,267");
				}
				LeMem(playerid,29)
				{
					SCM(playerid, COLOR_ERROR, "(업타운) 102 103 104 ");
				}
				LeMem(playerid,30)
				{
					SCM(playerid, COLOR_ERROR, "(MS-13) 28 115 30 93 174 195");
				}
				LeMem(playerid,31)
				{
					SCM(playerid, COLOR_ERROR, "(대북파) 조직RP에 맞는 옷을 입으시면 됩니다.(남용시처벌)");
				}
				LeMem(playerid,32)
				{
					SCM(playerid, COLOR_ERROR, "(정부용병) 60 170 250 188 181 217 101 203 204");
				}
				LeMem(playerid,33)
				{
					SCM(playerid, COLOR_INFO1, "(항공사) 255 253 61 165 163 164");
				}
				LeMem(playerid,34)
				{
					SCM(playerid,COLOR_ERROR,"(모드IT회사) 57 141 147 153 165 166 171 194 255");
				}
				LeMem(playerid,35)
				{
					SCM(playerid,COLOR_ERROR,"(요리사) 155 ");
				}
				LeMem(playerid,36)
				{
					SCM(playerid,COLOR_ERROR,"(대학교) 46 47 48 49 188 187 219 211");
				}
				LeMem(playerid,37)
				{
					SCM(playerid,COLOR_ERROR,"(레이서) 284");
				}
				LeMem(playerid,38)
				{
					SCM(playerid,COLOR_ERROR,"(교도관) 71 141 150 265 266 267 280 281 282 283 284 285 288");
				}
				if(fmember != 255)
				{

					format(string, sizeof(string), "(%s) 어떤 옷이든 입을 수 있습니다.", FamilyInfo[playerid][FamilyName]);
					SCM(playerid, COLOR_ERROR,string);
				}
				return 1;
			}
			if(PlayerInfo[playerid][pMember] == 0)
			{
				if(PlayerInfo[playerid][pFMember] == 255)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 리더복을 입을 수 없습니다.");
					return 1;
				}
			}
			id = strval(tmpp);
			if(id > 294) { return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스킨번호는 0-294 내로 해주시기 바랍니다"); }
			LeMem(playerid,1)
			{
				if(id != 71 && id != 280 && id != 281 && id != 282 && id != 283 && id != 284 && id != 285 && id != 288 && id != 141 && id != 150 && id != 265 && id != 266 && id != 267)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,2)
			{
				if(wkaqhrahem[playerid] == 0)
				{
					if(id != 163 && id != 164 && id != 165 && id != 166 && id != 286)
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
						return 1;
					}
				}
				else
				{
					if(id < 1 || id > 299)
					{
						SCM(playerid,COLOR_ERROR,"(F.B.I) 잠복부는 잠복중일때는 어떤 옷이든 입을 수 있습니다");
						return 1;
					}
				}
			}
			LeMem(playerid,3)
			{
				if(wkaqhrahem[playerid] == 0)
				{
					if(id != 163 && id != 164 && id != 165 && id != 166 && id != 286)
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
						return 1;
					}
				}
				else
				{
					if(id < 1 || id > 299)
					{
						SCM(playerid,COLOR_ERROR,"(CIA) 잠복부는 잠복중일때는 어떤 옷이든 입을 수 있습니다");
						return 1;
					}
				}
			}
			LeMem(playerid,4)
			{
				if(id != 216 && id != 172 && id != 148 && id != 70 && id != 71 && id != 228 && id != 274 && id != 275 && id != 276)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,5)
			{
				if(id != 114 && id != 116 && id != 115 && id != 173 && id != 175 && id != 174 && id != 41)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,6)
			{
				if(id != 113 && id != 290 && id != 111 && id != 258 && id != 127 && id != 126 && id != 125 && id != 124 && id != 98 && id != 55 && id != 91 && id != 272 && id != 46 && id != 40 && id !=  165 && id !=  223)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,7)
			{
				if(id != 166 && id != 165 && id != 255 && id != 141 && id != 194 && id != 171 && id != 57 && id != 153 && id != 147)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,37)
			{
				if(id < 1 || id > 299)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,8)
			{
				if(id < 1 || id > 299)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,9)
			{
				if(id != 12 && id != 40 && id != 193 && id != 82 && id != 83 && id != 84 && id != 85 && id != 216 && id != 148 && id != 170 && id != 187 && id != 188 && id != 214 && id != 217 && id != 227)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,10)
			{
				if(id != 94 && id != 194 && id != 253 && id != 255 && id != 240)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,11)//50 133 159 192 233
			{
				if(id != 50 && id != 133 && id != 159 && id != 192 && id != 233)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,12)
			{
				if(id != 176 && id != 21 && id != 28 && id != 66 && id != 143 && id != 24 && id != 25 && id != 297)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,13)
			{
				if(id != 108 && id != 109 && id != 110 && id != 30 && id != 29)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,14)
			{
				if(id != 117 && id != 123 && id != 294 && id != 186 && id != 120)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,15)
			{
				if(id != 206 && id != 117 && id != 118 && id != 59 && id != 185 && id != 186 && id != 187 && id != 223 && id != 224 && id != 43 && id != 46 && id != 57 && id != 261)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,16)
			{
				if(id != 271 && id != 270 && id != 269 && id != 105 && id != 106 && id != 107)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,17)
			{
				if(id != 19 && id != 22 && id != 28 && id != 40 && id != 67 && id != 144 && id != 180)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,18)
			{
				if(id!=186&&id!=120&&id!=122&&id!=118&&id!=117&&id!=240&&id!=294&&id!=59&&id!=57&&id!=58&&id!=263)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,19)
			{
				if(id != 60 && id != 170 && id != 250 && id != 188 && id != 181 && id != 217 && id != 101 && id != 203 && id != 204 && id != 150 && id != 265 && id != 266 && id != 267)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,21)
			{
				if(id!=78&&id!=79&&id!=77&&id!=137)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,22)
			{
				if(id!=186&&id!=120&&id!=122&&id!=118&&id!=117&&id!=240&&id!=294&&id!=59&&id!=57&&id!=58&&id!=263)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,23)
			{
				if(id!=186&&id!=120&&id!=122&&id!=118&&id!=117&&id!=240&&id!=294&&id!=59&&id!=57&&id!=58&&id!=263)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,24)
			{
				if(id!=20&&id!=240&&id!=294&&id!=120&&id!=165&&id!=44)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,25)
			{
				if(id!=120&&id!=186&&id!=240&&id!=59&&id!=294&&id!=187&&id!=202&&id!=60&&id!=117&&id!=118)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다.");
					return 1;
				}
			}
			LeMem(playerid,26)
			{
				if(id!=147&&id!=17&&id!=202&&id!=206&&id!=210&&id!=221&&id!=222&&id!=227&&id!=235&&id!=236&&id!=253&&id!=258&&id!=41&&id!=55&&id!=56)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,28)
			{
				if(id!=18&&id!=21&&id!=25&&id!=66&&id!=166&&id!=40&&id!=93&&id!=211&&id!=267)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,29)
			{
				if(id!=102&&id!=103&&id!=104)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,30)
			{
				if(id!=28&&id!=115&&id!=30&&id!=93&&id!=174&&id!=195)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,31)
			{
				if(id < 1 || id > 299)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,32)
			{
				if(id != 60 && id != 170 && id != 250 && id != 188 && id != 181 && id != 217 && id != 101 && id != 203 && id != 204 && id != 150 && id != 265 && id != 266 && id != 267)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				} // 284 285 280 275 187 164 163 150 211 194
			}
			LeMem(playerid,33)
			{
				if(id!=255&&id!=253&&id!=61&&id!=165&&id!=163&&id!=164)
				{
					SCM(playerid,COLOR_ERROR,"ERROR : 잘못된 리더복 번호입니다");
					return 1;
				}
			}
				LeMem(playerid,34)
			{
				if(id != 166 && id != 165 && id != 255 && id != 141 && id != 194 && id != 171 && id != 57 && id != 153 && id != 147)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,35)
			{
				if(id != 155)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,36)
			{
				if(id != 46 && id != 47 && id != 48 && id != 49 && id != 188 && id != 187 && id != 219 && id != 211)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,37)
			{
				if(id != 284)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			LeMem(playerid,38)
			{
				if(id != 71 && id != 280 && id != 281 && id != 282 && id != 283 && id != 284 && id != 285 && id != 288 && id != 141 && id != 150 && id != 265 && id != 266 && id != 267)
				{
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 잘못된 리더복 번호입니다");
					return 1;
				}
			}
			if(fmember != 255)
			{
				if(id < 1 || id > 299)
				{
					format(string, sizeof(string), "(%s) 어떤옷이든 입을 수 있습니다", FamilyInfo[playerid][FamilyName]);
					SCM(playerid, COLOR_ERROR,string);
					return 1;
				}
			}
			SetPlayerSkin(playerid,id);
			PlayerInfo[playerid][pChar] = id;
			format(tmpp, sizeof(tmpp), "INFO : "#C_WHITE" 옷을 갈아입었습니다");
			SCM(playerid, COLOR_ERROR, tmpp);
			return 1;
		}

	if(strcmp(cmd, "/사복", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMember]==1)
					{
						new x_nr[256];
						x_nr = strtok(cmdtext, idx);
						if(!strlen(x_nr))
						{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /사복 리스트 또는 /사복 [번호(1~11) 0:원래옷]");
						return 1;
					}
					if (PlayerToPoint(3, playerid,237.3877,121.7293,1003.2187) || PlayerToPoint(3,playerid,-1616.1294,681.1594,7.1875) || PlayerInfo[playerid][pLocal] != 255)
					{
						if(strcmp(x_nr,"list",true) == 0 || strcmp(x_nr,"리스트",true) == 0)
						{
							SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
							SCM(playerid, COLOR_WHITE, "사복 목록");
							SCM(playerid, COLOR_ERROR, "[종류] 요원 2: 스탭");
							SCM(playerid, COLOR_ERROR, "[종류] 게이맨 4: 활동가");
							SCM(playerid, COLOR_ERROR, "[종류] 랜덤남성 6: 늪의히피");
							SCM(playerid, COLOR_ERROR, "[종류] 호텔웨이터 (Girl) 8: 랜덤여성");
							SCM(playerid, COLOR_ERROR, "[종류] 미셸 칸느 10: 케이티 쨩");
							SCM(playerid, COLOR_ERROR, "[종류] 바이커 유니폼 0: 원래의 옷");
							SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
							return 1;
						}
						if(strcmp(x_nr,"1",true) == 0)
						{
							SetPlayerSkin(playerid, 165);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"2",true) == 0)
						{
							SetPlayerSkin(playerid, 217);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"3",true) == 0)
						{
							SetPlayerSkin(playerid, 170);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"4",true) == 0)
						{
							SetPlayerSkin(playerid, 21);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"5",true) == 0)
						{
							SetPlayerSkin(playerid, 60);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"6",true) == 0)
						{
							SetPlayerSkin(playerid, 72);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"7",true) == 0)
						{
							SetPlayerSkin(playerid, 152);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"8",true) == 0)
						{
							SetPlayerSkin(playerid, 233);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"9",true) == 0)
						{
							SetPlayerSkin(playerid, 192);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"10",true) == 0)
						{
							SetPlayerSkin(playerid, 193);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"11",true) == 0)
						{
							SetPlayerSkin(playerid, 284);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사복으로 갈아입었습니다");
							return 1;
						}
						else if(strcmp(x_nr,"0",true) == 0)
						{
							if(PlayerInfo[playerid][pRank] == 3)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), " %s  Act 사물함방에서 옷을 갈아입는다", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								GiveWeapon(playerid, 3, 1);
								GiveWeapon(playerid, 24, 50);
								SetPlayerSkin(playerid, 280);
							}
							else if(PlayerInfo[playerid][pRank] > 3)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), " %s  Act 사물함방에서 유니폼으로 갈아입는다", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								GiveWeapon(playerid, 3, 1);
								GiveWeapon(playerid, 24, 50);
								SetPlayerSkin(playerid, 281);
							}
							else if(PlayerInfo[playerid][pRank] == 6)
							{
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string,sizeof(string), " %s  Act 사물함방에서 총감복으로 갈아입는다", RPPlayerName(playerid));
								ProxDetector(20.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								GiveWeapon(playerid, 3, 1);
								GiveWeapon(playerid, 24, 50);
								SetPlayerSkin(playerid, 283);
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 라커룸에 있지 않습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다");
					return 1;
				}
			}
			return 1;
		}
			if(strcmp(cmd,"/테이저건",true) == 0 || strcmp(cmd,"/테",true) == 0)
			{
				new Weapon,Ammo;
				if(IsACop(playerid))
				{
					if(Tazered[playerid] == 0)
					{
						GivePlayerWeapon(playerid,23,3);
						GetPlayerWeaponData(playerid,2,Weapon,Ammo);
						Tazered[playerid] = 1;
						TazerID[playerid] = Weapon;
						TazerAMMO[playerid] = Ammo;
						format(string, sizeof(string), "* %s 건홀더에서 Tazer x3 를 꺼낸다.", RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						TazerRes[playerid] = 1;
					}
					else
					{
						RemovePlayerWeapon(playerid,23);
						if(TazerID[playerid] == 0)
						{
						}
						else
						{
							GivePlayerWeapon(playerid,TazerID[playerid],TazerAMMO[playerid]);
						}
						TazerAMMO[playerid] = 0;
						TazerID[playerid] = 0;
						Tazered[playerid] = 0;
						TazerRes[playerid] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s 건홀더에 Tazer x3 를 끼어 넣는다.",RPPlayerName(playerid));
						ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
				}
				return 1;
			}
		if(strcmp(cmd, "/옷뺏기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /옷뺏기 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pJailed] == 3)
						{
							if (ProxDetectorS(7.0, playerid, giveplayerid))
							{
								PlayerInfo[playerid][pChar] = GetPlayerSkin(giveplayerid);
								SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
								if(PlayerInfo[playerid][pSex] == 1)
								{
									SetPlayerSkin(giveplayerid,252);
									PlayerInfo[playerid][pChar] = 252;
								}
								else
								{
									SetPlayerSkin(giveplayerid,251);
									PlayerInfo[playerid][pChar] = 251;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 당신의 근처에 있지 않습니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 쓰러지지 않았습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/덮치기", true) ==0 || strcmp(cmd, "/덮") == 0)
		{
			new RandomTazer;
			if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))// || PlayerInfo[playerid][pMember] == 20)
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차안에서는 사용할 수없습니다");
						return 1;
					}
					new suspect = GetClosestPlayer(playerid);
					if(IsPlayerConnected(suspect))
					{
						if(PlayerCuffed[suspect] > 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 수갑을 차고있습니다");
							return 1;
						}
						if(Trytaze[playerid] == 1)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 누군가를 제압하였습니다. 잠시후에 시도해주십시오");
							return 1;
						}
						if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
						{
							if(IsPlayerInAnyVehicle(suspect))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 차량에 탑승중입니다");
								return 1;
							}
							Trytaze[playerid] = 1;
							SetTimerEx("Trytazed", 5000, false, "i", playerid);
							RandomTazer = random(10);
							switch(RandomTazer)
							{
							case 0,1,2,3,4,5,6,7:
								{
									GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" %s 어깨를 잡고 덮쳐서 당신은 넘어집니다. 제압시간 : 20초", RPPlayerName(playerid));
									SCM(suspect, COLOR_ACT, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s을(를) 덮쳐서 넘어뜨립니다. 마취시간 : 20초", RPPlayerName(suspect));
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "* %s %s을(를) 덮쳐서 제압했습니다", RPPlayerName(playerid) ,RPPlayerName(suspect));
									ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									GameTextForPlayer(suspect, "~r~Tazed", 2500, 3);
									SetPlayerFreeze(suspect, true, 1);
									TogglePlayerControllable(suspect, 0);
									Anim(suspect,"PED","KO_spin_R",4.1,0,1,1,1,1);
									Anim(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
									PlayerCuffed[suspect] = 2;
									SetTimer("respawnGod",3000,0);
									PlayerCuffedTime[suspect] = 20;
								}
							case 8,9:
								{
									GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" %s 덮쳐버리려는데 가까스로 빠져 나옵니다", RPPlayerName(playerid));
									SCM(suspect, COLOR_ACT, string);
									format(string, sizeof(string), "* %s %s을(를) 덮쳐버리려는데 가까스로 빠져 나온다", RPPlayerName(playerid), RPPlayerName(suspect));
									ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									GameTextForPlayer(suspect, "~r~Failed", 2500, 3);
									Anim(playerid,"PED","EV_dive",4.1,0,1,1,1,1);
									Anim(suspect,"PED","EV_dive",4.1,0,1,1,1,1);
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 주변에 아무도 없습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
				}
			}
			return 1;
		}
		//////--------------
		if(strcmp(cmd, "/하이파이브", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 차에서는 사용할 수 없습니다");
					return 1;
				}
				if(giveplayerid == playerid)
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 자신에게는 이용할 수 없습니다. !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" /하이파이브 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							Anim(giveplayerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(giveplayerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(giveplayerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(giveplayerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkba",4.1,0,1,1,1,1);
				        }
						else
						{
							SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/하이파이브2", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 차에서는 사용할 수 없습니다");
					return 1;
				}
				if(giveplayerid == playerid)
				{
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 자신에게는 이용할 수 없습니다. !");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" /하이파이브2 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{

							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							Anim(giveplayerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(giveplayerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(giveplayerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(giveplayerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
							Anim(playerid,"GANGS","hndshkfa",4.1,0,1,1,1,1);
				        }
						else
						{
							SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
			}
			return 1;
		}
		//////----------
		if(strcmp(cmd, "/수", true) == 0 || strcmp(cmd, "/수갑", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))
				{
					if(IsPlayerInAnyVehicle(playerid))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차에서는 사용할 수 없습니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /수갑 [플레이어번호/이름의 부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid)

								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자신에게 수갑을 채울 수 없습니다");
									return 1;
								}
								if(PlayerCuffed[giveplayerid] != 100)
								{
                                    TogglePlayerControllable(giveplayerid, 0);
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "%s: 당신은 묵비권을 행사할 수 있고 변호사를 선임할 권리가 있습니다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
									format(string, sizeof(string), "%s: 당신의 진술은 법정에서 불리하게 작용될 수 있으며,", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
									format(string, sizeof(string), "%s: 만일 변호사를 구할 수 없을 경우 국가에서 변호사를 구해줄 수 있습니다", RPPlayerName(playerid));
									ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
									format(string, sizeof(string), "* %s %s의 손에 수갑을 채우고 끌고 갑니다",RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
									ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
									SetPlayerFreeze(giveplayerid, false, 0);
									TogglePlayerControllable(giveplayerid, 1);
									Anim(giveplayerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
									Anim(giveplayerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
									Anim(giveplayerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
									Anim(giveplayerid,"PED","pass_Smoke_in_car",4.1,0,1,1,1,1);
									PlayerCuffed[giveplayerid] = 2;
									PlayerCuffedTime[giveplayerid] = 9999;
									SCM(giveplayerid, COLOR_RED, "* Warning : 수갑을 채운채 도망과 폭행등의 행위를할시 논알피 처벌을 받을수 있습니다");
									SetPlayerFreeze(giveplayerid, true, 1);
								    TogglePlayerControllable(giveplayerid, 0);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 제압이 되지않은 상태입니다");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (경찰/FBI/CIA)이 아닙니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/uncuff") == 0 || strcmp(cmd, "/수갑풀기") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(IsACop(playerid))
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /수갑풀기 [플레이어번호/이름의 부분]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								if(giveplayerid == playerid)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신에게 수갑을 풀어줄 수 없습니다");
									return 1;
								}
								if(PlayerCuffed[giveplayerid] || PlayerTied[giveplayerid])
								{
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), " 당신은 %s에 의해서 수갑이 풀렸다", RPPlayerName(playerid));
									SCM(giveplayerid, COLOR_ACT, string);
									format(string, sizeof(string), " 당신은 %s의 수갑을 풀어 주었다", RPPlayerName(giveplayerid));
									SCM(playerid, COLOR_ACT, string);
									GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
									SetPlayerFreeze(giveplayerid, false, 0);
									TogglePlayerControllable(giveplayerid, 1);
									PlayerCuffed[giveplayerid] = 0;
									PlayerTied[giveplayerid] = 0;
									SetPlayerFreeze(giveplayerid, true, 0);
								    TogglePlayerControllable(giveplayerid, 1);
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 수갑을 차고 있지 않습니다");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (경찰/FBI/CIA)이 아닙니다");
				}
			}
			return 1;
		}

		//-------------------------------------추적--------------------------------------------------------------
		if(strcmp(cmd,"/추적", true) == 0)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" /추적 [전화번호]");
				return 1;
			}
			new phonenumb = strval(tmp);
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 추적할 수는 없습니다");
				return 1;
			}
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pMember] == 32 || PlayerInfo[playerid][pMember] == 38)
			{
				for(new i = 0; i < M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
						{
							giveplayerid = i;
							if(PhoneOnline[giveplayerid] == 1)
							{
								SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 상대방의 핸드폰 전원이 꺼져있어 추적할 수 없습니다 /아오..");
								return 1;
							}
							new zone[MAX_ZONE_NAME];
							GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
							new string_n[256];
							format(string_n, sizeof(string_n), "INFO : "#C_WHITE" 상대방의 위치가 레이더에 잡혔습니다. (위치: %s) (/추적종료)로 종료합니다",zone);
							SCM(playerid,COLOR_ERROR,string_n);
						    format(string, sizeof(string), "* %s 무엇인가를 작동시킨다.", RPPlayerName(playerid));
          					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
							cnwjr[playerid] = 1;
							cnwjreotkd[playerid] = giveplayerid;
							UsedFind[playerid] = 1;
							return 1;
						}
					}
				}
			}
			else
			{
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 (정부군)이 아닙니다");
				return 1;
			}
			return 1;
		}
		if(strcmp(cmd,"/추적종료", true) == 0)
		{
				if(IsPlayerConnected(playerid))
				{
					if(cnwjr[playerid] == 0)
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 GPS 추적을 시도한 적이 없습니다");
						return 1;
					}
					cnwjreotkd[playerid] = 999;
					SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" GPS 추적을 그만두었습니다.");
					cnwjr[playerid] = 0;
					DisablePlayerCheckpoint(playerid);
					return 1;
			}
			return 1;
		}
		if(strcmp(cmd, "/정보") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pMember] == 8)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						if(PlayerInfo[playerid][pRank] < 2)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정보를 조회하기에는 계급이 부족합니다.");
							return 1;
						}
					}
					giveplayerid = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님의 정보를 조회합니다.", giveplayer);
							SCM(playerid, COLOR_ERROR, string);
							Hacking(playerid,giveplayerid);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/장사",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);

				if(!strlen(x_job)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "장사 목록");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /장사 [이름]");
					SCM(playerid, COLOR_ERROR, "[이름] : 핫도그 라면 아이스크림 중지");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				if(strcmp(x_job,"핫도그",true) == 0)
				{
					if (PlayerInfo[playerid][pJob] != 5) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노점상이 아닙니다");
					if (tkdwja_A[playerid] != 0) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상점은 하나만 설치할 수 있습니다");
					if (roadblocktimer != 0) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 또 다른 상점을 설치하기 위해서는 기다려야합니다");
					new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					gktehrmwkdtk[playerid] = CreateObject(1340, X, Y, Z, 0, 0, A);
					SetPlayerPos(playerid, X, Y, Z+4);
					GameTextForPlayer(playerid, "~y~Store", 5000, 5);
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 상점이 성공적으로 설치되었습니다");
					tkdwja_A[playerid]=1;
				}
				if(strcmp(x_job,"라면",true) == 0)
				{
					if (PlayerInfo[playerid][pJob] != 5) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노점상이 아닙니다");
					if (tkdwja_A[playerid] != 0) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상점은 하나만 설치할 수 있습니다");
					if (roadblocktimer != 0) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 또 다른 상점을 설치하기 위해서는 기다려야합니다");
					new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					fkauswkdtk[playerid] = CreateObject(1342, X, Y, Z, 0, 0, A);
					SetPlayerPos(playerid, X, Y, Z+4);
					GameTextForPlayer(playerid, "~y~Store", 5000, 5);
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 상점이 성공적으로 설치되었습니다");
					tkdwja_A[playerid]=1;
				}
				if(strcmp(x_job,"아이스크림",true) == 0)
				{
					if (PlayerInfo[playerid][pJob] != 5) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노점상이 아닙니다");
					if (tkdwja_A[playerid] != 0) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상점은 하나만 설치할 수 있습니다");
					if (roadblocktimer != 0) return SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 또 다른 상점을 설치하기 위해서는 기다려야합니다");
					new Float:X, Float:Y, Float:Z, Float:A;
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, A);
					dkdltmwkdtk[playerid] = CreateObject(1341, X, Y, Z, 0, 0, A);
					SetPlayerPos(playerid, X, Y, Z+4);
					GameTextForPlayer(playerid, "~y~Store", 5000, 5);
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 상점이 성공적으로 설치되었습니다");
					tkdwja_A[playerid]=1;

				}
				if(strcmp(x_job,"중지",true) == 0)
				{
					if (PlayerInfo[playerid][pJob] != 5)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 노점상인이 아닙니다");
						return 1;
					}
					if (tkdwja_A[playerid] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 상점을 설치한 적이 없습니다");
						return 1;
					}
					ARemoveRoadblock(playerid);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상점 설치 해제 완료");
				}
				else { return 1; }
			}
			return 1;
		}
		if(strcmp(cmdtext, "/모든장사제거", true)==0)
		{
			if (PlayerInfo[playerid][pAdmin] < 5)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				return 1;
			}
			ARemoveRoadblock2();
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 모든상점을 제거하였습니다");
			return 1;
		}
		if(strcmp(cmdtext, "/모든바리제거", true)==0)
		{
			if (PlayerInfo[playerid][pAdmin] < 5)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이 명령어를 사용할 수 없습니다");
				return 1;
			}
			RemoveRoadblock2();
			SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 모든 바리케이트 설치 해제 완료");
			return 1;
		}
		//--------------------------------------------------------------------
		if(strcmp(cmdtext,"/게시판",true)==0)
		{
		    if(IsPlayerInRangeOfPoint(playerid,5.0,1835, -1405, 12))
		    {
				if(PlayerInfo[playerid][pMember] != 9 && PlayerInfo[playerid][pLeader] != 9)
				{
				    SCM(playerid,COLOR_ERROR,"ERROR : 방송국리더만 사용이 가능합니다.");
				    return 1;
				}
			    new showtext[2][32];
			    if(strlen(Gongji[0])>5)
				{
				    strmid(showtext[0],Gongji[0],0,10,32);
				}else{
				    format(showtext[0],32,"%s",Gongji[0]);
				}
				if(strlen(Gongji[1])>5)
			    {
			        strmid(showtext[1],Gongji[1],0,10,32);
			    }else{
			        format(showtext[1],32,"%s",Gongji[1]);
			    }
				format(string,sizeof(string),"내용1:\"%s..\"\n내용2:\"%s..\"",showtext[0],showtext[1]);
			    ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "게시판", string, "확인", "취소");
			}else{
			    SCM(playerid,COLOR_ERROR,"ERROR : 게시판 근처에서 해주세요.");
			}
			return 1;
		}

		if(strcmp(cmd, "/조준", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /조준 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(6.0, playerid, giveplayerid))
						{
							if(GetPlayerWeapon(playerid) == 22||GetPlayerWeapon(playerid) == 23||GetPlayerWeapon(playerid) == 24||GetPlayerWeapon(playerid) == 25||GetPlayerWeapon(playerid) == 26||GetPlayerWeapon(playerid) == 27||GetPlayerWeapon(playerid) == 28||GetPlayerWeapon(playerid) == 29||GetPlayerWeapon(playerid) == 30||GetPlayerWeapon(playerid) == 31||GetPlayerWeapon(playerid) == 32||GetPlayerWeapon(playerid) == 33)
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								Anim(playerid,"PED","gang_gunstand",4.1,0,1,1,1,1);
								Anim(giveplayerid,"SHOP","SHP_HandsUp_Scr",4.1,0,1,1,1,1);
								format(string, sizeof(string), "* %s %s의 머리에 총을 겨눈다", RPPlayerName(playerid) ,RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								SCM(giveplayerid,COLOR_RED,"* Warning : 상대방이 당신의 머리에 총을겨눴습니다. 움직이면 논알피 처벌을 받습니다");
							}
							else
							{
								SCM(playerid,COLOR_ERROR, "INFO : "#C_WHITE" 당신은 총기를 들고있지 않습니다");
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 당신의 근처에 있지 않습니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 오프라인 입니다");
						return 1;
					}
				}
			}
			return 1;
		}
//==============================확인사살 시스템 제작중 =========================================================
       if(strcmp(cmd, "/확인사살", true) == 0 || strcmp(cmd, "/확살", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
			    if(!IsAMember(playerid))//
				{
	  				SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 당신은 범죄단체가 아닙니다.");
	  				return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /확인사살 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(GetPlayerWeapon(playerid) == 8||GetPlayerWeapon(playerid) == 6||GetPlayerWeapon(playerid) == 14||GetPlayerWeapon(playerid) == 15||GetPlayerWeapon(playerid) == 27||GetPlayerWeapon(playerid) == 31||GetPlayerWeapon(playerid) == 5||GetPlayerWeapon(playerid) == 29||GetPlayerWeapon(playerid) == 16||GetPlayerWeapon(playerid) == 30||GetPlayerWeapon(playerid) == 17||GetPlayerWeapon(playerid) == 12||GetPlayerWeapon(playerid) == 13)
				{
					if(PlayerInfo[giveplayerid][pJailed] != 3)
					{
		    	    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 기절해 있지 않습니다.");
					   	return 1;
		   			}
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(4.0, playerid, giveplayerid))
							{
								GiveHealth(giveplayerid, 0);
								PlayerInfo[giveplayerid][pJailTime]=600;
								PlayerInfo[giveplayerid][pJailed] = 300;
								PlayerInfo[giveplayerid][diedie] = 1;
								Anim(giveplayerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
								Anim(giveplayerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
								Anim(giveplayerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);

								TogglePlayerControllable(giveplayerid, 0);

								format(string, sizeof(string), "* %s %s(을)를 총으로 머리를 조준해 확인사살을 한다.", RPPlayerName(playerid), RPPlayerName(giveplayerid));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								format(string, sizeof(string), "(소리) %s 탕 탕!!", RPPlayerName(playerid));
								SetPlayerChatBubble(playerid,"(소리)\n탕 탕!!",0xDB7093FF,15.0,10000);
								ProxDetector(15.0, playerid, string, 0xDB7093FF,0xDB7093FF,0xDB7093FF,0xDB7093FF,0xDB7093FF);
								SCM(playerid,COLOR_LIGHTRED,"INFO : "#C_WHITE" 당신은 확인 사살을 당했으므로 현시간부로 사후기억이 불가능합니다.");
							}
							else
							{
								SCM(playerid ,COLOR_ERROR, "INFO : "#C_WHITE" 당신은 총을 들고 있지 않거나. 존재하지 않는 플레이어 입니다.");
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
							return 1;
						}
					}
    			}
	   			else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 총을 들고 있지 않습니다.");
				}
			}
			return 1;
		}
//============================================================================================================
		if(strcmp(cmd, "/광고판", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /광고판 [슬롯 1-3] [내용]");
					return 1;
				}
				new slot = strval(tmp);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /광고판 [슬롯 1-3] [내용]");
					return 1;
				}
				if(PlayerInfo[playerid][pAD] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 광고판을 갖고 있지 않습니다");
					return 1;
				}
				if(slot == 1)
				{
					if(rhkdslot1[playerid] == 0)
					{
						new Float:X, Float:Y, Float:Z, Float:A;
						new pnumber = PlayerInfo[playerid][pPnumber];
						GetPlayerPos(playerid, X, Y, Z);
						GetPlayerFacingAngle(playerid, A);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ADInstall[playerid] = CreateObject(2363, X, Y, Z-1, 0.0, 0.0, A+180);
						SetPlayerPos(playerid, X, Y, Z+2);
						format(string, sizeof(string), "%s", (result));
						ADWInstall[playerid] = Create3DTextLabel(string, TEAM_GROVE_COLOR, X+0.15, Y, Z, 5.0, 0, 0);
						format(string, sizeof(string), "%s(☎%d)", sendername, pnumber);
						ADWInstall12[playerid] = Create3DTextLabel(string, TEAM_GROVE_COLOR, X+0.15, Y, Z-0.1, 5.0, 0, 0);
						SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 광고판을 성공적으로 설치하였습니다");
						rhkdrhvks[playerid] = 1;
						PlayerInfo[playerid][pAD] -= 1;
						rhkdslot1[playerid] = 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 슬롯에 이미 설치된 광고판이 있습니다");
						return 1;
					}
				}
				if(slot == 2)
				{
					if(rhkdslot2[playerid] == 0)
					{
						new Float:X, Float:Y, Float:Z, Float:A;
						new pnumber = PlayerInfo[playerid][pPnumber];
						GetPlayerPos(playerid, X, Y, Z);
						GetPlayerFacingAngle(playerid, A);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ADInstall2[playerid] = CreateObject(2363, X, Y, Z-1, 0.0, 0.0, A+180);
						SetPlayerPos(playerid, X, Y, Z+2);
						format(string, sizeof(string), "%s", (result));
						ADWInstall2[playerid] = Create3DTextLabel(string, TEAM_GROVE_COLOR, X+0.15, Y, Z, 5.0, 0, 0);
						format(string, sizeof(string), "%s(☎%d)", sendername, pnumber);
						ADWInstall22[playerid] = Create3DTextLabel(string, TEAM_GROVE_COLOR, X+0.15, Y, Z-0.1, 5.0, 0, 0);
						SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 광고판을 성공적으로 설치하였습니다");
						rhkdrhvks[playerid] = 1;
						PlayerInfo[playerid][pAD] -= 1;
						rhkdslot2[playerid] = 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 슬롯에 이미 설치된 광고판이 있습니다");
						return 1;
					}
				}
				if(slot == 3)
				{
					if(rhkdslot3[playerid] == 0)
					{
						new Float:X, Float:Y, Float:Z, Float:A;
						new pnumber = PlayerInfo[playerid][pPnumber];
						GetPlayerPos(playerid, X, Y, Z);
						GetPlayerFacingAngle(playerid, A);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ADInstall3[playerid] = CreateObject(2363, X, Y, Z-1, 0.0, 0.0, A+180);
						SetPlayerPos(playerid, X, Y, Z+2);
						format(string, sizeof(string), "%s", (result));
						ADWInstall3[playerid] = Create3DTextLabel(string, TEAM_GROVE_COLOR, X+0.15, Y, Z, 5.0, 0, 0);
						format(string, sizeof(string), "%s(☎%d)", sendername, pnumber);
						ADWInstall23[playerid] = Create3DTextLabel(string, TEAM_GROVE_COLOR, X+0.15, Y, Z-0.1, 5.0, 0, 0);
						SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 광고판을 성공적으로 설치하였습니다");
						rhkdrhvks[playerid] = 1;
						PlayerInfo[playerid][pAD] -= 1;
						rhkdslot3[playerid] = 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 슬롯에 이미 설치된 광고판이 있습니다");
						return 1;
					}
				}
			}
			return 1;
		}
		if (strcmp(cmd, "/모두저장", true) ==0 )
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							PlayerUpdate();
						}
					}
					SCM(playerid, COLOR_GRAD1, " 모든 플레이어가 저장 되었습니다.");
				}
				else
				{
					SCM(playerid, COLOR_GRAD1, " 당신은 이 명령어를 사용할 권한이 없습니다!");
				}
			}
			return 1;
		}
		//--------------
		if(strcmp(cmd, "/광고판제거", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /광고판제거 [슬롯 1-3]");
					return 1;
				}
				new slot = strval(tmp);
				if(rhkdrhvks[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 광고판을 설치하지 않으셨습니다");
					return 1;
				}
				if(slot == 1)
				{
					if(rhkdslot1[playerid] == 1)
					{
						RemoveAD(playerid);
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 광고판을 제거했습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 슬롯에 설치된 광고판이 없습니다");
						return 1;
					}
				}
				if(slot == 2)
				{
					if(rhkdslot2[playerid] == 1)
					{
						RemoveAD2(playerid);
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 광고판을 제거했습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 슬롯에 설치된 광고판이 없습니다");
						return 1;
					}
				}
				if(slot == 3)
				{
					if(rhkdslot3[playerid] == 1)
					{
						RemoveAD3(playerid);
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 광고판을 제거했습니다");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 슬롯에 설치된 광고판이 없습니다");
					}
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/removegps",true) == 0 || strcmp(cmd,"/체크제거",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				DisablePlayerCheckpoint(playerid);
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 체크포인트가 제거되었습니다.");
			}
			return 1;
		}
		if(strcmp(cmd,"/취소",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);
				if(!strlen(x_job)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "취소 목록");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /취소 [이름]");
					SCM(playerid, COLOR_ERROR, "[이름] : 마약 면허 차량수리 도색 라이브 기름 차");
					SCM(playerid, COLOR_ERROR, "[이름] : 택시 버스 의사 정비사 벌금딱지 증인 결혼 이혼 영구차");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
				if(strcmp(x_job,"마약",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
				else if(strcmp(x_job,"면허",true) == 0) { LicenseOffer[playerid] = 999; LicensePrice[playerid] = 0; LicenseType[playerid] = 0; }
				else if(strcmp(x_job,"엔진수리",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
				else if(strcmp(x_job,"도색",true) == 0) {	ChangeColorOffer[playerid] = 999; ChangePrice[playerid] = 0; ChangeColor1[playerid] = 0; ChangeColor2[playerid] = 0;}
				else if(strcmp(x_job,"변호",true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
				else if(strcmp(x_job,"라이브",true) == 0) { LiveOffer[playerid] = 999; }
				else if(strcmp(x_job,"라디오",true) == 0) { RadioOffer[playerid] = 999; }
				else if(strcmp(x_job,"주유",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; RefillLiter[playerid] = 0; }
				else if(strcmp(x_job,"영구차",true) == 0) { OwnOffer[playerid] = 999; OwnPrice[playerid] = 0; }
				else if(strcmp(x_job,"차",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
				else if(strcmp(x_job,"증인",true) == 0) { MarryWitnessOffer[playerid] = 999; }
				else if(strcmp(x_job,"결혼",true) == 0) { ProposeOffer[playerid] = 999; }
				else if(strcmp(x_job,"이혼",true) == 0) { DivorceOffer[playerid] = 999; }
				else if(strcmp(x_job,"차량수리",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
				else if(strcmp(x_job,"벌금딱지",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
				else if(strcmp(x_job,"의사",true) == 0) { if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } else { SCM(playerid, COLOR_ERROR, "   You are not the current Caller "); return 1; } } }
				else if(strcmp(x_job,"정비사",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SCM(playerid, COLOR_ERROR, "   You are not the current Caller "); return 1; } } }
				else if(strcmp(x_job,"피자",true) == 0) { if(IsPlayerConnected(PizzaCall)) { if(PizzaCall == playerid) { PizzaCall = 999; } else { SCM(playerid, COLOR_ERROR, "   You are not the current Caller"); return 1; } } }
				else if(strcmp(x_job,"택시",true) == 0)
				{
					//if(TaxiCall < 999)
					//{
					if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
					{
						SCM(TaxiAccepted[playerid],COLOR_ERROR,"INFO : "#C_WHITE" 택시기사님이 당신의 콜택시요청을 거절하였습니다.");
						DisablePlayerCheckpoint(playerid);
						TaxiCallTime[playerid] = 0;
						TaxiAccepted[TaxiAccepted[playerid]] = 999;
						TaxiAccepted[playerid] = 999;
					}
					else //기사가 아닐때
					{
						GetPlayerName(playerid,playername,sizeof(playername));
						if(IsPlayerConnected(TaxiCall) && TaxiCall == playerid) // 콜본부에 전화한 사람일때
						{
							TaxiCall = 999;
							for(new i = 0; i < M_P; i++)
							{
								if(PlayerInfo[i][pMember] == 10)
								{
									format(string,sizeof(string),"INFO : "#C_WHITE" 손님 %s 택시 요청을 취소하셨습니다. (이유: 아무도 수락하지 않음)",playername);
									SCM(i,COLOR_ERROR,string);
								}
							}
						}
						else if(TaxiCall != playerid) // 콜본부에 전화한 사람이 아닐때
						{
							if(TaxiAccepted[playerid] < 999) // 기사를 불렀을 때
							{
								for(new i = 0; i < M_P; i++)
								{
									if(IsPlayerConnected(i))
									{
										if(TaxiAccepted[playerid] == i) // 불렀던 기사가 맞으면
										{
											TaxiAccepted[playerid] = 999;
											GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Canceled the call", 5000, 1);
											format(string,sizeof(string),"INFO : "#C_WHITE" 손님 %s 택시 요청을 취소하였습니다.",playername);
											SCM(i,COLOR_ERROR,string);
											TaxiCallTime[i] = 0;
											TaxiAccepted[i] = 999;
											DisablePlayerCheckpoint(i);
										}
									}
								}
							}
						}
					}
				}
				else if(strcmp(x_job,"버스",true) == 0)
				{
					if(BusCall < 999)
					{
						if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
						{
							BusAccepted[playerid] = 999;
							GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
							SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 버스기사님이 당신의 콜택시요청을 거절하였습니다");
							BusCallTime[playerid] = 0;
							DisablePlayerCheckpoint(playerid);
							BusCall = 999;
						}
						else
						{
							if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
							for(new i = 0; i < M_P; i++)
							{
								if(IsPlayerConnected(i))
								{
									if(BusAccepted[i] < 999)
									{
										if(BusAccepted[i] == playerid)
										{
											BusAccepted[i] = 999;
											GameTextForPlayer(i, "~w~Bus Caller~n~~r~Canceled the call", 5000, 1);
											SCM(i,COLOR_WHITE," 손님께서 버스요청을 취소하였습니다");
											BusCallTime[i] = 0;
											DisablePlayerCheckpoint(i);
										}
									}
								}
							}
						}
					}
				}
				else { return 1; }
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s 을 취소하셨습니다.", x_job);
				SCM(playerid, COLOR_WHITE, string);
			}
			return 1;
		}
	    if(strcmp(cmd, "/네온장착", true) == 0 || strcmp(cmd, "/네온부착", true) == 0 || strcmp(cmd, "/네온달기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
			if(IsPlayerInAnyVehicle(playerid))
				{
				ShowPlayerDialog(playerid,23461,DIALOG_STYLE_LIST,"장착할 네온의 종류를 고르세요!", "파란색\n빨간색\n초록색\n흰색\n분홍색\n노란색\n좌우라이트\n트렁크라이트\n본넷라이트", "선택", "취소");
				return 1;
				}
				else
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승해주세요");
			}
			return 1;
		}
		if(strcmp(cmd, "/네온제거", true) == 0 || strcmp(cmd, "/네온삭제", true) == 0 || strcmp(cmd, "/네온탈착", true) == 0 || strcmp(cmd, "/네온떼기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
			if(IsPlayerInAnyVehicle(playerid))
				{
				ShowPlayerDialog(playerid,23460,DIALOG_STYLE_LIST,"제거할 네온의 종류를 고르세요!", "파란색\n빨간색\n초록색\n흰색\n분홍색\n노란색\n좌우라이트\n트렁크라이트\n본넷라이트", "선택", "취소");
				return 1;
				}
				else
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 탑승해주세요");
			}
			return 1;
		}
		if(strcmp(cmd, "/네온도움말", true) == 0 || strcmp(cmdtext, "/neonhelp", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				SCM(playerid, COLOR_SUC,"━━━━━ "#C_WHITE" 네온 도움말 "#C_SUC"━━━━━");
				SCM(playerid,COLOR_SUN,"");
				SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" (/네온장착)");
				SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" (/네온제거)");
				SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" (/네온목록)");
			}
			return 1;
		}
		if(strcmp(cmd, "/네온목록", true) == 0 || strcmp(cmdtext, "/네목", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
			new it1[256];
			new it2[256];
			new it3[256];
			new it4[256];
			new it5[256];
			new it6[256];
				if(PlayerInfo[playerid][vNeon1] == 1)
				{
				it1 = "[있음]";
				}
				else
				it1 = "[없음]"
				if(PlayerInfo[playerid][vNeon2] == 1)
				{
				it2 = "[있음]";
				}
				else
				it2 = "[없음]"
				if(PlayerInfo[playerid][vNeon3] == 1)
				{
				it3 = "[있음]";
				}
				else
				it3 = "[없음]"
				if(PlayerInfo[playerid][vNeon4] == 1)
				{
				it4 = "[있음]";
				}
				else
				it4 = "[없음]"
				if(PlayerInfo[playerid][vNeon5] == 1)
				{
				it5 = "[있음]";
				}
				else
				it5 = "[없음]"
				if(PlayerInfo[playerid][vNeon6] == 1)
				{
				it6 = "[있음]";
				}
				else
				it6 = "[없음]"
				SCM(playerid, COLOR_LIGHTBLUE, "┏List━━━━━━━━━━━━━━━┓");
				format(string, sizeof(string), " 파란색 = %s 빨간색 = %s", it1, it2);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), " 초록색 = %s 흰색 = %s", it3, it4);
				SCM(playerid, COLOR_ERROR, string);
				format(string, sizeof(string), " 분홍색 = %s 노란색 = %s", it5, it6);
				SCM(playerid, COLOR_ERROR, string);
			}
			return 1;
		}

		//ACCEPT COMMANDS (Cops)
		if(strcmp(cmd,"/동의",true)==0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);
				if(!strlen(x_job)) {
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					SCM(playerid, COLOR_WHITE, "동의 목록");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 동의 [이름]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 영구차 마약 차량수리 변호 직업 라이브 주유 차구매 초대");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정비사, 벌금딱지 차 도색 튜닝 지불 집구매 사업구매");
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의사 판매");
					SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━");
					return 1;
				}
					else if(strcmp(x_job,"차량수리",true) == 0)
					{
						if(RepairOffer[playerid] < 999)
						{
							if(GetMoney(playerid) > RepairPrice[playerid])
							{
								if(IsPlayerInAnyVehicle(playerid))
								{
									if(IsPlayerConnected(RepairOffer[playerid]))
									{
										GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
										GetPlayerName(playerid, sendername, sizeof(sendername));
										RepairCar[playerid] = GetPlayerVehicleID(playerid);
										SetVehicleHealth(RepairCar[playerid], 1000.0);

										if(RepairCar[playerid] >= MCAR[1][0] && RepairCar[playerid] <= MCAR[1][1])
										{
											SetVehicleHealth(RepairCar[playerid],1500);
										}
										else if(RepairCar[playerid] >= MCAR[2][0] && RepairCar[playerid] <= MCAR[2][1])
										{
											SetVehicleHealth(RepairCar[playerid],1500);
										}
										else if(RepairCar[playerid] >= MCAR[3][0] && RepairCar[playerid] <= MCAR[3][1])
										{
											SetVehicleHealth(RepairCar[playerid],1500);
										}

										RepairVehicle(RepairCar[playerid])
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 $%d 의 금액을 정비사 %s 에게 주고 수리를 받았다",RepairPrice[playerid],giveplayer);
										SCM(playerid, COLOR_ERROR, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" $%d 를 %s 에게서 받고 수리를 해줍니다",RepairPrice[playerid],sendername);
										SCM(RepairOffer[playerid], COLOR_ERROR, string);
										PlayerInfo[RepairOffer[playerid]][pCash] += RepairPrice[playerid];
										GiveMoney(playerid, -RepairPrice[playerid]);
										RepairOffer[playerid] = 999;
										RepairPrice[playerid] = 0;
										return 1;
									}
									return 1;
								}
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 수리할 여유자금이 없습니다.");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 수리를 하라고 권유하지 않았습니다");
							return 1;
						}
					}
					else if(c_strcmp(x_job,"네온") == 1 || c_strcmp(x_job,"Neon") == 1)
						{
						GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(RefillNeon[playerid] < 999)
						{
						if(IsPlayerConnected(RefillNeon[playerid]))
						{
						if(GetMoney(playerid) >= RefillPrice[playerid])
						{
						format(string, sizeof(string), "INFO : "#C_WHITE" %s의 차량에 네온을 달아드렸습니다. 재료비를 제외하여 $%d을 벌었습니다",sendername,RefillPrice[playerid]/2);
						SCM(RefillNeon[playerid], COLOR_ERROR, string);
						GiveMoney(RefillNeon[playerid], RefillPrice[playerid]/2);
						GiveMoney(playerid, -RefillPrice[playerid]);
						//기능
						ShowPlayerDialog(playerid, 8899, DIALOG_STYLE_LIST, "네온의 종류를 고르세요.", "파란색\n빨간색\n초록색\n흰색\n분홍색\n노란색", "확인", "취소");
						PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
						}
						else
						{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 네온을 달 여유자금이 없습니다 !");
						return 1;
						}
						}
						return 1;
						}
						else
						{
						SCM(playerid, COLOR_GREY, " 아무도 네온을 달아주려하지않습니다!");
						return 1;
						}
						}

					else if(strcmp(x_job,"주유",true) == 0)
					{
						if(RefillOffer[playerid] < 999)
						{
							if(IsPlayerConnected(RefillOffer[playerid]))
							{
								if(GetMoney(playerid) > RefillPrice[playerid])
								{
									GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									new car = GetPlayerVehicleID(playerid);
									format(string, sizeof(string), "INFO : "#C_WHITE" 기름 %dL를 주유했습니다. 가격: $%d 정비사 %s",RefillLiter[playerid],RefillPrice[playerid],RPPlayerName(RefillOffer[playerid]));
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" %s의 차량에 기름 %dL를 주유하셨습니다. $%d을 벌었습니다",RPPlayerName(playerid),RefillLiter[playerid],RefillPrice[playerid]);
									SCM(RefillOffer[playerid], COLOR_ERROR, string);
									GiveMoney(playerid, -RefillPrice[playerid]);
									PlayerInfo[RefillOffer[playerid]][pCash] += RefillPrice[playerid];
									Gas[car] += RefillLiter[playerid];
									RefillOffer[playerid] = 999;
									RefillPrice[playerid] = 0;
									RefillLiter[playerid] = 0;
									return 1;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 기름을 주유할 여유자금이 없습니다 ");
									return 1;
								}
							}
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 주유를 건의하지 않았습니다 ");
							return 1;
						}
					}
					else if(strcmp(x_job,"도색",true) == 0)
					{
						if(ChangeColorOffer[playerid] < 999)
						{
							if(IsPlayerConnected(ChangeColorOffer[playerid]))
							{
								if(GetMoney(playerid) > ChangePrice[playerid])
								{
									//						new car = gLastCar[playerid];
									format(string, sizeof(string), "INFO : "#C_WHITE" 차량에 도색을 하였습니다. 가격: $%d 정비사 %s" ,ChangePrice[playerid],RPPlayerName(ChangeColorOffer[playerid]));
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" %s의 차량에 도색을 하고 $%d을 벌었습니다",RPPlayerName(playerid),ChangePrice[playerid]);
									SCM(ChangePrice[playerid], COLOR_ERROR, string);
									GiveMoney(playerid, -ChangePrice[playerid]);
									PlayerInfo[ChangeColorOffer[playerid]][pCash] += ChangePrice[playerid];
									ChangeVehicleColor(GetPlayerVehicleID(playerid), ChangeColor1[playerid], ChangeColor2[playerid]);
									VehicleInfo[GetPlayerVehicleID(playerid)][vColor1]=ChangeColor1[playerid];
									VehicleInfo[GetPlayerVehicleID(playerid)][vColor2]=ChangeColor2[playerid];
									ChangeColorOffer[playerid] = 999;
									ChangePrice[playerid] = 0;
									ChangeColor1[playerid] = 0;
									ChangeColor2[playerid] = 0;
									return 1;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 도색할 여유자금이 없습니다 ");
									return 1;
								}
							}
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 도색을 건의하지 않았습니다 ");
							return 1;
					}
				}
				else if(c_strcmp(x_job,"영구차") == 1)
				{
					if(CarSeller[playerid]==999)
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 아무도 영구차를 권유하지 않았습니다 !");
						return 1;
					}
					if(GetDistanceBetweenPlayers(playerid,CarSeller[playerid])>5)
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 그 사람이 근처에 없습니다 !");
						CarSeller[playerid]=999;
						return 1;
					}
					if(CarSellerPrice[playerid]>=GetMoney(playerid))
					{
						SendClientMessage(playerid, COLOR_ERROR,"INFO : "#C_WHITE" 돈이 부족합니다 !");
						CarSeller[playerid]=999;
						return 1;
					}
					new hc;
					for(new pcr=0;pcr<MAX_HVCAR;pcr++)
					{
						if(c_strcmp(PVSign[playerid][pcr],"no"))
						{
							hc=pcr;
							break;
						}
						if(pcr==MAX_HVCAR-1)
						{
							if(c_strcmp(PVSign[playerid][pcr],"no")==0)
							{
								SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 더 이상 구매할 수 없습니다 !");
								return 1;
							}
						}
					}
					new seller=CarSeller[playerid];
					new price=CarSellerPrice[playerid];
					new slot=CarSellerSlot[playerid];
					GiveMoney(seller,price);
					GiveMoney(playerid,-price);
					new v=PlayerVeh[seller][slot];
					format(string,sizeof(string),"INFO : "#C_WHITE" %s에게서 $ %d에 %s를 구매했습니다.",GetName(seller),price,GetVehicleName(v));
					SendClientMessage(playerid,COLOR_ERROR,string);
					format(string,sizeof(string),"INFO : "#C_WHITE" %s $ %d에 %s를 구매했습니다.",GetName(playerid),price,GetVehicleName(v));
					SendClientMessage(seller,COLOR_ERROR,string);
					PayLog(string);
					PlayerVeh[playerid][hc]=v;
					PlayerVeh[seller][slot]=0;
					strmid(PVSign[playerid][hc],PVSign[seller][slot],0,128,128);
					strmid(PVSign[seller][slot],"no",0,128,128);
					PVTowed[seller][slot]=0;
					strmid(VehicleInfo[v][vOwner],BackupName[playerid],0,64,64);
					VehicleInfo[v][vOwnerPnumber] = PlayerInfo[playerid][pPnumber];
					PlayerUpdate();
					PlayerUpdate();
					CarSeller[playerid]=999;
					return 1;
				}
				else if(strcmp(x_job,"구걸",true) == 0)
				{
					if(BegOffer[playerid] < 999)
					{
						if(IsPlayerConnected(BegOffer[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, BegOffer[playerid]))
							{

								new Pmoneys = BegMoneys[playerid];
								GetPlayerName(BegOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    if(PlayerInfo[playerid][pCash]<Pmoneys)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 돈이 그만큼 존재하지 않습니다.");
									SCM(BegOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 구걸을 신청한 플레이어는 돈이 그만큼 없습니다.");
									return 1;
								}
								PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
								Anim(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
								format(string, sizeof(string), "* %s %s에게 돈을 준다.",RPPlayerName(playerid), RPPlayerName(BegOffer[playerid]));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								PlayerInfo[playerid][pCash] -= Pmoneys;
								GiveMoney(BegOffer[playerid], Pmoneys);
								BegMoneys[playerid] = 0;
								BegOffer[playerid] = 999;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 당신주변에 있지 않습니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 오프라인 입니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신에게 돈을 주려는 사람이 없습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"헌금",true) == 0)
				{
					if(ChurchGiveMoney[playerid] < 999)
					{
						if(IsPlayerConnected(ChurchGiveMoney[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, ChurchGiveMoney[playerid]))
							{
								new Pmoneys = BegMoneys[playerid];
								GetPlayerName(BegOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    if(PlayerInfo[playerid][pCash]<Pmoneys)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 돈이 그만큼 존재하지 않습니다.");
									SCM(ChurchGiveMoney[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 헌금을 신청한 플레이어는 돈이 그만큼 없습니다.");
									return 1;
								}
								PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
								Anim(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
								format(string, sizeof(string), "* %s %s에게 헌금을 해준다.",RPPlayerName(playerid), RPPlayerName(ChurchGiveMoney[playerid]));
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								PlayerInfo[playerid][pCash] -= Pmoneys;
								GiveMoney(ChurchGiveMoney[playerid], Pmoneys);
								BegMoneys[playerid] = 0;
								ChurchGiveMoney[playerid] = 999;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 당신주변에 있지 않습니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 오프라인 입니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신에게 돈을 주려는 사람이 없습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"지불",true) == 0)
				{
					if(PayOffer[playerid] < 999)
					{
						if(IsPlayerConnected(PayOffer[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, PayOffer[playerid]))
							{
								GetPlayerName(PayOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new Pmoneys = PayMoneys[playerid];
								format(string, sizeof(string), "Pay Log (%d)%s 님에게 (%d)%s님이 $%d을(를) 주셨습니다", playerid,sendername, giveplayerid, giveplayer , Pmoneys);//이거 깔끔하게하자
								PayLog(string);//어때 번호도 뜨게 깔끔하지
								if(Pmoneys >= 1000)
								{
									ABroadCast(COLOR_WHITE,string,1);
								}
								PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
								Anim(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
								format(string, sizeof(string), " %s (은)는 %s 에게서 돈을 받는다",sendername, giveplayer);
								ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
								PlayerInfo[PayOffer[playerid]][pCash] -= Pmoneys;
								GiveMoney(playerid, Pmoneys);
								PayMoneys[playerid] = 0;
								PayOffer[playerid] = 999;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 당신주변에 있지 않습니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 오프라인 입니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신에게 돈을 주려는 사람이 없습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"판매",true) == 0)
				{
					if(PayPlayer[playerid]!=-1)
					{
						if(IsPlayerConnected(PayPlayer[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, PayPlayer[playerid]))
							{
								if(PayType[playerid]==1)
								{
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 핫도그를 받아서 먹었습니다 (-$ %d)", RPPlayerName(PayPlayer[playerid]),Cost[playerid]);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 핫도그를 주셨습니다 (+$ %d)", RPPlayerName(playerid),Cost[playerid]);
									SCM(PayPlayer[playerid], COLOR_ERROR, string);
									Anim(PayPlayer[playerid],"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
									Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
									format(string, sizeof(string), "* %s %s에게 돈을 받고 핫도그를 주었다", RPPlayerName(PayPlayer[playerid]) ,RPPlayerName(playerid));
									ProxDetector(10.0, PayPlayer[playerid], string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									PlayerInfo[PayPlayer[playerid]][pgktehrm] -= 1;
									GiveHealth(playerid, 30.0);
								}
								if(PayType[playerid]==2)
								{
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 아이스크림를 받아서 먹었습니다 (-$ %d)", RPPlayerName(PayPlayer[playerid]),Cost[playerid]);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 아이스크림를 주셨습니다 (+$ %d)", RPPlayerName(playerid),Cost[playerid]);
									SCM(PayPlayer[playerid], COLOR_ERROR, string);
									Anim(PayPlayer[playerid],"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
									Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
									format(string, sizeof(string), "* %s %s에게 돈을 받고 아이스크림를 주었다", RPPlayerName(PayPlayer[playerid]) ,RPPlayerName(playerid));
									ProxDetector(10.0, PayPlayer[playerid], string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									PlayerInfo[PayPlayer[playerid]][pdkdltm] -= 1;
									GiveHealth(playerid, 20.0);
								}
								if(PayType[playerid]==3)
								{
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 라면를 받아서 먹었습니다 (-$ %d)", RPPlayerName(PayPlayer[playerid]),Cost[playerid]);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s에게 라면를 주었습니다 (+$ %d)", RPPlayerName(playerid),Cost[playerid]);
									SCM(PayPlayer[playerid], COLOR_ERROR, string);
									Anim(PayPlayer[playerid],"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
									Anim(playerid,"GANGS","DEALER_DEAL",4.1,0,1,1,1,1);
									format(string, sizeof(string), "* %s %s에게 돈을 받고 라면를 주었다", RPPlayerName(PayPlayer[playerid]) ,RPPlayerName(playerid));
									ProxDetector(10.0, PayPlayer[playerid], string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
									PlayerInfo[PayPlayer[playerid]][pfkaus] -= 1;
									GiveHealth(playerid, 50.0);
								}
								GiveMoney(PayPlayer[playerid],Cost[playerid]);
								GiveMoney(playerid,-Cost[playerid]);

								PayType[giveplayerid]=0;
								Cost[playerid]=-1;
								PayPlayer[playerid]=-1;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 당신주변에 있지 않습니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈을 주려는 상대가 오프라인 입니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신에게 돈을 주려는 사람이 없습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"초대",true) == 0)
				{
					if(InviteOffer[playerid] < 999)
					{
						if(IsPlayerConnected(InviteOffer[playerid]))
						{
							GetPlayerName(InviteOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(InviteGroup[playerid] != 8)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 리더 %s님의 권유를 동의했고 당신은 그의 단체에 들어갑니다", giveplayer);
								SCM(playerid, COLOR_SUC, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 초대받은 %s님이 당신의 권유를 동의했고 그는 당신 단체에 들어옵니다", sendername);
								SCM(InviteOffer[playerid], COLOR_SUC, string);
							}
							else
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 리더의 권유를 동의했고 당신은 암살 조직에 들어갑니다");
								SCM(playerid, COLOR_SUC, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 초대받은 %s님이 당신의 권유를 동의했고 그는 암살 조직에 들어옵니다", sendername);
								SCM(InviteOffer[playerid], COLOR_SUC, string);
							}
							PlayerInfo[playerid][pMember] = InviteGroup[playerid];
							InviteGroup[playerid] = 0;
							InviteOffer[playerid] = 999;
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신을 초대하려는 상대가 오프라인 입니다");
							return 1;
						}
					}
				}
				else if(strcmp(x_job,"이혼",true) == 0)
				{
					if(DivorceOffer[playerid] < 999)
					{
						if(IsPlayerConnected(DivorceOffer[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
							{
								GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은  %s님과 이혼을 하였습니다", giveplayer);
								SCM(playerid, COLOR_SUC, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s님과 이혼을 하였습니다", sendername);
								SCM(DivorceOffer[playerid], COLOR_SUC, string);
								ClearMarriage(playerid);
								ClearMarriage(DivorceOffer[playerid]);
								PlayerInfo[playerid][pPhousekey] = 255;
								PlayerInfo[playerid][pPbiskey] = 255;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 이혼할 사람이 근처에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 이혼서류를 보낸적이 없습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"증인",true) == 0)
				{
					if(MarryWitnessOffer[playerid] < 999)
					{
						if(IsPlayerConnected(MarryWitnessOffer[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
							{
								GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 당신의 증인이 되었습니다", giveplayer);
								SCM(playerid, COLOR_SUC, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s님의 증인이 되었습니다", sendername);
								SCM(MarryWitnessOffer[playerid], COLOR_SUC, string);
								MarryWitness[MarryWitnessOffer[playerid]] = playerid;
								MarryWitnessOffer[playerid] = 999;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 근처에 증인을 신청한 사람이 없습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 증인서류를 보낸적이 없습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"결혼",true) == 0)
				{
					if(ProposeOffer[playerid] < 999)
					{
						if(!PlayerToPoint(30.0, playerid, 2273.5430,-1305.4631,-22.6091))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 교회 내부에 있지 않습니다");
							return 1;
						}
						if(IsPlayerConnected(ProposeOffer[playerid]))
						{
							if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
							{
								if(MarryWitness[ProposeOffer[playerid]] == 999)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 결혼의 증인이 없습니다");
									return 1;
								}
								if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
								{
									if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
									{
										GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
										GetPlayerName(playerid, sendername, sizeof(sendername));
										format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 당신의 남편일 %s님이 요구를 받아들였습니다", giveplayer);
										SCM(playerid, COLOR_SUC, string);
										format(string, sizeof(string), "INFO : "#C_WHITE" %s님은 당신의 부인일 당신의 요구를 받아들였습니다", sendername);
										SCM(ProposeOffer[playerid], COLOR_SUC, string);
										format(string, sizeof(string), "주례자 말함: %s님 당신은 %s님을 당신의 남편으로 맞이하겠습니까, 채팅창에 (예)라고 입력하십시오", sendername, giveplayer);
										SCM(playerid, COLOR_ERROR, string);
										MarriageCeremoney[playerid] = 1;
										ProposedTo[ProposeOffer[playerid]] = playerid;
										GotProposedBy[playerid] = ProposeOffer[playerid];
										MarryWitness[ProposeOffer[playerid]] = 999;
										ProposeOffer[playerid] = 999;
										return 1;
									}
									else
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 결혼 프로포즈를 신청할 상대방과 가까이 있지 않습니다");
										return 1;
									}
								}
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신에게 청혼한 사람과 가까이 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무에게도 결혼제의가 오지 않았습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"벌금딱지",true) == 0)
				{
					if(TicketOffer[playerid] < 999)
					{
						if(IsPlayerConnected(TicketOffer[playerid]))
						{
							if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
							{
							    if(GetMoney(playerid) >= TicketMoney[playerid])
					            {
									GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 벌금딱지 $%d를 정부군 %s님에게 지불했습니다", TicketMoney[playerid], giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 당신이 끊어준 벌금딱지 $%d를 지불했습니다", sendername, TicketMoney[playerid]);
									SCM(TicketOffer[playerid], COLOR_ERROR, string);
									GiveMoney(playerid, -TicketMoney[playerid]);
									PlayerInfo[TicketOffer[playerid]][pCash] += TicketMoney[playerid];
									TicketOffer[playerid] = 999;
									TicketMoney[playerid] = 0;
								}
								else
								{
								    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 돈이 부족하여서 벌금을 낼수 없습니다");
								}
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 벌금딱지를 주신 대상이 당신의 근처에 있지 않습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 당신에게 벌금딱지를 주지 않았습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"택시",true) == 0)
				{
					if(PlayerInfo[playerid][pJob] != 20)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아직 운임을 시작하지 않았거나 택시기사가 아닙니다.");
						return 1;
					}
					if(TaxiCallTime[playerid] > 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 다른 고객에게 택시 서비스를 수락했습니다.");
						return 1;
					}
					if(PlayerOnMission[playerid] > 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 미션중이라 불가능합니다.");
						return 1;
					}
					if(TaxiCall < 999)
					{
						if(IsPlayerConnected(TaxiCall))
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님의 택시 요청을 수락하였습니다.",giveplayer);
							SCM(playerid, COLOR_ERROR, string);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 미니맵의 붉은지점(체크포인트)으로 이동하십시오.");
							format(string, sizeof(string), "INFO : "#C_WHITE" 택시기사 %s(☎-%d)님이 당신의 택시 요청을 수락했습니다.",sendername,PlayerInfo[playerid][pPnumber]);
							SCM(TaxiCall, COLOR_ERROR, string);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(TaxiCall, X, Y, Z);
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							TaxiCallTime[playerid] = 1;
							TaxiAccepted[playerid] = TaxiCall;
							TaxiCall = 999;
							TaxiCheck[playerid]=1;
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 택시를 부르지 않았습니다.");
						return 1;
					}
				}
				else if(strcmp(x_job,"버스",true) == 0)
				{
					if(PlayerInfo[playerid][pJob] != 20)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아직 운임을 시작하지 않았거나 버스기사가 아닙니다");
						return 1;
					}
					if(BusCallTime[playerid] > 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 다른 고객에게 버스서비스를 수락했습니다");
						return 1;
					}
					if(PlayerOnMission[playerid] > 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 미션중이라 불가능합니다");
						return 1;
					}
					if(BusCall < 999)
					{
						if(IsPlayerConnected(BusCall))
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님의 버스 요청을 수락했습니다. 체크포인트를 따라가세요",giveplayer);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 버스기사 %s(☎-%d)님이 당신의 요청을 수락했습니다. 현재 위치에서 기다려 주시기 바랍니다",sendername,PlayerInfo[playerid][pPnumber]);
							SCM(BusCall, COLOR_ERROR, string);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(BusCall, X, Y, Z);
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							GameTextForPlayer(playerid, "~w~Bus Caller~n~~r~Goto redmarker", 5000, 1);
							BusCallTime[playerid] = 1;
							BusAccepted[playerid] = BusCall;
							BusCall = 999;
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 버스를 부르지 않았습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"정비사",true) == 0)
				{
					if(PlayerInfo[playerid][pMember] != 11)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 차량정비사가 아닙니다");
						return 1;
					}
					if(MechanicCall < 999)
					{
						if(IsPlayerConnected(MechanicCall))
						{
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님의 정비 요청을 수락했습니다",giveplayer);
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 정비사 %s(☎-%d)님이 당신의 요청을 수락했습니다. 현재 위치에서 기다려 주시기 바랍니다",sendername,PlayerInfo[playerid][pPnumber]);
							SCM(MechanicCall, COLOR_ERROR, string);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(MechanicCall, X, Y, Z);
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							SetPlayerMarkerForPlayer(playerid, MechanicCall, 0xFF0000FF);
							GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 미니맵상의 붉은색 표시로 가십시오.(도착후 [/도착] 필수!)");
							MechanicCall = 999;
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아직 아무런 서비스제의가 오지 않았습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"직업",true) == 0)
				{
					if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4 && PlayerInfo[playerid][pMember] == 7)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정부군은 직업을 가질수 없습니다");
						return 1;
					}
					if(GettingJob[playerid] > 0)
					{
						SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 당신은 직업을 가졌습니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 필수로 (/직업도움말) 읽어보십시오");
						PlayerInfo[playerid][pJob] = GettingJob[playerid];
						GettingJob[playerid] = 0;
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 아직 입사제의가 오지 않았습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"라이브",true) == 0)
				{
					if(LiveOffer[playerid] < 999)
					{
						if(IsPlayerConnected(LiveOffer[playerid]))
						{
							if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
							{
								SCM(LiveOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 라이브방송을 시작합니다");
								SCM(LiveOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" (방송차량/방송기기)옆에서 진행하지 않는다면 논알피처벌을 받습니다");
								SCM(LiveOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 라이브 방송을 마치려면, (/라이브)를 입력하세요");
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라이브방송을 시작합니다");
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (방송차량/방송기기)옆에서 진행하지 않는다면 논알피처벌을 받습니다");
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라이브 방송을 마치려면, (/라이브)를 입력하세요");
								TalkingLive[playerid] = LiveOffer[playerid];
								TalkingLive[LiveOffer[playerid]] = playerid;
								LiveOffer[playerid] = 999;
								return 1;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자와 멀리 떨어져 있습니다");
								return 1;
							}
						}
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 라이브 방송을 요청하지 않았습니다");
						return 1;
					}
				}

				else if(strcmp(x_job,"라디오",true) == 0)
				{
					if(RadioOffer[playerid] == 999)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 라이드 방송을 요청하지 않았습니다");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, RadioOffer[playerid]))
					{
						SCM(RadioOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 라디오방송을 시작합니다. 차량의 라디오를 킨사람에게만 들릴것입니다");
						SCM(RadioOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" (방송차량/방송기기)옆에서 진행하지 않는다면 논알피처벌을 받습니다");
						SCM(RadioOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 라디오 방송을 마치려면, (/라디오방송)을 입력하세요");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라디오방송을 시작합니다. 차량의 라디오를 킨사람에게만 들릴것입니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (방송차량/방송기기)옆에서 진행하지 않는다면 논알피처벌을 받습니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라디오 방송을 마치려면, (/라디오방송)을 입력하세요");
						TalkingRadio[playerid] = RadioOffer[playerid];
						TalkingRadio[RadioOffer[playerid]] = playerid;
						RadioOffer[playerid] = 999;
						OOCOff(COLOR_NEWS, "* News : 잠시후 라디오방송이 시작됩니다 많은청취 바랍니다");
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자와 멀리 떨어져 있습니다");
						return 1;
					}
				}
				else if(strcmp(x_job,"알약",true) == 0)
				{
					if(PillOffer[playerid] < 999)
					{
						if(GetMoney(playerid) >= PillPrice[playerid])
						{
							if(IsPlayerConnected(PillOffer[playerid]))
							{
								GetPlayerName(PillOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								if(PlayerInfo[playerid][pPill] >= 10)
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 알약은 10개 까지만 가지고 다닐 수 있습니다.");
									PillOffer[playerid] = 999;
									PillPrice[playerid] = 0;
									SCM(PillOffer[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 상대방이 충분히 알약을 가지고 있어서 자동으로 거절되었습니다.");
								}
								else
								{
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 알약을 가격 $%d에 의사 %s님에게 받으셨습니다. (/알약)으로 먹습니다",PillPrice[playerid],giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" %s님에게 가격 $%d에 알약을 주었습니다",sendername,PillPrice[playerid]);
									SCM(PillOffer[playerid], COLOR_ERROR, string);
									PlayerInfo[playerid][pPill] += 1;
									GiveMoney(playerid, -PillPrice[playerid]);
									PlayerInfo[PillOffer[playerid]][pCash] += PillPrice[playerid];
								}
								PillOffer[playerid] = 999;
								PillPrice[playerid] = 0;
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 아무도 당신에게 알약 권유를 하지 않았습니다.");
						return 1;
					}


				}
				else { return 1; }
			}
			return 1;
		}

			if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0 || strcmp(cmd, "/faction", true) == 0 || strcmp(cmd, "/무", true) == 0 || strcmp(cmd, "/무전기", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다.");
						return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_WHITE, "Hint: (/무)전 [할말]");
						return 1;
					}
					new to_me[MAX_CHATBUBBLE_LENGTH+1];
					if (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0)
					{
						new member = PlayerInfo[playerid][pMember];
						new rank = PlayerInfo[playerid][pRank];
						format(string, sizeof(string), "(%s) %s %s: %s", GetMemberName(member), GetRankName(member, rank), RPPlayerName(playerid), result);
						SendFamilyMessage(PlayerInfo[playerid][pMember], 0x93BBF3AA, string);
						if (wkaqhr[playerid] != 1 && PlayerInfo[playerid][pMember] != 8 || PlayerInfo[playerid][pLeader] != 8)
						{
							format(to_me,MAX_CHATBUBBLE_LENGTH,"(Radio) %s : %s", RPPlayerName(playerid),result);
							SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,4.0,10000);
							format(string, sizeof(string), "(Radio) %s : %s", RPPlayerName(playerid), result);
							ProxDetector(4.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						}
					}
					else if(PlayerInfo[playerid][pFMember] < 255)
					{
						new fmember = PlayerInfo[playerid][pFMember];
						format(string, sizeof(string), "(%s) %s : %s", FamilyInfo[fmember][FamilyName], GetName(playerid), result);
						SendNewFamilyMessage(PlayerInfo[playerid][pFMember], 0x93BBF3AA, string);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 조직이나 단체에 가입되어있지 않습니다");
					}
				}
				return 1;
			}

		if(strcmp(cmd, "/케") == 0 || strcmp(cmd, "/케이블광") == 0 || strcmp(cmd, "/케이블광고") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 9)
				{
					new vehicleid = GetPlayerVehicleID(playerid);
					if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다");
						return 1;
					}
					if(GetVehicleModel(vehicleid) == 582 || GetVehicleModel(vehicleid) == 488 || PlayerToPoint(10.0, playerid, 1763.79,-1377.83,-4.29))
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/케)이블광고 [할말]");
							return 1;
						}
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* (케이블) (☎-%d) : %s", PlayerInfo[playerid][pPnumber], result);
						OOCNews(COLOR_NEWS,string);
						PlayerInfo[playerid][pNewsSkill] ++;
						if(PlayerInfo[playerid][pNewsSkill] == 50)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 2입니다. 곧 헬기탑승과 라이브를 진행할 수 있습니다."); }
						else if(PlayerInfo[playerid][pNewsSkill] == 100)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 3입니다. 곧 헬기탑승과 라이브를 진행할 수 있습니다."); }
						else if(PlayerInfo[playerid][pNewsSkill] == 200)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 4입니다. 당신은 이제 헬기를 탈수있습니다"); }
						else if(PlayerInfo[playerid][pNewsSkill] == 400)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 5입니다. 당신은 이제 라이브를 할 수있습니다."); }
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (방송국차량/방송국헬기/방송실)에 있지 않습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자가 아닙니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/자막") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 9)
				{
					if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다");
						return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /자막 [할말]]");
						return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* Script : (☎-%d) %s : %s", PlayerInfo[playerid][pPnumber], sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 2입니다. 곧 헬기탑승과 라이브를 진행할 수 있습니다."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 3입니다. 곧 헬기탑승과 라이브를 진행할 수 있습니다."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 4입니다. 당신은 이제 헬기를 탈수있습니다"); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 5입니다. 당신은 이제 라이브를 할 수 있습니다."); }
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자가 아닙니다.");
				}
			}
			return 1;
		}
	if(strcmp(cmd, "/취재", true) == 0)
	{
		 if(IsPlayerConnected(playerid))
		 {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /취재 [이름]");
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 가능한 이름 (업무/노트) ");
					return 1;
				}
				if(strcmp(x_nr,"업무",true) == 0)
				{
					if(Chijae[playerid]==0)
			        {
						if(PlayerInfo[playerid][pSex] == 1){SetPlayerSkin(playerid,188);}else{SetPlayerSkin(playerid,216);}
				    	format(string, sizeof(string), " %s  가방에서 카메라와 노트를 꺼낸다.", RPPlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						format(string, sizeof(string), " %s  가방에서 옷을꺼내 갈아입는다.", RPPlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 취재를 시작하였습니다.");
						GiveWeapon(playerid, 43, 20); //카메라 20발
						Chijae[playerid] = 1;
					}
					else if(OnDuty[playerid]==1)
					{
		    			SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						format(string, sizeof(string), " %s  노트를 가방에 넣고 취재를 중단한다.", RPPlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
						format(string, sizeof(string), " %s  가방에서 옷을꺼내 갈아입는다.", RPPlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 취재를 중단하였습니다.");
						Chijae[playerid] = 0;
					}
					return 1;
				}
				if(strcmp(x_nr,"노트",true) == 0)
				{
					new x_note[256];
					x_note = strtok(cmdtext, idx);
					if(!strlen(x_note))
					{
						SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /취재 노트 [이름]");
						SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 가능한 이름 (보기/보여주기/쓰기/삭제)");
						return 1;
					}
					if(strcmp(x_note,"보기",true) == 0)
					{
					    new NOorYes=0;
						SendClientMessage(playerid, COLOR_SUN, "_____________노트_____________");
					    for(new i=0; i < 9; i ++)
						{
						    if(Vnote[playerid][i] == 1)
						    {
					            format(string, sizeof(string), "%d|%s",i, Vnoten[playerid][i]);
					            SendClientMessage(playerid, COLOR_ERROR, string);
					            NOorYes ++
						    }
						}
						if(NOorYes == 0)
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 노트엔 아무내용도 없습니다.");
						}
					    SendClientMessage(playerid, COLOR_SUN, "___________________________________");
					}

					if(strcmp(x_note,"보여주기",true) == 0)
					{
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /취재 노트 보여주기 [플레이어의번호/이름의부분] [노트번호]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        new Float:x, Float:y, Float:z;
			           			GetPlayerPos(giveplayerid,x,y,z);
						        if(!PlayerToPoint(5, playerid, x, y, z))
						        {
						            SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다 ! ");
						            return 1;
						        }
						        new NOorYes=0;
					     		format(string, sizeof(string), "_____________%s의 노트_____________",RPPlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_SUN,string);
							    for(new i=0; i < 9; i ++)
								{
								    if(Vnote[playerid][i] == 1)
								    {
							            format(string, sizeof(string), "%d|%s",i, Vnoten[playerid][i]);
							            SendClientMessage(giveplayerid, COLOR_ERROR, string);
							            NOorYes ++
								    }
								}
								if(NOorYes == 0)
								{
								    SendClientMessage(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 노트엔 아무내용도 없습니다.");
								    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 노트엔 아무내용도 없습니다.");
								}
							    SendClientMessage(giveplayerid, COLOR_SUN, "___________________________________");
							}
						}
					}
					if(strcmp(x_note,"쓰기",true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /취재 노트 쓰기 [줄] [내용]");
						    return 1;
						}
						new Joooool = strval(tmp);
						if(Joooool>9 && Joooool<0)
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 줄은 (0~9) 줄까지 입력해주세요.");
							return 1;
						}

					    new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(length > 60)
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 메모가 너무 깁니다. ");
						    return 1;
						}
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /취재 노트 쓰기 [줄] [내용]");
							return 1;
						}
						if(Vnote[playerid][Joooool] == 0)
						{
						    strmid(Vnoten[playerid][Joooool], result, 0, strlen(result), 255);
						    Vnote[playerid][Joooool] = 1;
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 메모가 작성되었습니다.");
						    return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 그줄에는 이미 다른내용이 있습니다. (삭제후입력)");
						    return 1;
						}
					}
					if(strcmp(x_note,"삭제",true) == 0)
					{
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" /취재 노트 삭제 [줄]");
						    return 1;
						}
						new Joooool = strval(tmp);
						if(Joooool>9 && Joooool<0)
						{
						    SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 줄은 (0~9) 줄까지 입력해주세요.");
                            return 1;
						}
						strmid(Vnoten[playerid][Joooool], "", 0, strlen(""), 255);
						Vnote[playerid][Joooool] =0;
						SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 삭제가 완료되었습니다.");
						return 1;
					}
				}
				else
				{
			    	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 이름입니다.");
				}
			}
			else
			{
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"당신은 방송국소속이 아닙니다.");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/뉴스", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 9)
				{
					new vehicleid = GetPlayerVehicleID(playerid);
					if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다");
						return 1;
					}
					if(GetVehicleModel(vehicleid) == 582 || GetVehicleModel(vehicleid) == 488 || PlayerToPoint(10.0, playerid, 1763.79,-1377.83,-4.29))
					{
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /뉴스 [할말]");
							return 1;
						}
						format(string, sizeof(string), "* News : (☎-%d)%s : %s", PlayerInfo[playerid][pPnumber], RPPlayerName(playerid), result);
						OOCNews(COLOR_NEWS,string);
						PlayerInfo[playerid][pNewsSkill] ++;
						if(PlayerInfo[playerid][pNewsSkill] == 50)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 2입니다. 곧 헬기탑승과 라이브를 진행할 수 있습니다."); }
						else if(PlayerInfo[playerid][pNewsSkill] == 100)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 3입니다. 곧 헬기탑승과 라이브를 진행할 수 있습니다."); }
						else if(PlayerInfo[playerid][pNewsSkill] == 200)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 4입니다. 당신은 이제 헬기를 탈수있습니다"); }
						else if(PlayerInfo[playerid][pNewsSkill] == 400)
						{SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신의 뉴스 기술은 이제 5입니다. 당신은 이제 라이브를 할 수 있습니다."); }
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (방송국차량/방송국헬기/방송실)에 있지 않습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자가 아닙니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/v", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다");
					return 1;
				}
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /v [부를 노래]");
					return 1;
				}
				if(PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 3)
				{
					format(string, sizeof(string), " 연예인 %s Sing %s ~~ ♬", RPPlayerName(playerid), result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					printf("%s", string);
				}
				else
				{
					format(string, sizeof(string), "%s Sing %s ~~ ♬", RPPlayerName(playerid), result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					printf("%s", string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/r", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을할 수 없습니다");
					return 1;
				}
				if(gPlayerLogged[playerid] == 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 로그인부터 해주셔야합니다");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /r [부를 랩]");
					return 1;
				}
				if(PlayerInfo[playerid][pMember] == 9 && PlayerInfo[playerid][pRank] == 3)
				{
					format(string, sizeof(string), " 연예인 %s Rap : %s ~~ ♬", RPPlayerName(playerid), result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					printf("%s", string);
				}
				else
				{
					format(string, sizeof(string), "%s Rap : %s ~~ ♬", RPPlayerName(playerid), result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					printf("%s", string);
				}
			}
			return 1;
		}
		if(strcmp(cmd,"/cm",true) == 0 || strcmp(cmd,"/채팅모드",true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new x_cmmode[256];
				x_cmmode = strtok(cmdtext, idx);
				if(!strlen(x_cmmode))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /채팅모드 [이름]");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 기본, 외침, 작게, OOC");
					//SCM(playerid, COLOR_GREY, "INFO : "#C_WHITE" 이탈리아어(ita), 중국어(chs), 일본어(jap), 스페인어(spa)");
					return 1;
				}
				if(anwjs[playerid] == 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무전모드를 종료해주십시오");
					return 1;
				}
				if(strcmp(x_cmmode,"기본",true) == 0 || strcmp(x_cmmode,"ic",true) == 0 || strcmp(x_cmmode,"IC",true) == 0)
				{
					BackupChat(playerid);
					rlqhs1[playerid] = 1;
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 채팅모드가 (IC)로 변경되었습니다");
				}
				if(strcmp(x_cmmode,"외침",true) == 0)
				{
					BackupChat(playerid);
					rlqhs2[playerid] = 1;
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 채팅모드가 (외침)로 변경되었습니다");
				}
				if(strcmp(x_cmmode,"작게",true) == 0)
				{
					BackupChat(playerid);
					rlqhs3[playerid] = 1;
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 채팅모드가 (작게)로 변경되었습니다");
				}
				if(strcmp(x_cmmode,"ooc",true) == 0 || strcmp(x_cmmode,"OOC",true) == 0)
				{
					BackupChat(playerid);
					rlqhs4[playerid] = 1;
					SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 채팅모드가 (OOC)로 변경되었습니다");
				}
				else
				{
					return 1;
				}
			}
			return 1;
		}
			if(strcmp(cmd, "/rm", true) == 0 || strcmp(cmd, "/무전모드", true) == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					if(gPlayerLogged[playerid] == 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인을 먼저 해야 합니다");
						return 1;
					}
					if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pFMember] != 255)
					{
						if(anwjs[playerid] == 0)
						{
							anwjs[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 자동 무전기 채팅 방식으로 실행했습니다.");
							PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);

							return 1;
						}
						else if(anwjs[playerid] == 1)
						{
							anwjs[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 자동 무전기 채팅 방식을 종료하였습니다.");
							PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
							SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 무전기가 없습니다.");
						return 1;
					}
				}
				return 1;
			}
		//==============================================================================
		if(strcmp(cmd, "/라디오방송", true) == 0)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
				{
					if(GetVehicleModel(vehicleid) == 582 || GetVehicleModel(vehicleid) == 488 && VehicleRadio[GetPlayerVehicleID(playerid)] == 1)
					{
						if(TalkingRadio[playerid] != 255)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라디오방송이 종료되었습니다");
							SCM(TalkingRadio[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 라디오방송이 종료되었습니다");
							TalkingRadio[TalkingRadio[playerid]] = 255;
							TalkingRadio[playerid] = 255;
							return 1;
						}
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /라디오방송 [플레이어번호/플레이어이름] [방송 주제]");
							return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
								new length = strlen(cmdtext);
								while ((idx < length) && (cmdtext[idx] <= ' '))
								{
									idx++;
								}
								new offset = idx;
								new result[64];
								while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
								{
									result[idx - offset] = cmdtext[idx];
									idx++;
								}
								result[idx - offset] = EOS;
								if(!strlen(result))
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /라디오방송 [플레이어번호/플레이어이름] [방송 주제]");
									return 1;
								}
								if(ProxDetectorS(5.0, playerid, giveplayerid))
								{
									if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))
									{
										SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방을 당신과 같은 차량에 태우고 시도하십시오");
										return 1;
									}
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 라디오방송을 신청하였습니다", giveplayer);
									SCM(playerid, COLOR_ERROR, string);
									format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 당신에게 라디오방송을 신청합니다. (/동의 라디오)로 수락합니다", sendername);
									SCM(giveplayerid, COLOR_ERROR, string);
									RadioOffer[giveplayerid] = playerid;
								}
								else
								{
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 근처에 없습니다");
									return 1;
								}
							}
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 플레이어가 존재하지 않습니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 방송국 차량에 탑승하지 않았거나, 라디오를 켜놓으시지 않았습니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자가 아닙니다");
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/라이브", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
				{
					if(TalkingLive[playerid] != 255)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 라이브방송이 종료되었습니다");
						SCM(TalkingLive[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 라이브방송이 종료되었습니다");
						TalkingLive[TalkingLive[playerid]] = 255;
						TalkingLive[playerid] = 255;
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /라이브 [플레이어번호/플레이어이름]");
						return 1;
					}
					//giveplayerid = strval(tmp);
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (ProxDetectorS(5.0, playerid, giveplayerid))
							{
								//						    if(giveplayerid == playerid) { SCM(playerid, COLOR_GREY, " 자기 자신이 라이브를 할 수없습니다"); return 1; }
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 라이브를 신청하였습니다", giveplayer);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 당신에게 라이브방송을 신청합니다. (/동의 라이브)로 수락합니다", sendername);
								SCM(giveplayerid, COLOR_ERROR, string);
								LiveOffer[giveplayerid] = playerid;
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 근처에 없습니다");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 플레이어가 존재하지 않습니다");
						return 1;
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 기자가 아닙니다");
				}
			}
			return 1;
		}

	if(strcmp(cmd, "/마약투여", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDrugs] > 0)
	        {
         		tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "INFO : "#C_WHITE" /마약투여 [마약이름]");
					return 1;
				}
				GiveHealth(playerid, 50);
				SetPlayerDrunkLevel(playerid, 6000);
    			format(string, sizeof(string), "* %s %s을(를) 투여한다.", RPPlayerName(playerid) ,tmp);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pDrugs]--;
				return 1;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"(Ststem) : 당신은 마약이 없습니다.");
			    return 1;
			}
		}
		return 1;
	}

		if(strcmp(cmd, "/내려", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				new State;
				if(IsPlayerInAnyVehicle(playerid))
				{
					State=GetPlayerState(playerid);
					if(State!=PLAYER_STATE_DRIVER)
					{
						SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 차량에 탑승한 운전자만 쫒아낼 수 있습니다");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /내려 [플레이어번호/이름의 부분]");
						return 1;
					}
					new playa;
					playa = ReturnUser(tmp);
					new test;
					test = GetPlayerVehicleID(playerid);
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							if(playa == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신 자신을 밀어낼수 없습니다"); return 1; }
							if(IsPlayerInVehicle(playa,test))
							{
								new PName[MAX_PLAYER_NAME];
								GetPlayerName(playerid,PName,sizeof(PName));
								GetPlayerName(playa, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님을 밀어버렸습니다.", giveplayer);
								SCM(playerid, COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에 의해서 차량에서 밀려났습니다.", PName);
								SCM(playa, COLOR_ERROR, string);
								RemovePlayerFromVehicle(playa);
							}
							else
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 사람은 당신에 차에 있지 않습니다. ");
								return 1;
							}
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 명령어는 차안에서만 사용 가능합니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/사퇴", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJob] >= 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 사퇴를 하였습니다.");
					PlayerInfo[playerid][pJob] = 0;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 직업이 없습니다.");
				}
			}
			return 1;
		}
				if(strcmp(cmd, "/제대", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if (PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 3)
				{
					SCM(playerid, COLOR_INFO, "(INFO) 성공적으로 제대를 하였습니다");
					PlayerInfo[giveplayerid][pTeam] = 3;
					PlayerInfo[giveplayerid][pMember] = 0;
					PlayerInfo[giveplayerid][pFMember] = 255;
					PlayerInfo[giveplayerid][pRank] = 0;
				}
				else
				{
					SCM(playerid, COLOR_ERROR, "(ERROR) 당신은 군인이 아니거나 병장 이상이 아닙니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/bail", true) == 0 || strcmp(cmd, "/보석", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pJailed]==1 || PlayerInfo[playerid][pJailed]==4)
				{
					if(JailPrice[playerid] > 0)
					{
						if(GetMoney(playerid) >= JailPrice[playerid])
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 보석금은 $%d입니다", JailPrice[playerid]);
							SCM(playerid, COLOR_ERROR, string);
							GiveMoney(playerid, -JailPrice[playerid]);
							JailPrice[playerid] = 0;
							WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
							PlayerInfo[playerid][pJailTime] = 1;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 보석금이 충분하지 않습니다");
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 보석이 불가능한 대상입니다");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 감옥 수감자가 아닙니다");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/수배삭제", true) == 0 || strcmp(cmd, "/전과삭제", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!PlayerToPoint(3.0, playerid, 225.6018,121.7326,999.0681) && !PlayerToPoint(3.0, playerid, 196.8443,168.7334,1003.0234))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰서 내부 취조실에 있지 않습니다.");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /전과삭제 [플레이어의번호/이름의부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 당신 스스로의 수배레벨을 삭제할 수 없습니다"); return 1; }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님의 전과를 모두 삭제했습니다.", giveplayer);
						SCM(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "INFO : "#C_WHITE" 정부군 %s님이 당신의 전과를 모두 삭제하였습니다.", sendername);
						SCM(giveplayerid, COLOR_ERROR, string);
						WantedPoints[giveplayerid] = 0;
						WantedLevel[giveplayerid] = 0;
						ClearCrime(giveplayerid);
						if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 %s님의 전과를 삭제하였습니다.", sendername, giveplayer);
							OOCNews(COLOR_BLUE, string);
						}
						else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 %s님의 전과를 삭제하였습니다.", sendername, giveplayer);
							OOCNews(COLOR_BLUE, string);
						}
						else if(PlayerInfo[playerid][pMember]==3||PlayerInfo[playerid][pLeader]==3)
						{
							format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 %s님의 전과를 삭제하였습니다", sendername, giveplayer);
							OOCNews(COLOR_BLUE, string);
						}
						if(gTeam[giveplayerid]==4)
						{
							gTeam[giveplayerid] = 3;
							SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/벌금", true) == 0 || strcmp(cmd, "/벌금딱지", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(!IsACop(playerid))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /벌금 [플레이어번호/플레이어이름] [가격] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /벌금 [플레이어번호/플레이어이름] [가격] [이유]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 9999) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 벌금은 $1~9999 까지만 가능합니다"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /벌금 [플레이어번호/플레이어이름] [가격] [이유]");
								return 1;
							}
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님에게 벌금딱지를 청구합니다. ($%d) (이유: %s)", giveplayer, moneys, (result));
							SCM(playerid, COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 정부군 %s님이 벌금딱지를 줍니다. ($%d) (이유: %s)", sendername, moneys, (result));
							SCM(giveplayerid, COLOR_ERROR, string);
							SCM(giveplayerid, COLOR_ERROR, "INFO : "#C_WHITE" 벌금을 내시려면 (/동의 벌금딱지)를 입력하십시오.");
							TicketOffer[giveplayerid] = playerid;
							TicketMoney[giveplayerid] = moneys;
							return 1;
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그 플레이어는 당신 주변에 있지 않습니다");
							return 1;
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/석방", true) == 0)
		{
			if(IsACop(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /석방 [플레이어번호/이름의 부분]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (!PlayerToPoint(3.0, playerid, 225.6018,121.7326,999.0681) && !PlayerToPoint(3.0, playerid, 196.8443,168.7334,1003.0234))
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰서 내 취조실에 있지 않습니다");
							return 1;
						}
						if(PlayerInfo[giveplayerid][pJailed] != 1 && PlayerInfo[giveplayerid][pJailed] != 45)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 감옥에 수감되지 않았습니다");
							return 1;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
						{
							format(string, sizeof(string), "(수감자 공고) : %s  %s 을(를) 석방하였습니다",sendername, giveplayer);
							OOCNews(COLOR_BLUE, string);
						}
						else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
						{
							format(string, sizeof(string), "(수감자 공고) : %s  %s 을(를) 석방하였습니다", sendername, giveplayer);
							OOCNews(COLOR_BLUE, string);
						}
						PlayerInfo[giveplayerid][pJailTime] = 0;
						SetPlayerInterior(giveplayerid, 10);
						SetPlayerPos(giveplayerid,215.50,114.59,999.02);
						format(string, sizeof(string), "INFO : "#C_WHITE" 정부군 %s님이 당신을 석방시켰습니다", sendername);
						SCM(giveplayerid, COLOR_ERROR, string);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					return 1;
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
				return 1;
			}
			return 1;
		}
		if(strcmp(cmd, "/형벌", true) == 0)
		{
			if(IsACop(playerid))
			{
				new x_job[256];
				x_job = strtok(cmdtext, idx);
				if(!strlen(x_job)) {
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /형벌 [연장/감형] [플레이어번호/이름의 부분] [시간(분)]");
					return 1;
				}
				if(strcmp(x_job, "연장", true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /형벌 연장 [플레이어번호/이름의 부분] [시간(분)]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /형벌 연장 [플레이어번호/이름의 부분] [시간(분)]");
						return 1;
					}
					moneys = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (!PlayerToPoint(3.0, playerid, 225.6018,121.7326,999.0681) && !PlayerToPoint(3.0, playerid, 196.8443,168.7334,1003.0234))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰서 내 취조실에 있지 않습니다");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pJailed] != 1 && PlayerInfo[giveplayerid][pJailed] != 45)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 감옥에 수감되지 않았습니다");
								return 1;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
							{
								format(string, sizeof(string), "(수감자 공고) : %s님이 %s님의 수감시간을 %d개월 연장하였습니다", sendername, giveplayer, moneys);
								OOCNews(COLOR_BLUE, string);
							}
							else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
							{
								format(string, sizeof(string), "(수감자 공고) : %s님이 %s님의 수감시간을 %d개월 연장하였습니다", sendername, giveplayer, moneys);
								OOCNews(COLOR_BLUE, string);
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[giveplayerid][pJailTime] += moneys*60;
							format(string, sizeof(string), "INFO : "#C_WHITE" 정부군 %s님이 당신의 수감시간을 %d개월 연장시켰습니다", sendername, moneys);
							SCM(giveplayerid, COLOR_ERROR, string);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
				if(strcmp(x_job, "감형", true) == 0)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /형벌 감형 [플레이어번호/이름의 부분] [시간]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /형벌 감형 [플레이어번호/이름의 부분] [시간]");
						return 1;
					}
					moneys = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							if (!PlayerToPoint(3.0, playerid, 225.6018,121.7326,999.0681) && !PlayerToPoint(3.0, playerid, 196.8443,168.7334,1003.0234))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰서 내 취조실에 있지 않습니다");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pJailed] != 1 && PlayerInfo[giveplayerid][pJailed] != 45)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방은 감옥에 수감되지 않았습니다");
								return 1;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 %s님의 수감시간을 %d개월 감형하였습니다", sendername, giveplayer, moneys);
								OOCNews(COLOR_BLUE, string);
							}
							else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 %s님의 수감시간을 %d개월 감형하였습니다", sendername, giveplayer, moneys);
								OOCNews(COLOR_BLUE, string);
							}
							PlayerInfo[giveplayerid][pJailTime] -= moneys*60;
							format(string, sizeof(string), "INFO : "#C_WHITE" 정부군 %s님이 당신의 수감시간을 %d개월 감형시켰습니다", sendername, moneys);
							SCM(giveplayerid, COLOR_ERROR, string);
						}
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
						return 1;
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 정부군이 아닙니다");
				return 1;
			}
			return 1;
		}
		if(strcmp(cmd, "/벌점") == 0 || strcmp(cmd, "/벌") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/벌)점 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsACop(playerid))
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[256];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/벌)점 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							PlayerInfo[giveplayerid][pDemerit] += 1;
							if(PlayerInfo[giveplayerid][pDemerit] >= 5)
							{
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님께 벌점을 주었고 그는 벌점이 초과하여 면허를 회수당했습니다. (이유: %s)",giveplayer, (result));
								SCM(playerid,COLOR_ERROR, string);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부군 %s님께 벌점을 받았고 벌점 초과로 면허를 회수당합니다. (이유: %s)",sendername, (result));
								SCM(giveplayerid,COLOR_ERROR, string);
								PlayerInfo[giveplayerid][pCarLic] = 0;
								PlayerInfo[giveplayerid][pDemerit] = 0;
								return 1;
							}
							PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님께 벌점을 주었습니다. (이유: %s)",giveplayer, (result));
							SCM(playerid,COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 정부군 %s님께 벌점을 받았습니다. (이유: %s)",sendername, (result));
							SCM(giveplayerid,COLOR_ERROR, string);
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/벌점제거") == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /벌점제거 [플레이어번호/이름의 부분] [이유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsACop(playerid))
				{
					if(IsPlayerConnected(giveplayerid))
					{
						if(giveplayerid != INVALID_PLAYER_ID)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[256];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /벌점제거 [플레이어번호/이름의 부분] [이유]");
								return 1;
							}
							PlayerInfo[giveplayerid][pDemerit] -= 1;
							PlayerPlaySound(playerid, 1130, 0.0, 0.0, 0.0);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님의 벌점을 면해주었습니다. (이유: %s)",giveplayer, (result));
							SCM(playerid,COLOR_ERROR, string);
							format(string, sizeof(string), "INFO : "#C_WHITE" 정부군 %s 님이 당신의 벌점을 면해주었습니다. (이유: %s)",sendername, (result));
							SCM(giveplayerid,COLOR_ERROR, string);
							if(PlayerInfo[giveplayerid][pDemerit] <= 0)// == ;;
							{
								PlayerInfo[giveplayerid][pDemerit] = 0;
								return 1;
							}
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 존재하지 않는 플레이어 입니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
			}
			return 1;
		}

		if(strcmp(cmd, "/체포", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(gTeam[playerid] == 2  || IsACop(playerid))
				{
					if(PlayerToPoint(6.0, playerid, 215.6517,114.6445,999.0156) || PlayerToPoint(6.0, playerid, 202.3695,157.5796,1003.0234) || PlayerToPoint(6.0, playerid, 194.0201,178.0398,1003.0234))
					{

						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_WHITE, "INFO : /체포 [벌금] [수감시간(분 단위)] [보석허용 (0=불허 1=허용)] [보석금(불허할 때는 0)]");
							return 1;
						}
						moneys = strval(tmp);
						//if(moneys < 1 || moneys > 99999) { SCM(playerid, COLOR_ERROR, " 벌금은 $1 이하 또는 $5000 이상일 수 없습니다"); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_WHITE, "INFO : /체포 [벌금] [수감시간(분 단위)] [보석허용 (0=불허 1=허용)] [보석금(불허할 때는 0)]");
							return 1;
						}
						new time = strval(tmp);
						if(time <= 1 || time >= 30) { SCM(playerid, COLOR_ERROR, "수감시간은 1분 이하 또는 30분 이상일 수 없습니다"); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_WHITE, "INFO : /체포 [벌금] [수감시간(분 단위)] [보석허용 (0=불허 1=허용)] [보석금(불허할 때는 0)]");
							return 1;
						}
						new bail = strval(tmp);
						if(bail < 0 || bail > 1) { SCM(playerid, COLOR_ERROR, "보석허용은 0은 불허 1은 허용 중에 골라야 합니다"); return 1; }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SCM(playerid, COLOR_WHITE, "INFO :  /체포 [벌금] [수감시간(분 단위)] [보석허용 (0=불허 1=허용)] [보석금(불허할 때는 0)]");
							return 1;
						}
						new bailprice = strval(tmp);
						if(bailprice < 0 || bailprice > 10000) { SCM(playerid, COLOR_ERROR, "보석금은 $0 이하 또는 $10000 이상일 수 없습니다"); return 1; }
						new suspect = GetClosestPlayer(playerid);
						if(IsPlayerConnected(suspect))
						{
							if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
							{
								GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								if(WantedLevel[suspect] < 1)
								{
									SCM(playerid, COLOR_ERROR, "INFO : 플레이어가 최소한 수배레벨 '1' 이상이 되어야 합니다. (/용)");
									return 1;
								}
								format(string, sizeof(string), "[!] You arrested %s", giveplayer);
								SCM(playerid, COLOR_INFO, string);
								ResetPlayerWeapons(suspect);
								format(string, sizeof(string), "SAN News(3900) : %s (이)가 용의자 %s을(를) 체포하였습니다", sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);

								if(PlayerToPoint(6.0, playerid, 215.6517,114.6445,999.0156))
								{
									SetPlayerInterior(suspect, 10);
									SetPlayerPos(suspect,2103.3552,-2303.8884,8545.5400);
									PlayerInfo[suspect][pJailTime] = time * 60;
									PlayerInfo[suspect][pJailed] = 1;
								}
								if(PlayerToPoint(6.0, playerid, 202.3695,157.5796,1003.0234))
								{
									SetPlayerInterior(suspect, 3);
									SetPlayerPos(suspect,198.2347,162.2046,1003.0300);
									PlayerInfo[suspect][pJailTime] = time * 60;
									PlayerInfo[suspect][pJailed] = 45;
								}
								if(bail == 1)
								{
									JailPrice[suspect] = bailprice;
									format(string, sizeof(string), "[!] 당신은 교도소로 보내졌고 %d초 동안 수감됩니다, (보석: 가능) (보석금: $%d)", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
									SCM(suspect, COLOR_INFO, string);
									if(PlayerInfo[playerid][pSex] == 1)
									{
										SetPlayerSkin(suspect,268);
									}
									else if(PlayerInfo[playerid][pSex] == 2)
									{
									    SetPlayerSkin(suspect,298);
									}

								}
								else
								{
									JailPrice[suspect] = 0;
									format(string, sizeof(string), "[!] 당신은 %d초 동안 수감됩니다, (보석: 불가능)", PlayerInfo[suspect][pJailTime]);
									SCM(suspect, COLOR_INFO, string);
									SetPlayerSkin(suspect,268);
								}

								PlayerInfo[suspect][pArrested] += 1;
								SetPlayerFree(suspect,playerid, "Got Arrested");
								WantedPoints[suspect] = 0;
								WantedLevel[suspect] = 0;
								WantLawyer[suspect] = 1;
							}//distance
							else
							{
								SCM(playerid, COLOR_ERROR, " 그 플레이어는 당신 근처에 있지않습니다");
								return 1;
							}
						}
							else
							{
								SCM(playerid, COLOR_ERROR, " 그 플레이어는 오프라인 입니다");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_ERROR, " 당신은 경찰서내철장앞 / 지하주차장문앞 에 있지 않습니다");
							return 1;
						}
					}
					else
					{
						SCM(playerid, COLOR_ERROR, " 당신은 정부군이 아닙니다");
						return 1;
					}
				}
				return 1;
			}
//=========================================입원시스템 제작중=================================================================
	if(strcmp(cmd, "/입원넣기", true) == 0 || strcmp(cmd, "/입원", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
          if(PlayerToPoint(3.0, playerid, -68.9353,-1395.9962,857.9078))
		  {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/입원) [플레이어번호/이름의 부분] [시간(분)]");
				return 1;
			}
			if(gPlayerLogged[playerid] == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 로그인 부터 해주셔야합니다");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			new suspect = GetClosestPlayer(playerid);
			if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
			{
			    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
				{
					if(IsPlayerConnected(playa))
					{
						if(playa != INVALID_PLAYER_ID)
						{
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							format(string, sizeof(string), "INFO : "#C_WHITE" 의사 %s 님이 %s 님을 (%d개월) 입원시켰습니다.", RPPlayerName(playerid), RPPlayerName(playa), money);
							emtchat(COLOR_BLUE, string);
							ResetPlayerWeapons(playa);// 입원을 넣을데 무기를 없엔다.
							WantedPoints[playa] = 0; // 체크포인트를 없엔다.
							PlayerInfo[playa][pJailed] = 99; // 수감 종류
							PlayerInfo[playa][pJailTime] = money*60;
							SetPlayerInterior(playa, 0);
							SetHealth(playa, 100);
							TogglePlayerControllable(playa, 0);
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %d개월간 몸이 굳고 입원이 됩니다. (/시간)", money);
							SCM(playa, COLOR_ERROR, string);
						}
					}
				}
				else
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 플레이어가 근처에 없거나, 당신은 의사가 아닙니다. 또는 입원시키는 위치가 아닙니다.");
					return 1;
				}
			 }
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 플레이어가 근처에 없거나, 당신은 의사가 아닙니다. 또는 입원시키는 위치가 아닙니다.");
			}
		}
		else
		{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 플레이어가 근처에 없거나, 당신은 의사가 아닙니다. 또는 입원시키는 위치가 아닙니다.");
			return 1;
		}
	}
  	return 1;
}
//=====================================================================================================================

		if(strcmp(cmd, "/페이무기", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 8)
				{
					if(!PlayerToPoint(2.0,playerid,2553.9890,-1209.4523,54.5313))
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무장 하는곳에서만 사용가능합니다.");
						return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SCM(playerid, COLOR_ERROR, " INFO : "#C_WHITE" /페이무기 [세트번호]");
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" RPG 1발 500000$");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 스나이퍼 30발 30000$");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" AK47 300발 15000$");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" MP5 300발 8000$");
						SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
						return 1;
					}
					new item = strval(tmp);
					new wp, am, pr;
					if(item < 0 || item > 6)
					{
						return 1;
					}
					switch(item)
					{
					case 1: wp=35, am=1, pr=10;
					case 2: wp=34, am=30, pr=10;
					case 3: wp=30, am=300, pr=10;
					case 4: wp=29, am=300, pr=10;
					}
					if(GetMoney(playerid) < pr)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다..");
						return 1;
					}
					GivePlayerWeapon(playerid, wp, am);
					GiveMoney(playerid, -pr);
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 사용할 수 없습니다.");
				}
			}
			return 1;
		}
		if(strcmp(cmd, "/의뢰확인", true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 8)
			{
				ShowContract(playerid);
			}
			return 1;
		}
		if(strcmp(cmd, "/의뢰삭제", true) == 0)
		{
			if(PlayerInfo[playerid][pMember] == 8)
			{
				//	DeleteContract(c)
			}
			return 1;
		}
		if(strcmp(cmd, "/의뢰", true) == 0)
		{
			if(IsPlayerConnected(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /의뢰 [플레이어번호/플레이어ID] [금액] [의뢰사유]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /의뢰 [플레이어번호/플레이어ID] [금액] [의뢰사유]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1000 || moneys > 10000) {SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의뢰의 가격은 $1000~10000 까지만 가능합니다"); return 1; }
				if(PlayerInfo[playerid][pLevel] < 2)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의뢰는 신용등급 '2' 이상만 가능합니다");
					return 1;
				}
				if(PlayerInfo[playerid][pMember] == 8)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" Payday은 의뢰를 할 수 없습니다");
					return 1;
				}
				if (IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(giveplayerid == playerid) { SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자기 자신을 의뢰할 수 없습니다"); return 1; }
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playermoney = GetMoney(playerid);
						if (moneys > 999 && playermoney >= moneys)
						{
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[256];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(length > 60)
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의뢰 사유가 너무 깁니다. 정리해서 의뢰해주세요.");
								return 1;
							}
							if(!strlen(result))
							{
								SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /의뢰 [플레이어의번호/이름의부분] [금액] [의뢰사유]");
								return 1;
							}
							for(new i=1; i<11; i++)
							{
								if(Contract[i][ctID] == 999)
								{
									GetPlayerName(playerid, Contract[i][ctName], MAX_PLAYER_NAME);
									GetPlayerName(giveplayerid, Contract[i][ctTarget], MAX_PLAYER_NAME);
									GiveMoney(playerid, (0 - moneys));
									PlayerInfo[giveplayerid][pHeadValue] += moneys;
									Contract[i][ctPrice]=moneys;
									strmid(Contract[i][ctReason], result, 0, 256, 256);
									Contract[i][ctID]=giveplayerid;
									SendFamilyMessage(8, COLOR_ERROR, "INFO : "#C_WHITE" 새로운 의뢰가 접수되었습니다.");
									SendFamilyMessage(8, COLOR_ERROR, "__________[Contract INFO]__________");
									format(string, sizeof(string), "[%d] 의뢰인 : %s | 타겟 : %s | 가격 : %d | 사유 : %s", i, Contract[i][ctName], Contract[i][ctTarget], Contract[i][ctPrice], Contract[i][ctReason]);
									SendFamilyMessage(8, COLOR_ERROR, string);
									break;
								}
							}
							SaveContract();
							format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님을 $%d만큼에 의뢰하였습니다. 이유: %s",giveplayer, moneys, result);
							SCM(playerid, COLOR_ERROR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 소지금액이 의뢰금액 보다 많지않습니다.");
						}
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의뢰대상이 접속해 있지 않습니다.");
				}
			}
			return 1;
		}
	}
	new errorshow[256];
	format(errorshow,sizeof(errorshow),"INFO : "#C_WHITE" [GM]만개 : %s 라는 명령어는 존재하지 않습니다!! \"/?\"로 명령어를 확인해주세요! 하하.",cmdtext);
	return SCM(playerid, COLOR_ERROR,errorshow);
    }
//------------------------------------------------------------------------------------------------------

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < M_P; i++)
		{
			if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SCM(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SCM(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SCM(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SCM(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SCM(i, col5, string);
					}
				}
				else
				{
					SCM(i, col1, string);
				}
			}
		}
	}
	return 1;
}
public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	NameTimers();
	for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			//new tmpcar = GetPlayerVehicleID(i);
			if(oldposx!=0.0 && oldposy!=0.0 && oldposz!=0.0)
			{
				for(new h=1; h<MAX_BUILDING; h++)
				{
					if(BuildingInfo[h][hCreated] != 0)
					{
						if(PlayerToPoint(2.0, i, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(i))
						{
							if(BuildingInfo[h][hOwned] == 0)
							{
								if(BuildingInfo[h][hType]==1)
								{
									format(string, sizeof(string), "~p~House Number : %d~n~~y~House Name : %s~n~~w~Price : ~g~$%d", BuildingInfo[h][hNum], BuildingInfo[h][hName], BuildingInfo[h][hPrice]);
								}
								else
								{
									format(string, sizeof(string), "~p~Bizz Number : %d~n~~y~Bizz Name : %s~n~~w~Price : ~g~$%d", BuildingInfo[h][hNum], BuildingInfo[h][hName], BuildingInfo[h][hPrice]);
								}
							}
							else
							{
								if(BuildingInfo[h][hType]==1)
								{
									if(BuildingInfo[h][hRent]==1)
									{
										format(string, sizeof(string), "~p~House Number : %d~n~~y~House Name : %s~n~~w~Owner : ~b~%s~n~~r~Rent Price : %d", BuildingInfo[h][hNum], BuildingInfo[h][hName], BuildingInfo[h][hOwner], BuildingInfo[h][hRentPrice]);
									}
									else if(BuildingInfo[h][hRent]==0)
									{
										format(string, sizeof(string), "~p~House Number : %d~n~~y~House Name : %s~n~~w~Owner : ~b~%s", BuildingInfo[h][hNum], BuildingInfo[h][hName], BuildingInfo[h][hOwner]);
									}
								}
								else
								{
									format(string, sizeof(string), "~p~Bizz Number : %d~n~~y~Bizz Name : %s~n~~w~Owner : ~b~%s", BuildingInfo[h][hNum], BuildingInfo[h][hName], BuildingInfo[h][hOwner]);
								}
							}
							GameTextForPlayer(i, string, 5000, 3);
						}
					}
				}
				for(new h = 0; h < sizeof(SBizzInfo); h++)
				{
					if(PlayerToPoint(10.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",SBizzInfo[h][sbMessage],(SBizzInfo[h][sbMaxProducts]-SBizzInfo[h][sbProducts]),SBizzInfo[h][sbPriceProd],SBizzInfo[h][sbTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						if(SBizzInfo[h][sbOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~Owner : %s~n~Extortion by : %s~n~Entrance Fee : ~g~$%d ~n~~w~to enter type /enter",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~This Business is for sale~n~Cost: ~g~$%d ~w~Level : %d ~n~to buy this Business type /buybiz",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}

			}
		}//custompickups end
		else if (PlayerToPoint(1.0, i, 349.5560,161.6693,1019.9912))
		{// All Saints hospital
			GameTextForPlayer(i, "~w~Type /healme to cure yourself", 5000, 5);
		}
		else if (PlayerToPoint(2.0, i,2195.8628,1677.2677,12.3672))
		{
			GameTextForPlayer(i, "~w~Welcome To ~y~City Hall~n~~w~Press~r~ F~w~ To Enter",5000, 3);
		}
		else if (PlayerToPoint(2.0, i,379.1396,-114.2661,1001.4922))
		{// Pizza Pickup
			if (PlayerInfo[i][pJob] != 10)
			{
				SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 피자요리사가 아닙니다");
				return 1;
			}
			if (sPizza[i] != 1)
			{
				SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 피자를 들었습니다. 주문을 기다리십시오");
				sPizza[i] = 1;
			}
		}
		else if (PlayerToPoint(2.0, i,1174.9100,-1365.7330,13.9876))
		{
			if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4) { SetTimerEx("elevator1", 1000, false, "i", i); }
			else { GameTextForPlayer(i, "~r~You can not use an elevator", 5000, 3); }
		}
		else if (PlayerToPoint(2.0, i,1174.9591,-1369.8761,23.9736))
		{
			if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4) { SetTimerEx("elevator2", 1000, false, "i", i); }
			else { GameTextForPlayer(i, "~r~You can not use an elevator", 5000, 3); }
		}
		else if (GetPlayerState(i) == 1 && PlayerToPoint(2.0, i,1381.0413,-1088.8511,27.3906))
		{
			GameTextForPlayer(i, "~g~Welcome,~n~~y~Use /mission to take on a Mission", 5000, 3);
		}
		else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,1554.3844,-1687.8615,66.3586))
		{
			if(IsACop(i) || PlayerInfo[i][pMember] == 7 || PlayerInfo[i][pLeader] == 7)
			{
				GameTextForPlayer(i, "~g~Police Department elevator~n~~w~Type ~r~/pdup ~w~to go up~n~Type ~r~/pddown ~w~to go down", 5000, 3);
			}
			else
			{
				GameTextForPlayer(i, "~r~Staff only", 5000, 3);
			}
		}
		else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,281.6400,171.0800,1007.1700))
		{
			if(IsACop(i) || PlayerInfo[i][pMember] == 7 || PlayerInfo[i][pLeader] == 7)
			{
				GameTextForPlayer(i, "~g~F.B.I HeadQuarters elevator~n~~w~Type ~r~/fbiup ~w~to go up", 5000, 3);
			}
			else
			{
				GameTextForPlayer(i, "~r~Staff only", 5000, 3);
			}
		}
		else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, 2394.8262,-2008.2373,13.5537))
		{
			if(PlayerInfo[i][pJob] == 8)
			{
				format(string, sizeof(string), "~w~Materials Bank~n~Materials ammount: ~r~%d", matssys[MatsAmmount]);
				GameTextForPlayer(i, string, 5000, 3);
			}
			else
			{
				GameTextForPlayer(i, "~r~Staff only ", 5000, 3);
			}
		}
		else if(PlayerOnMission[i] > 0 && PlayMission[kToggle] == 0)
		{
			if(MissionCheckpoint[i] == 1 && PlayerToPoint(10.0, i,PlayMission[kCP1][0],PlayMission[kCP1][1],PlayMission[kCP1][2]))
			{
				RingTone[i] = 20;
				format(string, sizeof(string), "%s", PlayMission[kGText1]);
				GameTextForPlayer(i, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText4]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText5]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText6]);
				SCM(i, COLOR_WHITE2, string);
				MissionCheckpoint[i] = 2;
			}
			else if(MissionCheckpoint[i] == 2 && PlayerToPoint(10.0, i,PlayMission[kCP2][0],PlayMission[kCP2][1],PlayMission[kCP2][2]))
			{
				RingTone[i] = 20;
				format(string, sizeof(string), "%s", PlayMission[kGText2]);
				GameTextForPlayer(i, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText7]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText8]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText9]);
				SCM(i, COLOR_WHITE2, string);
				MissionCheckpoint[i] = 3;
			}
			else if(MissionCheckpoint[i] == 3 && PlayerToPoint(10.0, i,PlayMission[kCP3][0],PlayMission[kCP3][1],PlayMission[kCP3][2]))
			{
				RingTone[i] = 20;
				format(string, sizeof(string), "%s", PlayMission[kGText3]);
				GameTextForPlayer(i, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText10]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText11]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText12]);
				SCM(i, COLOR_WHITE2, string);
				MissionCheckpoint[i] = 4;
			}
			else if(MissionCheckpoint[i] == 4 && PlayerToPoint(10.0, i,PlayMission[kCP4][0],PlayMission[kCP4][1],PlayMission[kCP4][2]))
			{
				RingTone[i] = 20;
				format(string, sizeof(string), "%s", PlayMission[kGText4]);
				GameTextForPlayer(i, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText13]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText14]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText15]);
				SCM(i, COLOR_WHITE2, string);
				MissionCheckpoint[i] = 5;
			}
			else if(MissionCheckpoint[i] == 5 && PlayerToPoint(10.0, i,PlayMission[kCP5][0],PlayMission[kCP5][1],PlayMission[kCP5][2]))
			{
				RingTone[i] = 20;
				format(string, sizeof(string), "%s", PlayMission[kGText5]);
				GameTextForPlayer(i, string, 8000, 3);
				format(string, sizeof(string), "%s", PlayMission[kText16]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText17]);
				SCM(i, COLOR_WHITE2, string);
				format(string, sizeof(string), "%s", PlayMission[kText18]);
				SCM(i, COLOR_WHITE2, string);
				MissionCheckpoint[i] = 6;
			}
			else if(MissionCheckpoint[i] == 6 && PlayerToPoint(10.0, i,PlayMission[kCP6][0],PlayMission[kCP6][1],PlayMission[kCP6][2]))
			{
				RingTone[i] = 20;
				format(string, sizeof(string), "%s", PlayMission[kGText6]);
				GameTextForPlayer(i, string, 8000, 3);
				format(string, sizeof(string), "..:: Mission Passed : %s | Reward received: $%d ::.", PlayMission[kTitle], PlayMission[kReward]);
				SCM(i, COLOR_ERROR, string);
				GiveMoney(i, PlayMission[kReward]);
				PlayerInfo[i][pMissionNr] = PlayerOnMission[i];
				MissionCheckpoint[i] = 0;
				PlayerOnMission[i] = 0;
			}
		}
	}

	return 1;
}

public OnPlayerText(playerid, text[])
{
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];
	if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
	{
		SCM(playerid, COLOR_ERROR, ""#C_WHITE "SERVER :"#C_WHITE" 당신은 말할수 없습니다, 조용히 하고 있어야 합니다");
		return 0;
	}
	if(PlayerInfo[playerid][pJailed] == 3)
	{
	    Anim(playerid,"CRACK","crckidle2",3.0,1,1,1,1,-1);
		SCM(playerid, COLOR_ERROR, ""#C_WHITE "SERVER :"#C_WHITE" 당신은 아직 쓰러져 아무런 행동을 하실수 없습니다");
		return 0;
	}
	if(ChangeMode[playerid]!=-1)
	{
	    if(ChangeMode[playerid]==0)
	    {
	        strmid(Gongji[0], text, 0, strlen(text), 256);
	    }
	    if(ChangeMode[playerid]==1)
	    {
	        strmid(Gongji[1], text, 0, strlen(text), 256);
	    }
	    format(string,sizeof(string),"%s\n\n\n%s",Gongji[0],Gongji[1]);
	    Update3DTextLabelText(GongiMS,0xFFFFFFFF,string);
	    ChangeMode[playerid]=-1;

		new File: pFile = fopen("lamdnn.gsav", io_write); new var[32];
		c_fwrite(pFile, "Text Save\r\n");
		format(var, 32, "MSG1=%s\r\n",Gongji[0]); c_fwrite(pFile, var);
		format(var, 32, "MSG2=%s\r\n",Gongji[1]); c_fwrite(pFile, var);
		fclose(pFile);
		return 0;
	}

	if(PlayerInfo[playerid][pJailed] == 5)
		{
			ApplyAnimation(playerid,"CRACK","crckidle2",3.0,1,1,1,1,-1);
			SCM(playerid, COLOR_ERROR, " 당신은 아직 쓰러져 아무런 행동을 하실수 없습니다");
			format(string, sizeof(string), "INFO : "#C_WHITE" 남은 시간 (%d)초",PlayerInfo[playerid][pJailTime] );
			SCM(playerid, COLOR_HINT, string);
			return 0;
		}
	if(PlayerInfo[playerid][pJailed] == 300)
	{
		Anim(playerid,"CRACK","crckidle2",3.0,1,1,1,1,-1);
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 확인사살을 당해 행동을 하실수 없습니다");
		format(string, sizeof(string), "INFO : "#C_WHITE" 남은 시간 (%d)초",PlayerInfo[playerid][pJailTime] );
		SCM(playerid, COLOR_ERROR, string);
		return 0;
	}
	if(Created[playerid] == 1)
	{
		format(string, sizeof(string), "INFO : "#C_WHITE" 건물의 이름은 [%s] 입니다.", text);
		SCM(playerid, COLOR_ERROR, string);
		strmid(BuildingInfo[CreatedHouse[playerid]][hName], text, 0, 60, 60);
		GetPlayerPos(playerid, BuildingInfo[CreatedHouse[playerid]][hEnterX], BuildingInfo[CreatedHouse[playerid]][hEnterY], BuildingInfo[CreatedHouse[playerid]][hEnterZ]);
		BuildingInfo[CreatedHouse[playerid]][hEnterI]=GetPlayerInterior(playerid);
		BuildingInfo[CreatedHouse[playerid]][hEnterW]=GetPlayerVirtualWorld(playerid);
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 인테리어를 입력해주세요. [0~??]");
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 고르셨으면 '확정'을 입력해주세요.");
		SetPlayerPos(playerid, HouseInteriorPos[0][0], HouseInteriorPos[0][1], HouseInteriorPos[0][2]);
		SetPlayerInterior(playerid, HouseInteriorInt[0]);
		Created[playerid]=2;
		return 0;
	}
	else if(Created[playerid] == 2)
	{
		if(strcmp(text, "확정", true) == 0)
		{
			for(new i=0; i<3; i++)
			{
				HousePos[playerid][i] = HouseInteriorPos[keynum][i];
			}
			HouseInt[playerid]=GetPlayerInterior(playerid);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 건물의 가격을 입력해주세요.");
			Created[playerid] = 3;
			keynum=0;
			return 0;
		}
		keynum=strval(text);
		if(keynum < 0 || keynum > 100)
		{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 0부터 100 까지 있습니다.");
			return 0;
		}
		format(string, sizeof(string), "INFO : "#C_WHITE" 현재 인테리어 [%d]",keynum);
		SCM(playerid, COLOR_ERROR, string);
		SetPlayerPos(playerid, HouseInteriorPos[keynum][0], HouseInteriorPos[keynum][1], HouseInteriorPos[keynum][2]);
		SetPlayerInterior(playerid, HouseInteriorInt[keynum]);
		return 0;
	}
	else if(Created[playerid] == 3)
	{
		BuildingInfo[CreatedHouse[playerid]][hPrice]=strval(text);
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 건물의 종류를 입력하세요. [집/사업장]");
		Created[playerid]=4;
		return 0;
	}
	else if(Created[playerid] == 4)
	{
		new h=CreatedHouse[playerid];
		if(strcmp(text, "집",true)==0)
		{
			BuildingInfo[h][hType]=1;
		}
		else if(strcmp(text, "사업장",true) == 0)
		{
			BuildingInfo[h][hType]=2;
		}
		BuildingInfo[CreatedHouse[playerid]][hExitX]=HousePos[playerid][0];
		BuildingInfo[CreatedHouse[playerid]][hExitY]=HousePos[playerid][1];
		BuildingInfo[CreatedHouse[playerid]][hExitZ]=HousePos[playerid][2];
		BuildingInfo[CreatedHouse[playerid]][hExitI]=HouseInt[playerid];
		BuildingInfo[CreatedHouse[playerid]][hExitW]=CreatedHouse[playerid];
		BuildingInfo[CreatedHouse[playerid]][hRent]=0;
		BuildingInfo[CreatedHouse[playerid]][hRentPrice]=0;
		BuildingInfo[CreatedHouse[playerid]][hBank]=0;
		BuildingInfo[CreatedHouse[playerid]][hCreated]=1;
		SaveHouse(CreatedHouse[playerid]);
		SetPlayerPos(playerid, BuildingInfo[CreatedHouse[playerid]][hExitX], BuildingInfo[CreatedHouse[playerid]][hExitY], BuildingInfo[CreatedHouse[playerid]][hExitZ]);
		SetPlayerVirtualWorld(playerid, BuildingInfo[CreatedHouse[playerid]][hExitW]);
		SetPlayerInterior(playerid, BuildingInfo[CreatedHouse[playerid]][hExitI]);
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 건물 생성이 완료되었습니다.");
		SetCameraBehindPlayer(playerid);
		SetPlayerFreeze(playerid, false, 0);
		Created[playerid]=0;
		BuildingInfo[h][hPickupid] = AddStaticPickup(1273, 1, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]);
		return 0;
	}


	if(SelectChar[playerid] == 255)
	{
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("다음", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("다음")))
		{
			switch (SelectCharID[playerid])
			{
			case 20: //Male civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivMalePeds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivMalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivMalePeds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivMalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivMalePeds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivMalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivMalePeds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivMalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivMalePeds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivMalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivMalePeds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivMalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivMalePeds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivMalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivMalePeds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivMalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivMalePeds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivMalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivMalePeds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivMalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivMalePeds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivMalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivMalePeds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivMalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivMalePeds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivMalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivMalePeds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivMalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivMalePeds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivMalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivMalePeds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivMalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivMalePeds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivMalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivMalePeds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivMalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivMalePeds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivMalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivMalePeds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivMalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivMalePeds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivMalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivMalePeds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivMalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivMalePeds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivMalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivMalePeds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivMalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivMalePeds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivMalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivMalePeds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivMalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivMalePeds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivMalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivMalePeds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivMalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivMalePeds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivMalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivMalePeds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivMalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivMalePeds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivMalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivMalePeds[32][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivMalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivMalePeds[33][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivMalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivMalePeds[34][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivMalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivMalePeds[35][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivMalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivMalePeds[36][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivMalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivMalePeds[37][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivMalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivMalePeds[38][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivMalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivMalePeds[39][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivMalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivMalePeds[40][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivMalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivMalePeds[41][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivMalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivMalePeds[42][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivMalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivMalePeds[43][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivMalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivMalePeds[44][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivMalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivMalePeds[45][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivMalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivMalePeds[46][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivMalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivMalePeds[47][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivMalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivMalePeds[48][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivMalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivMalePeds[49][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivMalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivMalePeds[50][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivMalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivMalePeds[51][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivMalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivMalePeds[52][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivMalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivMalePeds[53][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivMalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivMalePeds[54][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivMalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivMalePeds[55][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivMalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivMalePeds[56][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivMalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivMalePeds[57][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivMalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivMalePeds[58][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivMalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivMalePeds[59][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivMalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivMalePeds[60][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivMalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivMalePeds[61][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivMalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivMalePeds[62][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivMalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivMalePeds[63][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivMalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivMalePeds[64][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivMalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivMalePeds[65][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivMalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivMalePeds[66][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivMalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivMalePeds[67][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivMalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivMalePeds[68][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivMalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivMalePeds[69][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivMalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivMalePeds[70][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivMalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivMalePeds[71][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivMalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivMalePeds[72][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivMalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivMalePeds[73][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivMalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivMalePeds[74][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivMalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivMalePeds[75][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivMalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivMalePeds[76][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivMalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivMalePeds[77][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivMalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivMalePeds[78][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivMalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivMalePeds[79][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivMalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivMalePeds[80][0]); SelectCharPlace[playerid] = 81; ChosenSkin[playerid] = CivMalePeds[80][0]; }
					else if(SelectCharPlace[playerid] == 81) { SetPlayerSkin(playerid, CivMalePeds[81][0]); SelectCharPlace[playerid] = 82; ChosenSkin[playerid] = CivMalePeds[81][0]; }
					else if(SelectCharPlace[playerid] == 82) { SetPlayerSkin(playerid, CivMalePeds[82][0]); SelectCharPlace[playerid] = 83; ChosenSkin[playerid] = CivMalePeds[82][0]; }
					else if(SelectCharPlace[playerid] == 83) { SetPlayerSkin(playerid, CivMalePeds[83][0]); SelectCharPlace[playerid] = 84; ChosenSkin[playerid] = CivMalePeds[83][0]; }
					else if(SelectCharPlace[playerid] == 84) { SetPlayerSkin(playerid, CivMalePeds[84][0]); SelectCharPlace[playerid] = 85; ChosenSkin[playerid] = CivMalePeds[84][0]; }
					else if(SelectCharPlace[playerid] == 85) { SetPlayerSkin(playerid, CivMalePeds[85][0]); SelectCharPlace[playerid] = 86; ChosenSkin[playerid] = CivMalePeds[85][0]; }
					else if(SelectCharPlace[playerid] == 86) { SetPlayerSkin(playerid, CivMalePeds[86][0]); SelectCharPlace[playerid] = 87; ChosenSkin[playerid] = CivMalePeds[86][0]; }
					else if(SelectCharPlace[playerid] == 87) { SetPlayerSkin(playerid, CivMalePeds[87][0]); SelectCharPlace[playerid] = 88; ChosenSkin[playerid] = CivMalePeds[87][0]; }
					else if(SelectCharPlace[playerid] == 88) { SetPlayerSkin(playerid, CivMalePeds[88][0]); SelectCharPlace[playerid] = 89; ChosenSkin[playerid] = CivMalePeds[88][0]; }
					else if(SelectCharPlace[playerid] == 89) { SetPlayerSkin(playerid, CivMalePeds[89][0]); SelectCharPlace[playerid] = 90; ChosenSkin[playerid] = CivMalePeds[89][0]; }
					else if(SelectCharPlace[playerid] == 90) { SetPlayerSkin(playerid, CivMalePeds[90][0]); SelectCharPlace[playerid] = 91; ChosenSkin[playerid] = CivMalePeds[90][0]; }
					else if(SelectCharPlace[playerid] == 91) { SetPlayerSkin(playerid, CivMalePeds[91][0]); SelectCharPlace[playerid] = 92; ChosenSkin[playerid] = CivMalePeds[91][0]; }
					else if(SelectCharPlace[playerid] == 92) { SetPlayerSkin(playerid, CivMalePeds[92][0]); SelectCharPlace[playerid] = 93; ChosenSkin[playerid] = CivMalePeds[92][0]; }
					else if(SelectCharPlace[playerid] == 93) { SetPlayerSkin(playerid, CivMalePeds[93][0]); SelectCharPlace[playerid] = 94; ChosenSkin[playerid] = CivMalePeds[93][0]; }
					else if(SelectCharPlace[playerid] == 94) { SetPlayerSkin(playerid, CivMalePeds[94][0]); SelectCharPlace[playerid] = 95; ChosenSkin[playerid] = CivMalePeds[94][0]; }
					else if(SelectCharPlace[playerid] == 95) { SetPlayerSkin(playerid, CivMalePeds[95][0]); SelectCharPlace[playerid] = 96; ChosenSkin[playerid] = CivMalePeds[95][0]; }
					else if(SelectCharPlace[playerid] == 96) { SetPlayerSkin(playerid, CivMalePeds[96][0]); SelectCharPlace[playerid] = 97; ChosenSkin[playerid] = CivMalePeds[96][0]; }
					else if(SelectCharPlace[playerid] == 97) { SetPlayerSkin(playerid, CivMalePeds[97][0]); SelectCharPlace[playerid] = 98; ChosenSkin[playerid] = CivMalePeds[97][0]; }
					else if(SelectCharPlace[playerid] == 98) { SetPlayerSkin(playerid, CivMalePeds[98][0]); SelectCharPlace[playerid] = 99; ChosenSkin[playerid] = CivMalePeds[98][0]; }
					else if(SelectCharPlace[playerid] == 99) { SetPlayerSkin(playerid, CivMalePeds[99][0]); SelectCharPlace[playerid] = 100; ChosenSkin[playerid] = CivMalePeds[99][0]; }
					else if(SelectCharPlace[playerid] == 100) { SetPlayerSkin(playerid, CivMalePeds[100][0]); SelectCharPlace[playerid] = 101; ChosenSkin[playerid] = CivMalePeds[100][0]; }
					else if(SelectCharPlace[playerid] == 101) { SetPlayerSkin(playerid, CivMalePeds[101][0]); SelectCharPlace[playerid] = 102; ChosenSkin[playerid] = CivMalePeds[101][0]; }
					else if(SelectCharPlace[playerid] == 102) { SetPlayerSkin(playerid, CivMalePeds[102][0]); SelectCharPlace[playerid] = 103; ChosenSkin[playerid] = CivMalePeds[102][0]; }
					else if(SelectCharPlace[playerid] == 103) { SetPlayerSkin(playerid, CivMalePeds[103][0]); SelectCharPlace[playerid] = 104; ChosenSkin[playerid] = CivMalePeds[103][0]; }
					else if(SelectCharPlace[playerid] == 104) { SetPlayerSkin(playerid, CivMalePeds[104][0]); SelectCharPlace[playerid] = 105; ChosenSkin[playerid] = CivMalePeds[104][0]; }
					else if(SelectCharPlace[playerid] == 105) { SetPlayerSkin(playerid, CivMalePeds[105][0]); SelectCharPlace[playerid] = 106; ChosenSkin[playerid] = CivMalePeds[105][0]; }
					else if(SelectCharPlace[playerid] == 106) { SetPlayerSkin(playerid, CivMalePeds[106][0]); SelectCharPlace[playerid] = 107; ChosenSkin[playerid] = CivMalePeds[106][0]; }
					else if(SelectCharPlace[playerid] == 107) { SetPlayerSkin(playerid, CivMalePeds[107][0]); SelectCharPlace[playerid] = 108; ChosenSkin[playerid] = CivMalePeds[107][0]; }
					else if(SelectCharPlace[playerid] == 108) { SetPlayerSkin(playerid, CivMalePeds[108][0]); SelectCharPlace[playerid] = 109; ChosenSkin[playerid] = CivMalePeds[108][0]; }
					else if(SelectCharPlace[playerid] == 109) { SetPlayerSkin(playerid, CivMalePeds[109][0]); SelectCharPlace[playerid] = 110; ChosenSkin[playerid] = CivMalePeds[109][0]; }
					else if(SelectCharPlace[playerid] == 110) { SetPlayerSkin(playerid, CivMalePeds[110][0]); SelectCharPlace[playerid] = 111; ChosenSkin[playerid] = CivMalePeds[110][0]; }
					else if(SelectCharPlace[playerid] == 111) { SetPlayerSkin(playerid, CivMalePeds[111][0]); SelectCharPlace[playerid] = 112; ChosenSkin[playerid] = CivMalePeds[111][0]; }
					else if(SelectCharPlace[playerid] == 112) { SetPlayerSkin(playerid, CivMalePeds[112][0]); SelectCharPlace[playerid] = 113; ChosenSkin[playerid] = CivMalePeds[112][0]; }
					else if(SelectCharPlace[playerid] == 113) { SetPlayerSkin(playerid, CivMalePeds[113][0]); SelectCharPlace[playerid] = 114; ChosenSkin[playerid] = CivMalePeds[113][0]; }
					else if(SelectCharPlace[playerid] == 114) { SetPlayerSkin(playerid, CivMalePeds[114][0]); SelectCharPlace[playerid] = 115; ChosenSkin[playerid] = CivMalePeds[114][0]; }
					else if(SelectCharPlace[playerid] == 115) { SetPlayerSkin(playerid, CivMalePeds[115][0]); SelectCharPlace[playerid] = 116; ChosenSkin[playerid] = CivMalePeds[115][0]; }
					else if(SelectCharPlace[playerid] == 116) { SetPlayerSkin(playerid, CivMalePeds[116][0]); SelectCharPlace[playerid] = 117; ChosenSkin[playerid] = CivMalePeds[116][0]; }
					else if(SelectCharPlace[playerid] == 117) { SetPlayerSkin(playerid, CivMalePeds[117][0]); SelectCharPlace[playerid] = 118; ChosenSkin[playerid] = CivMalePeds[117][0]; }
					else if(SelectCharPlace[playerid] == 118) { SetPlayerSkin(playerid, CivMalePeds[118][0]); SelectCharPlace[playerid] = 119; ChosenSkin[playerid] = CivMalePeds[118][0]; }
					else if(SelectCharPlace[playerid] == 119) { SetPlayerSkin(playerid, CivMalePeds[119][0]); SelectCharPlace[playerid] = 120; ChosenSkin[playerid] = CivMalePeds[119][0]; }
					else if(SelectCharPlace[playerid] == 120) { SetPlayerSkin(playerid, CivMalePeds[120][0]); SelectCharPlace[playerid] = 121; ChosenSkin[playerid] = CivMalePeds[120][0]; }
					else if(SelectCharPlace[playerid] == 121) { SetPlayerSkin(playerid, CivMalePeds[121][0]); SelectCharPlace[playerid] = 122; ChosenSkin[playerid] = CivMalePeds[121][0]; }
					else if(SelectCharPlace[playerid] == 122) { SetPlayerSkin(playerid, CivMalePeds[122][0]); SelectCharPlace[playerid] = 123; ChosenSkin[playerid] = CivMalePeds[122][0]; }
					else if(SelectCharPlace[playerid] == 123) { SetPlayerSkin(playerid, CivMalePeds[123][0]); SelectCharPlace[playerid] = 124; ChosenSkin[playerid] = CivMalePeds[123][0]; }
					else if(SelectCharPlace[playerid] == 124) { SetPlayerSkin(playerid, CivMalePeds[124][0]); SelectCharPlace[playerid] = 125; ChosenSkin[playerid] = CivMalePeds[124][0]; }
					else if(SelectCharPlace[playerid] == 125) { SetPlayerSkin(playerid, CivMalePeds[125][0]); SelectCharPlace[playerid] = 126; ChosenSkin[playerid] = CivMalePeds[125][0]; }
					else if(SelectCharPlace[playerid] == 126) { SetPlayerSkin(playerid, CivMalePeds[126][0]); SelectCharPlace[playerid] = 127; ChosenSkin[playerid] = CivMalePeds[126][0]; }
					else if(SelectCharPlace[playerid] == 127) { SetPlayerSkin(playerid, CivMalePeds[127][0]); SelectCharPlace[playerid] = 128; ChosenSkin[playerid] = CivMalePeds[127][0]; }
					else if(SelectCharPlace[playerid] == 128) { SetPlayerSkin(playerid, CivMalePeds[128][0]); SelectCharPlace[playerid] = 129; ChosenSkin[playerid] = CivMalePeds[128][0]; }
					else if(SelectCharPlace[playerid] == 129) { SetPlayerSkin(playerid, CivMalePeds[129][0]); SelectCharPlace[playerid] = 130; ChosenSkin[playerid] = CivMalePeds[129][0]; }
					else if(SelectCharPlace[playerid] == 130) { SetPlayerSkin(playerid, CivMalePeds[130][0]); SelectCharPlace[playerid] = 131; ChosenSkin[playerid] = CivMalePeds[130][0]; }
					else if(SelectCharPlace[playerid] == 131) { SetPlayerSkin(playerid, CivMalePeds[131][0]); SelectCharPlace[playerid] = 132; ChosenSkin[playerid] = CivMalePeds[131][0]; }
					else if(SelectCharPlace[playerid] == 132) { SetPlayerSkin(playerid, CivMalePeds[132][0]); SelectCharPlace[playerid] = 133; ChosenSkin[playerid] = CivMalePeds[132][0]; }
					else if(SelectCharPlace[playerid] == 133) { SetPlayerSkin(playerid, CivMalePeds[133][0]); SelectCharPlace[playerid] = 134; ChosenSkin[playerid] = CivMalePeds[133][0]; }
					else if(SelectCharPlace[playerid] == 134) { SetPlayerSkin(playerid, CivMalePeds[134][0]); SelectCharPlace[playerid] = 135; ChosenSkin[playerid] = CivMalePeds[134][0]; }
					else if(SelectCharPlace[playerid] == 135) { SetPlayerSkin(playerid, CivMalePeds[135][0]); SelectCharPlace[playerid] = 136; ChosenSkin[playerid] = CivMalePeds[135][0]; }
					else if(SelectCharPlace[playerid] == 136) { SetPlayerSkin(playerid, CivMalePeds[136][0]); SelectCharPlace[playerid] = 137; ChosenSkin[playerid] = CivMalePeds[136][0]; }
					else if(SelectCharPlace[playerid] == 137) { SetPlayerSkin(playerid, CivMalePeds[137][0]); SelectCharPlace[playerid] = 138; ChosenSkin[playerid] = CivMalePeds[137][0]; }
					else if(SelectCharPlace[playerid] == 138) { SetPlayerSkin(playerid, CivMalePeds[138][0]); SelectCharPlace[playerid] = 139; ChosenSkin[playerid] = CivMalePeds[138][0]; }
					else if(SelectCharPlace[playerid] == 139) { SetPlayerSkin(playerid, CivMalePeds[139][0]); SelectCharPlace[playerid] = 140; ChosenSkin[playerid] = CivMalePeds[139][0]; }
					else if(SelectCharPlace[playerid] == 140) { SetPlayerSkin(playerid, CivMalePeds[140][0]); SelectCharPlace[playerid] = 141; ChosenSkin[playerid] = CivMalePeds[140][0]; }
					else if(SelectCharPlace[playerid] == 141) { SetPlayerSkin(playerid, CivMalePeds[141][0]); SelectCharPlace[playerid] = 142; ChosenSkin[playerid] = CivMalePeds[141][0]; }
					else if(SelectCharPlace[playerid] == 142) { SetPlayerSkin(playerid, CivMalePeds[142][0]); SelectCharPlace[playerid] = 143; ChosenSkin[playerid] = CivMalePeds[142][0]; }
					else if(SelectCharPlace[playerid] == 143) { SetPlayerSkin(playerid, CivMalePeds[143][0]); SelectCharPlace[playerid] = 144; ChosenSkin[playerid] = CivMalePeds[143][0]; }
					else if(SelectCharPlace[playerid] == 144) { SetPlayerSkin(playerid, CivMalePeds[144][0]); SelectCharPlace[playerid] = 145; ChosenSkin[playerid] = CivMalePeds[144][0]; }
					else if(SelectCharPlace[playerid] == 145) { SetPlayerSkin(playerid, CivMalePeds[145][0]); SelectCharPlace[playerid] = 146; ChosenSkin[playerid] = CivMalePeds[145][0]; }
					else if(SelectCharPlace[playerid] == 146) { SetPlayerSkin(playerid, CivMalePeds[146][0]); SelectCharPlace[playerid] = 147; ChosenSkin[playerid] = CivMalePeds[146][0]; }
					else if(SelectCharPlace[playerid] == 147) { SetPlayerSkin(playerid, CivMalePeds[147][0]); SelectCharPlace[playerid] = 148; ChosenSkin[playerid] = CivMalePeds[147][0]; }
					else if(SelectCharPlace[playerid] == 148) { SetPlayerSkin(playerid, CivMalePeds[148][0]); SelectCharPlace[playerid] = 149; ChosenSkin[playerid] = CivMalePeds[148][0]; }
					else if(SelectCharPlace[playerid] == 149) { SetPlayerSkin(playerid, CivMalePeds[149][0]); SelectCharPlace[playerid] = 150; ChosenSkin[playerid] = CivMalePeds[149][0]; }
					else if(SelectCharPlace[playerid] == 150) { SetPlayerSkin(playerid, CivMalePeds[150][0]); SelectCharPlace[playerid] = 151; ChosenSkin[playerid] = CivMalePeds[150][0]; }
					else if(SelectCharPlace[playerid] == 151) { SetPlayerSkin(playerid, CivMalePeds[151][0]); SelectCharPlace[playerid] = 152; ChosenSkin[playerid] = CivMalePeds[151][0]; }
					else if(SelectCharPlace[playerid] == 152) { SetPlayerSkin(playerid, CivMalePeds[152][0]); SelectCharPlace[playerid] = 153; ChosenSkin[playerid] = CivMalePeds[152][0]; }
					else if(SelectCharPlace[playerid] == 153) { SetPlayerSkin(playerid, CivMalePeds[153][0]); SelectCharPlace[playerid] = 154; ChosenSkin[playerid] = CivMalePeds[153][0]; }
					else if(SelectCharPlace[playerid] == 154) { SetPlayerSkin(playerid, CivMalePeds[154][0]); SelectCharPlace[playerid] = 155; ChosenSkin[playerid] = CivMalePeds[154][0]; }
					else if(SelectCharPlace[playerid] == 155) { SetPlayerSkin(playerid, CivMalePeds[155][0]); SelectCharPlace[playerid] = 156; ChosenSkin[playerid] = CivMalePeds[155][0]; }
					else if(SelectCharPlace[playerid] == 156) { SetPlayerSkin(playerid, CivMalePeds[156][0]); SelectCharPlace[playerid] = 157; ChosenSkin[playerid] = CivMalePeds[156][0]; }
					else if(SelectCharPlace[playerid] == 157) { SetPlayerSkin(playerid, CivMalePeds[157][0]); SelectCharPlace[playerid] = 158; ChosenSkin[playerid] = CivMalePeds[157][0]; }
					else if(SelectCharPlace[playerid] == 158) { SetPlayerSkin(playerid, CivMalePeds[158][0]); SelectCharPlace[playerid] = 159; ChosenSkin[playerid] = CivMalePeds[158][0]; }
					else if(SelectCharPlace[playerid] == 159) { SetPlayerSkin(playerid, CivMalePeds[159][0]); SelectCharPlace[playerid] = 160; ChosenSkin[playerid] = CivMalePeds[159][0]; }
					else if(SelectCharPlace[playerid] == 160) { SetPlayerSkin(playerid, CivMalePeds[160][0]); SelectCharPlace[playerid] = 161; ChosenSkin[playerid] = CivMalePeds[160][0]; }
					else if(SelectCharPlace[playerid] == 161) { SetPlayerSkin(playerid, CivMalePeds[161][0]); SelectCharPlace[playerid] = 162; ChosenSkin[playerid] = CivMalePeds[161][0]; }
					else if(SelectCharPlace[playerid] == 162) { SetPlayerSkin(playerid, CivMalePeds[162][0]); SelectCharPlace[playerid] = 163; ChosenSkin[playerid] = CivMalePeds[162][0]; }
					else if(SelectCharPlace[playerid] == 163) { SetPlayerSkin(playerid, CivMalePeds[163][0]); SelectCharPlace[playerid] = 164; ChosenSkin[playerid] = CivMalePeds[163][0]; }
					else if(SelectCharPlace[playerid] == 164) { SetPlayerSkin(playerid, CivMalePeds[164][0]); SelectCharPlace[playerid] = 165; ChosenSkin[playerid] = CivMalePeds[164][0]; }
					else if(SelectCharPlace[playerid] == 165) { SetPlayerSkin(playerid, CivMalePeds[165][0]); SelectCharPlace[playerid] = 166; ChosenSkin[playerid] = CivMalePeds[165][0]; }
					else if(SelectCharPlace[playerid] == 166) { SetPlayerSkin(playerid, CivMalePeds[166][0]); SelectCharPlace[playerid] = 167; ChosenSkin[playerid] = CivMalePeds[166][0]; }
					else if(SelectCharPlace[playerid] == 167) { SetPlayerSkin(playerid, CivMalePeds[167][0]); SelectCharPlace[playerid] = 168; ChosenSkin[playerid] = CivMalePeds[167][0]; }
					else if(SelectCharPlace[playerid] == 168) { SetPlayerSkin(playerid, CivMalePeds[168][0]); SelectCharPlace[playerid] = 169; ChosenSkin[playerid] = CivMalePeds[168][0]; }
					else if(SelectCharPlace[playerid] == 169) { SetPlayerSkin(playerid, CivMalePeds[169][0]); SelectCharPlace[playerid] = 170; ChosenSkin[playerid] = CivMalePeds[169][0]; }
					else if(SelectCharPlace[playerid] == 170) { SetPlayerSkin(playerid, CivMalePeds[170][0]); SelectCharPlace[playerid] = 171; ChosenSkin[playerid] = CivMalePeds[170][0]; }
					else if(SelectCharPlace[playerid] == 171) { SetPlayerSkin(playerid, CivMalePeds[171][0]); SelectCharPlace[playerid] = 172; ChosenSkin[playerid] = CivMalePeds[171][0]; }
					else if(SelectCharPlace[playerid] == 172) { SetPlayerSkin(playerid, CivMalePeds[172][0]); SelectCharPlace[playerid] = 173; ChosenSkin[playerid] = CivMalePeds[172][0]; }
					else if(SelectCharPlace[playerid] == 173) { SetPlayerSkin(playerid, CivMalePeds[173][0]); SelectCharPlace[playerid] = 174; ChosenSkin[playerid] = CivMalePeds[173][0]; }
					else if(SelectCharPlace[playerid] == 174) { SetPlayerSkin(playerid, CivMalePeds[174][0]); SelectCharPlace[playerid] = 175; ChosenSkin[playerid] = CivMalePeds[174][0]; }
					else if(SelectCharPlace[playerid] == 175) { SetPlayerSkin(playerid, CivMalePeds[175][0]); SelectCharPlace[playerid] = 176; ChosenSkin[playerid] = CivMalePeds[175][0]; }
					else if(SelectCharPlace[playerid] == 176) { SetPlayerSkin(playerid, CivMalePeds[176][0]); SelectCharPlace[playerid] = 177; ChosenSkin[playerid] = CivMalePeds[176][0]; }
					else if(SelectCharPlace[playerid] == 177) { SetPlayerSkin(playerid, CivMalePeds[177][0]); SelectCharPlace[playerid] = 178; ChosenSkin[playerid] = CivMalePeds[177][0]; }
					else if(SelectCharPlace[playerid] == 178) { SetPlayerSkin(playerid, CivMalePeds[178][0]); SelectCharPlace[playerid] = 179; ChosenSkin[playerid] = CivMalePeds[178][0]; }
					else if(SelectCharPlace[playerid] == 179) { SetPlayerSkin(playerid, CivMalePeds[179][0]); SelectCharPlace[playerid] = 180; ChosenSkin[playerid] = CivMalePeds[179][0]; }
					else if(SelectCharPlace[playerid] == 180) { SetPlayerSkin(playerid, CivMalePeds[180][0]); SelectCharPlace[playerid] = 181; ChosenSkin[playerid] = CivMalePeds[180][0]; }
					else if(SelectCharPlace[playerid] == 181) { SetPlayerSkin(playerid, CivMalePeds[181][0]); SelectCharPlace[playerid] = 182; ChosenSkin[playerid] = CivMalePeds[181][0]; }
					else if(SelectCharPlace[playerid] == 182) { SetPlayerSkin(playerid, CivMalePeds[182][0]); SelectCharPlace[playerid] = 183; ChosenSkin[playerid] = CivMalePeds[182][0]; }
					else if(SelectCharPlace[playerid] == 183) { SetPlayerSkin(playerid, CivMalePeds[183][0]); SelectCharPlace[playerid] = 184; ChosenSkin[playerid] = CivMalePeds[183][0]; }
					else if(SelectCharPlace[playerid] == 184) { SetPlayerSkin(playerid, CivMalePeds[184][0]); SelectCharPlace[playerid] = 185; ChosenSkin[playerid] = CivMalePeds[184][0]; }
					else if(SelectCharPlace[playerid] == 185) { SetPlayerSkin(playerid, CivMalePeds[185][0]); SelectCharPlace[playerid] = 186; ChosenSkin[playerid] = CivMalePeds[185][0]; }
					else if(SelectCharPlace[playerid] == 186) { SetPlayerSkin(playerid, CivMalePeds[186][0]); SelectCharPlace[playerid] = 187; ChosenSkin[playerid] = CivMalePeds[186][0]; }
					else if(SelectCharPlace[playerid] == 187) { SetPlayerSkin(playerid, CivMalePeds[187][0]); SelectCharPlace[playerid] = 188; ChosenSkin[playerid] = CivMalePeds[187][0]; }
					else if(SelectCharPlace[playerid] == 188) { SetPlayerSkin(playerid, CivMalePeds[188][0]); SelectCharPlace[playerid] = 189; ChosenSkin[playerid] = CivMalePeds[188][0]; }
					else if(SelectCharPlace[playerid] == 189) { SetPlayerSkin(playerid, CivMalePeds[189][0]); SelectCharPlace[playerid] = 190; ChosenSkin[playerid] = CivMalePeds[189][0]; }
					else if(SelectCharPlace[playerid] == 190) { SetPlayerSkin(playerid, CivMalePeds[190][0]); SelectCharPlace[playerid] = 191; ChosenSkin[playerid] = CivMalePeds[190][0]; }
					else if(SelectCharPlace[playerid] == 191) { SetPlayerSkin(playerid, CivMalePeds[191][0]); SelectCharPlace[playerid] = 192; ChosenSkin[playerid] = CivMalePeds[191][0]; }
					else if(SelectCharPlace[playerid] == 192) { SetPlayerSkin(playerid, CivMalePeds[192][0]); SelectCharPlace[playerid] = 193; ChosenSkin[playerid] = CivMalePeds[192][0]; }
					else if(SelectCharPlace[playerid] == 193) { SetPlayerSkin(playerid, CivMalePeds[193][0]); SelectCharPlace[playerid] = 194; ChosenSkin[playerid] = CivMalePeds[193][0]; }
					else if(SelectCharPlace[playerid] == 194) { SetPlayerSkin(playerid, CivMalePeds[194][0]); SelectCharPlace[playerid] = 195; ChosenSkin[playerid] = CivMalePeds[194][0]; }
					else if(SelectCharPlace[playerid] == 195) { SetPlayerSkin(playerid, CivMalePeds[195][0]); SelectCharPlace[playerid] = 196; ChosenSkin[playerid] = CivMalePeds[195][0]; }
					else if(SelectCharPlace[playerid] == 196) { SetPlayerSkin(playerid, CivMalePeds[196][0]); SelectCharPlace[playerid] = 197; ChosenSkin[playerid] = CivMalePeds[196][0]; }
					else if(SelectCharPlace[playerid] == 197) { SetPlayerSkin(playerid, CivMalePeds[197][0]); SelectCharPlace[playerid] = 198; ChosenSkin[playerid] = CivMalePeds[197][0]; }
					else if(SelectCharPlace[playerid] == 198) { SetPlayerSkin(playerid, CivMalePeds[198][0]); SelectCharPlace[playerid] = 199; ChosenSkin[playerid] = CivMalePeds[198][0]; }
					else if(SelectCharPlace[playerid] == 199) { SetPlayerSkin(playerid, CivMalePeds[199][0]); SelectCharPlace[playerid] = 200; ChosenSkin[playerid] = CivMalePeds[199][0]; }
					else if(SelectCharPlace[playerid] == 200) { SetPlayerSkin(playerid, CivMalePeds[200][0]); SelectCharPlace[playerid] = 201; ChosenSkin[playerid] = CivMalePeds[200][0]; }
					else if(SelectCharPlace[playerid] == 201) { SetPlayerSkin(playerid, CivMalePeds[201][0]); SelectCharPlace[playerid] = 202; ChosenSkin[playerid] = CivMalePeds[201][0]; }
					else if(SelectCharPlace[playerid] == 202) { SetPlayerSkin(playerid, CivMalePeds[202][0]); SelectCharPlace[playerid] = 203; ChosenSkin[playerid] = CivMalePeds[202][0]; }
					else if(SelectCharPlace[playerid] == 203) { SetPlayerSkin(playerid, CivMalePeds[203][0]); SelectCharPlace[playerid] = 204; ChosenSkin[playerid] = CivMalePeds[203][0]; }
					else if(SelectCharPlace[playerid] == 204) { SetPlayerSkin(playerid, CivMalePeds[204][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivMalePeds[204][0]; }
				}
			case 30: //Female civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivFemalePeds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivFemalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivFemalePeds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivFemalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivFemalePeds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivFemalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivFemalePeds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivFemalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivFemalePeds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivFemalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivFemalePeds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivFemalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivFemalePeds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivFemalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivFemalePeds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivFemalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivFemalePeds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivFemalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivFemalePeds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivFemalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivFemalePeds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivFemalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivFemalePeds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivFemalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivFemalePeds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivFemalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivFemalePeds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivFemalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivFemalePeds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivFemalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivFemalePeds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivFemalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivFemalePeds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivFemalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivFemalePeds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivFemalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivFemalePeds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivFemalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivFemalePeds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivFemalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivFemalePeds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivFemalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivFemalePeds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivFemalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivFemalePeds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivFemalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivFemalePeds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivFemalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivFemalePeds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivFemalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivFemalePeds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivFemalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivFemalePeds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivFemalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivFemalePeds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivFemalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivFemalePeds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivFemalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivFemalePeds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivFemalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivFemalePeds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivFemalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivFemalePeds[32][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivFemalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivFemalePeds[33][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivFemalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivFemalePeds[34][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivFemalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivFemalePeds[35][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivFemalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivFemalePeds[36][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivFemalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivFemalePeds[37][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivFemalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivFemalePeds[38][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivFemalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivFemalePeds[39][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivFemalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivFemalePeds[40][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivFemalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivFemalePeds[41][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivFemalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivFemalePeds[42][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivFemalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivFemalePeds[43][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivFemalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivFemalePeds[44][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivFemalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivFemalePeds[45][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivFemalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivFemalePeds[46][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivFemalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivFemalePeds[47][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivFemalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivFemalePeds[48][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivFemalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivFemalePeds[49][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivFemalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivFemalePeds[50][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivFemalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivFemalePeds[51][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivFemalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivFemalePeds[52][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivFemalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivFemalePeds[53][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivFemalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivFemalePeds[54][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivFemalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivFemalePeds[55][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivFemalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivFemalePeds[56][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivFemalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivFemalePeds[57][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivFemalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivFemalePeds[58][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivFemalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivFemalePeds[59][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivFemalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivFemalePeds[60][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivFemalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivFemalePeds[61][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivFemalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivFemalePeds[62][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivFemalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivFemalePeds[63][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivFemalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivFemalePeds[64][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivFemalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivFemalePeds[65][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivFemalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivFemalePeds[66][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivFemalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivFemalePeds[67][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivFemalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivFemalePeds[68][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivFemalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivFemalePeds[69][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivFemalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivFemalePeds[70][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivFemalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivFemalePeds[71][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivFemalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivFemalePeds[72][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivFemalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivFemalePeds[73][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivFemalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivFemalePeds[74][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivFemalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivFemalePeds[75][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivFemalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivFemalePeds[76][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivFemalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivFemalePeds[77][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivFemalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivFemalePeds[78][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivFemalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivFemalePeds[79][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivFemalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivFemalePeds[80][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivFemalePeds[80][0]; }
				}
			}
			return 0;
		}
		else if ((strcmp("이전", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("이전")))
		{
			switch (SelectCharID[playerid])
			{
			case 20: //Male civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivMalePeds[1][0]); SelectCharPlace[playerid] = 204; ChosenSkin[playerid] = CivMalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivMalePeds[2][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivMalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivMalePeds[3][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivMalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivMalePeds[4][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivMalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivMalePeds[5][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivMalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivMalePeds[6][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivMalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivMalePeds[7][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivMalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivMalePeds[8][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivMalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivMalePeds[9][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivMalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivMalePeds[10][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivMalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivMalePeds[11][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivMalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivMalePeds[12][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivMalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivMalePeds[13][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivMalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivMalePeds[14][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivMalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivMalePeds[15][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivMalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivMalePeds[16][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivMalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivMalePeds[17][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivMalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivMalePeds[18][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivMalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivMalePeds[19][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivMalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivMalePeds[20][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivMalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivMalePeds[21][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivMalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivMalePeds[22][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivMalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivMalePeds[23][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivMalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivMalePeds[24][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivMalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivMalePeds[25][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivMalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivMalePeds[26][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivMalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivMalePeds[27][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivMalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivMalePeds[28][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivMalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivMalePeds[29][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivMalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivMalePeds[30][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivMalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivMalePeds[31][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivMalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivMalePeds[32][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivMalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivMalePeds[33][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivMalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivMalePeds[34][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivMalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivMalePeds[35][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivMalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivMalePeds[36][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivMalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivMalePeds[37][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivMalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivMalePeds[38][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivMalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivMalePeds[39][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivMalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivMalePeds[40][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivMalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivMalePeds[41][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivMalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivMalePeds[42][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivMalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivMalePeds[43][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivMalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivMalePeds[44][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivMalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivMalePeds[45][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivMalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivMalePeds[46][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivMalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivMalePeds[47][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivMalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivMalePeds[48][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivMalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivMalePeds[49][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivMalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivMalePeds[50][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivMalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivMalePeds[51][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivMalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivMalePeds[52][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivMalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivMalePeds[53][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivMalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivMalePeds[54][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivMalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivMalePeds[55][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivMalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivMalePeds[56][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivMalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivMalePeds[57][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivMalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivMalePeds[58][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivMalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivMalePeds[59][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivMalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivMalePeds[60][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivMalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivMalePeds[61][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivMalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivMalePeds[62][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivMalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivMalePeds[63][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivMalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivMalePeds[64][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivMalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivMalePeds[65][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivMalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivMalePeds[66][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivMalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivMalePeds[67][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivMalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivMalePeds[68][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivMalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivMalePeds[69][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivMalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivMalePeds[70][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivMalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivMalePeds[71][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivMalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivMalePeds[72][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivMalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivMalePeds[73][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivMalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivMalePeds[74][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivMalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivMalePeds[75][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivMalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivMalePeds[76][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivMalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivMalePeds[77][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivMalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivMalePeds[78][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivMalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivMalePeds[79][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivMalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivMalePeds[80][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivMalePeds[80][0]; }
					else if(SelectCharPlace[playerid] == 81) { SetPlayerSkin(playerid, CivMalePeds[81][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivMalePeds[81][0]; }
					else if(SelectCharPlace[playerid] == 82) { SetPlayerSkin(playerid, CivMalePeds[82][0]); SelectCharPlace[playerid] = 81; ChosenSkin[playerid] = CivMalePeds[82][0]; }
					else if(SelectCharPlace[playerid] == 83) { SetPlayerSkin(playerid, CivMalePeds[83][0]); SelectCharPlace[playerid] = 82; ChosenSkin[playerid] = CivMalePeds[83][0]; }
					else if(SelectCharPlace[playerid] == 84) { SetPlayerSkin(playerid, CivMalePeds[84][0]); SelectCharPlace[playerid] = 83; ChosenSkin[playerid] = CivMalePeds[84][0]; }
					else if(SelectCharPlace[playerid] == 85) { SetPlayerSkin(playerid, CivMalePeds[85][0]); SelectCharPlace[playerid] = 84; ChosenSkin[playerid] = CivMalePeds[85][0]; }
					else if(SelectCharPlace[playerid] == 86) { SetPlayerSkin(playerid, CivMalePeds[86][0]); SelectCharPlace[playerid] = 85; ChosenSkin[playerid] = CivMalePeds[86][0]; }
					else if(SelectCharPlace[playerid] == 87) { SetPlayerSkin(playerid, CivMalePeds[87][0]); SelectCharPlace[playerid] = 86; ChosenSkin[playerid] = CivMalePeds[87][0]; }
					else if(SelectCharPlace[playerid] == 88) { SetPlayerSkin(playerid, CivMalePeds[88][0]); SelectCharPlace[playerid] = 87; ChosenSkin[playerid] = CivMalePeds[88][0]; }
					else if(SelectCharPlace[playerid] == 89) { SetPlayerSkin(playerid, CivMalePeds[89][0]); SelectCharPlace[playerid] = 88; ChosenSkin[playerid] = CivMalePeds[89][0]; }
					else if(SelectCharPlace[playerid] == 90) { SetPlayerSkin(playerid, CivMalePeds[90][0]); SelectCharPlace[playerid] = 89; ChosenSkin[playerid] = CivMalePeds[90][0]; }
					else if(SelectCharPlace[playerid] == 91) { SetPlayerSkin(playerid, CivMalePeds[91][0]); SelectCharPlace[playerid] = 90; ChosenSkin[playerid] = CivMalePeds[91][0]; }
					else if(SelectCharPlace[playerid] == 92) { SetPlayerSkin(playerid, CivMalePeds[92][0]); SelectCharPlace[playerid] = 91; ChosenSkin[playerid] = CivMalePeds[92][0]; }
					else if(SelectCharPlace[playerid] == 93) { SetPlayerSkin(playerid, CivMalePeds[93][0]); SelectCharPlace[playerid] = 92; ChosenSkin[playerid] = CivMalePeds[93][0]; }
					else if(SelectCharPlace[playerid] == 94) { SetPlayerSkin(playerid, CivMalePeds[94][0]); SelectCharPlace[playerid] = 93; ChosenSkin[playerid] = CivMalePeds[94][0]; }
					else if(SelectCharPlace[playerid] == 95) { SetPlayerSkin(playerid, CivMalePeds[95][0]); SelectCharPlace[playerid] = 94; ChosenSkin[playerid] = CivMalePeds[95][0]; }
					else if(SelectCharPlace[playerid] == 96) { SetPlayerSkin(playerid, CivMalePeds[96][0]); SelectCharPlace[playerid] = 95; ChosenSkin[playerid] = CivMalePeds[96][0]; }
					else if(SelectCharPlace[playerid] == 97) { SetPlayerSkin(playerid, CivMalePeds[97][0]); SelectCharPlace[playerid] = 96; ChosenSkin[playerid] = CivMalePeds[97][0]; }
					else if(SelectCharPlace[playerid] == 98) { SetPlayerSkin(playerid, CivMalePeds[98][0]); SelectCharPlace[playerid] = 97; ChosenSkin[playerid] = CivMalePeds[98][0]; }
					else if(SelectCharPlace[playerid] == 99) { SetPlayerSkin(playerid, CivMalePeds[99][0]); SelectCharPlace[playerid] = 98; ChosenSkin[playerid] = CivMalePeds[99][0]; }
					else if(SelectCharPlace[playerid] == 100) { SetPlayerSkin(playerid, CivMalePeds[100][0]); SelectCharPlace[playerid] = 99; ChosenSkin[playerid] = CivMalePeds[100][0]; }
					else if(SelectCharPlace[playerid] == 101) { SetPlayerSkin(playerid, CivMalePeds[101][0]); SelectCharPlace[playerid] = 100; ChosenSkin[playerid] = CivMalePeds[101][0]; }
					else if(SelectCharPlace[playerid] == 102) { SetPlayerSkin(playerid, CivMalePeds[102][0]); SelectCharPlace[playerid] = 101; ChosenSkin[playerid] = CivMalePeds[102][0]; }
					else if(SelectCharPlace[playerid] == 103) { SetPlayerSkin(playerid, CivMalePeds[103][0]); SelectCharPlace[playerid] = 102; ChosenSkin[playerid] = CivMalePeds[103][0]; }
					else if(SelectCharPlace[playerid] == 104) { SetPlayerSkin(playerid, CivMalePeds[104][0]); SelectCharPlace[playerid] = 103; ChosenSkin[playerid] = CivMalePeds[104][0]; }
					else if(SelectCharPlace[playerid] == 105) { SetPlayerSkin(playerid, CivMalePeds[105][0]); SelectCharPlace[playerid] = 104; ChosenSkin[playerid] = CivMalePeds[105][0]; }
					else if(SelectCharPlace[playerid] == 106) { SetPlayerSkin(playerid, CivMalePeds[106][0]); SelectCharPlace[playerid] = 105; ChosenSkin[playerid] = CivMalePeds[106][0]; }
					else if(SelectCharPlace[playerid] == 107) { SetPlayerSkin(playerid, CivMalePeds[107][0]); SelectCharPlace[playerid] = 106; ChosenSkin[playerid] = CivMalePeds[107][0]; }
					else if(SelectCharPlace[playerid] == 108) { SetPlayerSkin(playerid, CivMalePeds[108][0]); SelectCharPlace[playerid] = 107; ChosenSkin[playerid] = CivMalePeds[108][0]; }
					else if(SelectCharPlace[playerid] == 109) { SetPlayerSkin(playerid, CivMalePeds[109][0]); SelectCharPlace[playerid] = 108; ChosenSkin[playerid] = CivMalePeds[109][0]; }
					else if(SelectCharPlace[playerid] == 110) { SetPlayerSkin(playerid, CivMalePeds[110][0]); SelectCharPlace[playerid] = 109; ChosenSkin[playerid] = CivMalePeds[110][0]; }
					else if(SelectCharPlace[playerid] == 111) { SetPlayerSkin(playerid, CivMalePeds[111][0]); SelectCharPlace[playerid] = 110; ChosenSkin[playerid] = CivMalePeds[111][0]; }
					else if(SelectCharPlace[playerid] == 112) { SetPlayerSkin(playerid, CivMalePeds[112][0]); SelectCharPlace[playerid] = 111; ChosenSkin[playerid] = CivMalePeds[112][0]; }
					else if(SelectCharPlace[playerid] == 113) { SetPlayerSkin(playerid, CivMalePeds[113][0]); SelectCharPlace[playerid] = 112; ChosenSkin[playerid] = CivMalePeds[113][0]; }
					else if(SelectCharPlace[playerid] == 114) { SetPlayerSkin(playerid, CivMalePeds[114][0]); SelectCharPlace[playerid] = 113; ChosenSkin[playerid] = CivMalePeds[114][0]; }
					else if(SelectCharPlace[playerid] == 115) { SetPlayerSkin(playerid, CivMalePeds[115][0]); SelectCharPlace[playerid] = 114; ChosenSkin[playerid] = CivMalePeds[115][0]; }
					else if(SelectCharPlace[playerid] == 116) { SetPlayerSkin(playerid, CivMalePeds[116][0]); SelectCharPlace[playerid] = 115; ChosenSkin[playerid] = CivMalePeds[116][0]; }
					else if(SelectCharPlace[playerid] == 117) { SetPlayerSkin(playerid, CivMalePeds[117][0]); SelectCharPlace[playerid] = 116; ChosenSkin[playerid] = CivMalePeds[117][0]; }
					else if(SelectCharPlace[playerid] == 118) { SetPlayerSkin(playerid, CivMalePeds[118][0]); SelectCharPlace[playerid] = 117; ChosenSkin[playerid] = CivMalePeds[118][0]; }
					else if(SelectCharPlace[playerid] == 119) { SetPlayerSkin(playerid, CivMalePeds[119][0]); SelectCharPlace[playerid] = 118; ChosenSkin[playerid] = CivMalePeds[119][0]; }
					else if(SelectCharPlace[playerid] == 120) { SetPlayerSkin(playerid, CivMalePeds[120][0]); SelectCharPlace[playerid] = 119; ChosenSkin[playerid] = CivMalePeds[120][0]; }
					else if(SelectCharPlace[playerid] == 121) { SetPlayerSkin(playerid, CivMalePeds[121][0]); SelectCharPlace[playerid] = 120; ChosenSkin[playerid] = CivMalePeds[121][0]; }
					else if(SelectCharPlace[playerid] == 122) { SetPlayerSkin(playerid, CivMalePeds[122][0]); SelectCharPlace[playerid] = 121; ChosenSkin[playerid] = CivMalePeds[122][0]; }
					else if(SelectCharPlace[playerid] == 123) { SetPlayerSkin(playerid, CivMalePeds[123][0]); SelectCharPlace[playerid] = 122; ChosenSkin[playerid] = CivMalePeds[123][0]; }
					else if(SelectCharPlace[playerid] == 124) { SetPlayerSkin(playerid, CivMalePeds[124][0]); SelectCharPlace[playerid] = 123; ChosenSkin[playerid] = CivMalePeds[124][0]; }
					else if(SelectCharPlace[playerid] == 125) { SetPlayerSkin(playerid, CivMalePeds[125][0]); SelectCharPlace[playerid] = 124; ChosenSkin[playerid] = CivMalePeds[125][0]; }
					else if(SelectCharPlace[playerid] == 126) { SetPlayerSkin(playerid, CivMalePeds[126][0]); SelectCharPlace[playerid] = 125; ChosenSkin[playerid] = CivMalePeds[126][0]; }
					else if(SelectCharPlace[playerid] == 127) { SetPlayerSkin(playerid, CivMalePeds[127][0]); SelectCharPlace[playerid] = 126; ChosenSkin[playerid] = CivMalePeds[127][0]; }
					else if(SelectCharPlace[playerid] == 128) { SetPlayerSkin(playerid, CivMalePeds[128][0]); SelectCharPlace[playerid] = 127; ChosenSkin[playerid] = CivMalePeds[128][0]; }
					else if(SelectCharPlace[playerid] == 129) { SetPlayerSkin(playerid, CivMalePeds[129][0]); SelectCharPlace[playerid] = 128; ChosenSkin[playerid] = CivMalePeds[129][0]; }
					else if(SelectCharPlace[playerid] == 130) { SetPlayerSkin(playerid, CivMalePeds[130][0]); SelectCharPlace[playerid] = 129; ChosenSkin[playerid] = CivMalePeds[130][0]; }
					else if(SelectCharPlace[playerid] == 131) { SetPlayerSkin(playerid, CivMalePeds[131][0]); SelectCharPlace[playerid] = 130; ChosenSkin[playerid] = CivMalePeds[131][0]; }
					else if(SelectCharPlace[playerid] == 132) { SetPlayerSkin(playerid, CivMalePeds[132][0]); SelectCharPlace[playerid] = 131; ChosenSkin[playerid] = CivMalePeds[132][0]; }
					else if(SelectCharPlace[playerid] == 133) { SetPlayerSkin(playerid, CivMalePeds[133][0]); SelectCharPlace[playerid] = 132; ChosenSkin[playerid] = CivMalePeds[133][0]; }
					else if(SelectCharPlace[playerid] == 134) { SetPlayerSkin(playerid, CivMalePeds[134][0]); SelectCharPlace[playerid] = 133; ChosenSkin[playerid] = CivMalePeds[134][0]; }
					else if(SelectCharPlace[playerid] == 135) { SetPlayerSkin(playerid, CivMalePeds[135][0]); SelectCharPlace[playerid] = 134; ChosenSkin[playerid] = CivMalePeds[135][0]; }
					else if(SelectCharPlace[playerid] == 136) { SetPlayerSkin(playerid, CivMalePeds[136][0]); SelectCharPlace[playerid] = 135; ChosenSkin[playerid] = CivMalePeds[136][0]; }
					else if(SelectCharPlace[playerid] == 137) { SetPlayerSkin(playerid, CivMalePeds[137][0]); SelectCharPlace[playerid] = 136; ChosenSkin[playerid] = CivMalePeds[137][0]; }
					else if(SelectCharPlace[playerid] == 138) { SetPlayerSkin(playerid, CivMalePeds[138][0]); SelectCharPlace[playerid] = 137; ChosenSkin[playerid] = CivMalePeds[138][0]; }
					else if(SelectCharPlace[playerid] == 139) { SetPlayerSkin(playerid, CivMalePeds[139][0]); SelectCharPlace[playerid] = 138; ChosenSkin[playerid] = CivMalePeds[139][0]; }
					else if(SelectCharPlace[playerid] == 140) { SetPlayerSkin(playerid, CivMalePeds[140][0]); SelectCharPlace[playerid] = 139; ChosenSkin[playerid] = CivMalePeds[140][0]; }
					else if(SelectCharPlace[playerid] == 141) { SetPlayerSkin(playerid, CivMalePeds[141][0]); SelectCharPlace[playerid] = 140; ChosenSkin[playerid] = CivMalePeds[141][0]; }
					else if(SelectCharPlace[playerid] == 142) { SetPlayerSkin(playerid, CivMalePeds[142][0]); SelectCharPlace[playerid] = 141; ChosenSkin[playerid] = CivMalePeds[142][0]; }
					else if(SelectCharPlace[playerid] == 143) { SetPlayerSkin(playerid, CivMalePeds[143][0]); SelectCharPlace[playerid] = 142; ChosenSkin[playerid] = CivMalePeds[143][0]; }
					else if(SelectCharPlace[playerid] == 144) { SetPlayerSkin(playerid, CivMalePeds[144][0]); SelectCharPlace[playerid] = 143; ChosenSkin[playerid] = CivMalePeds[144][0]; }
					else if(SelectCharPlace[playerid] == 145) { SetPlayerSkin(playerid, CivMalePeds[145][0]); SelectCharPlace[playerid] = 144; ChosenSkin[playerid] = CivMalePeds[145][0]; }
					else if(SelectCharPlace[playerid] == 146) { SetPlayerSkin(playerid, CivMalePeds[146][0]); SelectCharPlace[playerid] = 145; ChosenSkin[playerid] = CivMalePeds[146][0]; }
					else if(SelectCharPlace[playerid] == 147) { SetPlayerSkin(playerid, CivMalePeds[147][0]); SelectCharPlace[playerid] = 146; ChosenSkin[playerid] = CivMalePeds[147][0]; }
					else if(SelectCharPlace[playerid] == 148) { SetPlayerSkin(playerid, CivMalePeds[148][0]); SelectCharPlace[playerid] = 147; ChosenSkin[playerid] = CivMalePeds[148][0]; }
					else if(SelectCharPlace[playerid] == 149) { SetPlayerSkin(playerid, CivMalePeds[149][0]); SelectCharPlace[playerid] = 148; ChosenSkin[playerid] = CivMalePeds[149][0]; }
					else if(SelectCharPlace[playerid] == 150) { SetPlayerSkin(playerid, CivMalePeds[150][0]); SelectCharPlace[playerid] = 149; ChosenSkin[playerid] = CivMalePeds[150][0]; }
					else if(SelectCharPlace[playerid] == 151) { SetPlayerSkin(playerid, CivMalePeds[151][0]); SelectCharPlace[playerid] = 150; ChosenSkin[playerid] = CivMalePeds[151][0]; }
					else if(SelectCharPlace[playerid] == 152) { SetPlayerSkin(playerid, CivMalePeds[152][0]); SelectCharPlace[playerid] = 151; ChosenSkin[playerid] = CivMalePeds[152][0]; }
					else if(SelectCharPlace[playerid] == 153) { SetPlayerSkin(playerid, CivMalePeds[153][0]); SelectCharPlace[playerid] = 152; ChosenSkin[playerid] = CivMalePeds[153][0]; }
					else if(SelectCharPlace[playerid] == 154) { SetPlayerSkin(playerid, CivMalePeds[154][0]); SelectCharPlace[playerid] = 153; ChosenSkin[playerid] = CivMalePeds[154][0]; }
					else if(SelectCharPlace[playerid] == 155) { SetPlayerSkin(playerid, CivMalePeds[155][0]); SelectCharPlace[playerid] = 154; ChosenSkin[playerid] = CivMalePeds[155][0]; }
					else if(SelectCharPlace[playerid] == 156) { SetPlayerSkin(playerid, CivMalePeds[156][0]); SelectCharPlace[playerid] = 155; ChosenSkin[playerid] = CivMalePeds[156][0]; }
					else if(SelectCharPlace[playerid] == 157) { SetPlayerSkin(playerid, CivMalePeds[157][0]); SelectCharPlace[playerid] = 156; ChosenSkin[playerid] = CivMalePeds[157][0]; }
					else if(SelectCharPlace[playerid] == 158) { SetPlayerSkin(playerid, CivMalePeds[158][0]); SelectCharPlace[playerid] = 157; ChosenSkin[playerid] = CivMalePeds[158][0]; }
					else if(SelectCharPlace[playerid] == 159) { SetPlayerSkin(playerid, CivMalePeds[159][0]); SelectCharPlace[playerid] = 158; ChosenSkin[playerid] = CivMalePeds[159][0]; }
					else if(SelectCharPlace[playerid] == 160) { SetPlayerSkin(playerid, CivMalePeds[160][0]); SelectCharPlace[playerid] = 159; ChosenSkin[playerid] = CivMalePeds[160][0]; }
					else if(SelectCharPlace[playerid] == 161) { SetPlayerSkin(playerid, CivMalePeds[161][0]); SelectCharPlace[playerid] = 160; ChosenSkin[playerid] = CivMalePeds[161][0]; }
					else if(SelectCharPlace[playerid] == 162) { SetPlayerSkin(playerid, CivMalePeds[162][0]); SelectCharPlace[playerid] = 161; ChosenSkin[playerid] = CivMalePeds[162][0]; }
					else if(SelectCharPlace[playerid] == 163) { SetPlayerSkin(playerid, CivMalePeds[163][0]); SelectCharPlace[playerid] = 162; ChosenSkin[playerid] = CivMalePeds[163][0]; }
					else if(SelectCharPlace[playerid] == 164) { SetPlayerSkin(playerid, CivMalePeds[164][0]); SelectCharPlace[playerid] = 163; ChosenSkin[playerid] = CivMalePeds[164][0]; }
					else if(SelectCharPlace[playerid] == 165) { SetPlayerSkin(playerid, CivMalePeds[165][0]); SelectCharPlace[playerid] = 164; ChosenSkin[playerid] = CivMalePeds[165][0]; }
					else if(SelectCharPlace[playerid] == 166) { SetPlayerSkin(playerid, CivMalePeds[166][0]); SelectCharPlace[playerid] = 165; ChosenSkin[playerid] = CivMalePeds[166][0]; }
					else if(SelectCharPlace[playerid] == 167) { SetPlayerSkin(playerid, CivMalePeds[167][0]); SelectCharPlace[playerid] = 166; ChosenSkin[playerid] = CivMalePeds[167][0]; }
					else if(SelectCharPlace[playerid] == 168) { SetPlayerSkin(playerid, CivMalePeds[168][0]); SelectCharPlace[playerid] = 167; ChosenSkin[playerid] = CivMalePeds[168][0]; }
					else if(SelectCharPlace[playerid] == 169) { SetPlayerSkin(playerid, CivMalePeds[169][0]); SelectCharPlace[playerid] = 168; ChosenSkin[playerid] = CivMalePeds[169][0]; }
					else if(SelectCharPlace[playerid] == 170) { SetPlayerSkin(playerid, CivMalePeds[170][0]); SelectCharPlace[playerid] = 169; ChosenSkin[playerid] = CivMalePeds[170][0]; }
					else if(SelectCharPlace[playerid] == 171) { SetPlayerSkin(playerid, CivMalePeds[171][0]); SelectCharPlace[playerid] = 170; ChosenSkin[playerid] = CivMalePeds[171][0]; }
					else if(SelectCharPlace[playerid] == 172) { SetPlayerSkin(playerid, CivMalePeds[172][0]); SelectCharPlace[playerid] = 171; ChosenSkin[playerid] = CivMalePeds[172][0]; }
					else if(SelectCharPlace[playerid] == 173) { SetPlayerSkin(playerid, CivMalePeds[173][0]); SelectCharPlace[playerid] = 172; ChosenSkin[playerid] = CivMalePeds[173][0]; }
					else if(SelectCharPlace[playerid] == 174) { SetPlayerSkin(playerid, CivMalePeds[174][0]); SelectCharPlace[playerid] = 173; ChosenSkin[playerid] = CivMalePeds[174][0]; }
					else if(SelectCharPlace[playerid] == 175) { SetPlayerSkin(playerid, CivMalePeds[175][0]); SelectCharPlace[playerid] = 174; ChosenSkin[playerid] = CivMalePeds[175][0]; }
					else if(SelectCharPlace[playerid] == 176) { SetPlayerSkin(playerid, CivMalePeds[176][0]); SelectCharPlace[playerid] = 175; ChosenSkin[playerid] = CivMalePeds[176][0]; }
					else if(SelectCharPlace[playerid] == 177) { SetPlayerSkin(playerid, CivMalePeds[177][0]); SelectCharPlace[playerid] = 176; ChosenSkin[playerid] = CivMalePeds[177][0]; }
					else if(SelectCharPlace[playerid] == 178) { SetPlayerSkin(playerid, CivMalePeds[178][0]); SelectCharPlace[playerid] = 177; ChosenSkin[playerid] = CivMalePeds[178][0]; }
					else if(SelectCharPlace[playerid] == 179) { SetPlayerSkin(playerid, CivMalePeds[179][0]); SelectCharPlace[playerid] = 178; ChosenSkin[playerid] = CivMalePeds[179][0]; }
					else if(SelectCharPlace[playerid] == 180) { SetPlayerSkin(playerid, CivMalePeds[180][0]); SelectCharPlace[playerid] = 179; ChosenSkin[playerid] = CivMalePeds[180][0]; }
					else if(SelectCharPlace[playerid] == 181) { SetPlayerSkin(playerid, CivMalePeds[181][0]); SelectCharPlace[playerid] = 180; ChosenSkin[playerid] = CivMalePeds[181][0]; }
					else if(SelectCharPlace[playerid] == 182) { SetPlayerSkin(playerid, CivMalePeds[182][0]); SelectCharPlace[playerid] = 181; ChosenSkin[playerid] = CivMalePeds[182][0]; }
					else if(SelectCharPlace[playerid] == 183) { SetPlayerSkin(playerid, CivMalePeds[183][0]); SelectCharPlace[playerid] = 182; ChosenSkin[playerid] = CivMalePeds[183][0]; }
					else if(SelectCharPlace[playerid] == 184) { SetPlayerSkin(playerid, CivMalePeds[184][0]); SelectCharPlace[playerid] = 183; ChosenSkin[playerid] = CivMalePeds[184][0]; }
					else if(SelectCharPlace[playerid] == 185) { SetPlayerSkin(playerid, CivMalePeds[185][0]); SelectCharPlace[playerid] = 184; ChosenSkin[playerid] = CivMalePeds[185][0]; }
					else if(SelectCharPlace[playerid] == 186) { SetPlayerSkin(playerid, CivMalePeds[186][0]); SelectCharPlace[playerid] = 185; ChosenSkin[playerid] = CivMalePeds[186][0]; }
					else if(SelectCharPlace[playerid] == 187) { SetPlayerSkin(playerid, CivMalePeds[187][0]); SelectCharPlace[playerid] = 186; ChosenSkin[playerid] = CivMalePeds[187][0]; }
					else if(SelectCharPlace[playerid] == 188) { SetPlayerSkin(playerid, CivMalePeds[188][0]); SelectCharPlace[playerid] = 187; ChosenSkin[playerid] = CivMalePeds[188][0]; }
					else if(SelectCharPlace[playerid] == 189) { SetPlayerSkin(playerid, CivMalePeds[189][0]); SelectCharPlace[playerid] = 188; ChosenSkin[playerid] = CivMalePeds[189][0]; }
					else if(SelectCharPlace[playerid] == 190) { SetPlayerSkin(playerid, CivMalePeds[190][0]); SelectCharPlace[playerid] = 189; ChosenSkin[playerid] = CivMalePeds[190][0]; }
					else if(SelectCharPlace[playerid] == 191) { SetPlayerSkin(playerid, CivMalePeds[191][0]); SelectCharPlace[playerid] = 190; ChosenSkin[playerid] = CivMalePeds[191][0]; }
					else if(SelectCharPlace[playerid] == 192) { SetPlayerSkin(playerid, CivMalePeds[192][0]); SelectCharPlace[playerid] = 191; ChosenSkin[playerid] = CivMalePeds[192][0]; }
					else if(SelectCharPlace[playerid] == 193) { SetPlayerSkin(playerid, CivMalePeds[193][0]); SelectCharPlace[playerid] = 192; ChosenSkin[playerid] = CivMalePeds[193][0]; }
					else if(SelectCharPlace[playerid] == 194) { SetPlayerSkin(playerid, CivMalePeds[194][0]); SelectCharPlace[playerid] = 193; ChosenSkin[playerid] = CivMalePeds[194][0]; }
					else if(SelectCharPlace[playerid] == 195) { SetPlayerSkin(playerid, CivMalePeds[195][0]); SelectCharPlace[playerid] = 194; ChosenSkin[playerid] = CivMalePeds[195][0]; }
					else if(SelectCharPlace[playerid] == 196) { SetPlayerSkin(playerid, CivMalePeds[196][0]); SelectCharPlace[playerid] = 195; ChosenSkin[playerid] = CivMalePeds[196][0]; }
					else if(SelectCharPlace[playerid] == 197) { SetPlayerSkin(playerid, CivMalePeds[197][0]); SelectCharPlace[playerid] = 196; ChosenSkin[playerid] = CivMalePeds[197][0]; }
					else if(SelectCharPlace[playerid] == 198) { SetPlayerSkin(playerid, CivMalePeds[198][0]); SelectCharPlace[playerid] = 197; ChosenSkin[playerid] = CivMalePeds[198][0]; }
					else if(SelectCharPlace[playerid] == 199) { SetPlayerSkin(playerid, CivMalePeds[199][0]); SelectCharPlace[playerid] = 198; ChosenSkin[playerid] = CivMalePeds[199][0]; }
					else if(SelectCharPlace[playerid] == 200) { SetPlayerSkin(playerid, CivMalePeds[200][0]); SelectCharPlace[playerid] = 199; ChosenSkin[playerid] = CivMalePeds[200][0]; }
					else if(SelectCharPlace[playerid] == 201) { SetPlayerSkin(playerid, CivMalePeds[201][0]); SelectCharPlace[playerid] = 200; ChosenSkin[playerid] = CivMalePeds[201][0]; }
					else if(SelectCharPlace[playerid] == 202) { SetPlayerSkin(playerid, CivMalePeds[202][0]); SelectCharPlace[playerid] = 201; ChosenSkin[playerid] = CivMalePeds[202][0]; }
					else if(SelectCharPlace[playerid] == 203) { SetPlayerSkin(playerid, CivMalePeds[203][0]); SelectCharPlace[playerid] = 202; ChosenSkin[playerid] = CivMalePeds[203][0]; }
					else if(SelectCharPlace[playerid] == 204) { SetPlayerSkin(playerid, CivMalePeds[204][0]); SelectCharPlace[playerid] = 203; ChosenSkin[playerid] = CivMalePeds[204][0]; }
				}
			case 30: //Female civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivFemalePeds[1][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivFemalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivFemalePeds[2][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivFemalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivFemalePeds[3][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivFemalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivFemalePeds[4][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivFemalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivFemalePeds[5][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivFemalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivFemalePeds[6][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivFemalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivFemalePeds[7][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivFemalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivFemalePeds[8][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivFemalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivFemalePeds[9][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivFemalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivFemalePeds[10][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivFemalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivFemalePeds[11][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivFemalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivFemalePeds[12][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivFemalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivFemalePeds[13][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivFemalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivFemalePeds[14][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivFemalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivFemalePeds[15][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivFemalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivFemalePeds[16][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivFemalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivFemalePeds[17][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivFemalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivFemalePeds[18][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivFemalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivFemalePeds[19][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivFemalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivFemalePeds[20][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivFemalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivFemalePeds[21][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivFemalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivFemalePeds[22][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivFemalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivFemalePeds[23][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivFemalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivFemalePeds[24][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivFemalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivFemalePeds[25][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivFemalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivFemalePeds[26][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivFemalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivFemalePeds[27][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivFemalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivFemalePeds[28][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivFemalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivFemalePeds[29][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivFemalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivFemalePeds[30][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivFemalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivFemalePeds[31][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivFemalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivFemalePeds[32][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivFemalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivFemalePeds[33][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivFemalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivFemalePeds[34][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivFemalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivFemalePeds[35][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivFemalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivFemalePeds[36][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivFemalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivFemalePeds[37][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivFemalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivFemalePeds[38][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivFemalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivFemalePeds[39][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivFemalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivFemalePeds[40][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivFemalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivFemalePeds[41][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivFemalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivFemalePeds[42][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivFemalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivFemalePeds[43][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivFemalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivFemalePeds[44][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivFemalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivFemalePeds[45][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivFemalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivFemalePeds[46][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivFemalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivFemalePeds[47][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivFemalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivFemalePeds[48][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivFemalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivFemalePeds[49][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivFemalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivFemalePeds[50][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivFemalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivFemalePeds[51][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivFemalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivFemalePeds[52][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivFemalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivFemalePeds[53][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivFemalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivFemalePeds[54][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivFemalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivFemalePeds[55][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivFemalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivFemalePeds[56][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivFemalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivFemalePeds[57][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivFemalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivFemalePeds[58][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivFemalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivFemalePeds[59][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivFemalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivFemalePeds[60][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivFemalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivFemalePeds[61][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivFemalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivFemalePeds[62][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivFemalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivFemalePeds[63][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivFemalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivFemalePeds[64][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivFemalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivFemalePeds[65][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivFemalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivFemalePeds[66][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivFemalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivFemalePeds[67][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivFemalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivFemalePeds[68][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivFemalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivFemalePeds[69][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivFemalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivFemalePeds[70][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivFemalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivFemalePeds[71][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivFemalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivFemalePeds[72][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivFemalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivFemalePeds[73][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivFemalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivFemalePeds[74][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivFemalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivFemalePeds[75][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivFemalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivFemalePeds[76][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivFemalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivFemalePeds[77][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivFemalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivFemalePeds[78][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivFemalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivFemalePeds[79][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivFemalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivFemalePeds[80][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivFemalePeds[80][0]; }
				}
			}
			return 0;
		}
		else if ((strcmp("확정", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("확정")))
		{
			if(ChangePos2[playerid][1] == 1)
			{
				SetPlayerInterior(playerid, ChangePos2[playerid][0]);
				SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
				ChangePos2[playerid][1] = 0;
			}
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			SelectCharPlace[playerid] = 0;
			SelectCharID[playerid] = 0;
			SelectChar[playerid] = 0;
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, ChangeWorld[playerid]);
    	    {
			}
			if(PlayerInfo[playerid][Quest] == 0 && PlayerInfo[playerid][pTut] == 3)
			{
				PlayerInfo[playerid][pTut] = 4;
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 퀘스트를 완료했습니다. 빅스모크에게 돌아가십시오.");
			}
			SetTimerEx("backtoclothes", 500, false, "i", playerid);
			P_Cloth[playerid]=0;
			return 0;
		}
		else
		{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 채팅창을 열고 \"다음\", \"이전\", \"확정\"을 입력해 주세요");
			return 0;
		}
	}
	
	if(MarriageCeremoney[playerid] > 0)
	{
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "주례자: %s님, 당신은 %s님을 사랑스러운 아내로 맞으시겠습니까?", giveplayer,sendername);
					SCM(GotProposedBy[playerid], COLOR_ERROR, string);
					format(string, sizeof(string), "INFO : "#C_WHITE" \"예\"라고 말하십시오, 다른말을 입력하시면 결혼이 취소됩니다", giveplayer,sendername);
					SCM(GotProposedBy[playerid], COLOR_ERROR, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "주례자: %s님과 %s님은 이제 남편과 아내입니다. (/키스)를 해주십시오", sendername, giveplayer);
						SCM(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "주례자: %s님과 %s님은 이제 남편과 아내입니다. (/키스)를 해주십시오", giveplayer, sendername);
						SCM(ProposedTo[playerid], COLOR_ERROR, string);
						format(string, sizeof(string), "* News : 우리 마을에 새로운 부부가 생겼습니다. %s님과 %s님이 결혼을 했습니다", sendername, giveplayer);
						OOCNews(COLOR_NEWS, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
						format(string, sizeof(string), "주례자: %s님과 %s님은 이제 남편과 아내입니다. (/키스)를 해주십시오", sendername, giveplayer);
						SCM(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "주례자: %s님과 %s님은 이제 남편과 아내입니다. (/키스)를 해주십시오", giveplayer, sendername);
						SCM(ProposedTo[playerid], COLOR_ERROR, string);
						format(string, sizeof(string), "* News : 우리 마을에 새로운 게이 부부가 생겼습니다. %s님과 %s님이 결혼을 했습니다", sendername, giveplayer);
						OOCNews(COLOR_NEWS, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "주례자: %s님과 %s님은 이제 남편과 아내입니다. (/키스)를 해주십시오", sendername, giveplayer);
						SCM(playerid, COLOR_ERROR, string);
						format(string, sizeof(string), "주례자: %s님과 %s님은 이제 남편과 아내입니다. (/키스)를 해주십시오", giveplayer, sendername);
						SCM(ProposedTo[playerid], COLOR_ERROR, string);
						format(string, sizeof(string), "* News :* 우리 마을에 새로운 레즈비언 부부가 생겼습니다. %s님과 %s님이 결혼을 했습니다", sendername, giveplayer);
						OOCNews(COLOR_NEWS, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GiveMoney(playerid, -200);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		else
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "INFO : "#C_WHITE" You didn't want to Marry %s, no 'yes' was said",giveplayer);
					SCM(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "INFO : "#C_WHITE" %s did't want to Marry you, no 'yes' was said",sendername);
					SCM(GotProposedBy[playerid], COLOR_WHITE, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "INFO : "#C_WHITE" You didn't want to Marry %s, no 'yes' was said",giveplayer);
					SCM(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "INFO : "#C_WHITE" %s did't want to Marry you, no 'yes' was said",sendername);
					SCM(ProposedTo[playerid], COLOR_WHITE, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		return 0;
	}
	if(eo[playerid] > 0)
	{
		if(eo[playerid] == 1)
		{
			new idx;
			tmp = strtok(text, idx);
			if((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정답입니다");
				SetTimerEx("eo3", 5000, 0, "d", playerid);
				return 0;
			}
			else
			{
				SetPlayerPos(playerid, 1743.0001,-1860.5549,13.5786);
				SetPlayerInterior(playerid, 0);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오답입니다");
				eo[playerid] = 0;
			}
			return 0;
		}
		else if(eo[playerid] == 2)
		{
			new idx;
			tmp = strtok(text, idx);
			if((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정답입니다");
				SetTimerEx("eo4", 5000, 0, "d", playerid);
				return 0;
			}
			else
			{
				SetPlayerPos(playerid, 1743.0001,-1860.5549,13.5786);
				SetPlayerInterior(playerid, 0);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오답입니다");
				eo[playerid] = 0;
			}
			return 0;
		}
		else if(eo[playerid] == 3)
		{
			new idx;
			tmp = strtok(text, idx);
			if((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정답입니다");
				SetTimerEx("eo5", 5000, 0, "d", playerid);
				return 0;
			}
			else
			{
				SetPlayerPos(playerid, 1743.0001,-1860.5549,13.5786);
				SetPlayerInterior(playerid, 0);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오답입니다");
				eo[playerid] = 0;
			}
			return 0;
		}
		else if(eo[playerid] == 4)
		{
			new idx;
			tmp = strtok(text, idx);
			if((strcmp("2/3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2/3")))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정답입니다");
				SetTimerEx("eo6", 5000, 0, "d", playerid);
				return 0;
			}
			else
			{
				SetPlayerPos(playerid, 1743.0001,-1860.5549,13.5786);
				SetPlayerInterior(playerid, 0);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오답입니다");
				eo[playerid] = 0;
			}
			return 0;
		}
		else if(eo[playerid] == 5)
		{
			new idx;
			tmp = strtok(text, idx);
			if((strcmp("1/4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1/4")))
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 정답입니다");
				SetPlayerPos(playerid, 1743.0001,-1860.5549,13.5786);
				SetPlayerInterior(playerid, 0);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				eo[playerid] = 0;
				SCM(playerid, COLOR_SUN, "━━━━━━━━━━━━━━━━━");
				SCM(playerid, COLOR_WHITE, "당신은 대형면허를 발급 받으셨습니다");
				SCM(playerid, COLOR_WHITE, "앞으로 안전운행을 해주시길 바랍니다");
				GameTextForPlayer(playerid, "~g~ Passed", 5000, 3);
				PlayerPlayMusic(playerid);
				pTest[playerid] = 0;
				PlayerInfo[playerid][peogudLic] = 1;
				GiveMoney(playerid, -25);
				TakingLesson[playerid] = 0;
			}
			else
			{
				SetPlayerPos(playerid, 1743.0001,-1860.5549,13.5786);
				SetPlayerInterior(playerid, 0);
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 오답입니다");
				eo[playerid] = 0;
			}
			return 0;
		}
		return 0;
	}

	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 9)
		{
			format(string, sizeof(string), "* Live (진행자) %s : %s", sendername, text);
			OOCNews(0x68B2F6AA, string);
		}
		else
		{
			format(string, sizeof(string), "* Live (게스트) %s : %s", sendername, text);
			OOCNews(0x68B2F6AA, string);
		}
		return 0;
	}

	if(TalkingRadio[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMember] == 9)
		{
			format(string, sizeof(string), "* Radio (진행자) %s : %s", sendername, text);
			RadioNews(0x68B2F6AA, string);
		}
		else
		{
			format(string, sizeof(string), "* Radio (게스트) %s : %s", sendername, text);
			RadioNews(0x68B2F6AA, string);
		}
		return 0;
	}

		if(anwjs[playerid] == 1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pFMember] < 255)
			{
				new member = PlayerInfo[playerid][pMember];
				new fmember = PlayerInfo[playerid][pFMember];
				new rank = PlayerInfo[playerid][pRank];
				if(member != 0)
				{
					format(string, sizeof(string), "(%s) %s %s: %s", GetMemberName(member), GetRankName(member, rank), GetName(playerid), text);
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x93BBF3AA, string);
				}
   				if(fmember != 255)
				{
					format(string, sizeof(string), "(%s) %s : %s", FamilyInfo[fmember][FamilyName], GetName(playerid), text);
					SendNewFamilyMessage(PlayerInfo[playerid][pFMember], 0x93BBF3AA, string);
				}
				new to_me[MAX_CHATBUBBLE_LENGTH+1];
				if (wkaqhr[playerid] != 1)
				{
					format(to_me,MAX_CHATBUBBLE_LENGTH,"(Radio) %s : %s", sendername,text);
					SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,4.0,10000);
					format(string, sizeof(string), "(Radio) %s : %s", sendername, text);
					ProxDetector(4.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				return 0;
			}
			return 0;
		}
		if (Mobile[playerid] != 255)
		{
			new idx;
			tmp = strtok(text, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new to_me[MAX_CHATBUBBLE_LENGTH+1];
		   if(Gongjungnum[playerid] == false)//익ㅋ
		   {
			if (UnknownPhoneNum[playerid] == false)
			{
				format(string, sizeof(string), "(전화) %d : %s", PlayerInfo[playerid][pPnumber], text);
				format(to_me,MAX_CHATBUBBLE_LENGTH,"[통화중]\n%s", text);
			}
			else if (UnknownPhoneNum[playerid] == true) //
			{
				format(string, sizeof(string), "(전화) 표시제한 : %s", text);
				format(to_me,MAX_CHATBUBBLE_LENGTH,"[통화중]\n%s", text);//ㅇㅎ
			}
			}
			else
			{
			format(string, sizeof(string), "(전화) 공중전화 : %s", text);
			format(to_me,MAX_CHATBUBBLE_LENGTH,"[통화중]\n%s", text);
			}

			SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,10.0,10000);
			ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);

			if(WhereSpeak[playerid]==true)//lamdnn
			{
					new turner[MAX_PLAYER_NAME];
					new wanted[128];
					GetPlayerName(playerid, turner, sizeof(turner));
					SCM(playerid, COLOR_WHITE, "(전화) 911 : 근처에 순찰중인 경관을 해당지역으로 출동시켰습니다.");
					format(wanted, sizeof(wanted), "|________ 911 Emergency Call ________|");
					SendFamilyMessage(1, COLOR_LIGHTBLUE, wanted);
					format(wanted, sizeof(wanted), "신고자 : %s",turner);
					SendFamilyMessage(1, COLOR_LIGHTBLUE, wanted);
					format(wanted, sizeof(wanted), "전화번호 : %d",PlayerInfo[playerid][pPnumber]);
					SendFamilyMessage(1, COLOR_LIGHTBLUE, wanted);
					format(wanted, sizeof(wanted), "사건내용 : %s ",PlayerCrime[playerid][pAccusing]);
					SendFamilyMessage(1, COLOR_LIGHTBLUE, wanted);
					format(wanted, sizeof(wanted), "위치설명 : %s ",text);
					SendFamilyMessage(1, COLOR_LIGHTBLUE, wanted);
					new Float:trace_x, Float:trace_y, Float:trace_z;
					GetPlayerPos(playerid, trace_x, trace_y, trace_z);
					pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 경찰의 연락이 올때까지 기다려주십시오.");
					Mobile[playerid] = 255;
					WhereSpeak[playerid]=false;
					return 0;
			}
			//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
			if(Mobile[playerid] == 914)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 실례지만 다시 한번 말씀해 주시겠습니까?");
					return 0;
				}
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SCM(playerid, COLOR_WHITE, "(전화) 의료원 : 근처에 있는 의료원을 출동시켰습니다");
				format(wanted, sizeof(wanted), "|________ 911 Emergency Call ________|");
		     	SendFamilyMessage(4, COLOR_LIGHTBLUE, wanted);
				format(wanted, sizeof(wanted), "제보자 : %s",turner);
				SendFamilyMessage(4, COLOR_LIGHTBLUE, wanted);
				format(wanted, sizeof(wanted), "전화번호 : %d (/추적)을 이용하세요.",PlayerInfo[playerid][pPnumber]);
				SendFamilyMessage(4, COLOR_LIGHTBLUE, wanted);
				format(wanted, sizeof(wanted), "사건내용 : %s",text);
				SendFamilyMessage(4, COLOR_LIGHTBLUE, wanted);//
				new Float:trace_x, Float:trace_y, Float:trace_z;
				GetPlayerPos(playerid, trace_x, trace_y, trace_z);
				emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의사의 연락이 올 때까지 기다려주십시오.");
				Mobile[playerid] = 255;
				return 0;
			}
			if(Mobile[playerid] == 913)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 실례지만 다시 한번 말씀해 주시겠습니까?");
					return 0;
				}
				if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 911: 사건이 일어난 지역의 위치를 설명해주세요.");
					WhereSpeak[playerid]=true;
					return 0;
				}
				new badguy;
				//badguy = strval(tmp);
				badguy = ReturnUser(tmp);
				if (IsPlayerConnected(badguy))
				{
					if(badguy != INVALID_PLAYER_ID)
					{
						if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
						{
							SCM(playerid, COLOR_WHITE, "(전화) 경찰청: 사무반에게 연락 하십시오. 이것은 응급용 입니다");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었다");
							Mobile[playerid] = 255;
							return 0;
						}
						if (WantedPoints[badguy] > 0)
						{
							SCM(playerid, COLOR_WHITE, "(전화) 경찰청: 이미 그 사건으로 파견되어 있습니다");
							SCM(playerid, COLOR_BLUE, " 이 사건을 제보해 주셔서 감사합니다");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었다");
							Mobile[playerid] = 255;
							return 0;
						}
						if (badguy == playerid)
						{
							SCM(playerid, COLOR_WHITE, "(전화) 경찰청: 장난전화는 하지마십시오, 최소 2000달러의 벌금을 물수 있습니다");
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었다");
							Mobile[playerid] = 255;
							return 0;
						}
						SCM(playerid, COLOR_WHITE, "(전화) 경찰청: 구역내의 모든 경찰을 파견 하겠습니다");
						SCM(playerid, COLOR_WHITE, "(전화) 경찰청: 이 사건을 제보해 주셔서 감사합니다");
						new Float:trace_x, Float:trace_y, Float:trace_z;
						GetPlayerPos(playerid, trace_x, trace_y, trace_z);
						pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
						SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
						if(WantedPoints[badguy] > 0) { } else { WantedPoints[badguy] += 2; }
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었다");
						Mobile[playerid] = 255;
						return 0;
					}
					return 0;
			    }
				else
				{
					format(string, sizeof(string), "(전화) 경찰청: %s에 대한 정말로 옳은 이름 입니까? 모른다면 '아니요'로 대답해 주십시오",tmp);
					SCM(playerid, COLOR_WHITE, string);
					return 0;
				}
			}
			if(Mobile[playerid] == 912)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 실례지만 다시 한번 말씀해 주시겠습니까?");
					return 0;
				}
				strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
				SCM(playerid, COLOR_WHITE, "(전화) 경찰청: 만약 가해자의 이름을 알거나 부분적으로 안다면 지금 말하시거나 모른다면 '아니요' 라고 말하세요");
				Mobile[playerid] = 913;
				return 0;
			}
              if(Mobile[playerid] == 911)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 죄송합니다 '경찰'이나 '응급의료원'이 필요하십니까? 둘중 하나를 말씀해주세요");
					return 0;
				}
				else if ((strcmp("경찰", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("경찰")))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 경찰 본부로 연결해 드리겠습니다. 기다리세요");
					Mobile[playerid] = 912;
					SCM(playerid, COLOR_WHITE, "(전화) 911: 사건이 일어난 장소의 사건을 알려주세요.");
					return 0;
				}
				else if ((strcmp("응급의료원", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("응급의료원")))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 응급의료센터 본부로 연결해 드리겠습니다. 기다리세요[신고후 납치시도시 논알]");
					Mobile[playerid] = 914;
					SCM(playerid, COLOR_WHITE, "(전화) 응급실: 사건의 상황을 짧게 이야기 해주십시오");
					return 0;
				}
				else if ((strcmp("취소", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("취소")))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 감사합니다. 나중에 필요하면 그때 불러주세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 911: 죄송합니다 경찰이나 응급의료원이 필요하십니까? 둘중 하나를 말씀해주세요");
					return 0;
				}
			}
			if(Mobile[playerid] == 4445)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 444: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
				else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
				{
					if(TaxiDrivers < 1)
					{
						SCM(playerid, COLOR_WHITE, "(전화) 444: 죄송합니다. 운임중인 택시기사가 없습니다");
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						PlayerInfo[playerid][pSpeaker] = 0;
						UnidentifedCall[playerid] = 0;
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다.");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return 0;
					}
					if(TransportDuty[playerid] > 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지금 택시를 호출하실 수 없습니다.");
						return 0;
					}
					new zone[MAX_ZONE_NAME];
					GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 콜택시를 요청합니다. (위치: %s) (/동의 택시)로 수락하세요", sendername, zone);
					SendFamilyMessage(10, COLOR_ERROR, string);
					SCM(playerid, COLOR_WHITE, "(전화) 444: 택시를 부르셨습니다. 잠시만기다려주세요");
					TaxiCall = playerid;
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다.");
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 444: 감사합니다. 나중에 필요하면 그때 불러주세요.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다.");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 3900: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
		if(Mobile[playerid] == 5556)
		{
			if(!strlen(tmp))
			{
				SCM(playerid, COLOR_WHITE, "(전화) 555: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
				return 0;
			}
			else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
			{
				new mechanicworkers = 0;
				for(new i=0; i<M_P; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11 && JobDuty[i] == 1)
						{
							mechanicworkers++;
						}
					}
				}
				if(mechanicworkers < 1)
				{
					SCM(playerid, COLOR_WHITE, "(전화) 555: 죄송합니다. 업무중인 정비사가 없습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 차량정비사를 부르고있습니다. (/동의 정비사)로 수락하세요", sendername);
				SendFamilyMessage(11, COLOR_ERROR, string);
				SCM(playerid, COLOR_WHITE, "(전화) 555: 근처에 있는 정비사들이 그쪽으로 가고 있습니다. 잠시만 기다려주세요.");
				MechanicCall = playerid;
				Mobile[playerid] = 255;
				CellTime[playerid] = 0;
				RingTone[playerid] = 0;
				PlayerInfo[playerid][pSpeaker] = 0;
				UnidentifedCall[playerid] = 0;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return 0;
			}
			else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
			{
				SCM(playerid, COLOR_WHITE, "(전화) 555: 감사합니다. 나중에 필요하면 그때 불러주세요.");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
				Mobile[playerid] = 255;
				CellTime[playerid] = 0;
				RingTone[playerid] = 0;
				PlayerInfo[playerid][pSpeaker] = 0;
				UnidentifedCall[playerid] = 0;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return 0;
			}
			else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 3900: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
			if(Mobile[playerid] == 3900)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 3900: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
				else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 상담전화를 요청합니다. (☏: %d)", RPPlayerName(playerid),PlayerInfo[playerid][pPnumber]);
					SendFamilyMessage(9, COLOR_ERROR, string);
					SCM(playerid, COLOR_WHITE, "(전화) 3900: 귀하의 정보를 주셔서 감사합니다 ");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 3900: 감사합니다. 나중에 필요하면 그때 불러주세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 3900: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
			if(Mobile[playerid] == 1545)
			{
				if(strcmp("예", text, true) == 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					SCM(playerid,COLOR_WHITE,"(전화) 1544 : 입금하실 계좌를 알려주세요. [플레이어번호/플레이어ID] [금액]");
					SCM(playerid,COLOR_WHITE,"(전화) 1544 : 텔레뱅킹 이용을 종료하려면 '취소' 를 말씀해주세요.[");
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					Mobile[playerid]=1546;
					return 0;
				}
				if(strcmp("아니요", text, true) == 0)//&& (strlen(tmp) == strlen("취소")))//, strlen(tmp)
				{
					SCM(playerid, COLOR_WHITE, "(전화) 1544: 감사합니다. 나중에 필요하면 그때 불러주세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				SCM(playerid, COLOR_WHITE, "(전화) 1544: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
				return 0;
  			}
			if(Mobile[playerid] == 1546)
			{
				if(strcmp("취소",tmp,true) == 0)
				{
					SCM(playerid, COLOR_WHITE, "(전화) 1544: 감사합니다. 나중에 필요하면 그때 불러주세요.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
			    if(!strlen(tmp))
			    {
					SCM(playerid,COLOR_WHITE,"(전화) 1544 : 입금하실 계좌를 다시 알려주세요. [플레이어번호/플레이어ID] [금액]");
					SCM(playerid,COLOR_WHITE,"(전화) 1544 : 텔레뱅킹 이용을 종료하려면 '취소' 를 말씀해주세요.[");
			        return 0;
			    }
			    new giveid=ReturnUser(tmp);
				tmp=strtok(text,idx);
			    if(!strlen(tmp))
			    {
					SCM(playerid,COLOR_WHITE,"(전화) 1544 : 입금하실 계좌를 다시 알려주세요. [플레이어번호/플레이어ID] [금액]");
					SCM(playerid,COLOR_WHITE,"(전화) 1544 : 텔레뱅킹 이용을 종료하려면 '취소' 를 말씀해주세요.");
			        return 0;
			    }
			    new amount=strval(tmp);
				if(amount<=0)
				{
			        SCM(playerid,COLOR_WHITE,"(전화) 1544 : 1달러 이상의 금액을 입력해주세요.");
				    return 0;
				}
			    if(PlayerInfo[playerid][pAccount]<amount)
			    {
			        SCM(playerid,COLOR_WHITE,"(전화) 1544 : 당신의 잔고에는 그만한 금액이 없습니다.");
			        return 0;
			    }
			    if(!IsPlayerConnected(giveid))
			    {
			        SCM(playerid,COLOR_WHITE,"(전화) 1544 : 상대방이 접속중이지 않습니다.");
			        return 0;
			    }
				if(playerid==giveid)
				{
			        SCM(playerid,COLOR_WHITE,"(전화) 1544 : 자기 자신의 통장에 뱅킹할 수 없습니다.");
				    return 0;
				}
				new susumoney=floatround(amount*0.01);
				if(amount+susumoney>PlayerInfo[playerid][pAccount])
				{
				    format(string,sizeof(string),"INFO : "#C_WHITE" 통장에 수수료를 합친 금액 $%d 보다 적습니다.",amount+susumoney);
				    SCM(playerid, COLOR_RED,string);
    				return 0;
				}
                PlayerInfo[playerid][pAccount]-=amount;
                PlayerInfo[giveid][pAccount]+=amount;
				format(string,sizeof(string),"(문자) 1544 : -댈리스 시티 은행- $%d 를 %s(%d) 님에게 송금 하셨습니다.",amount,GetName(giveid),giveid);
		        SCM(playerid,COLOR_WHITE,string);
				format(string,sizeof(string),"(문자) 1544 : -댈리스 시티 은행- $%d 가 %s(%d) 님에게서 송금 되었습니다.",amount,GetName(playerid),playerid);
		        SCM(giveid,COLOR_WHITE,string);
				if(amount<100)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE"  소액 송금으로 수수료가 없습니다.");
				}else if(amount>=100)
				{
					format(string,sizeof(string),"INFO : "#C_WHITE"  송금액의 1％의 금액인 $%d 가 수수료로 지불됬습니다.",susumoney);
   					SCM(playerid, COLOR_RED,string);
					GiveMoney(playerid,-susumoney);
				}
				Mobile[playerid] = 255;
				CellTime[playerid] = 0;
				RingTone[playerid] = 0;
				PlayerInfo[playerid][pSpeaker] = 0;
				UnidentifedCall[playerid] = 0;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다.");
				return 0;
			}
			
			if(Mobile[playerid] == 111)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) FBI: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
				else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 상담전화를 요청합니다. (☏: %d)", RPPlayerName(playerid),PlayerInfo[playerid][pPnumber]);
					SendFamilyMessage(2, COLOR_ERROR, string);
					SCM(playerid, COLOR_WHITE, "(전화) FBI: 귀하의 정보를 주셔서 감사합니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) FBI: 감사합니다. 나중에 필요하면 그때 불러주세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 4444: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
			if(Mobile[playerid] == 1577)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 4444: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
				else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 상담전화를 요청합니다. (☏: %d)", RPPlayerName(playerid),PlayerInfo[playerid][pPnumber]);
					SendFamilyMessage(8, COLOR_ERROR, string);
					SCM(playerid, COLOR_WHITE, "(전화) 4444: 귀하의 정보를 주셔서 감사합니다 ");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 4444: 감사합니다. 나중에 필요하면 그때 불러주세요");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 4444: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
			if(Mobile[playerid] == 120)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 120: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
				else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 상담전화를 요청합니다. (☏: %d)", RPPlayerName(playerid),PlayerInfo[playerid][pPnumber]);
					SendFamilyMessage(7, COLOR_ERROR, string);
					SCM(playerid, COLOR_WHITE, "(전화) 120: 귀하의 정보를 주셔서 감사합니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 120: 감사합니다. 나중에 필요하면 그때 불러주세요.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 120: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
			if(Mobile[playerid] == 117)
			{
				if(!strlen(tmp))
				{
					SCM(playerid, COLOR_ALLDEPT, "(전화) 117: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
				else if ((strcmp("예", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("예")))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 상담전화를 요청합니다. (☏: %d)", RPPlayerName(playerid),PlayerInfo[playerid][pPnumber]);
					SendFamilyMessage(2, COLOR_ERROR, string);
					SCM(playerid, COLOR_WHITE, "(전화) 117: 귀하의 정보를 주셔서 감사합니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else if ((strcmp("아니요", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("아니요")))
				{
					SCM(playerid, COLOR_WHITE, "(전화) 117: 감사합니다. 나중에 필요하면 그때 불러주세요.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방이 전화를 끊었습니다");
					Mobile[playerid] = 255;
					CellTime[playerid] = 0;
					RingTone[playerid] = 0;
					PlayerInfo[playerid][pSpeaker] = 0;
					UnidentifedCall[playerid] = 0;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 0;
				}
				else
				{
					SCM(playerid, COLOR_WHITE, "(전화) 117: 죄송합니다 '예' 혹은 '아니요'중 한가지만 말씀해주세요");
					return 0;
				}
			}
			if(IsPlayerConnected(Mobile[playerid]))
			{
				if(Mobile[Mobile[playerid]] == playerid)
				{
					if(PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
					{
						ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
					else
					{
						SCM(Mobile[playerid], COLOR_WHITE,string);
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 그곳엔 아무도 없습니다");
			}
			return 0;
		}
		if (realchat)
		{
			if(gPlayerLogged[playerid] == 0)
			{
				return 0;
			}
			if(PlayerInfo[playerid][pMuted] == 1 || ShutupMan[playerid] == 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 말을 할 수 없습니다");
				return 0;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new to_me[MAX_CHATBUBBLE_LENGTH+1];
			if(rlqhs1[playerid] == 1)
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					format(to_me,MAX_CHATBUBBLE_LENGTH,"%s",text);
					SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,10.0,10000);
					format(string, sizeof(string), "%s %s: %s",nicks[playerid], RPPlayerName(playerid), text);
					ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					if(Anim_Chat[playerid]==1)
					{
				        if(GetPlayerState(playerid)==PLAYER_STATE_ONFOOT)
				        {
							Anim(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
						}
					}
				}
				else if(IsPlayerInAnyVehicle(playerid))
				{
					new carid = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(IsANoWindow(carid))
					{
						format(to_me,MAX_CHATBUBBLE_LENGTH,"%s",text);
						SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,10.0,10000);
						format(string, sizeof(string), "%s %s: %s",nicks[playerid], RPPlayerName(playerid), text);
						ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
					else
					{
						if(CarInfo[GetPlayerVehicleID(playerid)][cWindows])
						{
							new vehicle = GetPlayerVehicleID(playerid);
							for( new i = 0; i != M_P; i++ )
							{
								if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
								{
									if(GetPlayerVehicleID(i) == vehicle)
									{
										format(string, sizeof(string), "(창문닫힘) %s: %s", RPPlayerName(playerid), text);
										SCM(i,  COLOR_WHITE2, string);
									}
								}
							}
						}
						else
						{
							format(to_me,MAX_CHATBUBBLE_LENGTH,"[창문열림]\n%s",text);
							SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,6.0,10000);
							format(string, sizeof(string), "(창문열림) %s: %s", RPPlayerName(playerid), text);
							ProxDetector(6.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						}
					}
				}
			}
		else if(rlqhs2[playerid] == 1)
		{
			format(to_me,MAX_CHATBUBBLE_LENGTH,"Shout\n%s",text);
			format(string, sizeof(string), "%s Shout %s!", RPPlayerName(playerid), text);
			SetPlayerChatBubble(playerid,to_me,COLOR_ERROR,30.0,10000);
			ProxDetector(30.0, playerid, string,COLOR_ERROR,COLOR_ERROR,COLOR_ERROR,COLOR_FADE1,COLOR_FADE2);
			printf("%s", string);

			if(AdminDuty[playerid]==1 && PlayerInfo[playerid][pAdmin]>=1)
			{
			new adminname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string, sizeof(string), "* Mike %s : %s", RPPlayerName(playerid), text);
			ProxDetector(999999.0, playerid, string,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
			printf("%s", string);
			}
		}

		else if(rlqhs5[playerid] == 1)
		{
			if(AdminDuty[playerid]==1 && PlayerInfo[playerid][pAdmin]>=1)
			{
				new adminname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string, sizeof(string), "* %s : %s", AdminName[playerid], text);
				ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);//색 파란색으로 바꾸자 왜? 몰라 갑자기 끌림 ㅋㅋㅋㅋㅋ 아니면 됏고 ㅋㅋ
				printf("%s", string);
			}
		}
		else if(rlqhs3[playerid] == 1)
		{
			format(to_me,MAX_CHATBUBBLE_LENGTH,"Close\n%s",text);
			format(string, sizeof(string), "%s Close %s.", RPPlayerName(playerid), text);
			SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,3.0,10000);
			ProxDetector(2.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		else if (rlqhs4[playerid] == 1)
		{
			format(to_me,MAX_CHATBUBBLE_LENGTH,"[주변 OOC]\n%s",text);
			format(string, sizeof(string), "((%d) %s OOC Chat %s)",playerid, RPPlayerName(playerid), text);
			SetPlayerChatBubble(playerid,to_me,COLOR_FADE1,10.0,10000);
			ProxDetector(10.0, playerid, string,COLOR_FADE3,COLOR_FADE3,COLOR_FADE3,COLOR_FADE3,COLOR_FADE3);
			printf("%s", string);
		}
		return 0;
	}
	else
	{
		//==============================================================================
		//일반말 일반채팅
		new to_me[MAX_CHATBUBBLE_LENGTH+1];
		format(to_me,MAX_CHATBUBBLE_LENGTH,"%s",text);
		SetPlayerChatBubble(playerid,to_me,COLOR_FADE5,5.0,10000);
		format(string, sizeof(string), "%s %s: %s",nicks[playerid], RPPlayerName(playerid), text);
		ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(Anim_Chat[playerid]==1)
		{
	        if(GetPlayerState(playerid)==PLAYER_STATE_ONFOOT)
	        {
				Anim(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
			}
		}
		//==============================================================================
	}
		return 1;
	}

	public SetCamBack(playerid)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
			SetPlayerInterior(playerid,14);
		}
	}
	public AddsOn()
	{
		return 1;
	}
public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				AP
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, COLOR_ERROR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지원요청이 취소되었습니다");
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지원요청이 자동으로 취소되었습니다");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
   }
		}
		else
		{
			if (calledbytimer != 1)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 경찰이 아닙니다");
			}
		}
	}
	return 1;
}

public ResetRoadblockTimer()
{
	roadblocktimer = 0;
	return 1;
}

public alftnghkrtimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		alftnghkr[playerid] = 0;
		SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 벼가 모두 익었습니다. (/수확)으로 제배하십시오");
		SetPlayerFreeze(playerid, false, 0);
		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}

public RemoveRoadblock(playerid)
{
	DestroyObject(PlayerInfo[playerid][pRoadblock]);
	DestroyObject(qkfl[playerid]);
	fhem_A[playerid]=0;
	return 1;
}

forward RemoveRoadblock2();
public RemoveRoadblock2()
{
    for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			DestroyObject(PlayerInfo[i][pRoadblock]);
			DestroyObject(qkfl[i]);
			fhem_A[i]=0;
		}
	}
	return 1;
}

public ARemoveRoadblock(playerid)
{
	DestroyObject(gktehrmwkdtk[playerid]);
	DestroyObject(dkdltmwkdtk[playerid]);
	DestroyObject(fkauswkdtk[playerid]);
	tkdwja_A[playerid]=0;
	return 1;
}

forward ARemoveRoadblock2();
public ARemoveRoadblock2()
{
    for(new i = 0; i < M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			DestroyObject(gktehrmwkdtk[i]);
			DestroyObject(dkdltmwkdtk[i]);
			DestroyObject(fkauswkdtk[i]);
			tkdwja_A[i]=0;
		}
	}
	return 1;
}

public IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if (x > minx && x < maxx && y > miny && y < maxy) return 1;
	return 0;
}

public SendBusRoute(playerid, eastorwest)
{
	if (eastorwest == 0)
	{
		// East
		SCM(playerid, COLOR_ERROR, "[동쪽]버스노선 >> 항구 >> Willowfield 공장 >> 로코 >>");
		SCM(playerid, COLOR_ERROR, "6번가 프라자 >> 10번가 술집 >> 피그펜 >> Golden Palm >>");
		SCM(playerid, COLOR_ERROR, "Jefferson 모텔 >> 글랜파크 >> 버스역 <<");
	}
	else
	{
		// West
		SCM(playerid, COLOR_ERROR, "[서쪽]버스노선 >> 클럽 >> 글렌파크 >> Vinewood 햄버거 >>");
		SCM(playerid, COLOR_ERROR, "한국 극장 >> 은행 >> Rodeo >> 사나 마리아 해변 >> 베로나 해변 >>");
		SCM(playerid, COLOR_ERROR, "Pershing Square >> 버스역 <<");
	}
	return 1;
}

public IsInBusrouteZone(playerid)
{
	if (IsPlayerInArea(playerid, 1722.3599, 2901.8652, -2694.5417, -904.3515)) return 0; // east
	else if (IsPlayerInArea(playerid, 127.4722, 1722.3599, -2694.5417, -904.3515)) return 1; // west
	return 1;
}

public CheckForWalkingTeleport(playerid) // only put teleports ON FOOT here, use another function for vehicle ones - LordMan
{
	return 0;
}

public CreateFoodMenus()
{
	// Burger Shot
	burgermenu = CreateMenu("Burger Shot", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(burgermenu,0,"Meals");
	AddMenuItem(burgermenu,0,"Sharp Shooter");
	AddMenuItem(burgermenu,0,"Cheeseburger");
	AddMenuItem(burgermenu,0,"Double Patty Sandwich");
	AddMenuItem(burgermenu,0,"Beefy Salad");
	AddMenuItem(burgermenu,0," ");
	AddMenuItem(burgermenu,0,"Drinks");
	AddMenuItem(burgermenu,0,"Bottle of Water");
	AddMenuItem(burgermenu,0,"Sprunk");
	AddMenuItem(burgermenu,0," ");
	AddMenuItem(burgermenu,0,"Leave");
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1,"$30"); // Sharp Shooter
	AddMenuItem(burgermenu,1,"$30"); // Cheeseburger
	AddMenuItem(burgermenu,1,"$30"); // DP Sandwich
	AddMenuItem(burgermenu,1,"$30"); // Beefy Salad
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1,"$30"); // Water
	AddMenuItem(burgermenu,1,"$30"); // Sprunk
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1," ");
	DisableMenuRow(burgermenu, 0);
	DisableMenuRow(burgermenu, 5);
	DisableMenuRow(burgermenu, 6);
	DisableMenuRow(burgermenu, 9);

	// Cluckin Bell
	chickenmenu = CreateMenu("Cluckin' Bell", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(chickenmenu,0,"Meals");
	AddMenuItem(chickenmenu,0,"Little Clucker");
	AddMenuItem(chickenmenu,0,"Chicken Nuggets");
	AddMenuItem(chickenmenu,0,"Chicken Sandwich");
	AddMenuItem(chickenmenu,0,"Chicken Salad");
	AddMenuItem(chickenmenu,0," ");
	AddMenuItem(chickenmenu,0,"Drinks");
	AddMenuItem(chickenmenu,0,"Bottle of Water");
	AddMenuItem(chickenmenu,0,"Sprunk");
	AddMenuItem(chickenmenu,0," ");
	AddMenuItem(chickenmenu,0,"Leave");
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1,"$30"); // Little Clucker
	AddMenuItem(chickenmenu,1,"$30"); // Nuggets
	AddMenuItem(chickenmenu,1,"$30"); // C Sandwich
	AddMenuItem(chickenmenu,1,"$30"); // Salad
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1,"$30"); // Water
	AddMenuItem(chickenmenu,1,"$30"); // Sprunk
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1," ");
	DisableMenuRow(chickenmenu, 0);
	DisableMenuRow(chickenmenu, 5);
	DisableMenuRow(chickenmenu, 6);
	DisableMenuRow(chickenmenu, 9);

	// Pizza Stack
	pizzamenu = CreateMenu("Well Stacked Pizza", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(pizzamenu,0,"Meals");
	AddMenuItem(pizzamenu,0,"Little Sicilian");
	AddMenuItem(pizzamenu,0,"Personal Pan Pizza");
	AddMenuItem(pizzamenu,0,"Sheet Pizza");
	AddMenuItem(pizzamenu,0,"Pepperoni Salad");
	AddMenuItem(pizzamenu,0," ");
	AddMenuItem(pizzamenu,0,"Drinks");
	AddMenuItem(pizzamenu,0,"Bottle of Water");
	AddMenuItem(pizzamenu,0,"Sprunk");
	AddMenuItem(pizzamenu,0," ");
	AddMenuItem(pizzamenu,0,"Leave");
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1,"$30"); // Sicilian
	AddMenuItem(pizzamenu,1,"$30"); // Personal Pan
	AddMenuItem(pizzamenu,1,"$30"); // Sheet
	AddMenuItem(pizzamenu,1,"$30"); // Salad
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1,"$30"); // Water
	AddMenuItem(pizzamenu,1,"$30"); // Sprunk
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1," ");
	DisableMenuRow(pizzamenu, 0);
	DisableMenuRow(pizzamenu, 5);
	DisableMenuRow(pizzamenu, 6);
	DisableMenuRow(pizzamenu, 9);

	// Jim's sticky ring
	donutshop = CreateMenu("Jim's sticky ring", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(donutshop,0,"Donuts");
	AddMenuItem(donutshop,0,"Little Donut");
	AddMenuItem(donutshop,0,"Regular Donut");
	AddMenuItem(donutshop,0,"Chief Donut");
	AddMenuItem(donutshop,0,"Extra large Donut");
	AddMenuItem(donutshop,0," ");
	AddMenuItem(donutshop,0,"Drinks");
	AddMenuItem(donutshop,0,"Bottle of Water");
	AddMenuItem(donutshop,0,"Sprunk");
	AddMenuItem(donutshop,0," ");
	AddMenuItem(donutshop,0,"Leave");
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1,"$30"); // Little Donut
	AddMenuItem(donutshop,1,"$30"); // Regular Donut
	AddMenuItem(donutshop,1,"$30"); // Chief Donut
	AddMenuItem(donutshop,1,"$30"); // Extra large Donut
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1,"$30"); // Water
	AddMenuItem(donutshop,1,"$30"); // Sprunk
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1," ");
	DisableMenuRow(donutshop, 0);
	DisableMenuRow(donutshop, 5);
	DisableMenuRow(donutshop, 6);
	DisableMenuRow(donutshop, 9);
}

public OnPlayerEnterFood(playerid, foodid)
{
	switch (foodid)
	{
	case 1: // chicken
		{
			SetPlayerInterior(playerid, 9);
			PlayerInfo[playerid][pInt] = 9;
			SetPlayerPos(playerid,365.7793,-9.1699,1001.8516);
			SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.5);
			GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
			InAFoodPlace[playerid] = 1;
		}
	case 2: // burger
		{
			SetPlayerInterior(playerid, 10);
			PlayerInfo[playerid][pInt] = 10;
			SetPlayerPos(playerid,366.0324,-72.6400,1001.5078);
			SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.5);
			GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
			InAFoodPlace[playerid] = 2;
		}
	case 3: // pizza
		{
			SetPlayerInterior(playerid, 5);
			PlayerInfo[playerid][pInt] = 5;
			SetPlayerPos(playerid,372.4117,-130.4577,1001.4922);
			SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
			GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
			InAFoodPlace[playerid] = 3;
		}
	case 4: // donuts
		{
			SetPlayerInterior(playerid, 17);
			PlayerInfo[playerid][pInt] = 17;
			SetPlayerPos(playerid,377.5237,-191.6597,1000.6328);
			SetPlayerCheckpoint(playerid, 379.0611,-186.6032,1000.6328, 0.8);
			GameTextForPlayer(playerid, "~w~Jim's sticky ring", 5000, 1);
			InAFoodPlace[playerid] = 4;
		}
	}
	return 1;
}

public OnPlayerExitFood(playerid)
{
	DisablePlayerCheckpoint(playerid);
	InAFoodPlace[playerid] = 0;
	return 1;
}

public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SCM(playerid, COLOR_ERROR, " ");
		}
	}
	return 1;
}
public Startup(playerid, vehicleid)
{
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	new newcar = GetPlayerVehicleID(playerid);
	new vid = GetPlayerVehicleID(playerid);
	new engine,lights,alarm,doors,bonnet,boot,objective;
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER || CarInfo[vehicleid][cStarted])
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
    	SetVehicleParamsEx(GetPlayerVehicleID(playerid), true, true, alarm, doors, bonnet, boot, objective);
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이 차량에는 키가 꽂아 있고 시동이 걸려져 있습니다");
	}
	else if(IsPlayerInAnyVehicle(playerid) && !CarInfo[vehicleid][cStarted] && !vehicleEntered[playerid][vehicleid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pveh != 510 && newcar != 59 && newcar != 60 && !IsAPlane(newcar) && !IsAHarvest(newcar))
	{
	    if(AdminDuty[playerid] == 0)
	    {
			GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vid,0,lights,alarm,doors,bonnet,boot,objective);
			SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 차량이 움직이지 않는다면 (/시동)을 입력하시면 됩니다");
			SetPlayerFreeze(playerid, true, 2);
			TogglePlayerControllable(playerid, false);
		    vehicleEntered[playerid][vehicleid] = true;
			if(VehicleInfo[newcar][vLock] == 1)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 잠긴차량입니다.");
			LockCar(newcar);
			RemovePlayerFromVehicle(playerid);
			return 1;
			}
		}
	}
	else if(IsPlayerInAnyVehicle(playerid) && !CarInfo[vehicleid][cStarted] && vehicleEntered[playerid][vehicleid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pveh != 510 && newcar != 59 && newcar != 60 && !IsAPlane(newcar) && !IsAHarvest(newcar))
	{
	    if(AdminDuty[playerid] == 0)
	    {
			GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vid,0,lights,alarm,doors,bonnet,boot,objective);
			SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 차량이 움직이지 않는다면 (/시동)을 입력하시면 됩니다");
			SetPlayerFreeze(playerid, true, 2);
			TogglePlayerControllable(playerid, false);
			if(VehicleInfo[newcar][vLock] == 1)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 잠긴차량입니다.");
			LockCar(newcar);
			RemovePlayerFromVehicle(playerid);
			return 1;
			}
		}
	}
	return 1;
}

public engine2(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerFreeze(playerid, false, 0);
		TogglePlayerControllable(playerid, 1);
	}
}

stock strvalEx( const string[] ) // fix for strval-bug with > 50 letters.
{
	// written by mabako in less than a minute :X
	if( strlen( string ) >= 50 ) return 0; // It will just return 0 if the string is too long
	return strval(string);
}

public CheckCarHealth()
{
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	for (new i=0; i < M_P; i++)
	{
		if (IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			new Float:health;
			GetVehicleHealth(GetPlayerVehicleID(i),health);
			new newcar = GetPlayerVehicleID(i);
			if (health <= 500 && !IsABoat(newcar) && !IsAPlane(newcar) && !IsAHarvest(newcar))
			{
				if(CarInfo[GetPlayerVehicleID(i)][cStarted])
				{
					if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
					{
						SetPlayerFreeze(i, true, 2);
						TogglePlayerControllable(i, 0);
						CarInfo[newcar][cStarted]=false;
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s (( 차량의 엔진이 과열에 의해 손상이 되어 자동적으로 시동이 꺼졌습니다. ))", RPPlayerName(i));
						ProxDetector(10.0, i, string, 0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA,0x62B382AA);
					}
				}
			}
		}
	}
}
forward Rmsdbr(playerid);
public Rmsdbr(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)//플레이어가 걷고있을때
	{
		if(PlayerRunning[playerid] > 150)
		{
			PlayerInfo[playerid][rmsdbr]++;//근육올려 걸었다는증거니까
			PlayerRunning[playerid]=0;//다시 0만들고
			return 1;
		}
	}
	return 1;
}

forward Dmdrmq(playerid);
public Dmdrmq(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)//플레이어가 걷고있을때
	{
		if(PlayerDmdrmq[playerid] > 40)
		{
			new string[128]; new sendername[MAX_PLAYER_NAME];
			PlayerInfo[playerid][rmsdbr]++;//근육올려
			PlayerDmdrmq[playerid]=0;
			Dmdrmqtkdxo[playerid]=0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			PlayerInfo[dmdrmqid[playerid]][pJailed] = 0;
			PlayerInfo[dmdrmqid[playerid]][pMuted] = 0;
			PlayerInfo[dmdrmqid[playerid]][pJailTime] = 0;
			SetPlayerFreeze(dmdrmqid[playerid], false, 0);
			TogglePlayerControllable(dmdrmqid[playerid], 1);
			PlayerInfo[dmdrmqid[playerid]][pInt] = 1;
			PlayerInfo[dmdrmqid[playerid]][pDeaths] += 1;
			PlayerFixRadio(dmdrmqid[playerid]);
			ClearAnimations(dmdrmqid[playerid]);
			GameTextForPlayer(dmdrmqid[playerid], "~w~You are ~g~Survived ~w~!", 5000, 3);
			SCM(dmdrmqid[playerid], COLOR_ERROR, "INFO : "#C_WHITE" 당신은 의사의 도움으로 인해 살아났습니다");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 환자를 살리셨습니다");
			Anim(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
			Anim(dmdrmqid[playerid],"CRACK","crckidle2",4.1,0,1,1,1,1);
			SetCameraBehindPlayer(dmdrmqid[playerid]);
			format(string, sizeof(string), " * %s 환자를 살렸다", RPPlayerName(playerid));
			ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			SetHealth(dmdrmqid[playerid],10);
			dmdrmqid[playerid]=0;//다시 0만들고
			Draw[playerid] = 0;
			Drop[playerid] = 0;
			DropGPlayer[dmdrmqid[playerid]] = 0;
			return 1;
		}
	}
	return 1;
}

forward Health_End(playerid);
public Health_End(playerid)//헬스마침
{
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	RunnigHealth[playerid] = 0; HealthGage[playerid] = 0;
	SetCameraBehindPlayer(playerid);
	//===============================
	if(RunnigHealth[playerid] == 1)//런닝머신
	{
		Anim(playerid,"GYMNASIUM","gym_tread_getoff",4.1,0,0,0,0,0);
	}
	if(RunnigHealth[playerid] == 2)//싸이클
	{
		Anim(playerid,"GYMNASIUM","gym_bike_getoff",4.1,0,0,0,0,0);
	}
	//===============================
	PlayerInfo[playerid][rmsdbr]+=3;
	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운동을 마쳤습니다.");
}

forward rkdehRmx(playerid);
public rkdehRmx(playerid)//도둑질끝
{
new string[256];
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	rkdehwlf[playerid] = 0; rkdehwlfwlf[playerid] = 0;
	SetCameraBehindPlayer(playerid);
	PlayerInfo[playerid][rmsdbr]+=1;//근육량줌
	new robmoney = random(3000);
	PlayerInfo[playerid][pCash] += robmoney;
	format(string, sizeof(string), " INFO : "#C_WHITE" 당신은 편의점/은행을 털어서 $%d을 벌었습니다.",robmoney);
	SCM(playerid, COLOR_ERROR, string);
	PlayerInfo[playerid][pCarTime2] = 2000;
}

forward Sex_End(playerid);
public Sex_End(playerid)//삽입마침
{
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	SexHealth[playerid] = 0; SexGage[playerid] = 0;
	SetCameraBehindPlayer(playerid);
	RemovePlayerAttachedObject(playerid,0);
	RemovePlayerAttachedObject(playerid,1);
	RemovePlayerAttachedObject(playerid,2);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid,4);
	if(SexHealth[playerid] == 0)//삽입
	{
		Anim(playerid,"PED","facgum",4.1,0,1,1,1,1);
	}
	PlayerInfo[playerid][rmsdbr]+=1;//근육량줌
	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 질내사정을 하고 좆을 뺍니다.");
	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 섹스로 인해 근육이 1 올랐습니다.");
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if ((newkeys & KEY_SECONDARY_ATTACK) && !(oldkeys & KEY_SECONDARY_ATTACK) && !IsPlayerInAnyVehicle(playerid) && Bstart[playerid] == 1)
	{
		if(HavingBall[playerid])
		{
            ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,1,1,1,1);
		}
		else
		{
            ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
		}
		Anim[playerid] = 1;
	}
	if (!(newkeys & KEY_SECONDARY_ATTACK) && (oldkeys & KEY_SECONDARY_ATTACK) && !IsPlayerInAnyVehicle(playerid) && Bstart[playerid] == 1)
	{
		ClearAnimations(playerid);
		Anim[playerid] = 0;
	}
	if(newkeys & KEY_FIRE && !IsPlayerInAnyVehicle(playerid) && Bstart[playerid] == 1)
	{
        if(!HavingBall[playerid])
		{
			new Float:x, Float:y, Float:z;
			GetObjectPos(Ball, x, y, z);
			if(IsPlayerInRangeOfPoint(playerid, 1.5, x, y, z))
			{
				HavingBall[playerid] = 1;
				ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
				if(Baller != 999)
				{
					HavingBall[Baller] = 0;
					ClearAnimations(Baller);
					ApplyAnimation(Baller, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					ApplyAnimation(playerid,"BSKTBALL","BBALL_walk",4.1,1,1,1,1,1);
				}
				Baller = playerid;
				BallStatus = 1;
				new Float:x2, Float:y2;
				GetXYInFrontOfPlayer(playerid, x2, y2, 0.8);
				GetPlayerPos(playerid, x, y, z);
				StopObject(Ball);
				MoveObject(Ball, x2, y2, z, 2.5);
				Anim[playerid] = 0;
				BallBounce = 0;
			}
		}
		else
		{
            if(IsPlayerInRangeOfPoint(playerid, 2, 2795.5237,-2019.6152,13.5547))
			{
				MoveObject(Ball, 2794.9612,-2019.5415,15.5075, 7.5);
				SetPlayerPos(playerid, 2795.5237,-2019.6152,13.5547);
				ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
				HavingBall[playerid] = 0;
				SetTimerEx("ClearAnim", 1100, 0, "d", playerid);
				SetTimerEx("BallDown2", 1100, 0, "d", playerid);
				return 1;
			}
            else if(IsPlayerInRangeOfPoint(playerid, 4, 2795.5237,-2019.6152,13.5547) && IsPlayerFacingPoint(playerid, 20, 2795.5237,-2019.6152,13.5547))
			{
				new rand = random(1);
				if(rand == 0)
				{
					MoveObject(Ball, 2794.9612,-2019.5415,15.5075, 10.5+random(4));
					ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
					ShootingBall = 2;
					HavingBall[playerid] = 0;
					return 1;
				}
				ShootMiss(playerid);
				return 1;
			}
            else if(IsPlayerInRangeOfPoint(playerid, 7, 2795.5237,-2019.6152,13.5547) && IsPlayerFacingPoint(playerid, 20, 2795.5237,-2019.6152,13.5547))
			{
				new rand = random(2);
				if(rand == 0)
				{
					MoveObject(Ball, 2794.9612,-2019.5415,15.5075, 11.0+random(4));
					ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
					ShootingBall = 2;
					HavingBall[playerid] = 0;
					return 1;
				}
				ShootMiss(playerid);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10, 2795.5237,-2019.6152,13.5547) && IsPlayerFacingPoint(playerid, 20, 2795.5237,-2019.6152,13.5547))
			{
				new rand = random(3);
				if(rand == 0)
				{
					MoveObject(Ball, 2794.9612,-2019.5415,15.5075, 11.5+random(4));
					ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
					ShootingBall = 2;
					HavingBall[playerid] = 0;
					return 1;
				}
				ShootMiss(playerid);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2, 2768.3669,-2019.6644,13.5547))
			{
				MoveObject(Ball, 2768.6289,-2019.7227,15.6287, 7.5);
				SetPlayerPos(playerid, 2768.3669,-2019.6644,13.5547);
				ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
				HavingBall[playerid] = 0;
				SetTimerEx("ClearAnim", 800, 0, "d", playerid);
				SetTimerEx("BallDown3", 1100, 0, "d", playerid);
				return 1;
			}
            else if(IsPlayerInRangeOfPoint(playerid, 4, 2768.3669,-2019.6644,13.5547) && IsPlayerFacingPoint(playerid, 20, 2768.3669,-2019.6644,13.5547))
			{
				new rand = random(1);
				if(rand == 0)
				{
					MoveObject(Ball, 2768.6289,-2019.7227,15.6287, 10.5+random(4));
					ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
					ShootingBall = 3;
					HavingBall[playerid] = 0;
					return 1;
				}
				ShootMiss2(playerid);
				return 1;
			}
            else if(IsPlayerInRangeOfPoint(playerid, 7, 2768.3669,-2019.6644,13.5547) && IsPlayerFacingPoint(playerid, 20, 2768.3669,-2019.6644,13.5547))
			{
				new rand = random(2);
				if(rand == 0)
				{
					MoveObject(Ball, 2768.6289,-2019.7227,15.6287, 11.0+random(4));
					ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
					ShootingBall = 3;
					HavingBall[playerid] = 0;
					return 1;
				}
				ShootMiss2(playerid);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10, 2768.3669,-2019.6644,13.5547) && IsPlayerFacingPoint(playerid, 20, 2768.3669,-2019.6644,13.5547))
			{
				new rand = random(3);
				if(rand == 0)
				{
					MoveObject(Ball, 2768.6289,-2019.7227,15.6287, 11.5+random(4));
					ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
					ShootingBall = 3;
					HavingBall[playerid] = 0;
					return 1;
				}
                ShootMiss2(playerid);
				return 1;
			}
			for(new i; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsPlayerFacingPlayer(playerid, i, 15))
					{
						new Float:x, Float:y, Float:z;
						GetPlayerPos(i, x, y, z);
						if(IsPlayerInRangeOfPoint(playerid, 20.0, x, y, z))
						{
							Baller = i;
							HavingBall[playerid] = 0;
							ClearAnimations(playerid);
							ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
							SetTimerEx("ClearAnim", 700, 0, "d", playerid);
							MoveObject(Ball, x, y, z, 13+random(4));
							Anim[i] = 0;
							ShootingBall = 6;
							ApplyAnimation(i,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
							return 1;
						}
					}
				}
			}
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			HavingBall[playerid] = 0;
			new Float:x2, Float:y2;
			GetXYInFrontOfPlayer(playerid, x2, y2, 6.0);
			SetTimerEx("BallDown", 600, 0, "df", playerid, z);
			MoveObject(Ball, x2, y2, z+random(8)+3, 10.0+random(4));
			ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
			ShootingBall = 0;
		}
	}
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	if(newkeys & 16) // 다른키와동시에 F누르면
	{
	    if(Playersmoke_V[playerid]==1) // 담배피울때
	    {
	        format(string, sizeof(string), "* %s 담배를 땅에 버리고 불씨를 밟는다.", RPPlayerName(playerid));
			ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			Playersmoke_V[playerid]=0;
			Anim(playerid,"PED","DAM_LegR_frmBK",4.1,0,0,0,0,0);
			    }
			}
			if(SelectChar[playerid] == 255)
			{
			if(newkeys == KEY_SPRINT)
			{
			if(ChangePos2[playerid][1] == 1)
					{
				SetPlayerInterior(playerid, ChangePos2[playerid][0]);
				SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
				ChangePos2[playerid][1] = 0;
			}
			PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			SelectCharPlace[playerid] = 0;
			SelectCharID[playerid] = 0;
			SelectChar[playerid] = 0;
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, ChangeWorld[playerid]);
			{
			}
			if(PlayerInfo[playerid][Quest] == 0 && PlayerInfo[playerid][pTut] == 3)
			{
				PlayerInfo[playerid][pTut] = 4;
				SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 퀘스트를 완료했습니다. 빅스모크에게 돌아가십시오.");
			}
			SetTimerEx("backtoclothes", 500, false, "i", playerid);
			P_Cloth[playerid]=0;
			return 0;
	}

	if(newkeys == KEY_WALK)
	{
		for(new h=1; h<MAX_BUILDING; h++)
		{
			if(BuildingInfo[h][hCreated] != 0)
			{
				if(BuildingInfo[h][hNumberKey] == 1)
				{
					if(PlayerToPoint(0.5, playerid, BuildingInfo[h][hKeyPos][0], BuildingInfo[h][hKeyPos][1], BuildingInfo[h][hKeyPos][2]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
					{
						if(BuildingInfo[h][hLocked] == 1)
						{
							ShowPlayerDialog(playerid, NUMBERKEY, DIALOG_STYLE_LIST, "","잠금해제\n초인종", "확인", "취소");
						}
						else
						{
							ShowPlayerDialog(playerid, NUMBERKEY, DIALOG_STYLE_LIST, "","잠금설정\n초인종", "확인", "취소");
						}
						HouseNumber[playerid]=h;
						return 1;
					}
				}
			}
		}
	}
	if(newkeys == KEY_ANALOG_RIGHT)
	{
	if(P_Cloth[playerid] == 1)
	{
	switch (SelectCharID[playerid])
			{
			case 20: //Male civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivMalePeds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivMalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivMalePeds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivMalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivMalePeds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivMalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivMalePeds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivMalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivMalePeds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivMalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivMalePeds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivMalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivMalePeds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivMalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivMalePeds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivMalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivMalePeds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivMalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivMalePeds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivMalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivMalePeds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivMalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivMalePeds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivMalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivMalePeds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivMalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivMalePeds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivMalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivMalePeds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivMalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivMalePeds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivMalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivMalePeds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivMalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivMalePeds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivMalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivMalePeds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivMalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivMalePeds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivMalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivMalePeds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivMalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivMalePeds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivMalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivMalePeds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivMalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivMalePeds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivMalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivMalePeds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivMalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivMalePeds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivMalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivMalePeds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivMalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivMalePeds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivMalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivMalePeds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivMalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivMalePeds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivMalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivMalePeds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivMalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivMalePeds[32][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivMalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivMalePeds[33][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivMalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivMalePeds[34][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivMalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivMalePeds[35][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivMalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivMalePeds[36][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivMalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivMalePeds[37][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivMalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivMalePeds[38][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivMalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivMalePeds[39][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivMalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivMalePeds[40][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivMalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivMalePeds[41][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivMalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivMalePeds[42][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivMalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivMalePeds[43][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivMalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivMalePeds[44][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivMalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivMalePeds[45][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivMalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivMalePeds[46][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivMalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivMalePeds[47][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivMalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivMalePeds[48][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivMalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivMalePeds[49][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivMalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivMalePeds[50][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivMalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivMalePeds[51][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivMalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivMalePeds[52][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivMalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivMalePeds[53][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivMalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivMalePeds[54][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivMalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivMalePeds[55][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivMalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivMalePeds[56][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivMalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivMalePeds[57][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivMalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivMalePeds[58][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivMalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivMalePeds[59][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivMalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivMalePeds[60][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivMalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivMalePeds[61][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivMalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivMalePeds[62][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivMalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivMalePeds[63][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivMalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivMalePeds[64][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivMalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivMalePeds[65][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivMalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivMalePeds[66][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivMalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivMalePeds[67][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivMalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivMalePeds[68][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivMalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivMalePeds[69][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivMalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivMalePeds[70][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivMalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivMalePeds[71][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivMalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivMalePeds[72][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivMalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivMalePeds[73][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivMalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivMalePeds[74][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivMalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivMalePeds[75][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivMalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivMalePeds[76][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivMalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivMalePeds[77][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivMalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivMalePeds[78][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivMalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivMalePeds[79][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivMalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivMalePeds[80][0]); SelectCharPlace[playerid] = 81; ChosenSkin[playerid] = CivMalePeds[80][0]; }
					else if(SelectCharPlace[playerid] == 81) { SetPlayerSkin(playerid, CivMalePeds[81][0]); SelectCharPlace[playerid] = 82; ChosenSkin[playerid] = CivMalePeds[81][0]; }
					else if(SelectCharPlace[playerid] == 82) { SetPlayerSkin(playerid, CivMalePeds[82][0]); SelectCharPlace[playerid] = 83; ChosenSkin[playerid] = CivMalePeds[82][0]; }
					else if(SelectCharPlace[playerid] == 83) { SetPlayerSkin(playerid, CivMalePeds[83][0]); SelectCharPlace[playerid] = 84; ChosenSkin[playerid] = CivMalePeds[83][0]; }
					else if(SelectCharPlace[playerid] == 84) { SetPlayerSkin(playerid, CivMalePeds[84][0]); SelectCharPlace[playerid] = 85; ChosenSkin[playerid] = CivMalePeds[84][0]; }
					else if(SelectCharPlace[playerid] == 85) { SetPlayerSkin(playerid, CivMalePeds[85][0]); SelectCharPlace[playerid] = 86; ChosenSkin[playerid] = CivMalePeds[85][0]; }
					else if(SelectCharPlace[playerid] == 86) { SetPlayerSkin(playerid, CivMalePeds[86][0]); SelectCharPlace[playerid] = 87; ChosenSkin[playerid] = CivMalePeds[86][0]; }
					else if(SelectCharPlace[playerid] == 87) { SetPlayerSkin(playerid, CivMalePeds[87][0]); SelectCharPlace[playerid] = 88; ChosenSkin[playerid] = CivMalePeds[87][0]; }
					else if(SelectCharPlace[playerid] == 88) { SetPlayerSkin(playerid, CivMalePeds[88][0]); SelectCharPlace[playerid] = 89; ChosenSkin[playerid] = CivMalePeds[88][0]; }
					else if(SelectCharPlace[playerid] == 89) { SetPlayerSkin(playerid, CivMalePeds[89][0]); SelectCharPlace[playerid] = 90; ChosenSkin[playerid] = CivMalePeds[89][0]; }
					else if(SelectCharPlace[playerid] == 90) { SetPlayerSkin(playerid, CivMalePeds[90][0]); SelectCharPlace[playerid] = 91; ChosenSkin[playerid] = CivMalePeds[90][0]; }
					else if(SelectCharPlace[playerid] == 91) { SetPlayerSkin(playerid, CivMalePeds[91][0]); SelectCharPlace[playerid] = 92; ChosenSkin[playerid] = CivMalePeds[91][0]; }
					else if(SelectCharPlace[playerid] == 92) { SetPlayerSkin(playerid, CivMalePeds[92][0]); SelectCharPlace[playerid] = 93; ChosenSkin[playerid] = CivMalePeds[92][0]; }
					else if(SelectCharPlace[playerid] == 93) { SetPlayerSkin(playerid, CivMalePeds[93][0]); SelectCharPlace[playerid] = 94; ChosenSkin[playerid] = CivMalePeds[93][0]; }
					else if(SelectCharPlace[playerid] == 94) { SetPlayerSkin(playerid, CivMalePeds[94][0]); SelectCharPlace[playerid] = 95; ChosenSkin[playerid] = CivMalePeds[94][0]; }
					else if(SelectCharPlace[playerid] == 95) { SetPlayerSkin(playerid, CivMalePeds[95][0]); SelectCharPlace[playerid] = 96; ChosenSkin[playerid] = CivMalePeds[95][0]; }
					else if(SelectCharPlace[playerid] == 96) { SetPlayerSkin(playerid, CivMalePeds[96][0]); SelectCharPlace[playerid] = 97; ChosenSkin[playerid] = CivMalePeds[96][0]; }
					else if(SelectCharPlace[playerid] == 97) { SetPlayerSkin(playerid, CivMalePeds[97][0]); SelectCharPlace[playerid] = 98; ChosenSkin[playerid] = CivMalePeds[97][0]; }
					else if(SelectCharPlace[playerid] == 98) { SetPlayerSkin(playerid, CivMalePeds[98][0]); SelectCharPlace[playerid] = 99; ChosenSkin[playerid] = CivMalePeds[98][0]; }
					else if(SelectCharPlace[playerid] == 99) { SetPlayerSkin(playerid, CivMalePeds[99][0]); SelectCharPlace[playerid] = 100; ChosenSkin[playerid] = CivMalePeds[99][0]; }
					else if(SelectCharPlace[playerid] == 100) { SetPlayerSkin(playerid, CivMalePeds[100][0]); SelectCharPlace[playerid] = 101; ChosenSkin[playerid] = CivMalePeds[100][0]; }
					else if(SelectCharPlace[playerid] == 101) { SetPlayerSkin(playerid, CivMalePeds[101][0]); SelectCharPlace[playerid] = 102; ChosenSkin[playerid] = CivMalePeds[101][0]; }
					else if(SelectCharPlace[playerid] == 102) { SetPlayerSkin(playerid, CivMalePeds[102][0]); SelectCharPlace[playerid] = 103; ChosenSkin[playerid] = CivMalePeds[102][0]; }
					else if(SelectCharPlace[playerid] == 103) { SetPlayerSkin(playerid, CivMalePeds[103][0]); SelectCharPlace[playerid] = 104; ChosenSkin[playerid] = CivMalePeds[103][0]; }
					else if(SelectCharPlace[playerid] == 104) { SetPlayerSkin(playerid, CivMalePeds[104][0]); SelectCharPlace[playerid] = 105; ChosenSkin[playerid] = CivMalePeds[104][0]; }
					else if(SelectCharPlace[playerid] == 105) { SetPlayerSkin(playerid, CivMalePeds[105][0]); SelectCharPlace[playerid] = 106; ChosenSkin[playerid] = CivMalePeds[105][0]; }
					else if(SelectCharPlace[playerid] == 106) { SetPlayerSkin(playerid, CivMalePeds[106][0]); SelectCharPlace[playerid] = 107; ChosenSkin[playerid] = CivMalePeds[106][0]; }
					else if(SelectCharPlace[playerid] == 107) { SetPlayerSkin(playerid, CivMalePeds[107][0]); SelectCharPlace[playerid] = 108; ChosenSkin[playerid] = CivMalePeds[107][0]; }
					else if(SelectCharPlace[playerid] == 108) { SetPlayerSkin(playerid, CivMalePeds[108][0]); SelectCharPlace[playerid] = 109; ChosenSkin[playerid] = CivMalePeds[108][0]; }
					else if(SelectCharPlace[playerid] == 109) { SetPlayerSkin(playerid, CivMalePeds[109][0]); SelectCharPlace[playerid] = 110; ChosenSkin[playerid] = CivMalePeds[109][0]; }
					else if(SelectCharPlace[playerid] == 110) { SetPlayerSkin(playerid, CivMalePeds[110][0]); SelectCharPlace[playerid] = 111; ChosenSkin[playerid] = CivMalePeds[110][0]; }
					else if(SelectCharPlace[playerid] == 111) { SetPlayerSkin(playerid, CivMalePeds[111][0]); SelectCharPlace[playerid] = 112; ChosenSkin[playerid] = CivMalePeds[111][0]; }
					else if(SelectCharPlace[playerid] == 112) { SetPlayerSkin(playerid, CivMalePeds[112][0]); SelectCharPlace[playerid] = 113; ChosenSkin[playerid] = CivMalePeds[112][0]; }
					else if(SelectCharPlace[playerid] == 113) { SetPlayerSkin(playerid, CivMalePeds[113][0]); SelectCharPlace[playerid] = 114; ChosenSkin[playerid] = CivMalePeds[113][0]; }
					else if(SelectCharPlace[playerid] == 114) { SetPlayerSkin(playerid, CivMalePeds[114][0]); SelectCharPlace[playerid] = 115; ChosenSkin[playerid] = CivMalePeds[114][0]; }
					else if(SelectCharPlace[playerid] == 115) { SetPlayerSkin(playerid, CivMalePeds[115][0]); SelectCharPlace[playerid] = 116; ChosenSkin[playerid] = CivMalePeds[115][0]; }
					else if(SelectCharPlace[playerid] == 116) { SetPlayerSkin(playerid, CivMalePeds[116][0]); SelectCharPlace[playerid] = 117; ChosenSkin[playerid] = CivMalePeds[116][0]; }
					else if(SelectCharPlace[playerid] == 117) { SetPlayerSkin(playerid, CivMalePeds[117][0]); SelectCharPlace[playerid] = 118; ChosenSkin[playerid] = CivMalePeds[117][0]; }
					else if(SelectCharPlace[playerid] == 118) { SetPlayerSkin(playerid, CivMalePeds[118][0]); SelectCharPlace[playerid] = 119; ChosenSkin[playerid] = CivMalePeds[118][0]; }
					else if(SelectCharPlace[playerid] == 119) { SetPlayerSkin(playerid, CivMalePeds[119][0]); SelectCharPlace[playerid] = 120; ChosenSkin[playerid] = CivMalePeds[119][0]; }
					else if(SelectCharPlace[playerid] == 120) { SetPlayerSkin(playerid, CivMalePeds[120][0]); SelectCharPlace[playerid] = 121; ChosenSkin[playerid] = CivMalePeds[120][0]; }
					else if(SelectCharPlace[playerid] == 121) { SetPlayerSkin(playerid, CivMalePeds[121][0]); SelectCharPlace[playerid] = 122; ChosenSkin[playerid] = CivMalePeds[121][0]; }
					else if(SelectCharPlace[playerid] == 122) { SetPlayerSkin(playerid, CivMalePeds[122][0]); SelectCharPlace[playerid] = 123; ChosenSkin[playerid] = CivMalePeds[122][0]; }
					else if(SelectCharPlace[playerid] == 123) { SetPlayerSkin(playerid, CivMalePeds[123][0]); SelectCharPlace[playerid] = 124; ChosenSkin[playerid] = CivMalePeds[123][0]; }
					else if(SelectCharPlace[playerid] == 124) { SetPlayerSkin(playerid, CivMalePeds[124][0]); SelectCharPlace[playerid] = 125; ChosenSkin[playerid] = CivMalePeds[124][0]; }
					else if(SelectCharPlace[playerid] == 125) { SetPlayerSkin(playerid, CivMalePeds[125][0]); SelectCharPlace[playerid] = 126; ChosenSkin[playerid] = CivMalePeds[125][0]; }
					else if(SelectCharPlace[playerid] == 126) { SetPlayerSkin(playerid, CivMalePeds[126][0]); SelectCharPlace[playerid] = 127; ChosenSkin[playerid] = CivMalePeds[126][0]; }
					else if(SelectCharPlace[playerid] == 127) { SetPlayerSkin(playerid, CivMalePeds[127][0]); SelectCharPlace[playerid] = 128; ChosenSkin[playerid] = CivMalePeds[127][0]; }
					else if(SelectCharPlace[playerid] == 128) { SetPlayerSkin(playerid, CivMalePeds[128][0]); SelectCharPlace[playerid] = 129; ChosenSkin[playerid] = CivMalePeds[128][0]; }
					else if(SelectCharPlace[playerid] == 129) { SetPlayerSkin(playerid, CivMalePeds[129][0]); SelectCharPlace[playerid] = 130; ChosenSkin[playerid] = CivMalePeds[129][0]; }
					else if(SelectCharPlace[playerid] == 130) { SetPlayerSkin(playerid, CivMalePeds[130][0]); SelectCharPlace[playerid] = 131; ChosenSkin[playerid] = CivMalePeds[130][0]; }
					else if(SelectCharPlace[playerid] == 131) { SetPlayerSkin(playerid, CivMalePeds[131][0]); SelectCharPlace[playerid] = 132; ChosenSkin[playerid] = CivMalePeds[131][0]; }
					else if(SelectCharPlace[playerid] == 132) { SetPlayerSkin(playerid, CivMalePeds[132][0]); SelectCharPlace[playerid] = 133; ChosenSkin[playerid] = CivMalePeds[132][0]; }
					else if(SelectCharPlace[playerid] == 133) { SetPlayerSkin(playerid, CivMalePeds[133][0]); SelectCharPlace[playerid] = 134; ChosenSkin[playerid] = CivMalePeds[133][0]; }
					else if(SelectCharPlace[playerid] == 134) { SetPlayerSkin(playerid, CivMalePeds[134][0]); SelectCharPlace[playerid] = 135; ChosenSkin[playerid] = CivMalePeds[134][0]; }
					else if(SelectCharPlace[playerid] == 135) { SetPlayerSkin(playerid, CivMalePeds[135][0]); SelectCharPlace[playerid] = 136; ChosenSkin[playerid] = CivMalePeds[135][0]; }
					else if(SelectCharPlace[playerid] == 136) { SetPlayerSkin(playerid, CivMalePeds[136][0]); SelectCharPlace[playerid] = 137; ChosenSkin[playerid] = CivMalePeds[136][0]; }
					else if(SelectCharPlace[playerid] == 137) { SetPlayerSkin(playerid, CivMalePeds[137][0]); SelectCharPlace[playerid] = 138; ChosenSkin[playerid] = CivMalePeds[137][0]; }
					else if(SelectCharPlace[playerid] == 138) { SetPlayerSkin(playerid, CivMalePeds[138][0]); SelectCharPlace[playerid] = 139; ChosenSkin[playerid] = CivMalePeds[138][0]; }
					else if(SelectCharPlace[playerid] == 139) { SetPlayerSkin(playerid, CivMalePeds[139][0]); SelectCharPlace[playerid] = 140; ChosenSkin[playerid] = CivMalePeds[139][0]; }
					else if(SelectCharPlace[playerid] == 140) { SetPlayerSkin(playerid, CivMalePeds[140][0]); SelectCharPlace[playerid] = 141; ChosenSkin[playerid] = CivMalePeds[140][0]; }
					else if(SelectCharPlace[playerid] == 141) { SetPlayerSkin(playerid, CivMalePeds[141][0]); SelectCharPlace[playerid] = 142; ChosenSkin[playerid] = CivMalePeds[141][0]; }
					else if(SelectCharPlace[playerid] == 142) { SetPlayerSkin(playerid, CivMalePeds[142][0]); SelectCharPlace[playerid] = 143; ChosenSkin[playerid] = CivMalePeds[142][0]; }
					else if(SelectCharPlace[playerid] == 143) { SetPlayerSkin(playerid, CivMalePeds[143][0]); SelectCharPlace[playerid] = 144; ChosenSkin[playerid] = CivMalePeds[143][0]; }
					else if(SelectCharPlace[playerid] == 144) { SetPlayerSkin(playerid, CivMalePeds[144][0]); SelectCharPlace[playerid] = 145; ChosenSkin[playerid] = CivMalePeds[144][0]; }
					else if(SelectCharPlace[playerid] == 145) { SetPlayerSkin(playerid, CivMalePeds[145][0]); SelectCharPlace[playerid] = 146; ChosenSkin[playerid] = CivMalePeds[145][0]; }
					else if(SelectCharPlace[playerid] == 146) { SetPlayerSkin(playerid, CivMalePeds[146][0]); SelectCharPlace[playerid] = 147; ChosenSkin[playerid] = CivMalePeds[146][0]; }
					else if(SelectCharPlace[playerid] == 147) { SetPlayerSkin(playerid, CivMalePeds[147][0]); SelectCharPlace[playerid] = 148; ChosenSkin[playerid] = CivMalePeds[147][0]; }
					else if(SelectCharPlace[playerid] == 148) { SetPlayerSkin(playerid, CivMalePeds[148][0]); SelectCharPlace[playerid] = 149; ChosenSkin[playerid] = CivMalePeds[148][0]; }
					else if(SelectCharPlace[playerid] == 149) { SetPlayerSkin(playerid, CivMalePeds[149][0]); SelectCharPlace[playerid] = 150; ChosenSkin[playerid] = CivMalePeds[149][0]; }
					else if(SelectCharPlace[playerid] == 150) { SetPlayerSkin(playerid, CivMalePeds[150][0]); SelectCharPlace[playerid] = 151; ChosenSkin[playerid] = CivMalePeds[150][0]; }
					else if(SelectCharPlace[playerid] == 151) { SetPlayerSkin(playerid, CivMalePeds[151][0]); SelectCharPlace[playerid] = 152; ChosenSkin[playerid] = CivMalePeds[151][0]; }
					else if(SelectCharPlace[playerid] == 152) { SetPlayerSkin(playerid, CivMalePeds[152][0]); SelectCharPlace[playerid] = 153; ChosenSkin[playerid] = CivMalePeds[152][0]; }
					else if(SelectCharPlace[playerid] == 153) { SetPlayerSkin(playerid, CivMalePeds[153][0]); SelectCharPlace[playerid] = 154; ChosenSkin[playerid] = CivMalePeds[153][0]; }
					else if(SelectCharPlace[playerid] == 154) { SetPlayerSkin(playerid, CivMalePeds[154][0]); SelectCharPlace[playerid] = 155; ChosenSkin[playerid] = CivMalePeds[154][0]; }
					else if(SelectCharPlace[playerid] == 155) { SetPlayerSkin(playerid, CivMalePeds[155][0]); SelectCharPlace[playerid] = 156; ChosenSkin[playerid] = CivMalePeds[155][0]; }
					else if(SelectCharPlace[playerid] == 156) { SetPlayerSkin(playerid, CivMalePeds[156][0]); SelectCharPlace[playerid] = 157; ChosenSkin[playerid] = CivMalePeds[156][0]; }
					else if(SelectCharPlace[playerid] == 157) { SetPlayerSkin(playerid, CivMalePeds[157][0]); SelectCharPlace[playerid] = 158; ChosenSkin[playerid] = CivMalePeds[157][0]; }
					else if(SelectCharPlace[playerid] == 158) { SetPlayerSkin(playerid, CivMalePeds[158][0]); SelectCharPlace[playerid] = 159; ChosenSkin[playerid] = CivMalePeds[158][0]; }
					else if(SelectCharPlace[playerid] == 159) { SetPlayerSkin(playerid, CivMalePeds[159][0]); SelectCharPlace[playerid] = 160; ChosenSkin[playerid] = CivMalePeds[159][0]; }
					else if(SelectCharPlace[playerid] == 160) { SetPlayerSkin(playerid, CivMalePeds[160][0]); SelectCharPlace[playerid] = 161; ChosenSkin[playerid] = CivMalePeds[160][0]; }
					else if(SelectCharPlace[playerid] == 161) { SetPlayerSkin(playerid, CivMalePeds[161][0]); SelectCharPlace[playerid] = 162; ChosenSkin[playerid] = CivMalePeds[161][0]; }
					else if(SelectCharPlace[playerid] == 162) { SetPlayerSkin(playerid, CivMalePeds[162][0]); SelectCharPlace[playerid] = 163; ChosenSkin[playerid] = CivMalePeds[162][0]; }
					else if(SelectCharPlace[playerid] == 163) { SetPlayerSkin(playerid, CivMalePeds[163][0]); SelectCharPlace[playerid] = 164; ChosenSkin[playerid] = CivMalePeds[163][0]; }
					else if(SelectCharPlace[playerid] == 164) { SetPlayerSkin(playerid, CivMalePeds[164][0]); SelectCharPlace[playerid] = 165; ChosenSkin[playerid] = CivMalePeds[164][0]; }
					else if(SelectCharPlace[playerid] == 165) { SetPlayerSkin(playerid, CivMalePeds[165][0]); SelectCharPlace[playerid] = 166; ChosenSkin[playerid] = CivMalePeds[165][0]; }
					else if(SelectCharPlace[playerid] == 166) { SetPlayerSkin(playerid, CivMalePeds[166][0]); SelectCharPlace[playerid] = 167; ChosenSkin[playerid] = CivMalePeds[166][0]; }
					else if(SelectCharPlace[playerid] == 167) { SetPlayerSkin(playerid, CivMalePeds[167][0]); SelectCharPlace[playerid] = 168; ChosenSkin[playerid] = CivMalePeds[167][0]; }
					else if(SelectCharPlace[playerid] == 168) { SetPlayerSkin(playerid, CivMalePeds[168][0]); SelectCharPlace[playerid] = 169; ChosenSkin[playerid] = CivMalePeds[168][0]; }
					else if(SelectCharPlace[playerid] == 169) { SetPlayerSkin(playerid, CivMalePeds[169][0]); SelectCharPlace[playerid] = 170; ChosenSkin[playerid] = CivMalePeds[169][0]; }
					else if(SelectCharPlace[playerid] == 170) { SetPlayerSkin(playerid, CivMalePeds[170][0]); SelectCharPlace[playerid] = 171; ChosenSkin[playerid] = CivMalePeds[170][0]; }
					else if(SelectCharPlace[playerid] == 171) { SetPlayerSkin(playerid, CivMalePeds[171][0]); SelectCharPlace[playerid] = 172; ChosenSkin[playerid] = CivMalePeds[171][0]; }
					else if(SelectCharPlace[playerid] == 172) { SetPlayerSkin(playerid, CivMalePeds[172][0]); SelectCharPlace[playerid] = 173; ChosenSkin[playerid] = CivMalePeds[172][0]; }
					else if(SelectCharPlace[playerid] == 173) { SetPlayerSkin(playerid, CivMalePeds[173][0]); SelectCharPlace[playerid] = 174; ChosenSkin[playerid] = CivMalePeds[173][0]; }
					else if(SelectCharPlace[playerid] == 174) { SetPlayerSkin(playerid, CivMalePeds[174][0]); SelectCharPlace[playerid] = 175; ChosenSkin[playerid] = CivMalePeds[174][0]; }
					else if(SelectCharPlace[playerid] == 175) { SetPlayerSkin(playerid, CivMalePeds[175][0]); SelectCharPlace[playerid] = 176; ChosenSkin[playerid] = CivMalePeds[175][0]; }
					else if(SelectCharPlace[playerid] == 176) { SetPlayerSkin(playerid, CivMalePeds[176][0]); SelectCharPlace[playerid] = 177; ChosenSkin[playerid] = CivMalePeds[176][0]; }
					else if(SelectCharPlace[playerid] == 177) { SetPlayerSkin(playerid, CivMalePeds[177][0]); SelectCharPlace[playerid] = 178; ChosenSkin[playerid] = CivMalePeds[177][0]; }
					else if(SelectCharPlace[playerid] == 178) { SetPlayerSkin(playerid, CivMalePeds[178][0]); SelectCharPlace[playerid] = 179; ChosenSkin[playerid] = CivMalePeds[178][0]; }
					else if(SelectCharPlace[playerid] == 179) { SetPlayerSkin(playerid, CivMalePeds[179][0]); SelectCharPlace[playerid] = 180; ChosenSkin[playerid] = CivMalePeds[179][0]; }
					else if(SelectCharPlace[playerid] == 180) { SetPlayerSkin(playerid, CivMalePeds[180][0]); SelectCharPlace[playerid] = 181; ChosenSkin[playerid] = CivMalePeds[180][0]; }
					else if(SelectCharPlace[playerid] == 181) { SetPlayerSkin(playerid, CivMalePeds[181][0]); SelectCharPlace[playerid] = 182; ChosenSkin[playerid] = CivMalePeds[181][0]; }
					else if(SelectCharPlace[playerid] == 182) { SetPlayerSkin(playerid, CivMalePeds[182][0]); SelectCharPlace[playerid] = 183; ChosenSkin[playerid] = CivMalePeds[182][0]; }
					else if(SelectCharPlace[playerid] == 183) { SetPlayerSkin(playerid, CivMalePeds[183][0]); SelectCharPlace[playerid] = 184; ChosenSkin[playerid] = CivMalePeds[183][0]; }
					else if(SelectCharPlace[playerid] == 184) { SetPlayerSkin(playerid, CivMalePeds[184][0]); SelectCharPlace[playerid] = 185; ChosenSkin[playerid] = CivMalePeds[184][0]; }
					else if(SelectCharPlace[playerid] == 185) { SetPlayerSkin(playerid, CivMalePeds[185][0]); SelectCharPlace[playerid] = 186; ChosenSkin[playerid] = CivMalePeds[185][0]; }
					else if(SelectCharPlace[playerid] == 186) { SetPlayerSkin(playerid, CivMalePeds[186][0]); SelectCharPlace[playerid] = 187; ChosenSkin[playerid] = CivMalePeds[186][0]; }
					else if(SelectCharPlace[playerid] == 187) { SetPlayerSkin(playerid, CivMalePeds[187][0]); SelectCharPlace[playerid] = 188; ChosenSkin[playerid] = CivMalePeds[187][0]; }
					else if(SelectCharPlace[playerid] == 188) { SetPlayerSkin(playerid, CivMalePeds[188][0]); SelectCharPlace[playerid] = 189; ChosenSkin[playerid] = CivMalePeds[188][0]; }
					else if(SelectCharPlace[playerid] == 189) { SetPlayerSkin(playerid, CivMalePeds[189][0]); SelectCharPlace[playerid] = 190; ChosenSkin[playerid] = CivMalePeds[189][0]; }
					else if(SelectCharPlace[playerid] == 190) { SetPlayerSkin(playerid, CivMalePeds[190][0]); SelectCharPlace[playerid] = 191; ChosenSkin[playerid] = CivMalePeds[190][0]; }
					else if(SelectCharPlace[playerid] == 191) { SetPlayerSkin(playerid, CivMalePeds[191][0]); SelectCharPlace[playerid] = 192; ChosenSkin[playerid] = CivMalePeds[191][0]; }
					else if(SelectCharPlace[playerid] == 192) { SetPlayerSkin(playerid, CivMalePeds[192][0]); SelectCharPlace[playerid] = 193; ChosenSkin[playerid] = CivMalePeds[192][0]; }
					else if(SelectCharPlace[playerid] == 193) { SetPlayerSkin(playerid, CivMalePeds[193][0]); SelectCharPlace[playerid] = 194; ChosenSkin[playerid] = CivMalePeds[193][0]; }
					else if(SelectCharPlace[playerid] == 194) { SetPlayerSkin(playerid, CivMalePeds[194][0]); SelectCharPlace[playerid] = 195; ChosenSkin[playerid] = CivMalePeds[194][0]; }
					else if(SelectCharPlace[playerid] == 195) { SetPlayerSkin(playerid, CivMalePeds[195][0]); SelectCharPlace[playerid] = 196; ChosenSkin[playerid] = CivMalePeds[195][0]; }
					else if(SelectCharPlace[playerid] == 196) { SetPlayerSkin(playerid, CivMalePeds[196][0]); SelectCharPlace[playerid] = 197; ChosenSkin[playerid] = CivMalePeds[196][0]; }
					else if(SelectCharPlace[playerid] == 197) { SetPlayerSkin(playerid, CivMalePeds[197][0]); SelectCharPlace[playerid] = 198; ChosenSkin[playerid] = CivMalePeds[197][0]; }
					else if(SelectCharPlace[playerid] == 198) { SetPlayerSkin(playerid, CivMalePeds[198][0]); SelectCharPlace[playerid] = 199; ChosenSkin[playerid] = CivMalePeds[198][0]; }
					else if(SelectCharPlace[playerid] == 199) { SetPlayerSkin(playerid, CivMalePeds[199][0]); SelectCharPlace[playerid] = 200; ChosenSkin[playerid] = CivMalePeds[199][0]; }
					else if(SelectCharPlace[playerid] == 200) { SetPlayerSkin(playerid, CivMalePeds[200][0]); SelectCharPlace[playerid] = 201; ChosenSkin[playerid] = CivMalePeds[200][0]; }
					else if(SelectCharPlace[playerid] == 201) { SetPlayerSkin(playerid, CivMalePeds[201][0]); SelectCharPlace[playerid] = 202; ChosenSkin[playerid] = CivMalePeds[201][0]; }
					else if(SelectCharPlace[playerid] == 202) { SetPlayerSkin(playerid, CivMalePeds[202][0]); SelectCharPlace[playerid] = 203; ChosenSkin[playerid] = CivMalePeds[202][0]; }
					else if(SelectCharPlace[playerid] == 203) { SetPlayerSkin(playerid, CivMalePeds[203][0]); SelectCharPlace[playerid] = 204; ChosenSkin[playerid] = CivMalePeds[203][0]; }
					else if(SelectCharPlace[playerid] == 204) { SetPlayerSkin(playerid, CivMalePeds[204][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivMalePeds[204][0]; }
				}
			case 30: //Female civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivFemalePeds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivFemalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivFemalePeds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivFemalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivFemalePeds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivFemalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivFemalePeds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivFemalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivFemalePeds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivFemalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivFemalePeds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivFemalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivFemalePeds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivFemalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivFemalePeds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivFemalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivFemalePeds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivFemalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivFemalePeds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivFemalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivFemalePeds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivFemalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivFemalePeds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivFemalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivFemalePeds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivFemalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivFemalePeds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivFemalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivFemalePeds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivFemalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivFemalePeds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivFemalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivFemalePeds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivFemalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivFemalePeds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivFemalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivFemalePeds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivFemalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivFemalePeds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivFemalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivFemalePeds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivFemalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivFemalePeds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivFemalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivFemalePeds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivFemalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivFemalePeds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivFemalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivFemalePeds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivFemalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivFemalePeds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivFemalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivFemalePeds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivFemalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivFemalePeds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivFemalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivFemalePeds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivFemalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivFemalePeds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivFemalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivFemalePeds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivFemalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivFemalePeds[32][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivFemalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivFemalePeds[33][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivFemalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivFemalePeds[34][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivFemalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivFemalePeds[35][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivFemalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivFemalePeds[36][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivFemalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivFemalePeds[37][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivFemalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivFemalePeds[38][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivFemalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivFemalePeds[39][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivFemalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivFemalePeds[40][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivFemalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivFemalePeds[41][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivFemalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivFemalePeds[42][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivFemalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivFemalePeds[43][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivFemalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivFemalePeds[44][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivFemalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivFemalePeds[45][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivFemalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivFemalePeds[46][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivFemalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivFemalePeds[47][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivFemalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivFemalePeds[48][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivFemalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivFemalePeds[49][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivFemalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivFemalePeds[50][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivFemalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivFemalePeds[51][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivFemalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivFemalePeds[52][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivFemalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivFemalePeds[53][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivFemalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivFemalePeds[54][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivFemalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivFemalePeds[55][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivFemalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivFemalePeds[56][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivFemalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivFemalePeds[57][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivFemalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivFemalePeds[58][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivFemalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivFemalePeds[59][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivFemalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivFemalePeds[60][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivFemalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivFemalePeds[61][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivFemalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivFemalePeds[62][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivFemalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivFemalePeds[63][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivFemalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivFemalePeds[64][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivFemalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivFemalePeds[65][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivFemalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivFemalePeds[66][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivFemalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivFemalePeds[67][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivFemalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivFemalePeds[68][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivFemalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivFemalePeds[69][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivFemalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivFemalePeds[70][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivFemalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivFemalePeds[71][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivFemalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivFemalePeds[72][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivFemalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivFemalePeds[73][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivFemalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivFemalePeds[74][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivFemalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivFemalePeds[75][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivFemalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivFemalePeds[76][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivFemalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivFemalePeds[77][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivFemalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivFemalePeds[78][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivFemalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivFemalePeds[79][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivFemalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivFemalePeds[80][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivFemalePeds[80][0]; }
				}
			}
		}
	}
	if(newkeys == KEY_ANALOG_LEFT)
	{
	if(P_Cloth[playerid] == 1)
 	{
	switch (SelectCharID[playerid])
			{
			case 20: //Male civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivMalePeds[1][0]); SelectCharPlace[playerid] = 204; ChosenSkin[playerid] = CivMalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivMalePeds[2][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivMalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivMalePeds[3][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivMalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivMalePeds[4][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivMalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivMalePeds[5][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivMalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivMalePeds[6][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivMalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivMalePeds[7][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivMalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivMalePeds[8][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivMalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivMalePeds[9][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivMalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivMalePeds[10][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivMalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivMalePeds[11][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivMalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivMalePeds[12][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivMalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivMalePeds[13][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivMalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivMalePeds[14][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivMalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivMalePeds[15][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivMalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivMalePeds[16][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivMalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivMalePeds[17][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivMalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivMalePeds[18][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivMalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivMalePeds[19][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivMalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivMalePeds[20][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivMalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivMalePeds[21][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivMalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivMalePeds[22][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivMalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivMalePeds[23][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivMalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivMalePeds[24][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivMalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivMalePeds[25][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivMalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivMalePeds[26][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivMalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivMalePeds[27][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivMalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivMalePeds[28][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivMalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivMalePeds[29][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivMalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivMalePeds[30][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivMalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivMalePeds[31][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivMalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivMalePeds[32][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivMalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivMalePeds[33][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivMalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivMalePeds[34][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivMalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivMalePeds[35][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivMalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivMalePeds[36][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivMalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivMalePeds[37][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivMalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivMalePeds[38][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivMalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivMalePeds[39][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivMalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivMalePeds[40][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivMalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivMalePeds[41][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivMalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivMalePeds[42][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivMalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivMalePeds[43][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivMalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivMalePeds[44][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivMalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivMalePeds[45][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivMalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivMalePeds[46][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivMalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivMalePeds[47][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivMalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivMalePeds[48][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivMalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivMalePeds[49][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivMalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivMalePeds[50][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivMalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivMalePeds[51][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivMalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivMalePeds[52][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivMalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivMalePeds[53][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivMalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivMalePeds[54][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivMalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivMalePeds[55][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivMalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivMalePeds[56][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivMalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivMalePeds[57][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivMalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivMalePeds[58][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivMalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivMalePeds[59][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivMalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivMalePeds[60][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivMalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivMalePeds[61][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivMalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivMalePeds[62][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivMalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivMalePeds[63][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivMalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivMalePeds[64][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivMalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivMalePeds[65][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivMalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivMalePeds[66][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivMalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivMalePeds[67][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivMalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivMalePeds[68][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivMalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivMalePeds[69][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivMalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivMalePeds[70][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivMalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivMalePeds[71][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivMalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivMalePeds[72][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivMalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivMalePeds[73][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivMalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivMalePeds[74][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivMalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivMalePeds[75][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivMalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivMalePeds[76][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivMalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivMalePeds[77][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivMalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivMalePeds[78][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivMalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivMalePeds[79][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivMalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivMalePeds[80][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivMalePeds[80][0]; }
					else if(SelectCharPlace[playerid] == 81) { SetPlayerSkin(playerid, CivMalePeds[81][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivMalePeds[81][0]; }
					else if(SelectCharPlace[playerid] == 82) { SetPlayerSkin(playerid, CivMalePeds[82][0]); SelectCharPlace[playerid] = 81; ChosenSkin[playerid] = CivMalePeds[82][0]; }
					else if(SelectCharPlace[playerid] == 83) { SetPlayerSkin(playerid, CivMalePeds[83][0]); SelectCharPlace[playerid] = 82; ChosenSkin[playerid] = CivMalePeds[83][0]; }
					else if(SelectCharPlace[playerid] == 84) { SetPlayerSkin(playerid, CivMalePeds[84][0]); SelectCharPlace[playerid] = 83; ChosenSkin[playerid] = CivMalePeds[84][0]; }
					else if(SelectCharPlace[playerid] == 85) { SetPlayerSkin(playerid, CivMalePeds[85][0]); SelectCharPlace[playerid] = 84; ChosenSkin[playerid] = CivMalePeds[85][0]; }
					else if(SelectCharPlace[playerid] == 86) { SetPlayerSkin(playerid, CivMalePeds[86][0]); SelectCharPlace[playerid] = 85; ChosenSkin[playerid] = CivMalePeds[86][0]; }
					else if(SelectCharPlace[playerid] == 87) { SetPlayerSkin(playerid, CivMalePeds[87][0]); SelectCharPlace[playerid] = 86; ChosenSkin[playerid] = CivMalePeds[87][0]; }
					else if(SelectCharPlace[playerid] == 88) { SetPlayerSkin(playerid, CivMalePeds[88][0]); SelectCharPlace[playerid] = 87; ChosenSkin[playerid] = CivMalePeds[88][0]; }
					else if(SelectCharPlace[playerid] == 89) { SetPlayerSkin(playerid, CivMalePeds[89][0]); SelectCharPlace[playerid] = 88; ChosenSkin[playerid] = CivMalePeds[89][0]; }
					else if(SelectCharPlace[playerid] == 90) { SetPlayerSkin(playerid, CivMalePeds[90][0]); SelectCharPlace[playerid] = 89; ChosenSkin[playerid] = CivMalePeds[90][0]; }
					else if(SelectCharPlace[playerid] == 91) { SetPlayerSkin(playerid, CivMalePeds[91][0]); SelectCharPlace[playerid] = 90; ChosenSkin[playerid] = CivMalePeds[91][0]; }
					else if(SelectCharPlace[playerid] == 92) { SetPlayerSkin(playerid, CivMalePeds[92][0]); SelectCharPlace[playerid] = 91; ChosenSkin[playerid] = CivMalePeds[92][0]; }
					else if(SelectCharPlace[playerid] == 93) { SetPlayerSkin(playerid, CivMalePeds[93][0]); SelectCharPlace[playerid] = 92; ChosenSkin[playerid] = CivMalePeds[93][0]; }
					else if(SelectCharPlace[playerid] == 94) { SetPlayerSkin(playerid, CivMalePeds[94][0]); SelectCharPlace[playerid] = 93; ChosenSkin[playerid] = CivMalePeds[94][0]; }
					else if(SelectCharPlace[playerid] == 95) { SetPlayerSkin(playerid, CivMalePeds[95][0]); SelectCharPlace[playerid] = 94; ChosenSkin[playerid] = CivMalePeds[95][0]; }
					else if(SelectCharPlace[playerid] == 96) { SetPlayerSkin(playerid, CivMalePeds[96][0]); SelectCharPlace[playerid] = 95; ChosenSkin[playerid] = CivMalePeds[96][0]; }
					else if(SelectCharPlace[playerid] == 97) { SetPlayerSkin(playerid, CivMalePeds[97][0]); SelectCharPlace[playerid] = 96; ChosenSkin[playerid] = CivMalePeds[97][0]; }
					else if(SelectCharPlace[playerid] == 98) { SetPlayerSkin(playerid, CivMalePeds[98][0]); SelectCharPlace[playerid] = 97; ChosenSkin[playerid] = CivMalePeds[98][0]; }
					else if(SelectCharPlace[playerid] == 99) { SetPlayerSkin(playerid, CivMalePeds[99][0]); SelectCharPlace[playerid] = 98; ChosenSkin[playerid] = CivMalePeds[99][0]; }
					else if(SelectCharPlace[playerid] == 100) { SetPlayerSkin(playerid, CivMalePeds[100][0]); SelectCharPlace[playerid] = 99; ChosenSkin[playerid] = CivMalePeds[100][0]; }
					else if(SelectCharPlace[playerid] == 101) { SetPlayerSkin(playerid, CivMalePeds[101][0]); SelectCharPlace[playerid] = 100; ChosenSkin[playerid] = CivMalePeds[101][0]; }
					else if(SelectCharPlace[playerid] == 102) { SetPlayerSkin(playerid, CivMalePeds[102][0]); SelectCharPlace[playerid] = 101; ChosenSkin[playerid] = CivMalePeds[102][0]; }
					else if(SelectCharPlace[playerid] == 103) { SetPlayerSkin(playerid, CivMalePeds[103][0]); SelectCharPlace[playerid] = 102; ChosenSkin[playerid] = CivMalePeds[103][0]; }
					else if(SelectCharPlace[playerid] == 104) { SetPlayerSkin(playerid, CivMalePeds[104][0]); SelectCharPlace[playerid] = 103; ChosenSkin[playerid] = CivMalePeds[104][0]; }
					else if(SelectCharPlace[playerid] == 105) { SetPlayerSkin(playerid, CivMalePeds[105][0]); SelectCharPlace[playerid] = 104; ChosenSkin[playerid] = CivMalePeds[105][0]; }
					else if(SelectCharPlace[playerid] == 106) { SetPlayerSkin(playerid, CivMalePeds[106][0]); SelectCharPlace[playerid] = 105; ChosenSkin[playerid] = CivMalePeds[106][0]; }
					else if(SelectCharPlace[playerid] == 107) { SetPlayerSkin(playerid, CivMalePeds[107][0]); SelectCharPlace[playerid] = 106; ChosenSkin[playerid] = CivMalePeds[107][0]; }
					else if(SelectCharPlace[playerid] == 108) { SetPlayerSkin(playerid, CivMalePeds[108][0]); SelectCharPlace[playerid] = 107; ChosenSkin[playerid] = CivMalePeds[108][0]; }
					else if(SelectCharPlace[playerid] == 109) { SetPlayerSkin(playerid, CivMalePeds[109][0]); SelectCharPlace[playerid] = 108; ChosenSkin[playerid] = CivMalePeds[109][0]; }
					else if(SelectCharPlace[playerid] == 110) { SetPlayerSkin(playerid, CivMalePeds[110][0]); SelectCharPlace[playerid] = 109; ChosenSkin[playerid] = CivMalePeds[110][0]; }
					else if(SelectCharPlace[playerid] == 111) { SetPlayerSkin(playerid, CivMalePeds[111][0]); SelectCharPlace[playerid] = 110; ChosenSkin[playerid] = CivMalePeds[111][0]; }
					else if(SelectCharPlace[playerid] == 112) { SetPlayerSkin(playerid, CivMalePeds[112][0]); SelectCharPlace[playerid] = 111; ChosenSkin[playerid] = CivMalePeds[112][0]; }
					else if(SelectCharPlace[playerid] == 113) { SetPlayerSkin(playerid, CivMalePeds[113][0]); SelectCharPlace[playerid] = 112; ChosenSkin[playerid] = CivMalePeds[113][0]; }
					else if(SelectCharPlace[playerid] == 114) { SetPlayerSkin(playerid, CivMalePeds[114][0]); SelectCharPlace[playerid] = 113; ChosenSkin[playerid] = CivMalePeds[114][0]; }
					else if(SelectCharPlace[playerid] == 115) { SetPlayerSkin(playerid, CivMalePeds[115][0]); SelectCharPlace[playerid] = 114; ChosenSkin[playerid] = CivMalePeds[115][0]; }
					else if(SelectCharPlace[playerid] == 116) { SetPlayerSkin(playerid, CivMalePeds[116][0]); SelectCharPlace[playerid] = 115; ChosenSkin[playerid] = CivMalePeds[116][0]; }
					else if(SelectCharPlace[playerid] == 117) { SetPlayerSkin(playerid, CivMalePeds[117][0]); SelectCharPlace[playerid] = 116; ChosenSkin[playerid] = CivMalePeds[117][0]; }
					else if(SelectCharPlace[playerid] == 118) { SetPlayerSkin(playerid, CivMalePeds[118][0]); SelectCharPlace[playerid] = 117; ChosenSkin[playerid] = CivMalePeds[118][0]; }
					else if(SelectCharPlace[playerid] == 119) { SetPlayerSkin(playerid, CivMalePeds[119][0]); SelectCharPlace[playerid] = 118; ChosenSkin[playerid] = CivMalePeds[119][0]; }
					else if(SelectCharPlace[playerid] == 120) { SetPlayerSkin(playerid, CivMalePeds[120][0]); SelectCharPlace[playerid] = 119; ChosenSkin[playerid] = CivMalePeds[120][0]; }
					else if(SelectCharPlace[playerid] == 121) { SetPlayerSkin(playerid, CivMalePeds[121][0]); SelectCharPlace[playerid] = 120; ChosenSkin[playerid] = CivMalePeds[121][0]; }
					else if(SelectCharPlace[playerid] == 122) { SetPlayerSkin(playerid, CivMalePeds[122][0]); SelectCharPlace[playerid] = 121; ChosenSkin[playerid] = CivMalePeds[122][0]; }
					else if(SelectCharPlace[playerid] == 123) { SetPlayerSkin(playerid, CivMalePeds[123][0]); SelectCharPlace[playerid] = 122; ChosenSkin[playerid] = CivMalePeds[123][0]; }
					else if(SelectCharPlace[playerid] == 124) { SetPlayerSkin(playerid, CivMalePeds[124][0]); SelectCharPlace[playerid] = 123; ChosenSkin[playerid] = CivMalePeds[124][0]; }
					else if(SelectCharPlace[playerid] == 125) { SetPlayerSkin(playerid, CivMalePeds[125][0]); SelectCharPlace[playerid] = 124; ChosenSkin[playerid] = CivMalePeds[125][0]; }
					else if(SelectCharPlace[playerid] == 126) { SetPlayerSkin(playerid, CivMalePeds[126][0]); SelectCharPlace[playerid] = 125; ChosenSkin[playerid] = CivMalePeds[126][0]; }
					else if(SelectCharPlace[playerid] == 127) { SetPlayerSkin(playerid, CivMalePeds[127][0]); SelectCharPlace[playerid] = 126; ChosenSkin[playerid] = CivMalePeds[127][0]; }
					else if(SelectCharPlace[playerid] == 128) { SetPlayerSkin(playerid, CivMalePeds[128][0]); SelectCharPlace[playerid] = 127; ChosenSkin[playerid] = CivMalePeds[128][0]; }
					else if(SelectCharPlace[playerid] == 129) { SetPlayerSkin(playerid, CivMalePeds[129][0]); SelectCharPlace[playerid] = 128; ChosenSkin[playerid] = CivMalePeds[129][0]; }
					else if(SelectCharPlace[playerid] == 130) { SetPlayerSkin(playerid, CivMalePeds[130][0]); SelectCharPlace[playerid] = 129; ChosenSkin[playerid] = CivMalePeds[130][0]; }
					else if(SelectCharPlace[playerid] == 131) { SetPlayerSkin(playerid, CivMalePeds[131][0]); SelectCharPlace[playerid] = 130; ChosenSkin[playerid] = CivMalePeds[131][0]; }
					else if(SelectCharPlace[playerid] == 132) { SetPlayerSkin(playerid, CivMalePeds[132][0]); SelectCharPlace[playerid] = 131; ChosenSkin[playerid] = CivMalePeds[132][0]; }
					else if(SelectCharPlace[playerid] == 133) { SetPlayerSkin(playerid, CivMalePeds[133][0]); SelectCharPlace[playerid] = 132; ChosenSkin[playerid] = CivMalePeds[133][0]; }
					else if(SelectCharPlace[playerid] == 134) { SetPlayerSkin(playerid, CivMalePeds[134][0]); SelectCharPlace[playerid] = 133; ChosenSkin[playerid] = CivMalePeds[134][0]; }
					else if(SelectCharPlace[playerid] == 135) { SetPlayerSkin(playerid, CivMalePeds[135][0]); SelectCharPlace[playerid] = 134; ChosenSkin[playerid] = CivMalePeds[135][0]; }
					else if(SelectCharPlace[playerid] == 136) { SetPlayerSkin(playerid, CivMalePeds[136][0]); SelectCharPlace[playerid] = 135; ChosenSkin[playerid] = CivMalePeds[136][0]; }
					else if(SelectCharPlace[playerid] == 137) { SetPlayerSkin(playerid, CivMalePeds[137][0]); SelectCharPlace[playerid] = 136; ChosenSkin[playerid] = CivMalePeds[137][0]; }
					else if(SelectCharPlace[playerid] == 138) { SetPlayerSkin(playerid, CivMalePeds[138][0]); SelectCharPlace[playerid] = 137; ChosenSkin[playerid] = CivMalePeds[138][0]; }
					else if(SelectCharPlace[playerid] == 139) { SetPlayerSkin(playerid, CivMalePeds[139][0]); SelectCharPlace[playerid] = 138; ChosenSkin[playerid] = CivMalePeds[139][0]; }
					else if(SelectCharPlace[playerid] == 140) { SetPlayerSkin(playerid, CivMalePeds[140][0]); SelectCharPlace[playerid] = 139; ChosenSkin[playerid] = CivMalePeds[140][0]; }
					else if(SelectCharPlace[playerid] == 141) { SetPlayerSkin(playerid, CivMalePeds[141][0]); SelectCharPlace[playerid] = 140; ChosenSkin[playerid] = CivMalePeds[141][0]; }
					else if(SelectCharPlace[playerid] == 142) { SetPlayerSkin(playerid, CivMalePeds[142][0]); SelectCharPlace[playerid] = 141; ChosenSkin[playerid] = CivMalePeds[142][0]; }
					else if(SelectCharPlace[playerid] == 143) { SetPlayerSkin(playerid, CivMalePeds[143][0]); SelectCharPlace[playerid] = 142; ChosenSkin[playerid] = CivMalePeds[143][0]; }
					else if(SelectCharPlace[playerid] == 144) { SetPlayerSkin(playerid, CivMalePeds[144][0]); SelectCharPlace[playerid] = 143; ChosenSkin[playerid] = CivMalePeds[144][0]; }
					else if(SelectCharPlace[playerid] == 145) { SetPlayerSkin(playerid, CivMalePeds[145][0]); SelectCharPlace[playerid] = 144; ChosenSkin[playerid] = CivMalePeds[145][0]; }
					else if(SelectCharPlace[playerid] == 146) { SetPlayerSkin(playerid, CivMalePeds[146][0]); SelectCharPlace[playerid] = 145; ChosenSkin[playerid] = CivMalePeds[146][0]; }
					else if(SelectCharPlace[playerid] == 147) { SetPlayerSkin(playerid, CivMalePeds[147][0]); SelectCharPlace[playerid] = 146; ChosenSkin[playerid] = CivMalePeds[147][0]; }
					else if(SelectCharPlace[playerid] == 148) { SetPlayerSkin(playerid, CivMalePeds[148][0]); SelectCharPlace[playerid] = 147; ChosenSkin[playerid] = CivMalePeds[148][0]; }
					else if(SelectCharPlace[playerid] == 149) { SetPlayerSkin(playerid, CivMalePeds[149][0]); SelectCharPlace[playerid] = 148; ChosenSkin[playerid] = CivMalePeds[149][0]; }
					else if(SelectCharPlace[playerid] == 150) { SetPlayerSkin(playerid, CivMalePeds[150][0]); SelectCharPlace[playerid] = 149; ChosenSkin[playerid] = CivMalePeds[150][0]; }
					else if(SelectCharPlace[playerid] == 151) { SetPlayerSkin(playerid, CivMalePeds[151][0]); SelectCharPlace[playerid] = 150; ChosenSkin[playerid] = CivMalePeds[151][0]; }
					else if(SelectCharPlace[playerid] == 152) { SetPlayerSkin(playerid, CivMalePeds[152][0]); SelectCharPlace[playerid] = 151; ChosenSkin[playerid] = CivMalePeds[152][0]; }
					else if(SelectCharPlace[playerid] == 153) { SetPlayerSkin(playerid, CivMalePeds[153][0]); SelectCharPlace[playerid] = 152; ChosenSkin[playerid] = CivMalePeds[153][0]; }
					else if(SelectCharPlace[playerid] == 154) { SetPlayerSkin(playerid, CivMalePeds[154][0]); SelectCharPlace[playerid] = 153; ChosenSkin[playerid] = CivMalePeds[154][0]; }
					else if(SelectCharPlace[playerid] == 155) { SetPlayerSkin(playerid, CivMalePeds[155][0]); SelectCharPlace[playerid] = 154; ChosenSkin[playerid] = CivMalePeds[155][0]; }
					else if(SelectCharPlace[playerid] == 156) { SetPlayerSkin(playerid, CivMalePeds[156][0]); SelectCharPlace[playerid] = 155; ChosenSkin[playerid] = CivMalePeds[156][0]; }
					else if(SelectCharPlace[playerid] == 157) { SetPlayerSkin(playerid, CivMalePeds[157][0]); SelectCharPlace[playerid] = 156; ChosenSkin[playerid] = CivMalePeds[157][0]; }
					else if(SelectCharPlace[playerid] == 158) { SetPlayerSkin(playerid, CivMalePeds[158][0]); SelectCharPlace[playerid] = 157; ChosenSkin[playerid] = CivMalePeds[158][0]; }
					else if(SelectCharPlace[playerid] == 159) { SetPlayerSkin(playerid, CivMalePeds[159][0]); SelectCharPlace[playerid] = 158; ChosenSkin[playerid] = CivMalePeds[159][0]; }
					else if(SelectCharPlace[playerid] == 160) { SetPlayerSkin(playerid, CivMalePeds[160][0]); SelectCharPlace[playerid] = 159; ChosenSkin[playerid] = CivMalePeds[160][0]; }
					else if(SelectCharPlace[playerid] == 161) { SetPlayerSkin(playerid, CivMalePeds[161][0]); SelectCharPlace[playerid] = 160; ChosenSkin[playerid] = CivMalePeds[161][0]; }
					else if(SelectCharPlace[playerid] == 162) { SetPlayerSkin(playerid, CivMalePeds[162][0]); SelectCharPlace[playerid] = 161; ChosenSkin[playerid] = CivMalePeds[162][0]; }
					else if(SelectCharPlace[playerid] == 163) { SetPlayerSkin(playerid, CivMalePeds[163][0]); SelectCharPlace[playerid] = 162; ChosenSkin[playerid] = CivMalePeds[163][0]; }
					else if(SelectCharPlace[playerid] == 164) { SetPlayerSkin(playerid, CivMalePeds[164][0]); SelectCharPlace[playerid] = 163; ChosenSkin[playerid] = CivMalePeds[164][0]; }
					else if(SelectCharPlace[playerid] == 165) { SetPlayerSkin(playerid, CivMalePeds[165][0]); SelectCharPlace[playerid] = 164; ChosenSkin[playerid] = CivMalePeds[165][0]; }
					else if(SelectCharPlace[playerid] == 166) { SetPlayerSkin(playerid, CivMalePeds[166][0]); SelectCharPlace[playerid] = 165; ChosenSkin[playerid] = CivMalePeds[166][0]; }
					else if(SelectCharPlace[playerid] == 167) { SetPlayerSkin(playerid, CivMalePeds[167][0]); SelectCharPlace[playerid] = 166; ChosenSkin[playerid] = CivMalePeds[167][0]; }
					else if(SelectCharPlace[playerid] == 168) { SetPlayerSkin(playerid, CivMalePeds[168][0]); SelectCharPlace[playerid] = 167; ChosenSkin[playerid] = CivMalePeds[168][0]; }
					else if(SelectCharPlace[playerid] == 169) { SetPlayerSkin(playerid, CivMalePeds[169][0]); SelectCharPlace[playerid] = 168; ChosenSkin[playerid] = CivMalePeds[169][0]; }
					else if(SelectCharPlace[playerid] == 170) { SetPlayerSkin(playerid, CivMalePeds[170][0]); SelectCharPlace[playerid] = 169; ChosenSkin[playerid] = CivMalePeds[170][0]; }
					else if(SelectCharPlace[playerid] == 171) { SetPlayerSkin(playerid, CivMalePeds[171][0]); SelectCharPlace[playerid] = 170; ChosenSkin[playerid] = CivMalePeds[171][0]; }
					else if(SelectCharPlace[playerid] == 172) { SetPlayerSkin(playerid, CivMalePeds[172][0]); SelectCharPlace[playerid] = 171; ChosenSkin[playerid] = CivMalePeds[172][0]; }
					else if(SelectCharPlace[playerid] == 173) { SetPlayerSkin(playerid, CivMalePeds[173][0]); SelectCharPlace[playerid] = 172; ChosenSkin[playerid] = CivMalePeds[173][0]; }
					else if(SelectCharPlace[playerid] == 174) { SetPlayerSkin(playerid, CivMalePeds[174][0]); SelectCharPlace[playerid] = 173; ChosenSkin[playerid] = CivMalePeds[174][0]; }
					else if(SelectCharPlace[playerid] == 175) { SetPlayerSkin(playerid, CivMalePeds[175][0]); SelectCharPlace[playerid] = 174; ChosenSkin[playerid] = CivMalePeds[175][0]; }
					else if(SelectCharPlace[playerid] == 176) { SetPlayerSkin(playerid, CivMalePeds[176][0]); SelectCharPlace[playerid] = 175; ChosenSkin[playerid] = CivMalePeds[176][0]; }
					else if(SelectCharPlace[playerid] == 177) { SetPlayerSkin(playerid, CivMalePeds[177][0]); SelectCharPlace[playerid] = 176; ChosenSkin[playerid] = CivMalePeds[177][0]; }
					else if(SelectCharPlace[playerid] == 178) { SetPlayerSkin(playerid, CivMalePeds[178][0]); SelectCharPlace[playerid] = 177; ChosenSkin[playerid] = CivMalePeds[178][0]; }
					else if(SelectCharPlace[playerid] == 179) { SetPlayerSkin(playerid, CivMalePeds[179][0]); SelectCharPlace[playerid] = 178; ChosenSkin[playerid] = CivMalePeds[179][0]; }
					else if(SelectCharPlace[playerid] == 180) { SetPlayerSkin(playerid, CivMalePeds[180][0]); SelectCharPlace[playerid] = 179; ChosenSkin[playerid] = CivMalePeds[180][0]; }
					else if(SelectCharPlace[playerid] == 181) { SetPlayerSkin(playerid, CivMalePeds[181][0]); SelectCharPlace[playerid] = 180; ChosenSkin[playerid] = CivMalePeds[181][0]; }
					else if(SelectCharPlace[playerid] == 182) { SetPlayerSkin(playerid, CivMalePeds[182][0]); SelectCharPlace[playerid] = 181; ChosenSkin[playerid] = CivMalePeds[182][0]; }
					else if(SelectCharPlace[playerid] == 183) { SetPlayerSkin(playerid, CivMalePeds[183][0]); SelectCharPlace[playerid] = 182; ChosenSkin[playerid] = CivMalePeds[183][0]; }
					else if(SelectCharPlace[playerid] == 184) { SetPlayerSkin(playerid, CivMalePeds[184][0]); SelectCharPlace[playerid] = 183; ChosenSkin[playerid] = CivMalePeds[184][0]; }
					else if(SelectCharPlace[playerid] == 185) { SetPlayerSkin(playerid, CivMalePeds[185][0]); SelectCharPlace[playerid] = 184; ChosenSkin[playerid] = CivMalePeds[185][0]; }
					else if(SelectCharPlace[playerid] == 186) { SetPlayerSkin(playerid, CivMalePeds[186][0]); SelectCharPlace[playerid] = 185; ChosenSkin[playerid] = CivMalePeds[186][0]; }
					else if(SelectCharPlace[playerid] == 187) { SetPlayerSkin(playerid, CivMalePeds[187][0]); SelectCharPlace[playerid] = 186; ChosenSkin[playerid] = CivMalePeds[187][0]; }
					else if(SelectCharPlace[playerid] == 188) { SetPlayerSkin(playerid, CivMalePeds[188][0]); SelectCharPlace[playerid] = 187; ChosenSkin[playerid] = CivMalePeds[188][0]; }
					else if(SelectCharPlace[playerid] == 189) { SetPlayerSkin(playerid, CivMalePeds[189][0]); SelectCharPlace[playerid] = 188; ChosenSkin[playerid] = CivMalePeds[189][0]; }
					else if(SelectCharPlace[playerid] == 190) { SetPlayerSkin(playerid, CivMalePeds[190][0]); SelectCharPlace[playerid] = 189; ChosenSkin[playerid] = CivMalePeds[190][0]; }
					else if(SelectCharPlace[playerid] == 191) { SetPlayerSkin(playerid, CivMalePeds[191][0]); SelectCharPlace[playerid] = 190; ChosenSkin[playerid] = CivMalePeds[191][0]; }
					else if(SelectCharPlace[playerid] == 192) { SetPlayerSkin(playerid, CivMalePeds[192][0]); SelectCharPlace[playerid] = 191; ChosenSkin[playerid] = CivMalePeds[192][0]; }
					else if(SelectCharPlace[playerid] == 193) { SetPlayerSkin(playerid, CivMalePeds[193][0]); SelectCharPlace[playerid] = 192; ChosenSkin[playerid] = CivMalePeds[193][0]; }
					else if(SelectCharPlace[playerid] == 194) { SetPlayerSkin(playerid, CivMalePeds[194][0]); SelectCharPlace[playerid] = 193; ChosenSkin[playerid] = CivMalePeds[194][0]; }
					else if(SelectCharPlace[playerid] == 195) { SetPlayerSkin(playerid, CivMalePeds[195][0]); SelectCharPlace[playerid] = 194; ChosenSkin[playerid] = CivMalePeds[195][0]; }
					else if(SelectCharPlace[playerid] == 196) { SetPlayerSkin(playerid, CivMalePeds[196][0]); SelectCharPlace[playerid] = 195; ChosenSkin[playerid] = CivMalePeds[196][0]; }
					else if(SelectCharPlace[playerid] == 197) { SetPlayerSkin(playerid, CivMalePeds[197][0]); SelectCharPlace[playerid] = 196; ChosenSkin[playerid] = CivMalePeds[197][0]; }
					else if(SelectCharPlace[playerid] == 198) { SetPlayerSkin(playerid, CivMalePeds[198][0]); SelectCharPlace[playerid] = 197; ChosenSkin[playerid] = CivMalePeds[198][0]; }
					else if(SelectCharPlace[playerid] == 199) { SetPlayerSkin(playerid, CivMalePeds[199][0]); SelectCharPlace[playerid] = 198; ChosenSkin[playerid] = CivMalePeds[199][0]; }
					else if(SelectCharPlace[playerid] == 200) { SetPlayerSkin(playerid, CivMalePeds[200][0]); SelectCharPlace[playerid] = 199; ChosenSkin[playerid] = CivMalePeds[200][0]; }
					else if(SelectCharPlace[playerid] == 201) { SetPlayerSkin(playerid, CivMalePeds[201][0]); SelectCharPlace[playerid] = 200; ChosenSkin[playerid] = CivMalePeds[201][0]; }
					else if(SelectCharPlace[playerid] == 202) { SetPlayerSkin(playerid, CivMalePeds[202][0]); SelectCharPlace[playerid] = 201; ChosenSkin[playerid] = CivMalePeds[202][0]; }
					else if(SelectCharPlace[playerid] == 203) { SetPlayerSkin(playerid, CivMalePeds[203][0]); SelectCharPlace[playerid] = 202; ChosenSkin[playerid] = CivMalePeds[203][0]; }
					else if(SelectCharPlace[playerid] == 204) { SetPlayerSkin(playerid, CivMalePeds[204][0]); SelectCharPlace[playerid] = 203; ChosenSkin[playerid] = CivMalePeds[204][0]; }
				}
			case 30: //Female civilian (by Ellis)
				{
					if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivFemalePeds[1][0]); SelectCharPlace[playerid] = 80; ChosenSkin[playerid] = CivFemalePeds[1][0]; }
					else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivFemalePeds[2][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivFemalePeds[2][0]; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivFemalePeds[3][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivFemalePeds[3][0]; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivFemalePeds[4][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivFemalePeds[4][0]; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivFemalePeds[5][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivFemalePeds[5][0]; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivFemalePeds[6][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivFemalePeds[6][0]; }
					else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivFemalePeds[7][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivFemalePeds[7][0]; }
					else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivFemalePeds[8][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivFemalePeds[8][0]; }
					else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivFemalePeds[9][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivFemalePeds[9][0]; }
					else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivFemalePeds[10][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivFemalePeds[10][0]; }
					else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivFemalePeds[11][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivFemalePeds[11][0]; }
					else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivFemalePeds[12][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivFemalePeds[12][0]; }
					else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivFemalePeds[13][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivFemalePeds[13][0]; }
					else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivFemalePeds[14][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivFemalePeds[14][0]; }
					else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivFemalePeds[15][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivFemalePeds[15][0]; }
					else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivFemalePeds[16][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivFemalePeds[16][0]; }
					else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivFemalePeds[17][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivFemalePeds[17][0]; }
					else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivFemalePeds[18][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivFemalePeds[18][0]; }
					else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivFemalePeds[19][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivFemalePeds[19][0]; }
					else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivFemalePeds[20][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivFemalePeds[20][0]; }
					else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivFemalePeds[21][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivFemalePeds[21][0]; }
					else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivFemalePeds[22][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivFemalePeds[22][0]; }
					else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivFemalePeds[23][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivFemalePeds[23][0]; }
					else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivFemalePeds[24][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivFemalePeds[24][0]; }
					else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivFemalePeds[25][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivFemalePeds[25][0]; }
					else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivFemalePeds[26][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivFemalePeds[26][0]; }
					else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivFemalePeds[27][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivFemalePeds[27][0]; }
					else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivFemalePeds[28][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivFemalePeds[28][0]; }
					else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivFemalePeds[29][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivFemalePeds[29][0]; }
					else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivFemalePeds[30][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivFemalePeds[30][0]; }
					else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivFemalePeds[31][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivFemalePeds[31][0]; }
					else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivFemalePeds[32][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivFemalePeds[32][0]; }
					else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivFemalePeds[33][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivFemalePeds[33][0]; }
					else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivFemalePeds[34][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivFemalePeds[34][0]; }
					else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivFemalePeds[35][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivFemalePeds[35][0]; }
					else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivFemalePeds[36][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivFemalePeds[36][0]; }
					else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivFemalePeds[37][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivFemalePeds[37][0]; }
					else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivFemalePeds[38][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivFemalePeds[38][0]; }
					else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivFemalePeds[39][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivFemalePeds[39][0]; }
					else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivFemalePeds[40][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivFemalePeds[40][0]; }
					else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivFemalePeds[41][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivFemalePeds[41][0]; }
					else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivFemalePeds[42][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivFemalePeds[42][0]; }
					else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivFemalePeds[43][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivFemalePeds[43][0]; }
					else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivFemalePeds[44][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivFemalePeds[44][0]; }
					else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivFemalePeds[45][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivFemalePeds[45][0]; }
					else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivFemalePeds[46][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivFemalePeds[46][0]; }
					else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivFemalePeds[47][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivFemalePeds[47][0]; }
					else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivFemalePeds[48][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivFemalePeds[48][0]; }
					else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivFemalePeds[49][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivFemalePeds[49][0]; }
					else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivFemalePeds[50][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivFemalePeds[50][0]; }
					else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivFemalePeds[51][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivFemalePeds[51][0]; }
					else if(SelectCharPlace[playerid] == 52) { SetPlayerSkin(playerid, CivFemalePeds[52][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivFemalePeds[52][0]; }
					else if(SelectCharPlace[playerid] == 53) { SetPlayerSkin(playerid, CivFemalePeds[53][0]); SelectCharPlace[playerid] = 52; ChosenSkin[playerid] = CivFemalePeds[53][0]; }
					else if(SelectCharPlace[playerid] == 54) { SetPlayerSkin(playerid, CivFemalePeds[54][0]); SelectCharPlace[playerid] = 53; ChosenSkin[playerid] = CivFemalePeds[54][0]; }
					else if(SelectCharPlace[playerid] == 55) { SetPlayerSkin(playerid, CivFemalePeds[55][0]); SelectCharPlace[playerid] = 54; ChosenSkin[playerid] = CivFemalePeds[55][0]; }
					else if(SelectCharPlace[playerid] == 56) { SetPlayerSkin(playerid, CivFemalePeds[56][0]); SelectCharPlace[playerid] = 55; ChosenSkin[playerid] = CivFemalePeds[56][0]; }
					else if(SelectCharPlace[playerid] == 57) { SetPlayerSkin(playerid, CivFemalePeds[57][0]); SelectCharPlace[playerid] = 56; ChosenSkin[playerid] = CivFemalePeds[57][0]; }
					else if(SelectCharPlace[playerid] == 58) { SetPlayerSkin(playerid, CivFemalePeds[58][0]); SelectCharPlace[playerid] = 57; ChosenSkin[playerid] = CivFemalePeds[58][0]; }
					else if(SelectCharPlace[playerid] == 59) { SetPlayerSkin(playerid, CivFemalePeds[59][0]); SelectCharPlace[playerid] = 58; ChosenSkin[playerid] = CivFemalePeds[59][0]; }
					else if(SelectCharPlace[playerid] == 60) { SetPlayerSkin(playerid, CivFemalePeds[60][0]); SelectCharPlace[playerid] = 59; ChosenSkin[playerid] = CivFemalePeds[60][0]; }
					else if(SelectCharPlace[playerid] == 61) { SetPlayerSkin(playerid, CivFemalePeds[61][0]); SelectCharPlace[playerid] = 60; ChosenSkin[playerid] = CivFemalePeds[61][0]; }
					else if(SelectCharPlace[playerid] == 62) { SetPlayerSkin(playerid, CivFemalePeds[62][0]); SelectCharPlace[playerid] = 61; ChosenSkin[playerid] = CivFemalePeds[62][0]; }
					else if(SelectCharPlace[playerid] == 63) { SetPlayerSkin(playerid, CivFemalePeds[63][0]); SelectCharPlace[playerid] = 62; ChosenSkin[playerid] = CivFemalePeds[63][0]; }
					else if(SelectCharPlace[playerid] == 64) { SetPlayerSkin(playerid, CivFemalePeds[64][0]); SelectCharPlace[playerid] = 63; ChosenSkin[playerid] = CivFemalePeds[64][0]; }
					else if(SelectCharPlace[playerid] == 65) { SetPlayerSkin(playerid, CivFemalePeds[65][0]); SelectCharPlace[playerid] = 64; ChosenSkin[playerid] = CivFemalePeds[65][0]; }
					else if(SelectCharPlace[playerid] == 66) { SetPlayerSkin(playerid, CivFemalePeds[66][0]); SelectCharPlace[playerid] = 65; ChosenSkin[playerid] = CivFemalePeds[66][0]; }
					else if(SelectCharPlace[playerid] == 67) { SetPlayerSkin(playerid, CivFemalePeds[67][0]); SelectCharPlace[playerid] = 66; ChosenSkin[playerid] = CivFemalePeds[67][0]; }
					else if(SelectCharPlace[playerid] == 68) { SetPlayerSkin(playerid, CivFemalePeds[68][0]); SelectCharPlace[playerid] = 67; ChosenSkin[playerid] = CivFemalePeds[68][0]; }
					else if(SelectCharPlace[playerid] == 69) { SetPlayerSkin(playerid, CivFemalePeds[69][0]); SelectCharPlace[playerid] = 68; ChosenSkin[playerid] = CivFemalePeds[69][0]; }
					else if(SelectCharPlace[playerid] == 70) { SetPlayerSkin(playerid, CivFemalePeds[70][0]); SelectCharPlace[playerid] = 69; ChosenSkin[playerid] = CivFemalePeds[70][0]; }
					else if(SelectCharPlace[playerid] == 71) { SetPlayerSkin(playerid, CivFemalePeds[71][0]); SelectCharPlace[playerid] = 70; ChosenSkin[playerid] = CivFemalePeds[71][0]; }
					else if(SelectCharPlace[playerid] == 72) { SetPlayerSkin(playerid, CivFemalePeds[72][0]); SelectCharPlace[playerid] = 71; ChosenSkin[playerid] = CivFemalePeds[72][0]; }
					else if(SelectCharPlace[playerid] == 73) { SetPlayerSkin(playerid, CivFemalePeds[73][0]); SelectCharPlace[playerid] = 72; ChosenSkin[playerid] = CivFemalePeds[73][0]; }
					else if(SelectCharPlace[playerid] == 74) { SetPlayerSkin(playerid, CivFemalePeds[74][0]); SelectCharPlace[playerid] = 73; ChosenSkin[playerid] = CivFemalePeds[74][0]; }
					else if(SelectCharPlace[playerid] == 75) { SetPlayerSkin(playerid, CivFemalePeds[75][0]); SelectCharPlace[playerid] = 74; ChosenSkin[playerid] = CivFemalePeds[75][0]; }
					else if(SelectCharPlace[playerid] == 76) { SetPlayerSkin(playerid, CivFemalePeds[76][0]); SelectCharPlace[playerid] = 75; ChosenSkin[playerid] = CivFemalePeds[76][0]; }
					else if(SelectCharPlace[playerid] == 77) { SetPlayerSkin(playerid, CivFemalePeds[77][0]); SelectCharPlace[playerid] = 76; ChosenSkin[playerid] = CivFemalePeds[77][0]; }
					else if(SelectCharPlace[playerid] == 78) { SetPlayerSkin(playerid, CivFemalePeds[78][0]); SelectCharPlace[playerid] = 77; ChosenSkin[playerid] = CivFemalePeds[78][0]; }
					else if(SelectCharPlace[playerid] == 79) { SetPlayerSkin(playerid, CivFemalePeds[79][0]); SelectCharPlace[playerid] = 78; ChosenSkin[playerid] = CivFemalePeds[79][0]; }
					else if(SelectCharPlace[playerid] == 80) { SetPlayerSkin(playerid, CivFemalePeds[80][0]); SelectCharPlace[playerid] = 79; ChosenSkin[playerid] = CivFemalePeds[80][0]; }
				}
			}
		}
  	 }
  }
	if(newkeys == KEY_SPRINT)//스페이스바
	{
		if(gPlayerLogged[playerid] == 1)
		{
			if(Mine[playerid] == 1)
			{
				ClearChatbox(playerid, 5);
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 화면에 뜨는 키를 누르세요.");
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~g~ Space Bar ~r~!", 5000, 3);
				Mine[playerid] = 2;
			}
			else if(Mine[playerid] == 2)
			{
				ClearChatbox(playerid, 5);
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 화면에 뜨는 키를 누르세요.");
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~g~ F Key ~r~!", 5000, 3);
				Mine[playerid] = 3; // dlrj이거 봐바 형이 수정한건데.3이어야돼지않아?
			}
			else if(Mine[playerid] == 6)
			{
				ClearChatbox(playerid, 5);
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 최고의 노동. 을 입력하세요.");
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~g~ GoGo ~r~!", 5000, 3);
				Mine[playerid] = 7;
			}
			else if(Mine[playerid] == 9)
			{
				ClearChatbox(playerid, 5);
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
			    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 머리가 나쁘면 몸이고생. 을 입력하세요.");
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~g~ F Key ~r~!", 5000, 3);
				Mine[playerid] = 10;//이것도 형이하거지
			}
			if(FishingUp[playerid])
			{
				new rand=random(FishNamesNumber);
				//	        new string2[256];
				if(rand == 0 || rand == 4 || rand == 7 || rand == 10)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 쓰레기를 건졌고, 바다로 던져버렸습니다.");
					SCM(playerid, COLOR_ERROR, string);
				}
				else if(rand == 20)
				{
					new money=1+random(9);
					format(string, sizeof(string), "INFO : "#C_WHITE" 돈가방을 건졌고, 돈을 꺼내 바다로 던졌습니다.", money);
					SCM(playerid, COLOR_ERROR, string);
					GiveMoney(playerid, money);
				}
				else
				{
					GameTextForPlayer(playerid, "~r~Got!!", 2000, 5);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 물고기가 걸렸습니다. 스페이스바를 연타해주십시오.");
					new rand2=30+random(80);
					FishingSize[playerid]=rand2;
					FishingUp[playerid]=false;
					Fishing[playerid]=false;
					FishingTime[playerid]=0;
					Fishing2[playerid]=true;
					FishingName[playerid]=rand;
				}
			}
			if(Fishing[playerid] && !FishingUp[playerid])
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 물고기를 놓쳤습니다. 낚싯대를 들어올립니다.");
				FishingUp[playerid]=false;
				Fishing[playerid]=false;
				FishingTime[playerid]=0;
			}
			if(Fishing2[playerid])
			{
				FishingCount[playerid]++;
			}
			else if(Dmdrmqtkdxo[playerid]==1)//응급 상태일때
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)//플레이어가 걷고있을때
				{
					if (ProxDetectorS(3.0, playerid, dmdrmqid[playerid]))
					{
						PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
						PlayerDmdrmq[playerid]++;
						format(string, sizeof(string), "~b~Resurrection~n~~r~%d~g~/~b~40~n~~r~Please Wait!!",PlayerDmdrmq[playerid]);
						GameTextForPlayer(dmdrmqid[playerid],string,2500,3);
						format(string, sizeof(string), "~b~Resurrection~n~~r~%d~g~/~b~40~n~~r~SPACE BAR!!",PlayerDmdrmq[playerid]);
						GameTextForPlayer(playerid,string,2500,3);
						if(PlayerDmdrmq[playerid] >= 40)
						{
							Dmdrmq(playerid);
						}
						if(PlayerInfo[dmdrmqid[playerid]][pJailed] == 0)
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 환자가 이미 다른사람의 손에 살아났습니다");
							dmdrmqid[playerid]=0;
							PlayerDmdrmq[playerid]=0;
							Dmdrmqtkdxo[playerid]=0;
						}
					}
					else
					{
						format(string, sizeof(string), "~b~Resurrection~n~~r~%d/40~n~~r~Go to your Patients!!",PlayerDmdrmq[playerid]);
						GameTextForPlayer(playerid,string,2500,3);
					}
				}
			}
			if(RunnigHealth[playerid] != 0)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)//플레이어가 걷고있을때
				{
					PlayerRunning[playerid]++;
					if(PlayerRunning[playerid] > 50)
					{
						Rmsdbr(playerid);
					}// 이게 렉을 유발할 수있음;;
				}
			}
						if(SexHealth[playerid] == 1)//삽입
			{
				SexGage[playerid]++;
				format(string, sizeof(string), "~b~Sex!~n~~r~%d~g~/~b~100~n~~r~SPACE BAR!!",SexGage[playerid]);
				GameTextForPlayer(playerid,string,2500,3);
				Anim(playerid,"BIKES","BIKEs_Back",4.1,0,1,1,1,0);
				if(SexGage[playerid] >= 100)
				{
					Sex_End(playerid);
				}
			}
			if(rkdehwlf[playerid] == 1)
			{
				rkdehwlfwlf[playerid]++;
				format(string, sizeof(string), "~b~Oh! Ye!~n~~r~%d~g~/~b~50~n~~r~SPACE BAR!!",rkdehwlfwlf[playerid]);
				GameTextForPlayer(playerid,string,2500,3);
				if(rkdehwlfwlf[playerid] >= 50)
				{
					rkdehRmx(playerid);
				}
			}
			if(RunnigHealth[playerid] == 1)//런닝머신
			{
				HealthGage[playerid]++;
				format(string, sizeof(string), "~b~Health!~n~~r~%d~g~/~b~100~n~~r~SPACE BAR!!",HealthGage[playerid]);
				GameTextForPlayer(playerid,string,2500,3);
				Anim(playerid,"GYMNASIUM","gym_tread_sprint",4.1,1,0,0,0,0);
				if(HealthGage[playerid] >= 100)
				{
					Health_End(playerid);
				}
			}
			if(RunnigHealth[playerid] == 2)//싸이클
			{
				HealthGage[playerid]++;
				format(string, sizeof(string), "~b~Health!~n~~r~%d~g~/~b~100~n~~r~SPACE BAR!!",HealthGage[playerid]);
				GameTextForPlayer(playerid,string,2500,3);
				Anim(playerid,"GYMNASIUM","gym_bike_fast",4.1,0,1,1,1,1);
				if(HealthGage[playerid] >= 100)
				{
					Health_End(playerid);
				}
			}
		}
	}

	//===================================
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(Freeze[playerid] == 2)
			{
				RemovePlayerFromVehicle(playerid);
				SetPlayerFreeze(playerid, false, 0);
			}
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(Mine[playerid] == 3)
		{
			ClearChatbox(playerid, 5);
		    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
		    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 화면에 뜨는 키를 누르세요.");
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~ F ~r~!", 5000, 3);
			Mine[playerid] = 4;
		}
		if(Mine[playerid] == 4)
		{
			ClearChatbox(playerid, 5);
		    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
		    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 화면에 뜨는 키를 누르세요.");
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~ F ~r~!", 5000, 3);
			Mine[playerid] = 5;
		}
		if(Mine[playerid] == 5)
		{
			ClearChatbox(playerid, 5);
		    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 성공적으로 누르셨습니다..");
		    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 화면에 뜨는 키를 누르세요.");
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~ F ~r~!", 5000, 3);
			Mine[playerid] = 6;
		}


		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return 1;
		}
		else//차안탈때
		{
			if(PlayerToPoint(2, playerid, 710.1224,-1595.6311,14.1933))
			{
				ShowPlayerDialog(playerid,DIALOG_4,DIALOG_STYLE_LIST,"댈리스 시티 택시호출","택시기사 호출","확인","취소");
			}
		}
		if(PlayerToPoint(2.0, playerid,1486.98,-1682.57,14.05))
		{
			if(Say_Quest[playerid]==0)
			{
				SetPlayerCameraPos(playerid, 1486.2657,-1684.4293,14.0469);
				SetPlayerCameraLookAt(playerid, 1488.7019,-1680.4951,14.0469);
				SetPlayerFreeze(playerid, true, 1);
				TogglePlayerControllable(playerid, 0);
				Anim(playerid,"PED","IDLE_CHAT",4.1,1,0,0,0,0);
				Say_Quest[playerid]=1;
			}
			return 1;
		}
		if(PlayerToPoint(0.5, playerid, 2074.8987,2403.5447,312.1950))
		{
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_LIST, "운동 목록", "복싱(200)\n쿵후(200)\n태권도(200)\n그랩킥(400)\n엘보우(400)", "확인", "취소");
		}
		if(PlayerToPoint(0.5, playerid, 1173.0991,1349.1775,10.9219))
		{
			ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, "면허 시험", "운전면허($100)\n대형면허($200)\n낚시면허증($150)\n비행자격증($5000)\n항해자격증($2500)", "확인", "취소");
		}
		else if(PlayerToPoint(4, playerid,228.2545,151.2652,1003.0234))
		{
			if(IsACop(playerid))
			{
				MoveObject(fbi1,228.2545,149.2652,1003.0234, 3.5);
				SetTimer("fbi1Close", 5000, 0);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
			}
		}
		else if(PlayerToPoint(4, playerid,228.2545,161.2077,1003.0234))
		{
			if(IsACop(playerid))
			{
				MoveObject(fbi2,228.2545,159.2077,1003.0234, 3.5);
				SetTimer("fbi2Close", 5000, 0);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
			}
		}
		else if(PlayerToPoint(4, playerid,228.1794,171.6009,1003.0330))
		{
			if(IsACop(playerid))
			{
				MoveObject(fbi3,228.1794,171.6009,1016.0330, 3.5);
				SetTimer("fbi3Close", 5000, 0);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
			}
		}
		else if(PlayerToPoint(4, playerid,238.6470,193.8610,1008.1719))
		{
			if(IsACop(playerid))
			{
				MoveObject(fbi4,238.6470,193.8610,1016.1719, 3.5);
				SetTimer("fbi4Close", 5000, 0);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
			}
		}
		else if(PlayerToPoint(4, playerid,271.3773,191.2642,1008.1620))
		{
			if(IsACop(playerid))
			{
				MoveObject(fbi5,271.3773,191.2642,1016.1620, 3.5);
				SetTimer("fbi5Close", 5000, 0);
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
			}
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		if(PlayerToPoint(50.0, playerid, 3351.2248535156, -1543.5439453125, 7.6907320022583))
		{
			if(PlayerInfo[playerid][pMember]==8)
			{
				SetTimer("OpenHit", 1000, false);
			}
		}
		if(PlayerToPoint(5.0, playerid, -1759.91,985.88,20.72))
		{
			SetVehiclePos(GetPlayerVehicleID(playerid),2351.67,-654.50,127.73);
		}
		if(PlayerToPoint(5.0, playerid, 2351.67,-654.50,127.73))
		{
			SetVehiclePos(GetPlayerVehicleID(playerid),-1759.91,985.88,20.72);
		}

//========================하이카 튜닝장 입장 시키는 곳=========================
if(newkeys == KEY_CROUCH)  //
{
if (IsPlayerInRangeOfPoint(playerid,3,1911.4087,-1764.7950,13.3828)) // 튜닝장을 입장시키는 좌표
{
if(IsPlayerInAnyVehicle(playerid) == 1)  //플레이어가 차를 탔을떄
{//GetPlayerVehicleID (차량번호)
SetVehiclePos(GetPlayerVehicleID(playerid),1911.4087,-1764.7950,13.3828);  //튜닝장
SetPlayerInterior(playerid,0);
}
else
{
SetPlayerPos(playerid,1911.4087,-1764.7950,13.3828); // 튜닝장
SetPlayerInterior(playerid,0);
}
}
if (IsPlayerInRangeOfPoint(playerid,3,1922.4087,-1764.7950,13.3828)) // 튜닝장
{
if(IsPlayerInAnyVehicle(playerid) == 1)
{
			//Hospital exit
SetPlayerInterior(playerid,0);
SetVehiclePos(GetPlayerVehicleID(playerid),1911.4087,-1764.7950,13.3828);  //튜닝장에서 나올 좌표
}
else
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,1911.4087,-1764.7950,13.3828); // 튜닝장에서 나올 좌표
}
}
}

  //=======================================================================

		if(FBION[playerid] == 0)//fbi
		{
			if(PlayerToPoint(3.5, playerid,1829.0580,-1539.4557,13.3828))
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1819.5684,-1536.8762,13.4015);
					SetVehicleZAngle(tmpcar, 83.7415);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
					SetPlayerPos(playerid,1819.5684,-1536.8762,13.4015);
				}
				FBION[playerid] = 1;
				SetTimerEx("FBION1", 1000, false, "i", playerid);
			}
			if(PlayerToPoint(3.5, playerid,1819.5684,-1536.8762,13.4015))
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1829.0580,-1539.4557,13.3828);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
					SetPlayerPos(playerid,1829.0580,-1539.4557,13.3828);
				}
				FBION[playerid] = 1;
				SetTimerEx("FBION1", 1000, false, "i", playerid);
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(IsACop(playerid))
			{
				if (PlayerToPoint(15, playerid,1544.700317,-1630.735717,13.096980))
				{
					DestroyObject( pdgate2 );
					pdgate3 = CreateObject(968,1544.700317,-1630.735717,12.924660,0.000000,0.000000,270.972869);
					SetTimer("GateClose5", 6000, 0);
				}
				if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
				{
					MoveObject(pdgate1,1599.053344,-1638.123168,14.122960, 1.5);
					SetTimer("GateClose", 12000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
					PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
				}
				else if(PlayerToPoint(20, playerid, 469.526,-1957.514,4.744))//mafia
				{
				MoveObject(ryehans,469.526,-1957.514,-10.730,3.5);
				SetTimer("ryehthansekedktlqkf", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 교도소의 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,344.778,1797.585,19.910))
				{
					MoveObject(rnsdls,344.778,1797.585,12.910, 2.2);
					SetTimer("rnsdlsClose", 7000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(15, playerid,96.676987, 1920.462036, 20.771591))
				{
					MoveObject(rnsdls2,96.676987, 1920.462036, 12.771591, 3.5);
					SetTimer("rnsdls2Close", 5000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
				else if(PlayerToPoint(3, playerid,252.6001,125.4915,1003.2188))
				{
					MoveObject(ccc,253.1469,128.7646,1003.2188, 3.5);
					SetTimer("tjans3Close", 5000, 0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
				}
				else if(PlayerToPoint(3, playerid,238.8492,124.9121,1003.2188))
				{
					MoveObject(ddd,239.5934,128.3069,1003.2188, 3.5);
					SetTimer("tjans4Close", 5000, 0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 문이 열렸습니다");
				}
			}
			else if(PlayerInfo[playerid][pJob] != 20)
			{
				if(PlayerToPoint(10, playerid,923.502,-1226.253,17.651))
				{
					MoveObject(taxi,923.502,-1240.253,17.651,3.5);
					MoveObject(taxi2,923.960,-1205.359,17.651,3.5);
					SetTimer("taxiClose", 5000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), " %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
			else if(PlayerToPoint(15, playerid,785.955,-1151.830,26.597))//닫은거
			{
				MoveObject(Test1,785.955,-1151.830,16.597, 3.5);//연겨
				SetTimer("Test1Close", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			else if(PlayerToPoint(15, playerid,665.361,-1311.114,16.460))//닫은거
			{
				MoveObject(Test2,665.361,-1311.114,8.210, 3.5);//연거
				SetTimer("Test2Close", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			else if(PlayerToPoint(15, playerid,659.946,-1225.762,19.093))
			{
				MoveObject(Test3,659.946,-1225.762,10.343, 3.5);
				SetTimer("Test3Close", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}
			else if(PlayerToPoint(15, playerid,1287.977,-1006.129,31.493))//닫은거
			{
				MoveObject(glxmaos,1287.977,-1006.129,27.243, 3.5);//열은거
				SetTimer("glxmaosClose", 5000, 0);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
				ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			}

			else if(PlayerInfo[playerid][pMember] == 6)
			{
				if(PlayerToPoint(10, playerid,1245.544,-767.168,93.218))
				{
					MoveObject(Mapia1,1245.597,-767.388,88.319,3.5);
					SetTimer("Mapia1Close", 5000, 0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 경적을 이용하여 문을 엽니다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
		}
	}
	if(newkeys == KEY_JUMP || newkeys == KEY_JUMP+KEY_SPRINT)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			Hopping[playerid]++;
			if(Hopping[playerid] >= 4)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
    			format(string, sizeof(string), "(관리자알림) 플레이어 : %s님이 버닝합핑을 합니다. ", sendername, PlayerInfo[playerid][pAdmin]);
				Hopping[playerid] = 0;
			}
		}
	}
	if(newkeys == KEY_ENTER)
	{

	if (PlayerToPoint(3.0, playerid,1468.1189,-1558.3823,13.5547) || PlayerToPoint(3.0,playerid,1468.1451,-1555.9590,13.5547))
	{
	ShowPlayerDialog(playerid,2221,DIALOG_STYLE_LIST,"배팅할 금액을 정하세요","100$\n500$\n1000$","선택","취소");
	}

		new Float:cx, Float:cy, Float:cz;
		GetPlayerPos(playerid, cx, cy, cz);
		if(IsPlayerConnected(playerid))
		{
			for(new h=1; h<MAX_BUILDING; h++)
			{
				if(BuildingInfo[h][hCreated] != 0)
				{
					if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]) && BuildingInfo[h][hEnterW] == GetPlayerVirtualWorld(playerid))
					{
						if(BuildingInfo[h][hLocked] == 0)
						{
						    if(BuildingInfo[h][hType] == 2)
							{
							    if(GetMoney(playerid) < BuildingInfo[h][hRentPrice])
							    {
									SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 입장료가 부족하여 들어갈 수 없습니다.");
									return 1;
							    }
							   	BizzMoney(playerid, -BuildingInfo[h][hRentPrice]);
								format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 입장료로 %d%를 냈습니다.", BuildingInfo[h][hRentPrice]);
								SCM(playerid, COLOR_ERROR, string);
							}
							SetPlayerPos(playerid, BuildingInfo[h][hExitX], BuildingInfo[h][hExitY], BuildingInfo[h][hExitZ]);
							SetPlayerInterior(playerid, BuildingInfo[h][hExitI]);
							SetPlayerVirtualWorld(playerid, BuildingInfo[h][hExitW]);
						}
						else
						{
							SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 잠겨있습니다.");
						}
						return 1;
					}
					else if(PlayerToPoint(2.0, playerid, BuildingInfo[h][hExitX], BuildingInfo[h][hExitY], BuildingInfo[h][hExitZ])&& BuildingInfo[h][hExitW] == GetPlayerVirtualWorld(playerid))
					{
						SetPlayerPos(playerid, BuildingInfo[h][hEnterX], BuildingInfo[h][hEnterY], BuildingInfo[h][hEnterZ]);
						SetPlayerInterior(playerid, BuildingInfo[h][hEnterI]);
						SetPlayerVirtualWorld(playerid, BuildingInfo[h][hEnterW]);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								SCM(playerid, COLOR_ADMIN, "잠김");
								return 1;
							}
							GiveMoney(playerid, -SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetMoney(playerid);
							SBizzInfo[i][sbProducts]--;
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s payed $%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							PayLog(string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			if(IsPlayerConnected(playerid))
			{

				new carid = GetPlayerVehicleID(playerid);
				if(IsAHarvest(carid))
				{
					if (carid != 0)
					{
						SetVehicleToRespawn(carid);
					}
					if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
					{
						FarmerPickup[playerid][0]--;
					}
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					FarmerVar[playerid] = 0;
					DisablePlayerCheckpoint(playerid);

				}
				if(IsPlayerInAnyVehicle(playerid) && !CarInfo[GetPlayerVehicleID(playerid)][cStarted] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
				}
				if(GetPlayerVehicleID(playerid) >= 112 && GetPlayerVehicleID(playerid) <= 130 || GetPlayerVehicleID(playerid) >= 135 && GetPlayerVehicleID(playerid) <= 154)
				{
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
				}
				else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,2195.8628,1677.2677,12.3672);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
				}
				else if (PlayerToPoint(6.0, playerid,-1404.5299,-259.0602,1043.6563))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
				}
				else if (PlayerToPoint(8.0, playerid,-1443.0554,-581.1879,1055.0472))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
				}
				else if (PlayerToPoint(8.0, playerid,-1464.7732,1557.5533,1052.5313))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
				}
				else if(NoFuel[playerid] == 1)
				{
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					NoFuel[playerid] = 0;
				}
			}
			if (PlayerToPoint(3.0, playerid,2695.6235,-1704.6960,11.8438))
			{
				GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
				SetPlayerInterior(playerid,7);
				PlayerInfo[playerid][pInt] = 7;
				SetPlayerPos(playerid,-1404.5299,-259.0602,1043.6563);
			}
			else if (PlayerToPoint(8.0, playerid,-2111.5686,-443.9720,38.7344))
			{
				GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
				SetPlayerInterior(playerid,4);
				PlayerInfo[playerid][pInt] = 4;
				SetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
			}
			else if (PlayerToPoint(8.0, playerid,-2080.3079,-406.0309,38.7344))
			{
				GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
				SetPlayerInterior(playerid,14);
				PlayerInfo[playerid][pInt] = 14;
				SetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
			}
		}
		if(PlayerToPointStripped(1, playerid,222.7892,1931.3868,17.6406, cx,cy,cz))
		{//군대 헬기착륙장 입장
			GameTextForPlayer(playerid, "~w~Teleport", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,222.3788,1933.1284,23.2422);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pInt] = 10;
			SetPlayerFacingAngle(playerid, 0);
			BigBigLee(playerid);
		}
		//	else if(PlayerToPointStripped(1, playerid,246.5325,62.4251,1003.6406, cx,cy,cz))
		else if(PlayerToPointStripped(1, playerid,222.3788,1933.1284,23.2422, cx,cy,cz))
		{//군대 헬기착륙장 퇴장
			GameTextForPlayer(playerid, "~w~Teleport", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,222.7892,1931.3868,17.6406);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerFacingAngle(playerid, 90);
		}
		if(PlayerToPointStripped(1, playerid,1565.0088,-1684.4321,28.3956, cx,cy,cz))
		{//경찰서옥상 입장
			GameTextForPlayer(playerid, "~w~Police Department", 5000, 1);
			SetPlayerInterior(playerid, 10);
			SetPlayerPos(playerid,1554.3844,-1687.8615,66.3586);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pInt] = 10;
			SetPlayerFacingAngle(playerid, 0);
			BigBigLee(playerid);
		}
		if(PlayerToPointStripped(1, playerid,2290.1050,2431.0547,10.8203, cx,cy,cz))
		{//경찰서 입장
			GameTextForPlayer(playerid, "~w~Police Department", 5000, 1);
			SetPlayerInterior(playerid, 10);
			SetPlayerPos(playerid,246.4079,107.6503,1003.2187);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pInt] = 10;
			SetPlayerFacingAngle(playerid, 0);
			BigBigLee(playerid);
		}
		else if(PlayerToPointStripped(1, playerid,246.4079,107.6503,1003.2187, cx,cy,cz))
		{//경찰서 퇴장
			GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2290.1050,2431.0547,10.8203);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerFacingAngle(playerid, 90);
		}
		if(PlayerToPointStripped(1, playerid,218.5542,113.5857,999.0156, cx,cy,cz))
		{//감옥입장
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
				if(PlayerInfo[playerid][pJailTime]==0)
				{
					SetPlayerInterior(playerid, 10);
					SetPlayerPos(playerid,218.8001,111.7257,999.0156);
					SetCameraBehindPlayer(playerid);
					PlayerInfo[playerid][pInt] = 10;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 감옥문을 열고 들어간다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
		}

		else if(PlayerToPointStripped(1, playerid,218.8001,111.7257,999.0156, cx,cy,cz))
		{//감옥나옴
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
				if(PlayerInfo[playerid][pJailTime]==0)
				{
					SetPlayerInterior(playerid, 10);
					SetPlayerPos(playerid,218.5542,113.5857,999.0156);
					SetCameraBehindPlayer(playerid);
					PlayerInfo[playerid][pInt] = 10;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s 감옥문을 열고 나온다", RPPlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				}
			}
		}

		else if (PlayerToPointStripped(1.0, playerid,488.2531,-82.7632,998.7578, cx,cy,cz))
		{
			//Misty/10 Green Toilets
			SetPlayerPos(playerid,2277.5942,-1139.8883,1050.8984);
			GameTextForPlayer(playerid, "~w~Restroom", 5000, 3);
			SetPlayerInterior(playerid,11);
			PlayerInfo[playerid][pInt] = 11;
		}
		else if (PlayerToPointStripped(2.0, playerid,2280.0476,-1139.5413,1050.8984, cx,cy,cz))
		{
			//Misty/10 Green Toilets
			SetPlayerPos(playerid,490.9059,-81.4256,998.7578);
			GameTextForPlayer(playerid, "~w~Ten Green Bottles", 5000, 3);
			SetPlayerInterior(playerid,11);
			PlayerInfo[playerid][pInt] = 11;
		}
		else if(PlayerToPointStripped(1, playerid,2347.9897,2261.7397,8.1478, cx,cy,cz))
		{//Binco next to 10 green
			GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 (/옷)을 장만해 보십시오. (/옷도움말)");
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/악세사리)를 치장해 보십시오.");
			SetPlayerInterior(playerid, 15);
			SetPlayerPos(playerid,207.5917,-111.1775,1005.1328);
			PlayerInfo[playerid][pInt] = 15;
		}
		else if(PlayerToPointStripped(1, playerid,207.7662,-111.2663,1005.1328, cx,cy,cz))
		{//Some teleports are fucked up but they are working
			GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2347.9897,2261.7397,8.1478);
			OnPlayerExitFood(playerid); // ?
			PlayerInfo[playerid][pInt] = 0;
		}
		else if(PlayerToPointStripped(1, playerid,2419.9941,-1509.5865,24.0000, cx,cy,cz))
		{//Cluckin Bell near pigpen
			OnPlayerEnterFood(playerid, 1);
		}
		else if(PlayerToPointStripped(1, playerid,364.0594,-11.7518,1001.8516, cx,cy,cz))
		{//Some teleports are fucked up but they are working
			if(GetPlayerVirtualWorld(playerid) == 0)
			{
				GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2423.8145,-1510.2896,23.9922);
				PlayerInfo[playerid][pInt] = 0;
			}//cluckin bell near 10 green
			else if(GetPlayerVirtualWorld(playerid) == 2)
			{
				GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2398.5508,-1894.6324,13.3828);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pVirWorld] = 0;
				PlayerInfo[playerid][pInt] = 0;
			}//cluckin bell marina
			else if(GetPlayerVirtualWorld(playerid) == 1)
			{
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pVirWorld] = 0;
				GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,923.8998,-1352.9694,13.3768);
				PlayerInfo[playerid][pInt] = 0;
			}
			OnPlayerExitFood(playerid); // ?
			return 1;
		}
		else if(PlayerToPointStripped(1, playerid,2398.6240,-1899.2014,13.5469, cx,cy,cz))
		{//Cluckin Bell near 10 green
			SetPlayerVirtualWorld(playerid, 2);
			PlayerInfo[playerid][pVirWorld] = 2;
			OnPlayerEnterFood(playerid, 1);
		}
		else if(PlayerToPointStripped(1, playerid,810.4849,-1616.2451,13.5469, cx,cy,cz))
		{//Marina Burger shot
			OnPlayerEnterFood(playerid, 2);
		}
		else if(PlayerToPointStripped(1, playerid,227.5614,-7.3146,1002.2109, cx,cy,cz))
		{//Some teleports are fucked up but they are working
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVirWorld] = 0;
			GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,454.5949,-1500.6449,30.8821);
			OnPlayerExitFood(playerid); // ?
			PlayerInfo[playerid][pInt] = 0;
		}
		else if(PlayerToPointStripped(1, playerid,2755.9546,2476.6213,11.0625, cx,cy,cz))
		{//Pizzaboy
			OnPlayerEnterFood(playerid, 3);
		}
		else if(PlayerToPointStripped(1, playerid,203.5140,-202.2578,1.5781, cx,cy,cz))
		{//Pizzaboy
			SetPlayerVirtualWorld(playerid, 2);
			PlayerInfo[playerid][pVirWorld] = 2;
			OnPlayerEnterFood(playerid, 3);
		}
		else if(PlayerToPointStripped(1, playerid,372.3847,-133.5248,1001.4922, cx,cy,cz))
		{//Some teleports are fucked up but they are working
			if(GetPlayerVirtualWorld(playerid) == 2)
			{
				GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,203.2209,-204.6613,1.5781);
				OnPlayerExitFood(playerid); // ?
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pVirWorld] = 0;
			}
			else
			{
				GameTextForPlayer(playerid, "~r~Las Venturas", 5000, 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2756.0925,2476.3201,11.0625);
				OnPlayerExitFood(playerid); // ?
				PlayerInfo[playerid][pInt] = 0;
			}
		}
		else if(PlayerToPointStripped(1, playerid,2755.9546,2476.6213,11.0625, cx,cy,cz))
		{//Pizzaboy
			OnPlayerEnterFood(playerid, 3);
		}
		else if (PlayerToPointStripped(1, playerid,914.37,-1004.63,37.98, cx,cy,cz))
		{
			//FBI Enter
			SetPlayerPos(playerid, 1607.5199,1815.9969,10.8203);
			GameTextForPlayer(playerid, "~w~FBI Department",5000,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 3;
		}
		else if (PlayerToPointStripped(1, playerid,1607.5199,1815.9969,10.8203, cx,cy,cz))
		{
			//FBI Exit
			SetPlayerPos(playerid, 914.37,-1004.63,37.98);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(1, playerid,288.9163,168.1715,1007.1719, cx,cy,cz))
		{
			//FBI 옥상 입장
			SetPlayerPos(playerid, 913.3898,-1021.0915,111.0547);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(1, playerid,913.3898,-1021.0915,111.0547, cx,cy,cz))
		{
			//FBI 옥상 퇴장
			SetPlayerPos(playerid, 288.9163,168.1715,1007.1719);
			GameTextForPlayer(playerid, "~w~FBI Department",5000,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 3;
		}
				//=====================================경찰서옥상입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid, 1554.4288,-1687.6863,66.3594, cx,cy,cz))
		{
			//Hospital enter
			GameTextForPlayer(playerid, "Las Venturas Role Playig",1000,3);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1524.5020,-1677.7605,6.2188);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1524.5020,-1677.7605,6.2188, cx,cy,cz))
		{
			//Hospital exit
		  	GameTextForPlayer(playerid, "Las Venturas Role Playig",1000,3);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1554.4288,-1687.6863,66.3594);
		}
		//=====================================도구점입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid, 2441.5891,1722.4738,10.8203, cx,cy,cz))
		{
			//Hospital enter
			GameTextForPlayer(playerid, "Las Venturas Role Playig",1000,3);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1769.6172,-1806.1266,772.1852);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1769.6172,-1806.1266,772.1852, cx,cy,cz))
		{
			//Hospital exit
		  	GameTextForPlayer(playerid, "Las Venturas Role Playig",1000,3);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2441.5891,1722.4738,10.8203);
		}
		//=====================================사진촬영소입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid, 2336.1714,1730.3538,10.8203, cx,cy,cz))
		{
			//Hospital enter
			GameTextForPlayer(playerid, "Las Venturas Role Playig",1000,3);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2309.9866,2437.2969,292.6550);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 2309.9866,2437.2969,292.6550, cx,cy,cz))
		{
			//Hospital exit
		  	GameTextForPlayer(playerid, "Las Venturas Role Playig",1000,3);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2336.1714,1730.3538,10.8203);
		}
			//=====================================대학교 입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid, 2238.1003,1285.5392,10.8203, cx,cy,cz))
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2328.1426,1986.6284,-35.7584);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 2328.1426,1986.6284,-35.7584, cx,cy,cz))
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2238.1003,1285.5392,10.8203);
		}
				//======================================빈민가 아파트 옥상 입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid,1903.4196,-1557.5585,-38.6750, cx,cy,cz))
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1852.8533,-1586.7365,29.0469);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1852.8533,-1586.7365,29.0469, cx,cy,cz))
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1903.4196,-1557.5585,-38.6750);
		}
		//==========================================주유소집입장퇴장--------------
		else if (PlayerToPointStripped(2, playerid, 772.3358,-4.3687,1000.7291, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1550.8905,-1836.2195,207.8976);//나옴
		}
		////////////
				else if (PlayerToPointStripped(1, playerid, 1924.9641,-1772.3605,18.7052, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1911.5024,-1782.5251,465.1537);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1911.3960,-1782.3195,465.1537, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1924.9641,-1772.3605,18.7052);//나옴
		}
// 방송국
		else if (PlayerToPointStripped(1, playerid,1951.9427,1342.9354,15.3746, cx,cy,cz))
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1850.5642,-1349.2391,-89.4604);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1850.5642,-1349.2391,-89.4604, cx,cy,cz))
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1951.9427,1342.9354,15.3746);
		}
		//=================================대학교입장퇴장.==========--------------
				else if (PlayerToPointStripped(1, playerid, 1173.1067,-1323.1831,15.3963, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1359.6204,-1834.5201,867.6764);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1359.6204,-1834.5201,867.6764, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1173.1067,-1323.1831,15.3963);//나옴
		}
		//=================================감시장입장퇴장.==========--------------
		else if (PlayerToPointStripped(1, playerid, -2901.4946,-2632.6846,4.1158, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, -2901.5732,-2631.0750,4.2717);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, -2901.5732,-2631.0750,4.2717, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -2901.4946,-2632.6846,4.1158);//나옴
		}
				//=================================교도소입장퇴장.==========--------------
		else if (PlayerToPointStripped(1, playerid, -2773.6501,-2614.5869,1.2454, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, -2884.5510,-2628.5151,1.4476);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, -2884.5510,-2628.5151,1.4476, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -2773.6501,-2614.5869,1.2454);//나옴
		}
		//=================================교도소내부안퇴장.==========--------------
		else if (PlayerToPointStripped(1, playerid, -3003.9829,-2639.0042,15.2000, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, -2457.1096,-2419.8159,-42.0984);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, -2457.1096,-2419.8159,-42.0984, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -3003.9829,-2639.0042,15.2000);//나옴
		}
		//=================================교도소수용소입퇴장.==========--------------
				else if (PlayerToPointStripped(1, playerid, -3000.2668,-2609.5378,15.2000, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2058.9722,-2334.3193,8539.4199);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 2058.9722,-2334.3193,8539.4199, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -3000.2668,-2609.5378,15.2000);//나옴
		}
  		//=================================CNN옥상입장퇴장.==========--------------
				else if (PlayerToPointStripped(1, playerid, 1827.3090,-1364.3900,-89.4604, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1915.8910,1377.1426,24.7188);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1915.8910,1377.1426,24.7188, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1827.3090,-1364.3900,-89.4604);//나옴
		}
		  //=================================체육관2입장퇴장.==========--------------
		else if (PlayerToPointStripped(1, playerid, 1550.1035,-1810.5482,207.8976, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1449.3732,-1836.0823,297.1156);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1449.3732,-1836.0823,297.1156, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1550.1035,-1810.5482,207.8976);//나옴
		}
				  //=================================체육관2입장퇴장.==========--------------
				else if (PlayerToPointStripped(1, playerid, 1765.1221,-2272.1482,26.7960, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1766.2572,-2296.0698,-2.5837);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1766.2572,-2296.0698,-2.5837, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 1765.1221,-2272.1482,26.7960);//나옴
		}
		//==========================================교회 입장퇴장=====================================
			else if (PlayerToPointStripped(1, playerid,2233.9802,-1333.2562,23.9816, cx,cy,cz))
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 2283.9487,-1325.0078,-22.6091);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 2283.9487,-1325.0078,-22.6091, cx,cy,cz))
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2233.9802,-1333.2562,23.9816);
		}
		//==========================================릴리 도박장===================================
		else if (PlayerToPointStripped(1, playerid,2162.3706,2169.4512,10.8203, cx,cy,cz))
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 1476.8562,-1544.4745,13.5547);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 1476.8562,-1544.4745,13.5547, cx,cy,cz))
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2162.3706,2169.4512,10.8203);
		}
		//======================================병원 옥상 입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid,-36.2034,-1379.4122,863.7109, cx,cy,cz))
		{
			//Hospital enter
			SetPlayerPos(playerid, 2080.2363,2379.7473,60.8169);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, 2080.2363,2379.7473,60.8169, cx,cy,cz))
		{
			//Hospital exit
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, -36.2034,-1379.4122,863.7109);
			SetTimerEx("dlqwkd", 4000, false, "i", playerid);
		}
		//=================================emt입장퇴장.==========--------------
				else if (PlayerToPointStripped(1, playerid, 2127.3735,2379.5562,10.8203, cx,cy,cz))//F누름
		{
			//Hospital enter
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, -20.8989,-1359.2627,846.2500);//들어감
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 1;
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
			BigBigLee(playerid);
		}
		else if (PlayerToPointStripped(2, playerid, -20.8989,-1359.2627,846.2500, cx,cy,cz))//F누름
		{
			//Hospital exit
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, 2127.3735,2379.5562,10.8203);//나옴
		}
		//======================================제퍼슨 모텔 입장퇴장======================================
		else if (PlayerToPointStripped(1, playerid,2228.0364,-1150.5570,1025.7969, cx,cy,cz))
		{
			//Jefferson Hotel enter
			SetPlayerPos(playerid, 2015.1666,1106.4825,10.8203);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(2, playerid, 2015.1666,1106.4825,10.8203, cx,cy,cz))
		{
			SetPlayerInterior(playerid,15); //Jefferson Hotel exit
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerPos(playerid, 2228.0364,-1150.5570,1025.7969);
		}
		//=============================================================================
		else if (PlayerToPointStripped(1, playerid,2472.7322,2034.4108,11.0625, cx,cy,cz))
		{
			//Jim's sticky ring
			OnPlayerEnterFood(playerid, 4);
		}
		else if (PlayerToPointStripped(1, playerid,377.1724,-193.3045,1000.6328, cx,cy,cz))
		{
			//Jim's sticky ring
			SetPlayerPos(playerid, 1038.5148,-1338.0944,13.7266);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			OnPlayerExitFood(playerid);
		}
		else if (PlayerToPointStripped(2, playerid,1928.5973,-1776.3507,13.5469, cx,cy,cz))
		{
			SetPlayerPos(playerid, -25.1326,-139.0670,1003.5469);
			GameTextForPlayer(playerid, "~w~Welcome to the ~r~24-7",5000,3);
			SetPlayerInterior(playerid,16);
			PlayerInfo[playerid][pInt] = 16;
			SetPlayerVirtualWorld(playerid,1);
		}
		else if (PlayerToPointStripped(2, playerid,-25.1326,-139.0670,1003.5469, cx,cy,cz))
		{
			//하이모터스 출구
			SetPlayerPos(playerid, 1928.5973,-1776.3507,13.5469);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid,0);
		}
		else if (PlayerToPointStripped(1, playerid,1259.3800,-785.4168,92.0302, cx,cy,cz))
		{
			// 마피아 정문 입구
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
				SetPlayerPos(playerid, 1298.7418,-796.6680,1084.0078);
				GameTextForPlayer(playerid, "~w~Corleone Family HQ",5000,1);
				SetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 181);
				PlayerInfo[playerid][pInt] = 5;
			}
			else if(hqlock[luclock] == 0)
			{
				SetPlayerPos(playerid, 1298.7418,-796.6680,1084.0078);
				GameTextForPlayer(playerid, "~w~Corleone Family HQ",5000,1);
				SetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 181);
				PlayerInfo[playerid][pInt] = 5;
			}
			else
			{
				GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (PlayerToPointStripped(1, playerid,1298.7418,-796.6680,1084.0078, cx,cy,cz))
		{
			//마피아 정문 출구
			SetPlayerPos(playerid, 1259.3800,-785.4168,92.0302);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(1, playerid, 1298.4904,-799.2625,84.1406, cx,cy,cz))
		{
			//마피아 후문 입구
			SetPlayerPos(playerid, 1260.9357,-785.3089,1091.9063);
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pInt] = 5;
		}
		else if (PlayerToPointStripped(1, playerid, 1260.9357,-785.3089,1091.9063, cx,cy,cz))
		{
			//마피아 후문 출구
			SetPlayerPos(playerid, 1298.4904,-799.2625,84.1406);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPoint(2.0, playerid,2474.4353,1023.4624,10.8203))
		{
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2305.3706,-16.1834,26.7496);
			GameTextForPlayer(playerid, "~w~ in the bank", 5000, 1);
		}
		else if (PlayerToPoint(2.0, playerid,2305.3706,-16.1834,26.7496))
		{
			PlayerPlaySound(playerid,1145, 0.0, 0.0, 0.0);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2474.4353,1023.4624,10.8203);
			GameTextForPlayer(playerid, "~r~ Las Venturas", 5000, 1);
		}
		else if (PlayerToPointStripped(1, playerid, 725.3624,-1276.2256,13.6484, cx,cy,cz))
		{
			// 야쿠자 입장
			if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			{
				SetPlayerPos(playerid,	-2158.6865,643.1420,1052.3750);
				GameTextForPlayer(playerid, "~w~Yamaguchi HQ",5000,1);
				SetPlayerInterior(playerid,1);
				SetPlayerFacingAngle(playerid, 181);
				PlayerInfo[playerid][pInt] = 1;
			}
			else if(hqlock[guclock] == 0)
			{
				SetPlayerPos(playerid, -2158.6865,643.1420,1052.3750);
				GameTextForPlayer(playerid, "~w~Yamaguchi HQ",5000,1);
				SetPlayerInterior(playerid,1);
				SetPlayerFacingAngle(playerid, 181);
				PlayerInfo[playerid][pInt] = 1;
			}
			else
			{
				GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (PlayerToPointStripped(1, playerid,-2158.6865,643.1420,1052.3750, cx,cy,cz))
		{
			// 야쿠자 퇴장
			SetPlayerPos(playerid, 725.3624,-1276.2256,13.6484);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 1);
			PlayerInfo[playerid][pInt] = 0;
		}
		//==============================================================================*/
		else if (PlayerToPointStripped(3, playerid,2495.2979,-1690.7942,14.7656, cx,cy,cz))
		{
			//Seville boulevard gang hq
			if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
				SetPlayerPos(playerid, 2496.0500,-1692.9301,1014.7422);
				GameTextForPlayer(playerid, "~w~Seville boulevard HQ",5000,1);
				SetPlayerInterior(playerid,3);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(hqlock[iolock] == 0)
			{
				SetPlayerPos(playerid, 2496.0500,-1692.9301,1014.7422);
				GameTextForPlayer(playerid, "~w~Seville boulevard HQ",5000,1);
				SetPlayerInterior(playerid,3);
				PlayerInfo[playerid][pInt] = 3;
			}
			else
			{
				GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (PlayerToPointStripped(3, playerid,2496.0500,-1692.9301,1014.7422, cx,cy,cz))
		{
			//Seville boulevard gang hq
			SetPlayerPos(playerid, 2495.2979,-1690.7942,14.7656);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(1, playerid,1828.1594,-1980.4380,13.5469, cx,cy,cz))
		{
			//Locotes HQ
			if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
			{
				SetPlayerPos(playerid, 2351.0479,-1180.8905,1027.9766);
				GameTextForPlayer(playerid, "~w~Los Locotes 13 HQ",5000,1);
				SetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 90);
				PlayerInfo[playerid][pInt] = 5;
			}
			else if(hqlock[surlock] == 0)
			{
				SetPlayerPos(playerid, 2351.0479,-1180.8905,1027.9766);
				GameTextForPlayer(playerid, "~w~Los Locotes 13 HQ",5000,1);
				SetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 90);
				PlayerInfo[playerid][pInt] = 5;
			}
			else
			{
				GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (PlayerToPointStripped(1, playerid,2352.9187,-1180.9679,1027.9766, cx,cy,cz))
		{
			//Locotes HQ
			SetPlayerPos(playerid, 1830.1904,-1983.0223,13.5469);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 179);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(1, playerid,2196.5688,1677.2721,12.3672, cx,cy,cz))
		{
			//City hall
			SetPlayerPos(playerid, 386.2978,173.8582,1008.3828);
			GameTextForPlayer(playerid, "~w~City Hall",5000,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 3;
		}
		else if (PlayerToPointStripped(1, playerid,390.0630,173.5741,1008.3828, cx,cy,cz))
		{
			//City hall
			SetPlayerPos(playerid, 1481.0206,-1769.5138,18.7958);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(2, playerid, 363.1294,-75.0258,1001.5078, cx,cy,cz))
		{
			// 버거샷 퇴장
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 811.3270,-1615.9019,13.5469);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
		}//256.5834,1801.9204,7.5314
		else if (PlayerToPoint(4.0, playerid,202.4471,1923.2218,17.6406))//군기지 입장
		{
			GameTextForPlayer(playerid, "~w~Army",5000,1);
			SetPlayerFacingAngle(playerid, 270);
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,316.1937,-170.2951,999.5938);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
		}
		else if (PlayerToPoint(4.0, playerid,316.1937,-170.2951,999.5938))//군기지 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 180);
			SetPlayerPos(playerid,202.4471,1923.2218,17.6406);
			GameTextForPlayer(playerid, "~w~ Las Bagarchuras", 5000, 1);
		}

 ///--------잉잉
 		else if (PlayerToPoint(4.0, playerid,256.5834,1801.9204,7.5314))//군기지 입장
		{
			GameTextForPlayer(playerid, "~R~NGA",5000,1);
			SetPlayerFacingAngle(playerid, 270);
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1051.9325,-346.0721,73.9922);
			SetPlayerFreeze(playerid, true, 1);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("dlqwkd", 1000, false, "i", playerid);
		}
		else if (PlayerToPoint(4.0, playerid,1051.9325,-346.0721,73.9922))//군기지 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 180);
			SetPlayerPos(playerid,256.5834,1801.9204,7.5314);
			GameTextForPlayer(playerid, "~R~ NCA", 5000, 1);
		}
 ///--------뭐요?
		else if (PlayerToPoint(4.0, playerid, 1965.8329,1623.0983,12.8628))// 클럽 입장
		{
			SetPlayerInterior(playerid,17);
			SetPlayerPos(playerid,493.3910,-22.7228,1000.6797);
		}
		else if (PlayerToPoint(4.0, playerid,493.3910,-22.7228,1000.6797))// 클럽 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1965.8329,1623.0983,12.8628);
		}
		else if (PlayerToPoint(4.0, playerid, 816.0797,-1386.8807,13.6081))// 재즈바 입장
		{
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,-2637.4500,1404.6300,906.4609);
		}
		else if (PlayerToPoint(4.0, playerid,-2637.4500,1404.6300,906.4609))// 재즈바 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 816.0797,-1386.8807,13.6081);
		}
		else if (PlayerToPoint(4.0, playerid, 2452.3806,2064.4331,10.8203))// 편의점1 입장
		{
			SetPlayerInterior(playerid,18);
			SetPlayerPos(playerid, -31.0119,-91.2845,1003.5469);
		}
		else if (PlayerToPoint(4.0, playerid, -31.0119,-91.2845,1003.5469))// 편의점1 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 2452.3806,2064.4331,10.8203);
		}
		else if (PlayerToPoint(4.0, playerid, 1937.2456,2307.2346,10.8203))// 편의점2 입장
		{
			SetPlayerInterior(playerid, 10);
			SetPlayerPos(playerid, 6.0753,-30.7809,1003.5494);
		}
		else if (PlayerToPoint(4.0, playerid, 6.0753,-30.7809,1003.5494))// 편의점2 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1937.2456,2307.2346,10.8203);
		}
		else if (PlayerToPoint(4.0, playerid, 1570.4733,-1334.1598,16.4844))// 스타타워 입장
		{

			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1548.7168,-1363.7445,326.2183);
		}
		else if (PlayerToPoint(4.0, playerid, 1548.7168,-1363.7445,326.2183))// 스타타워 퇴장
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1570.4733,-1334.1598,16.4844);
		}
		else if (PlayerToPointStripped(1, playerid,2045.3928,-1908.0372,13.5469, cx,cy,cz))
		{
			//DMW
			SetPlayerPos(playerid, 1494.6207,1305.2336,1093.2891);
			GameTextForPlayer(playerid, "~w~License center",5000,1);
			SetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
			PlayerInfo[playerid][pInt] = 3;
		}
		else if (PlayerToPointStripped(1, playerid,1494.2778,1303.7288,1093.2891, cx,cy,cz))
		{
			//DMW Exit
			SetPlayerPos(playerid, 2046.8928,-1908.0372,13.5469);
			GameTextForPlayer(playerid, "~r~Las Venturas",5000,1);
			SetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 280);
			PlayerInfo[playerid][pInt] = 0;
		}
		else if (PlayerToPointStripped(1, playerid,1524.5724,-1677.8043,6.2188, cx,cy,cz))
		{
			//PD Elevator
			if(IsACop(playerid))
			{
				SetPlayerPos(playerid, 1554.3844,-1687.8615,66.3586);
				GameTextForPlayer(playerid, "~w~Police Department",5000,1);
				SetPlayerInterior(playerid,10);
				SetPlayerFacingAngle(playerid, 180);
				SetCameraBehindPlayer(playerid);
				PlayerInfo[playerid][pInt] = 10;
				return 1;
			}
		}
		else if (PlayerToPointStripped(1, playerid,1557.7257,-1675.2711,28.3955, cx,cy,cz))
		{
			//PD Elevator
			if(!IsACop(playerid))
			{
				SetPlayerPos(playerid, 1554.3844,-1687.8615,66.3586);
				GameTextForPlayer(playerid, "~w~Police Department",5000,1);
				SetPlayerInterior(playerid,10);
				SetPlayerFacingAngle(playerid, 180);
				SetCameraBehindPlayer(playerid);
				PlayerInfo[playerid][pInt] = 10;
				return 1;
			}
		}
		else if (PlayerToPointStripped(1, playerid,1788.5699,-1551.9956,38.9693, cx,cy,cz))
		{
			SetPlayerPos(playerid, 282.2200,173.9600,1007.1700);
			GameTextForPlayer(playerid, "~w~FBI Headquarters",5000,1);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
		}
		if(PlayerToPoint(0.5,playerid,240.3513,115.0001,1003.2188))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 240.1958,115.4421,1003.2188);
					SetPlayerFacingAngle(playerid, 48.9404);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,240.7287,115.2029,1003.2188))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 240.2411,115.5352,1003.2188);
					SetPlayerFacingAngle(playerid, 62.7272);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,240.8475,115.6305,1003.2257))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 240.2051,115.7295,1003.2188);
					SetPlayerFacingAngle(playerid, 91.8675);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,240.7375,116.3406,1003.2257))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 240.2574,116.0462,1003.2188);
					SetPlayerFacingAngle(playerid, 125.7078);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,238.8967,116.4492,1003.2188))//경찰서 입장
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerFacingAngle(playerid, 182.0850);
				Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
				SetTimerEx("OpenPoliceDoor",1000,0,"i",playerid);
				SetTimerEx("PoliceDoor",4000,0,"i",playerid);
			}
		}
		if(PlayerToPoint(0.5,playerid,252.3086,111.8081,1003.2188))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 252.6229,111.4741,1003.2188);
					SetPlayerFacingAngle(playerid, 224.7877);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor1",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor1",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,252.2504,111.3035,1003.2188))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 252.5918,111.1950,1003.2188);
					SetPlayerFacingAngle(playerid, 252.3613);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor1",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor1",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,251.9858,110.6638,1003.2188))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 252.5245,110.8466,1003.2188);
					SetPlayerFacingAngle(playerid, 293.7217);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor1",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor1",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,252.4521,109.9175,1003.2188))//경찰서 입장
		{
			if(IsACop(playerid))
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPos(playerid, 252.6257,110.5595,1003.2188);
					SetPlayerFacingAngle(playerid, 334.4554);
					Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
					SetTimerEx("OpenPoliceDoor1",1000,0,"i",playerid);
					SetTimerEx("PoliceDoor1",4000,0,"i",playerid);
				}
			}
		}
		if(PlayerToPoint(0.5,playerid,253.9751,110.7630,1003.2257))//경찰서 입장
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerFacingAngle(playerid, 96.2777);
				Anim(playerid,"HEIST9","Use_SwipeCard",4.1,0,0,0,0,0);
				SetTimerEx("OpenPoliceDoor1",1000,0,"i",playerid);
				SetTimerEx("PoliceDoor1",4000,0,"i",playerid);
			}
		}
		if(PlayerToPoint(5,playerid, 2473.9734,997.7219,14.2725))// 체육관 입장
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerInterior(playerid,5);
				SetPlayerPos(playerid,2072.6543,2430.9849,312.1043);
			}
			return 1;
		}
		if(PlayerToPoint(5,playerid, 2072.6543,2430.9849,312.1043))// 체육관 퇴장
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2473.9734,997.7219,14.2725);
			}
			return 1;
		}
		if(PlayerToPoint(5,playerid, 2546.6387,1972.2493,10.8203))// 편의점 입장
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerInterior(playerid,6);
				SetPlayerPos(playerid, -27.2651,-57.4919,1003.5469);
			}
			return 1;
		}
		if(PlayerToPoint(5,playerid, -27.2651,-57.4919,1003.5469))// 편의점 퇴장
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid, 2546.6387,1972.2493,10.8203);
			}
			return 1;
		}
		if(PlayerToPoint(5,playerid,1795.2606,-1298.2279,13.3776))// 빌딩입장
		{
			if(PlayerInfo[playerid][pMember] == 8)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1824.6257,-1307.5884,71.2629);
					SetPlayerFreeze(playerid, true, 1);
					TogglePlayerControllable(playerid, 0);
					SetTimerEx("dlqwkd", 1000, false, "i", playerid);
				}
				return 1;
			}
		}
		if(PlayerToPoint(5,playerid,1824.6257,-1307.5884,71.2629))// 빌딩퇴장
		{
			if(PlayerInfo[playerid][pMember] == 8)
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1795.2606,-1298.2279,13.3776);
				}
				return 1;
			}
		}
		if(PlayerToPoint(3,playerid,1765.5975,-1365.5286,15.7578))// 방송국 옥상 입장
		{
			SetPlayerPos(playerid,1764.0188,-1360.6301,27.4141);
		}
		if(PlayerToPoint(3,playerid,1764.0188,-1360.6301,27.4141))// 옥상 퇴장
		{
			SetPlayerPos(playerid,1765.5975,-1365.5286,15.7578);
		}
		else if(PlayerToPoint(3, playerid,252.6001,125.4915,1003.2188))
		{
			if(!IsACop(playerid)) { }
			else
			{
				MoveObject(ccc,253.1469,128.7646,1003.2188, 3.5);
				SetTimer("tjans3Close", 5000, 0);
			}
		}
		else if(PlayerToPoint(3, playerid,238.8492,124.9121,1003.2188))
		{
			if(!IsACop(playerid)){}
			else
			{
				MoveObject(ddd,239.5934,128.3069,1003.2188, 3.5);
				SetTimer("tjans4Close", 5000, 0);
			}
		}
	}
	if(newkeys==KEY_FIRE)//Ctrl
	{
		if(AtSetting[playerid]!=0)
		{
			if(ToggleSetting[playerid]==1)
			{
			    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (-) 위치변경 토클 ON");
				ToggleSetting[playerid]=4;
			}else{
			    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (+) 위치변경 토클 ON");
				ToggleSetting[playerid]=1;
			}
		}
	}

	if(newkeys==KEY_JUMP)//shift
	{
		if(AtSetting[playerid]!=0)
		{
			if(ToggleSetting[playerid]==2)
			{
			    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (-) 각도변경 토클 ON");
				ToggleSetting[playerid]=5;
			}else{
			    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (+) 각도변경 토클 ON");
				ToggleSetting[playerid]=2;
			}
		}
	}

	if(newkeys==KEY_WALK)//Alt
	{
		if(AtSetting[playerid]!=0)
		{
			if(ToggleSetting[playerid]==3)
			{
			    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (-) 크기변경 토클 ON");
                ToggleSetting[playerid]=6;
			}else{
			    SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" (+) 크기변경 토클 ON");
			    ToggleSetting[playerid]=3;
			}
		}
	}

	if(newkeys==KEY_ANALOG_LEFT)//4
	{
		if(AtSetting[playerid]==1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 15.0, 2236.9570,2453.8735,10.6894))
			{
			SendClientMessage(playerid,COLOR_GREEN, " 경찰서  주차장문이 열렸습니다.");
			MoveObject(zstar9,2238.16, 2450.25, 9.54,4);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			}
            if(ToggleSetting[playerid]==1)
            {
 			    PlayerInfo[playerid][At1Pos1]+=0.02;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At1Rot1]+=1;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At1Scale1]+=0.05;
  			    PlayerInfo[playerid][At1Scale2]+=0.05;
 			    PlayerInfo[playerid][At1Scale3]+=0.05;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At1Pos1]+=-0.02;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At1Rot1]+=-1;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At1Scale1]+=-0.05;
  			    PlayerInfo[playerid][At1Scale2]+=-0.05;
 			    PlayerInfo[playerid][At1Scale3]+=-0.05;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
            }
		}

		if(AtSetting[playerid]==2)
		{
            if(ToggleSetting[playerid]==1)
            {
 			    PlayerInfo[playerid][At2Pos1]+=0.02;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At2Rot1]+=1;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At2Scale1]+=0.05;
  			    PlayerInfo[playerid][At2Scale2]+=0.05;
 			    PlayerInfo[playerid][At2Scale3]+=0.05;

		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At2Pos1]+=-0.02;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At2Rot1]+=-1;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At2Scale1]+=-0.05;
  			    PlayerInfo[playerid][At2Scale2]+=-0.05;
 			    PlayerInfo[playerid][At2Scale3]+=-0.05;

		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
            }
		}

		if(AtSetting[playerid]==3)
		{
            if(ToggleSetting[playerid]==1)
            {
 			    PlayerInfo[playerid][At3Pos1]+=0.02;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At3Rot1]+=1;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At3Scale1]+=0.05;
  			    PlayerInfo[playerid][At3Scale2]+=0.05;
 			    PlayerInfo[playerid][At3Scale3]+=0.05;

				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At3Pos1]+=-0.02;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At3Rot1]+=-1;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At3Scale1]+=-0.05;
  			    PlayerInfo[playerid][At3Scale2]+=-0.05;
 			    PlayerInfo[playerid][At3Scale3]+=-0.05;

				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);
            }
		}
		if(AtSetting[playerid]==4)
		{
            if(ToggleSetting[playerid]==1)
            {
 			    PlayerInfo[playerid][At4Pos1]+=0.02;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At4Rot1]+=1;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At4Scale1]+=0.05;
  			    PlayerInfo[playerid][At4Scale2]+=0.05;
 			    PlayerInfo[playerid][At4Scale3]+=0.05;

				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At4Pos1]+=-0.02;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At4Rot1]+=-1;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At4Scale1]+=-0.05;
  			    PlayerInfo[playerid][At4Scale2]+=-0.05;
 			    PlayerInfo[playerid][At4Scale3]+=-0.05;

				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
            }
		}
	}
	if(newkeys==KEY_ANALOG_RIGHT)//6
	{
		if(AtSetting[playerid]==1)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At1Pos2]+=0.02;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At1Rot2]+=1;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At1Scale1]+=0.05;
  			    PlayerInfo[playerid][At1Scale2]+=0.05;
 			    PlayerInfo[playerid][At1Scale3]+=0.05;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At1Pos2]+=-0.02;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At1Rot2]+=-1;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At1Scale1]+=-0.02;
  			    PlayerInfo[playerid][At1Scale2]+=-0.05;
 			    PlayerInfo[playerid][At1Scale3]+=-0.05;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
		}

		if(AtSetting[playerid]==2)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At2Pos2]+=0.02;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At2Rot2]+=1;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At2Scale1]+=0.05;
  			    PlayerInfo[playerid][At2Scale2]+=0.05;
 			    PlayerInfo[playerid][At2Scale3]+=0.05;

		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At2Pos2]+=-0.02;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At2Rot2]+=-1;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At2Scale1]+=-0.05;
  			    PlayerInfo[playerid][At2Scale2]+=-0.05;
 			    PlayerInfo[playerid][At2Scale3]+=-0.05;

		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
           }
		}

		if(AtSetting[playerid]==3)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At3Pos2]+=0.02;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At3Rot2]+=1;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At3Scale1]+=0.05;
  			    PlayerInfo[playerid][At3Scale2]+=0.05;
 			    PlayerInfo[playerid][At3Scale3]+=0.05;

				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At3Pos2]+=-0.02;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At3Rot2]+=-1;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At3Scale1]+=-0.05;
  			    PlayerInfo[playerid][At3Scale2]+=-0.05;
 			    PlayerInfo[playerid][At3Scale3]+=-0.05;

				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
		}
		if(AtSetting[playerid]==4)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At4Pos2]+=0.02;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
 			    PlayerInfo[playerid][At4Rot2]+=1;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At4Scale1]+=0.05;
  			    PlayerInfo[playerid][At4Scale2]+=0.05;
 			    PlayerInfo[playerid][At4Scale3]+=0.05;

				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At4Pos2]+=-0.02;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At4Rot2]+=-1;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At4Scale1]+=-0.05;
  			    PlayerInfo[playerid][At4Scale2]+=-0.05;
 			    PlayerInfo[playerid][At4Scale3]+=-0.05;

				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
            }
		}
	}

	if(newkeys==KEY_CROUCH)//c
	{
		if(AtSetting[playerid]==1)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At1Pos3]+=0.02;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
			    PlayerInfo[playerid][At1Rot3]+=1;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At1Scale1]+=0.05;
  			    PlayerInfo[playerid][At1Scale2]+=0.05;
 			    PlayerInfo[playerid][At1Scale3]+=0.05;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At1Pos3]+=-0.02;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At1Rot3]+=-1;
	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At1Scale1]+=-0.05;
  			    PlayerInfo[playerid][At1Scale2]+=-0.05;
 			    PlayerInfo[playerid][At1Scale3]+=-0.05;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);

            }
		}

		if(AtSetting[playerid]==2)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At2Pos3]+=0.02;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

          	}
            if(ToggleSetting[playerid]==2)
            {
			    PlayerInfo[playerid][At2Rot3]+=1;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At2Scale1]+=0.05;
  			    PlayerInfo[playerid][At2Scale2]+=0.05;
 			    PlayerInfo[playerid][At2Scale3]+=0.05;

		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At2Pos3]+=-0.02;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At2Rot3]+=-1;
		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At2Scale1]+=-0.05;
  			    PlayerInfo[playerid][At2Scale2]+=-0.05;
 			    PlayerInfo[playerid][At2Scale3]+=-0.05;

		  		SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

            }
		}

		if(AtSetting[playerid]==3)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At3Pos3]+=0.02;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
			    PlayerInfo[playerid][At3Rot3]+=1;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At3Scale1]+=0.05;
  			    PlayerInfo[playerid][At3Scale2]+=0.05;
 			    PlayerInfo[playerid][At3Scale3]+=0.05;

				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At3Pos3]+=-0.02;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At3Rot3]+=-1;
				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At3Scale1]+=-0.05;
  			    PlayerInfo[playerid][At3Scale2]+=-0.05;
 			    PlayerInfo[playerid][At3Scale3]+=-0.05;

				SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

            }
		}
		if(AtSetting[playerid]==4)
		{
            if(ToggleSetting[playerid]==1)
            {
			    PlayerInfo[playerid][At4Pos3]+=0.02;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==2)
            {
			    PlayerInfo[playerid][At4Rot3]+=1;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==3)
            {
 			    PlayerInfo[playerid][At4Scale1]+=0.05;
  			    PlayerInfo[playerid][At4Scale2]+=0.05;
 			    PlayerInfo[playerid][At4Scale3]+=0.05;

				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==4)
            {
 			    PlayerInfo[playerid][At4Pos3]+=-0.02;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==5)
            {
 			    PlayerInfo[playerid][At4Rot3]+=-1;
				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);

            }
            if(ToggleSetting[playerid]==6)
            {
 			    PlayerInfo[playerid][At4Scale1]+=-0.05;
  			    PlayerInfo[playerid][At4Scale2]+=-0.05;
 			    PlayerInfo[playerid][At4Scale3]+=-0.05;

				SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
		}
	}

	if(newkeys==KEY_SPRINT)//space
	{
		if(AtSetting[playerid]!=0)
		{
			SCM(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 설정 완료");
         	SetPlayerVirtualWorld(playerid, 0);

         	SetPlayerInterior(playerid,15);

			SetPlayerPos(playerid,207.2959,-102.2284,1006.2578);

			TogglePlayerControllable(playerid,1);

			ToggleSetting[playerid]=0;
			AtSetting[playerid]=0;
			SetCameraBehindPlayer(playerid);
		}
	}

//	SCM(playerid,COLOR_ERROR2," 위치 변경 토클 Ctrl , 각도 변경 토클 Shift , 크기 변경 토클 Alt , (키패드 4 [X],6 [Y],c [Z])");
	return 1;
}


adminspec_strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public StartingTheVehicle(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
	    	SetVehicleParamsEx(GetPlayerVehicleID(playerid), true, true, alarm, doors, bonnet, boot, objective);

//		    new vid = GetPlayerVehicleID(playerid);
			CarInfo[GetPlayerVehicleID(playerid)][cStarted] = true;
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid, "~g~Engine On", 5000, 6);
			PlayerPlaySound(playerid, 1135, 0.0, 0.0, 0.0);
		}

	}
	return 1;
}

public FarmerExit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(IsAHarvest(vehicleid))
		{
			return 1;
		}
		if(FarmerVar[playerid] == 0)
		{
			return 1;
		}
		if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
		{
			FarmerPickup[playerid][0]--;
		}
		DisablePlayerCheckpoint(playerid);
		FarmerVar[playerid] = 0;
	}
	return 1;
}

public LoadDrugSystem()
{
	new arrCoords[1][64];
	new strFromFile2[256];
	new File: file = fopen("script/drugs_INFO.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		drugsys[DrugAmmount] = strval(arrCoords[0]);
		fclose(file);
	}
	return 1;
}

public SaveDrugSystem()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d", drugsys[DrugAmmount]);
	new File: file2 = fopen("script/drugs_INFO.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadMatsSystem()
{
	new arrCoords[1][64];
	new strFromFile2[256];
	new File: file = fopen("script/mats_INFO.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		matssys[MatsAmmount] = strval(arrCoords[0]);
		fclose(file);
	}
	return 1;
}

public SaveMatsSystem()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d", matssys[MatsAmmount]);
	new File: file2 = fopen("script/mats_INFO.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public PoliceObjectCorrectly(playerid, object)
{
	if(object == 18643)
	{
	    SetPlayerAttachedObject(playerid, 4,18643,6,0.1,0.0,0.0,65.0,355.3,0.0);
	}
	if(object == 18637)
	{
	    SetPlayerAttachedObject( playerid, 4, 18637, 5, -0.227577, -0.003535, 0.115427, 67.812446, 0.798736, 336.885894, 1.000000, 1.000000, 1.000000 );
	}
	if(object == 18941)
	{
	    SetPlayerAttachedObject( playerid, 4, 18941, 2, 0.136504, -0.005895, 0.008454, 182.420196, 7.593298, 34.182952, 1.284535, 1.000000, 1.164944 ); // CapBack3 - Police hat
	}
	return 1;
}


public UpdateWeaponSlots(plyid)
{
	new weaponid, ammo;
	for (new i=0; i<13; i++)
	{
		GetPlayerWeaponData(plyid, i, weaponid, ammo);
		ScriptWeapons[plyid][i] = weaponid;
	}
	return 1;
}

public UnsetFirstSpawn(playerid)
{
	FirstSpawn[playerid] = 0;
}

public LoadHQLocks()
{
	new arrCoords[5][64];
	new strFromFile2[256];
	new File: file = fopen("script/hq_locks.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		hqlock[surlock] = strval(arrCoords[0]);
		hqlock[luclock] = strval(arrCoords[1]);
		hqlock[guclock] = strval(arrCoords[2]);
		hqlock[stlock] = strval(arrCoords[3]);
		hqlock[iolock] = strval(arrCoords[4]);
		fclose(file);
	}
	return 1;
}

public SaveHQLocks()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d", hqlock[surlock], hqlock[luclock], hqlock[guclock], hqlock[stlock], hqlock[iolock]);
	new File: file2 = fopen("script/hq_locks.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public ClearKnock(playerid)
{
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}

public DrugEffectGone(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(UsingDrugs[playerid] == 1)
		{
			SetPlayerWeather(playerid, DefaultWeather);
			GameTextForPlayer(playerid, "~w~Drug effect ~p~gone", 3000, 1);
			ClearAnimations(playerid);
			SetTimerEx("UsingDrugsUnset", 25000, false, "i", playerid);
		}
	}
	return 1;
}

public UsingDrugsUnset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		UsingDrugs[playerid] = 0;
	}
	return 1;
}
public UnsetAfterTutorial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		AfterTutorial[playerid] = 0;
	}
	return 1;
}

public UnsetCrash(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		PlayerInfo[playerid][pCrashed] = 0;
	}
	return 1;
}

public backtoclothes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		SetPlayerInterior(playerid,ChangePos2[playerid][0]);
	}
	return 1;
}

public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
		if(plyAmmo[slot] != 0)
		{
			GiveWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,PX,PY,PZ);
		GetVehiclePos(vehicleid, X,Y,Z);
		new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
		if(Distance <= radi*radi)
		{
			return 1;
		}
	}
	return 0;
}

public CanDriveThruAgain(playerid)
{
	IsMenuShowed[playerid] = 0;
}

public Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

public TraceLastCall()
{
	pdtrace = 0;
	pdtrace_x = 0;
	pdtrace_y = 0;
	pdtrace_z = 0;
	emdtrace = 0;
	emdtrace_x = 0;
	emdtrace_y = 0;
	emdtrace_z = 0;
}

public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(ReduceTime[playerid] == 1)
		{
			ReduceTime[playerid] = 0;
		}
	}
}
//-------------------------------------------------------------------------
public Countdown()
{
	if(COunt > 0)
	{
		new string[128];
		if(COunt > 0)
		format(string, sizeof(string),"~n~ Las Venturas Role Playing Game Server~n~~w~- %d -",COunt);
		else
		format(string, sizeof(string),"~n~ Las Venturas Role Playing Game Server~n~~w~- START -");
		GameTextForAll(string,1000,3);
		SetTimer("Countdown",1000,0);
		COunt--;
		for(new i=0; i<M_P; i++)
		{
			if (IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1056,-2982.8105,472.6976,4.9141);
			}
		}
		if(COunt < 0)
		{
			COunt = 0;
		}
	}
}

public rnsdlsClose()
{
	MoveObject(rnsdls,344.778,1797.585,19.910, 3.5);
	return 1;
}
public rnsdls2Close()
{
	MoveObject(rnsdls2,96.676987, 1920.462036, 20.771591, 3.5);
	return 1;
}
public tjans3Close()
{
	MoveObject(ccc,253.1610,125.2933,1003.2188,2.5);
	return 1;
}
public tjans4Close()
{
	MoveObject(ddd,239.2924,125.1652,1003.2188,2.5);
	return 1;
}
public fbi1Close()
{
	MoveObject(fbi1,228.2545,151.2652,1003.0234,2.5);
	return 1;
}
public fbi2Close()
{
	MoveObject(fbi2,228.2545,161.2077,1003.0234,2.5);
	return 1;
}
public fbi3Close()
{
	MoveObject(fbi3,228.1794,171.6009,1003.0330,2.5);
	return 1;
}
public fbi4Close()
{
	MoveObject(fbi4,238.6470,193.8610,1008.1719,2.5);
	return 1;
}
public fbi5Close()
{
	MoveObject(fbi5,271.3773,191.2642,1008.1620,2.5);
	return 1;
}
public Mapia1Close()
{
	MoveObject(Mapia1,1245.597,-767.388,91.394,2.5);
	return 1;
}
public ryehthansekedktlqkf()//교도소문닫아시발 이야 ㅇㅋ?
{
	MoveObject(ryehans,469.526,-1957.514,4.744,2.5);//ㄱㄷ 원격 켜놓을게, 형 잠시 어디좀 갔다옴.
	return 1;
}
public Test1Close()
{
	MoveObject(Test1,785.955,-1151.830,26.597,2.5);
	return 1;
}
public Test2Close()
{
	MoveObject(Test2,665.361,-1311.114,16.460,2.5);
	return 1;
}
public Test3Close()
{
	MoveObject(Test3,659.946,-1225.762,19.093,2.5);
	return 1;
}
public glxmaosClose()
{
	MoveObject(glxmaos,1287.977,-1006.129,31.493,2.5);
	return 1;
}
public taxiClose()
{
	MoveObject(taxi,923.502,-1226.253,17.651,2.5);
	MoveObject(taxi2,923.960,-1217.359,17.651,2.5);
	return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	// IF ANYONE IS SPECTATING THIS PLAYER, WE'LL ALSO HAVE
	// TO CHANGE THEIR INTERIOR ID TO MATCH
	new x = 0;
	while(x!=M_P) {
		if( IsPlayerConnected(x) &&GetPlayerState(x) == PLAYER_STATE_SPECTATING &&
			gSpectateID[x] == playerid && gSpectateType[x] == ADMIN_SPEC_TYPE_PLAYER )
		{
			SetPlayerInterior(x,newinteriorid);
		}
		x++;
	}
}
public FBION1(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		FBION[playerid] = 0;
	}
	return 1;
}
public hitmanON1(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		hitmanON[playerid] = 0;
	}
	return 1;
}
public dlqwkd(playerid)
{
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	return 1;
}
public dlqwkd2(playerid)
{
	MovingTimeCheck[playerid]=true;
	PlayerSave[playerid]=true;
	SaveTurnOn[playerid]=true;

	gOoc[playerid] = 0;
	SetCameraBehindPlayer(playerid);
	ClearChatbox(playerid, 10);
	SCM(playerid,COLOR_SUN,"INFO : "#C_YELLOW" 이제 Las Venturas .. [테스트 섭입니다. 오픈일은 6월 중순 , 총을 드리겠습니다.~  ]");
	TutTime[playerid] = 0;
	GiveWeapon(playerid, 30, 1000);// AK 1000 발을 줍니다.
	PlayerInfo[playerid][pTut] = 2;
	gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; gNew[playerid] = 0;
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	AfterTutorial[playerid] = 1;
	SetTimerEx("UnsetAfterTutorial", 2500, false, "i", playerid);
	SetTimerEx("UnsetFirstSpawn", 5000, false, "i", playerid);
	SetPlayerToTeamColor(playerid);
	SetPlayerPos(playerid,1674.0463,1447.9600,10.7837);//입국좌표
	SetPlayerFacingAngle(playerid,92.8576);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	PlayerInfo[playerid][pInt] = 0;
	GiveMoney(playerid, TUTMONEY); //초기자금을 설정합니다.
	PlayerUpdate();
	return 1;
}

public dlqwkd3(playerid)
{
	SetCameraBehindPlayer(playerid);
	SetPlayerPos(playerid,2538.0955,-2257.6106,3.2478);
	SetPlayerFacingAngle(playerid,92.8576);
	PlayerInfo[playerid][pInt]=0;
	PlayerInfo[playerid][pTut]=1;
	SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid,1);
	Anim(playerid,"PED","facgum",4.1,0,1,1,1,1);
	return 1;
}

forward CityLicense1(playerid);
public CityLicense1(playerid)
{
	PlayerInfo[playerid][pCityLic] = 1;
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	return 1;
}


forward VehResprayed(veh,Float:VX,Float:VY,Float:VZ,Float:VA);
public VehResprayed(veh,Float:VX,Float:VY,Float:VZ,Float:VA)
{
	if (veh > 700)
	{
		veh -= 999;
	}
	SetVehiclePos(veh,VX,VY,VZ);
	SetVehicleZAngle(veh,VA);
	SetVehicleHealth(veh,1000.0);
	for(new playerid = 0; playerid < GetMaxPlayers(); playerid++) if (IsPlayerInVehicle(playerid,veh)) SetCameraBehindPlayer(playerid);
}
public skRtl(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new Veh = GetPlayerVehicleID(playerid);
		if((IsAtFishPlace(playerid)) || IsABoat(Veh))
		{
			new string[256];
			new Caught;
			new rand;
			new fstring[MAX_PLAYER_NAME];
			new Level = PlayerInfo[playerid][pFishSkill];
			if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
			else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
			else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
			else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
			else if(Level >= 401) { Caught = random(180)-70; }
			rand = random(FishNamesNumber);
			if(Caught <= 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 낚싯줄이 짤렸습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if(rand == 0)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 허름한 재킷을 집어올렸고 던져버렸습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if(rand == 4)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 누더기 바지를 집어올렸고 던져버렸습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if(rand == 7)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 녹슨 깡통을 집어올렸고 던져버렸습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if(rand == 10)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 터진 신발을 집어올렸고 던져버렸습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if(rand == 13)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 더러운 쓰레기를 집어올렸고 던져버렸습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			else if(rand == 20)
			{
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 돈가방을 건져올렸고 $100를 얻었습니다");
				SCM(playerid, COLOR_ERROR, string);
				GiveMoney(playerid, 100);
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			if(Fishes[playerid][pWeight1] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight1] = Caught;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 물고기 %s를 건져올렸고, 무게는 %d파운드 입니다", Fishes[playerid][pFish1], Caught);
				SCM(playerid, COLOR_ERROR, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 1;
				Fishes[playerid][pFid1] = rand;
				Fishes[playerid][pFishID] = rand;
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				if(Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 예전 최고 무게 %d파운드를 넘겼습니다 새로운 기록은 %d파운드 입니다", PlayerInfo[playerid][pBiggestFish], Caught);
					SCM(playerid, COLOR_ERROR, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
					skrtl[playerid] = 0;
				}
			}
			else if(Fishes[playerid][pWeight2] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight2] = Caught;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 물고기 %s를 건져올렸고, 무게는 %d파운드 입니다", Fishes[playerid][pFish2], Caught);
				SCM(playerid, COLOR_ERROR, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 2;
				Fishes[playerid][pFid2] = rand;
				Fishes[playerid][pFishID] = rand;
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				if(Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 예전 최고 무게 %d파운드를 넘겼습니다 새로운 기록은 %d파운드 입니다", PlayerInfo[playerid][pBiggestFish], Caught);
					SCM(playerid, COLOR_ERROR, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
					skrtl[playerid] = 0;
				}
			}
			else if(Fishes[playerid][pWeight3] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight3] = Caught;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 물고기 %s를 건져올렸고, 무게는 %d파운드 입니다", Fishes[playerid][pFish3], Caught);
				SCM(playerid, COLOR_ERROR, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 3;
				Fishes[playerid][pFid3] = rand;
				Fishes[playerid][pFishID] = rand;
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				if(Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 예전 최고 무게 %d파운드를 넘겼습니다 새로운 기록은 %d파운드 입니다", PlayerInfo[playerid][pBiggestFish], Caught);
					SCM(playerid, COLOR_ERROR, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
					skrtl[playerid] = 0;
				}
			}
			else if(Fishes[playerid][pWeight4] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight4] = Caught;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 물고기 %s를 건져올렸고, 무게는 %d파운드 입니다", Fishes[playerid][pFish4], Caught);
				SCM(playerid, COLOR_ERROR, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 4;
				Fishes[playerid][pFid4] = rand;
				Fishes[playerid][pFishID] = rand;
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				if(Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 예전 최고 무게 %d파운드를 넘겼습니다 새로운 기록은 %d파운드 입니다", PlayerInfo[playerid][pBiggestFish], Caught);
					SCM(playerid, COLOR_ERROR, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
					skrtl[playerid] = 0;
				}
			}
			else if(Fishes[playerid][pWeight5] == 0)
			{
				PlayerInfo[playerid][pFishes] += 1;
				PlayerInfo[playerid][pFishSkill] += 1;
				format(fstring, sizeof(fstring), "%s", FishNames[rand]);
				strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
				Fishes[playerid][pWeight5] = Caught;
				format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 물고기 %s를 건져올렸고, 무게는 %d파운드 입니다", Fishes[playerid][pFish5], Caught);
				SCM(playerid, COLOR_ERROR, string);
				Fishes[playerid][pLastWeight] = Caught;
				Fishes[playerid][pLastFish] = 5;
				Fishes[playerid][pFid5] = rand;
				Fishes[playerid][pFishID] = rand;
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				if(Caught > PlayerInfo[playerid][pBiggestFish])
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신의 예전 최고 무게 %d파운드를 넘겼습니다 새로운 기록은 %d파운드 입니다", PlayerInfo[playerid][pBiggestFish], Caught);
					SCM(playerid, COLOR_ERROR, string);
					PlayerInfo[playerid][pBiggestFish] = Caught;
					skrtl[playerid] = 0;
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 낚시터혹은 낚시배에 있지 않습니다");
				skrtl[playerid] = 0;
				SetPlayerFreeze(playerid, false, 0);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
			if(PlayerInfo[playerid][pFishSkill] == 50)
			{ SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신은 낚시 기술이 2가 되었고 더 무거운 물고기를 잡을수 있게 되었습니다"); }
			else if(PlayerInfo[playerid][pFishSkill] == 250)
			{ SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신은 낚시 기술이 3가 되었고 더 무거운 물고기를 잡을수 있게 되었습니다"); }
			else if(PlayerInfo[playerid][pFishSkill] == 500)
			{ SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신은 낚시 기술이 4가 되었고 더 무거운 물고기를 잡을수 있게 되었습니다"); }
			else if(PlayerInfo[playerid][pFishSkill] == 1000)
			{ SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신은 낚시 기술이 5가 되었고 더 무거운 물고기를 잡을수 있게 되었습니다"); }
		}
		else
		{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 낚시터혹은 낚시배에 있지 않습니다");
			skrtl[playerid] = 0;
			SetPlayerFreeze(playerid, false, 0);
			TogglePlayerControllable(playerid, 1);
			return 1;
		}
	}
	return 1;
}
	public tlgja1(playerid)
	{
		SetPlayerCheckpoint(playerid,1132.1024,1303.0404,10.8203,2);
		return 1;
	}
	public tlgja2(playerid)
	{
		SetPlayerCheckpoint(playerid,1144.6178,1284.4462,10.8203,2);
		return 1;
	}
	public tlgja3(playerid)
	{
		SetPlayerCheckpoint(playerid,1141.5114,1261.9775,10.8203,2);
		return 1;
	}
	public tlgja4(playerid)
	{
		SetPlayerCheckpoint(playerid,1119.0525,1247.4386,10.8203,2);
		return 1;
	}
	public tlgja5(playerid)
	{
		SetPlayerCheckpoint(playerid,1111.4669,1229.2595,10.8203,2);
		return 1;
	}
	public tlgja6(playerid)
	{
		SetPlayerCheckpoint(playerid,1137.5972,1212.3483,10.8203,2);
		return 1;
	}
	public tlgja7(playerid)
	{
		SetPlayerCheckpoint(playerid,1170.9161,1240.9475,10.8203,2);
		return 1;
	}
	public tlgja8(playerid)
	{
		SetPlayerCheckpoint(playerid,1173.6515,1276.4185,10.8203,2);
		return 1;
	}
	public tlgja9(playerid)
	{
		SetPlayerCheckpoint(playerid,1149.6533,1297.9432,10.8203,2);
		return 1;
	}
	public tlgja10(playerid)
	{
		SetPlayerCheckpoint(playerid,1138.1779,1327.1559,10.8203,2);
		return 1;
	}
	public cjdtheasy1(playerid)
	{
		SetPlayerCheckpoint(playerid,1522.61,-1016.04,23.97,2);
		return 1;
	}
	public cjdtheasy2(playerid)
	{
		SetPlayerCheckpoint(playerid,1340.08,-1772.64,13.54,2);
		return 1;
	}
	public cjdtheasy3(playerid)
	{
		SetPlayerCheckpoint(playerid,1422.74,-1843.74,13.55,2);
		return 1;
	}
	public cjdtheasy4(playerid)
	{
		SetPlayerCheckpoint(playerid,1467.02,-1845.11,13.55,2);
		return 1;
	}
	public cjdtheasy5(playerid)
	{
		SetPlayerCheckpoint(playerid,1535.07,-1848.50,13.55,2);
		return 1;
	}
	public cjdtheasy6(playerid)
	{
		SetPlayerCheckpoint(playerid,1423.29,-1319.64,13.55,2);
		return 1;
	}
	public cjdtheasy7(playerid)
	{
		SetPlayerCheckpoint(playerid,1419.85,-1353.20,13.56,2);
		return 1;
	}
	public cjdtheasy8(playerid)
	{
		SetPlayerCheckpoint(playerid,2127.5129,-1982.7625,13.5547,2);
		return 1;
	}
	public cjdthhard1(playerid)
	{
		SetPlayerCheckpoint(playerid,1787.72,-1113.34,24.09,2);
		return 1;
	}
	public cjdthhard2(playerid)
	{
		SetPlayerCheckpoint(playerid,1786.17,-1146.33,23.92,2);
		return 1;
	}
	public cjdthhard3(playerid)
	{
		SetPlayerCheckpoint(playerid,1800.05,-1146.24,23.89,2);
		return 1;
	}
	public cjdthhard4(playerid)
	{
		SetPlayerCheckpoint(playerid,1828.71,-1145.63,23.91,2);
		return 1;
	}
	public cjdthhard5(playerid)
	{
		SetPlayerCheckpoint(playerid,1828.88,-1114.08,23.09,2);
		return 1;
	}
	public cjdthhard6(playerid)
	{
		SetPlayerCheckpoint(playerid,1829.37,-1098.01,23.89,2);
		return 1;
	}
	public cjdthhard7(playerid)
	{
		SetPlayerCheckpoint(playerid,1829.27,-1084.59,23.89,2);
		return 1;
	}
	public cjdthhard8(playerid)
	{
		SetPlayerCheckpoint(playerid,1661.08,-1001.51,24.05,2);
		return 1;
	}
	public cjdthhard9(playerid)
	{
		SetPlayerCheckpoint(playerid,1667.18,-998.85,24.06,2);
		return 1;
	}
	public cjdthhard10(playerid)
	{
		SetPlayerCheckpoint(playerid,1631.54,-990.43,24.07,2);
		return 1;
	}
	public cjdthhard11(playerid)
	{
		SetPlayerCheckpoint(playerid,1612.97,-995.06,24.08,2);
		return 1;
	}
	public cjdthhard12(playerid)
	{
		SetPlayerCheckpoint(playerid,1658.62,-1064.56,23.90,2);
		return 1;
	}
	public cjdthhard13(playerid)
	{
		SetPlayerCheckpoint(playerid,2128.5129,-1982.7625,13.5547,2);
		return 1;
	}
	IsPlayerAiming(playerid, aimid){
		new Float:X1, Float:Y1, Float:Z1, Float:X2, Float:Y2, Float:Z2;
		GetPlayerPos(playerid, X1, Y1, Z1);
		GetPlayerPos(aimid, X2, Y2, Z2);
		new Float:Distance = floatsqroot(floatpower(floatabs(X1-X2), 2) + floatpower(floatabs(Y1-Y2), 2));
		if(Distance < 100){
			new Float:A;
			GetPlayerFacingAngle(playerid, A);
			X1 += (Distance * floatsin(-A, degrees));
			Y1 += (Distance * floatcos(-A, degrees));
			Distance = floatsqroot(floatpower(floatabs(X1-X2), 2) + floatpower(floatabs(Y1-Y2), 2));
			if(Distance < 1.0){
				return true;
			}
		}
		return false;
	}

	public OnPlayerLoseHealth(playerid, Float:lose)//내가 전에 쓰던건 돼는데 ㅅㅂ
	{
		new string[256];
		new sendername[MAX_PLAYER_NAME];
		new giveplayer[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		for(new g=0;g<GetMaxPlayers();g++)if(IsPlayerConnected(g) && g!=playerid)
		{
		    if(IsPlayerAiming(g, playerid))//근데 이거 문제가 좀있어 DLRP 에서 빼온건데 DLRP 써버는 이상하게 되고 우리서버는 ㅇ난ㄴ되. 그게아니라
		    {//이게 문제가있다고 Aiming을쓰잖아 이건 저격총으로 조준하고있으면 옆에있능ㄴ사람이 주먹으로 한대쳐도 디져
		        if(GetPlayerWeapon(g) == 23 && Tazered[g] == 1)
		        {
					GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(g, sendername, sizeof(sendername));
					format(string, sizeof(string), " *  %s 님께서 테이전건을 쏘셔서 마취가됩니다. 마취시간 : 10초.", RPPlayerName(playerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), " * 당신은 %s 에게 테이저건을 쏴 마취시킵니다. 마취시간 : 10초", giveplayer);
					SendClientMessage(g, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), " * %s %s에게 테이저건을 쏴 넘어뜨립니다.", sendername ,giveplayer);
					ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(playerid, "~r~Tazed", 2500, 3);
					TogglePlayerControllable(playerid, 0);
					Anim(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
	    			Anim(g,"COLT45","colt45_crouchfire",4.1,0,1,1,1,1);
					PlayerCuffed[playerid] = 1;
					PlayerCuffedTime[playerid] = 10;
					format(string, sizeof(string), "%s 외침: 끄아아아악!!",RPPlayerName(playerid));
					ProxDetector(15.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					SetPlayerChatBubble(playerid, string, COLOR_FADE1, 15, 10000);
  					SetPlayerDrunkLevel(playerid, 3000);
			    }
		        if(GetPlayerWeapon(g) == 23 && Tazered[g] == 0)
		        {
					if(PlayerShoted[playerid] >= 3)
					{
				            PlayerShoted[playerid] = 0;
							GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);
      						SetPlayerDrunkLevel(playerid, 3000);
					}
					else
					{
						PlayerShoted[playerid] += 1;
				    	return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
		        }
		        if(GetPlayerWeapon(g) == 0 || GetPlayerWeapon(g) == 1)
		        {
		        PlayerShoted[playerid] += 1;
			        if(PlayerShoted[playerid] >= 5)
			        {
				            PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);
  					    SetPlayerDrunkLevel(playerid, 3000);
					}
			        else
			        {
						PlayerShoted[playerid] += 1;
						return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
		        }
		        if(GetPlayerWeapon(g) == 3)
		        {
			        if(PlayerShoted[playerid] >= 5)
			        {
	          			PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);

      					SetPlayerDrunkLevel(playerid, 3000);
			        }
			        else
			        {
						PlayerShoted[playerid] += 1;
						return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
		        }
		        if(GetPlayerWeapon(g) == 4)
		        {
			        if(PlayerShoted[playerid] >= 4)
			        {
	          			PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);

  					    SetPlayerDrunkLevel(playerid, 3000);
			        }
			        else
			        {
						PlayerShoted[playerid] += 1;
						return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
		        }
		        if(GetPlayerWeapon(g) == 5)
		        {
			        if(PlayerShoted[playerid] >= 4)
			        {
	          			PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);

      					SetPlayerDrunkLevel(playerid, 3000);
			        }
			        else
			        {
						PlayerShoted[playerid] += 1;
						return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
		        }
		        if(GetPlayerWeapon(g) == 8)
		        {
			        if(PlayerShoted[playerid] >= 3)
			        {
	          			PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);

						SetPlayerDrunkLevel(playerid, 3000);
			        }
			        else
			        {
						PlayerShoted[playerid] += 1;
						return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
		        }
			    if(GetPlayerWeapon(g) == 24 || GetPlayerWeapon(g) == 33)
			    {
			        if(PlayerShoted[playerid] >= 3)
			        {
				            PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);

						SetPlayerDrunkLevel(playerid, 3000);
			        }
			        else
			        {
						PlayerShoted[playerid] += 1;
						return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
				}
		
				if(GetPlayerWeapon(g) == 34)
				{
					format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 %s님을 저격총으로 사살 하였습니다", sendername);
					SCM(g, COLOR_ERROR, string);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 저격총에 맞아 즉사 하였습니다.");
					Anim(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
	   				SetHealth(playerid, 0);
					SetPlayerHealth(playerid, 0);
					PlayerInfo[playerid][pHealth] = 0; // 체력 0
					PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
				}
				if(GetPlayerWeapon(g) == 22 || GetPlayerWeapon(g) == 27 ||GetPlayerWeapon(g) == 25 || GetPlayerWeapon(g) == 29 || GetPlayerWeapon(g) == 30 || GetPlayerWeapon(g) == 31)
				{
					if(PlayerShoted[playerid] >= 3)
					{
                        PlayerShoted[playerid] = 0;
						GetPlayerPos(playerid, ShotPlace[playerid][0],ShotPlace[playerid][1],ShotPlace[playerid][2]);

						SetPlayerDrunkLevel(playerid, 3000);
					}
					else
					{
						PlayerShoted[playerid] += 1;
				    	return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
					}
				}
				else
				{
					PlayerShoted[playerid] += 1;
				    return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
				}
			}
	 	}
	 	return true;
	}

	public Unfreezed(playerid)
	{
		ShotTime[playerid] = 0;
	}

	public OpenPoliceDoor(playerid)
	{
		MoveObject(rudckf1,239.6180,121.1410,1003.7388, 6);
		MoveObject(rudckf2,239.6180,114.0899,1003.7388, 6);
	}
	public PoliceDoor(playerid)
	{
		MoveObject(rudckf1,239.6180,119.1410,1003.7388, 6);
		MoveObject(rudckf2,239.6180,116.0899,1003.7388, 6);
	}
	public OpenPoliceDoor1(playerid)
	{
		MoveObject(rudckf3,253.0753,112.6303,1003.7388, 6);
		MoveObject(rudckf4,253.0753,105.5303,1003.7388, 6);
	}
	public PoliceDoor1(playerid)
	{
		MoveObject(rudckf3,253.0753,110.6303,1003.7388, 6);
		MoveObject(rudckf4,253.0753,107.5303,1003.7388, 6);
	}

public xmfjrqoekf1(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerCheckpoint(playerid,985.0813,2136.1106,10.8203,2);
	}
	return 1;
}
public tnrmagkwk1(playerid)
{
	SetPlayerCheckpoint(playerid,1680.2762,-2248.1023,-3.0343,5);
	return 1;
}
public tnrmagkwk2(playerid)
{
	SetPlayerCheckpoint(playerid,650.5723,-1756.4634,13.1915,5);
	return 1;
}
public tnrmagkwk3(playerid)
{
	SetPlayerCheckpoint(playerid,697.1833,-1163.6078,15.2614,5);
	return 1;
}
public tnrmagkwk4(playerid)
{
	SetPlayerCheckpoint(playerid,2440.1104,-1144.9406,33.1147,5);
	return 1;
}
public tnrmagkwk5(playerid)
{
	SetPlayerCheckpoint(playerid,2829.2773,-1637.0408,10.6340,5);
	return 1;
}
public tnrmagkwk6(playerid)
{
	SetPlayerCheckpoint(playerid,2434.8286,-1737.9675,13.3307,5);
	return 1;
}
public xmfjrqoekf2(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerCheckpoint(playerid,2625.4729,1077.6801,10.8203,2);
	}
	return 1;
}

forward Trytazed(playerid);
public Trytazed(playerid)
{
	Trytaze[playerid] = 0;
	return 1;
}

public wnrdma2(playerid)
{
	SetCameraBehindPlayer(playerid);
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 새로운 생명을 얻었고 기억을 잃었습니다");
	SpawnPlayer(playerid);
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])//
{
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new giveplayer[MAX_PLAYER_NAME];
  	if(dialogid == MSGBOX_SKEY)
    {
        if(response)
		{
			new string_hilton[256];
			format(string_hilton,sizeof(string_hilton),"user/%s.ini",sendername);
			new File: file = fopen(string_hilton, io_read);
			if(file)
			{
				gPlayerAccount[playerid] = 1;
				ClearChatbox(playerid, 20);
				SCM(playerid, COLOR_ORED, "    Las Venturas Role Playing Game Server");
				SCM(playerid, COLOR_SUC,"");
				SCM(playerid, COLOR_ERROR,"");
				SCM(playerid, COLOR_GOLD,"　  당신은 서버에 유저파일이 존재 합니다.");
				SCM(playerid, COLOR_WHITE,"   [/log 비밀번호]로 로그인을 하실 수 있습니다.");
				SCM(playerid, COLOR_ERROR,"");
				SCM(playerid, COLOR_djemals, "  Copy Right ⓒ 2012 Max☆[光音] & Las Venturas..!");
				return 1;
			}
			else
			{
				PlayerPlaySound(playerid, 1183, 0.0, 0.0, 0.0);
				gPlayerAccount[playerid] = 0;
				ClearChatbox(playerid, 20);
				SCM(playerid, COLOR_ORED, "    Las Venturas Role Playing Game Server");
				SCM(playerid, COLOR_SUC,"");
				SCM(playerid, COLOR_ERROR,"");
				SCM(playerid,COLOR_GOLD,"　    당신은 서버에 유저파일이 존재 하지 않습니다.");
				SCM(playerid, COLOR_WHITE,"   [/reg 비밀번호]로 유저파일을 생성 하실 수 있습니다.");
				SCM(playerid, COLOR_ERROR,"");
				SCM(playerid, COLOR_djemals, "  Copy Right ⓒ 2012 Max☆[光音] & Las Venturas..!");
				return 1;
			}
		}
		else
		{
		    SCM(playerid,COLOR_ERROR,"당신은 '동의안함'을 눌러서 서버에서 추방 되었습니다.");
			Kick(playerid);
		}
	}
	if(dialogid == SET_BOOMBOX)
	{
	    if(response)
	    {
		    for(new i = 0; i < MAX_AUDIOS; i ++)
	        {
		        if(listitem == i)
		        {
		            Audioonf[playerid] = 1;
		            Audiomusic[playerid] = i+1;
		            GetPlayerPos(playerid, AudioX[playerid], AudioY[playerid], AudioZ[playerid]);
					Audio_Stop(playerid,i);
                    if(Audiogo[playerid] == 1)
					{
				        RemovePlayerAttachedObject(playerid,3);
				        new Random1 = random(3);
						switch(Random1)
						{
							case 0:
							{
			            		SetPlayerAttachedObject( playerid, 3, 2226, 6,  0.360000, -0.139999, 0.039999,  70, 250, 40, 1.000000, 1.000000, 1.000000 );
							}
							case 1:
							{
			            		SetPlayerAttachedObject( playerid, 3, 2102, 6,  0.360000, -0.139999, 0.039999,  70, 250, 40, 1.000000, 1.000000, 1.000000 );
							}
							case 2:
							{
			            		SetPlayerAttachedObject( playerid, 3, 2103, 6, 0.360000, -0.139999, 0.039999,  70, 250, 40, 1.000000, 1.000000, 1.000000 );
							}
						}
						Audioobj[playerid] = playerid;
						return 1;
	                }
	            	new Float:a;
					GetPlayerFacingAngle(playerid, a);
					Audioobj[playerid] = 999;
		            new Random1 = random(3);
					switch(Random1)
					{
						case 0:
						{
		                    Audioobj[playerid] = CreateObject(2103,AudioX[playerid],AudioY[playerid],AudioZ[playerid]-0.79,0.0,0.0,a);
						}
						case 1:
						{
		                     Audioobj[playerid] = CreateObject(2102,AudioX[playerid],AudioY[playerid],AudioZ[playerid]-0.79,0.0,0.0,a);
						}
						case 2:
						{
		                    Audioobj[playerid] = CreateObject(2226,AudioX[playerid],AudioY[playerid],AudioZ[playerid]-0.79,0.0,0.0,a);
					    }
					}
				  	return 1;
		        }
		    }
		}
		return 1;
	}
	if(dialogid == DIALOG_EVENT)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            ShowPlayerDialog(playerid,MSGBOX_1_EVENT,DIALOG_STYLE_MSGBOX,"초기화이벤트","\n계정이 초기화되었을경우 이 이벤트를 실행시켜 주시면 됩니다.\n","시작","뒤로가기");
	        }
	    }
	}
	if(dialogid == MSGBOX_1_EVENT)
	{
		if(response)
	    {
	        ShowPlayerDialog(playerid, INTUT_PLAYERID, DIALOG_STYLE_INPUT, "플레이어선택", "\n설정된 이벤트를 줄 유저의 번호를 입력하세요. Ex) 1", "입력", "취소");
	    }
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_EVENT, DIALOG_STYLE_LIST, "이벤트선택", "초기화이벤트", "이벤트보기", "이벤트취소");
		}
	}
	if(dialogid == INTUT_PLAYERID)
	{
	    if(response)
	    {
            ShowPlayerDialog(strval(inputtext),MSGBOX_1_SEVENT,DIALOG_STYLE_MSGBOX,"초기화이벤트","\n당신은 [GM]만개님의 의해 초기화이벤트를 진행하실수 있습니다.\n\n지급목록:신용레벨,돈\n신용레벨은 1~3까지 랜덤으로 나오며 돈은 5만달러를 랜덤으로 지급해줍니다.\n단 돈은 0달러도 나올수 있습니다.","지르기","버리기");
	    }
		else
		{
		    ShowPlayerDialog(playerid, DIALOG_EVENT, DIALOG_STYLE_LIST, "이벤트목록", "초기화이벤트", "이벤트보기", "이벤트취소");
		}
	}
	if(dialogid == MSGBOX_1_SEVENT)
	{
	    if(response)
	    {
			new EventLevel = random(3);
			new EventMoney = random(50000);
			if(EventLevel == 0)
			{
                EventLevel = 1;
			}
			new string[128];
			PlayerInfo[playerid][pLevel] = EventLevel;
			PlayerInfo[playerid][pCash] += EventMoney;
			format(string, sizeof(string), "지급된 신용레벨:%d\n지급된 돈:%d",EventLevel,EventMoney);
			ShowPlayerDialog(playerid,MSGBOX_1_GIVE,DIALOG_STYLE_MSGBOX,"지르기내용",string,"확인완료","버리기");
	    }
	    else{}
	}
	if(dialogid == MSGBOX_1_GIVE){if(response){}else{}}
	if(dialogid == DIALOG_18)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
				if(GetPlayerMoney(playerid) < 1000)
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 $1000 의 금액을 소지하고 있지 않습니다.");
				    return 1;
				}
				if(PlayerInfo[playerid][pGPS] == 1)
				{
				    SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 GPS를 이미 소지하고 있습니다.");
				    return 1;
				}
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 GPS 를 구매하셨습니다.");
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" /gps");
				PlayerInfo[playerid][pGPS] = 1;
				GiveMoney(playerid, -1000);
         	}
		}
	}
	if(dialogid == SET_BOOMBOX2)
	{
	    if(response)
	    {
		    switch(listitem)
		    {
		       	case 0:
		        {
		            if(Audioonf[playerid] == 1)
		            {
		                SCM(playerid,COLOR_RED,"INFO "#C_WHITE" 붐박스를 이미 놓았습니다");
		                return 1;
					}
                    new szTemp[2048];
					new szText[2048];
					Audiogo[playerid] = 0;
				    for(new i=0; i<MAX_AUDIOS; i++)
				    {
				        if(i == 0)
				        {
				    		format(szTemp, sizeof(szTemp), "%s \n", Audiosee[i]);
				    		strcat(szText, szTemp);
			    		}
			    		else
			    		{
			    		    format(szTemp, sizeof(szTemp), "%s \n", Audiosee[i]);
				    		strcat(szText, szTemp);
			    		}
			    	}
			    	ShowPlayerDialog(playerid, SET_BOOMBOX, DIALOG_STYLE_LIST, "붐박스 설정", szText,"확인","취소");
		        }
		       	case 1:
		        {
		            Audioonf[playerid] = 0;
		            Audiosece[playerid] = 0;
		            Audiosec[playerid] = 0;
		            Audiomusic[playerid] = 0;
		            DestroyObject(Audioobj[playerid]);
			    	Audioobj[playerid] = 999;
			    	RemovePlayerAttachedObject(playerid,3);
                    new szTemp[2048];
					new szText[2048];
				    for(new i=0; i<MAX_AUDIOS; i++)
				    {
				        if(i == 0)
				        {
				    		format(szTemp, sizeof(szTemp), "%s \n", Audiosee[i]);
				    		strcat(szText, szTemp);
			    		}
			    		else
			    		{
			    		    format(szTemp, sizeof(szTemp), "%s \n", Audiosee[i]);
				    		strcat(szText, szTemp);
			    		}
			    	}
			    	ShowPlayerDialog(playerid, SET_BOOMBOX, DIALOG_STYLE_LIST, "붐박스 설정", szText,"확인","취소");
		        }
		        case 2:
		        {
		            if(Audioonf[playerid] == 0)
		            {
		                SCM(playerid,COLOR_RED,"INFO "#C_WHITE" 당신은 붐박스를 들거나 놓지도 않았습니다");
		                return 1;
					}
					if(Audiogo[playerid] == 0)
					{
			            new Float:x,Float:y,Float:z;
			            GetObjectPos(Audioobj[playerid],x,y,z);
						if(PlayerToPoint(3,playerid,x,y,z))
						{
				            Audiogo[playerid] = 0;
				            Audioonf[playerid] = 0;
				            Audiosece[playerid] = 0;
				            Audiomusic[playerid] = 0;
				            Audiosec[playerid] = 0;
		    				DestroyObject(Audioobj[playerid]);
		    				Audioobj[playerid] = 999;
		    				RemovePlayerAttachedObject(playerid,3);
						}
					}
					else if(Audiogo[playerid] == 1)
					{
					    Audiogo[playerid] = 0;
			            Audioonf[playerid] = 0;
			            Audiosece[playerid] = 0;
			            Audiomusic[playerid] = 0;
			            Audiosec[playerid] = 0;
	    				DestroyObject(Audioobj[playerid]);
	    				Audioobj[playerid] = 999;
	    				RemovePlayerAttachedObject(playerid,3);
					}
		        }
		    }
		}
		return 1;
	}
	//==========================================================================
	if(dialogid == DIALOG_15)
	{
		if(response)
		{
			if(listitem==0)
			{
                ShowPlayerDialog(playerid,DIALOG_15+45,DIALOG_STYLE_LIST,"모자 목록","Hat1\nHat2\nHat3\nHat4\nHat5\nHat6\nHat7\nHat8\nHat9\nHat10\nHatBoater1\nHatBoater2\nHatBoater3\nHatBowler1\nHatBowler2\nHatBowler3\nHatBowler4\nHatBowler5\nHatMan1\nHatMan2\nHatMan3\nHatTiger1\nHatCool1\nHatCool2\nHatCool3\nSantaHat1\nSantaHat2\nSantaHat3\nHoodyHat1\nHoodyHat2\nHoodyHat3\nCowboyHat1\nCowboyHat2\nCowboyHat3\nCowboyHat4\nCowboyHat5","확인","취소");
			}
			if(listitem==1)
			{
                ShowPlayerDialog(playerid,DIALOG_15+2,DIALOG_STYLE_LIST,"안경 목록","안경1\n안경2\n안경3\n안경4\n안경5\n안경6\n안경7\n안경8\n안경9\n안경10\n안경11\n안경12\n안경13\n안경14\n안경15\n안경16\n안경17\n안경18\n안경19\n안경20\n안경21\n안경22\n안경23\n안경24\n안경25\n안경26\n안경27\n안경28\n안경29\n안경30","확인","취소");
			}
			if(listitem==2)
			{
                ShowPlayerDialog(playerid,DIALOG_15+3,DIALOG_STYLE_LIST,"손 목록","서류가방\n시계","확인","취소");

 			}
			if(listitem==3)
			{
                ShowPlayerDialog(playerid,DIALOG_15+50,DIALOG_STYLE_LIST,"마스크 목록","마스크1\n마스크2\n마스크3\n마스크4\n마스크5\n마스크6\n마스크7\n마스크8\n마스크9","확인","취소");

 			}
		}
	}
	if(dialogid==DIALOG_15+50)
	{
		if(response)
		{
			if(listitem==0)
			{
			    PlayerInfo[playerid][pMouth]=18911;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==1)
			{
			    PlayerInfo[playerid][pMouth]=18912;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==2)
			{
			    PlayerInfo[playerid][pMouth]=18913;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==3)
			{
			    PlayerInfo[playerid][pMouth]=18914;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==4)
			{
			    PlayerInfo[playerid][pMouth]=18915;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==4)
			{
			    PlayerInfo[playerid][pMouth]=18916;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==5)
			{
			    PlayerInfo[playerid][pMouth]=18917;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
  	    		PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
       			PlayerInfo[playerid][At4Scale3]=1;

      			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==6)
			{
			    PlayerInfo[playerid][pMouth]=18918;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==7)
			{
			    PlayerInfo[playerid][pMouth]=18919;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
			if(listitem==8)
			{
			    PlayerInfo[playerid][pMouth]=18920;
			    PlayerInfo[playerid][At4Pos1]=0.15;
			    PlayerInfo[playerid][At4Pos2]=0.0;
			    PlayerInfo[playerid][At4Pos3]=0.0;
			    PlayerInfo[playerid][At4Rot1]=0.0;
			    PlayerInfo[playerid][At4Rot2]=0.0;
			    PlayerInfo[playerid][At4Rot3]=0.0;
			    PlayerInfo[playerid][At4Scale1]=1;
			    PlayerInfo[playerid][At4Scale2]=1;
			    PlayerInfo[playerid][At4Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 4, PlayerInfo[playerid][pMouth],1,PlayerInfo[playerid][At4Pos1],PlayerInfo[playerid][At4Pos2],PlayerInfo[playerid][At4Pos3],PlayerInfo[playerid][At4Rot1],PlayerInfo[playerid][At4Rot2],PlayerInfo[playerid][At4Rot3],PlayerInfo[playerid][At4Scale1],PlayerInfo[playerid][At4Scale2],PlayerInfo[playerid][At4Scale3]);
			}
         	SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1466.4762,-1355.4830,163.7188);
			SetPlayerCameraPos(playerid,1424.0555,-1474.3376,126.4898);
			SetPlayerCameraLookAt(playerid,1422.2266,-1472.2844,125.3672);
			SetPlayerFacingAngle(playerid,225.9319);

			SetPlayerVirtualWorld(playerid, playerid);
			TogglePlayerControllable(playerid,0);
			ToggleSetting[playerid]=1;
			AtSetting[playerid]=4;
		}
		if(!response)
		{
		    ShowPlayerDialog(playerid,DIALOG_15,DIALOG_STYLE_LIST,"악세사리","모자\n안경\n손\n마스크","확인","취소");
		}
	}
	if(dialogid==DIALOG_15+45)
	{
		if(response)
		{
			if(listitem==0)
			{
			    PlayerInfo[playerid][pHAt]=18926;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}

			if(listitem==1)
			{
			    PlayerInfo[playerid][pHAt]=18927;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==2)
			{
			    PlayerInfo[playerid][pHAt]=18928;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==3)
			{
			    PlayerInfo[playerid][pHAt]=18929;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==4)
			{
			    PlayerInfo[playerid][pHAt]=18930;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==5)
			{
			    PlayerInfo[playerid][pHAt]=18931;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==6)
			{
			    PlayerInfo[playerid][pHAt]=18932;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==7)
			{
			    PlayerInfo[playerid][pHAt]=18933;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==8)
			{
			    PlayerInfo[playerid][pHAt]=18934;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==9)
			{
			    PlayerInfo[playerid][pHAt]=18935;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==10)
			{
			    PlayerInfo[playerid][pHAt]=18944;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==11)
			{
			    PlayerInfo[playerid][pHAt]=18945;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==12)
			{
			    PlayerInfo[playerid][pHAt]=18946;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==13)
			{
			    PlayerInfo[playerid][pHAt]=18947;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==14)
			{
			    PlayerInfo[playerid][pHAt]=18948;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==15)
			{
			    PlayerInfo[playerid][pHAt]=18949;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==16)
			{
			    PlayerInfo[playerid][pHAt]=18950;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==17)
			{
			    PlayerInfo[playerid][pHAt]=18951;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==18)
			{
			    PlayerInfo[playerid][pHAt]=18967;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==19)
			{
			    PlayerInfo[playerid][pHAt]=18968;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}

			if(listitem==20)
			{
			    PlayerInfo[playerid][pHAt]=18969;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==21)
			{
			    PlayerInfo[playerid][pHAt]=18970;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==22)
			{
			    PlayerInfo[playerid][pHAt]=18971;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==23)
			{
			    PlayerInfo[playerid][pHAt]=18972;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==24)
			{
			    PlayerInfo[playerid][pHAt]=18973;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==25)
			{
			    PlayerInfo[playerid][pHAt]=19064;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==26)
			{
			    PlayerInfo[playerid][pHAt]=19065;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==27)
			{
			    PlayerInfo[playerid][pHAt]=19066;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==28)
			{
			    PlayerInfo[playerid][pHAt]=19067;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==29)
			{
			    PlayerInfo[playerid][pHAt]=19068;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==30)
			{
			    PlayerInfo[playerid][pHAt]=19069;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==31)
			{
			    PlayerInfo[playerid][pHAt]=19095;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==32)
			{
			    PlayerInfo[playerid][pHAt]=18962;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==33)
			{
			    PlayerInfo[playerid][pHAt]=19096;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==34)
			{
			    PlayerInfo[playerid][pHAt]=19097;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==35)
			{
			    PlayerInfo[playerid][pHAt]=19098;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
			if(listitem==36)
			{
			    PlayerInfo[playerid][pHAt]=18926;
			    PlayerInfo[playerid][At1Pos1]=0.15;
			    PlayerInfo[playerid][At1Pos2]=0.0;
			    PlayerInfo[playerid][At1Pos3]=0.0;
			    PlayerInfo[playerid][At1Rot1]=0.0;
			    PlayerInfo[playerid][At1Rot2]=0.0;
			    PlayerInfo[playerid][At1Rot3]=0.0;
			    PlayerInfo[playerid][At1Scale1]=1;
			    PlayerInfo[playerid][At1Scale2]=1;
			    PlayerInfo[playerid][At1Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pHAt],2,PlayerInfo[playerid][At1Pos1],PlayerInfo[playerid][At1Pos2],PlayerInfo[playerid][At1Pos3],PlayerInfo[playerid][At1Rot1],PlayerInfo[playerid][At1Rot2],PlayerInfo[playerid][At1Rot3],PlayerInfo[playerid][At1Scale1],PlayerInfo[playerid][At1Scale2],PlayerInfo[playerid][At1Scale3]);
			}
         	SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1422.0349,-1472.0977,125.3672);
			SetPlayerCameraPos(playerid,1424.0555,-1474.3376,126.4898);
			SetPlayerCameraLookAt(playerid,1422.2266,-1472.2844,125.3672);
			SetPlayerFacingAngle(playerid,225.9319);

			SetPlayerVirtualWorld(playerid, playerid);
			TogglePlayerControllable(playerid,0);
			ToggleSetting[playerid]=1;
			AtSetting[playerid]=1;
		}
		if(!response)
		{
		    ShowPlayerDialog(playerid,DIALOG_15,DIALOG_STYLE_LIST,"악세사리","모자\n안경\n손\n마스크","확인","취소");
		}
	}

	if(dialogid==DIALOG_15+2)
	{
		if(response)
		{
			if(listitem==0)
			{
			    PlayerInfo[playerid][pLAt]=19006;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);

			}
	 		if(listitem==1)
			{
			    PlayerInfo[playerid][pLAt]=19007;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==2)
			{
			    PlayerInfo[playerid][pLAt]=19008;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==3)
			{
			    PlayerInfo[playerid][pLAt]=19009;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==4)
			{
			    PlayerInfo[playerid][pLAt]=19010;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==5)
			{
			    PlayerInfo[playerid][pLAt]=19011;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==6)
			{
			    PlayerInfo[playerid][pLAt]=19012;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==7)
			{
			    PlayerInfo[playerid][pLAt]=19013;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==8)
			{
			    PlayerInfo[playerid][pLAt]=19014;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==9)
			{
			    PlayerInfo[playerid][pLAt]=19015;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==10)
			{
			    PlayerInfo[playerid][pLAt]=19016;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
	 		if(listitem==11)
			{
			    PlayerInfo[playerid][pLAt]=19017;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==12)
			{
			    PlayerInfo[playerid][pLAt]=19018;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==13)
			{
			    PlayerInfo[playerid][pLAt]=19019;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==14)
			{
			    PlayerInfo[playerid][pLAt]=19020;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==15)
			{
			    PlayerInfo[playerid][pLAt]=19021;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==16)
			{
			    PlayerInfo[playerid][pLAt]=19022;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==17)
			{
			    PlayerInfo[playerid][pLAt]=19023;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==18)
			{
			    PlayerInfo[playerid][pLAt]=19024;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==19)
			{
			    PlayerInfo[playerid][pLAt]=19025;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==20)
			{
			    PlayerInfo[playerid][pLAt]=19026;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
	 		if(listitem==21)
			{
			    PlayerInfo[playerid][pLAt]=19027;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==22)
			{
			    PlayerInfo[playerid][pLAt]=19028;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==23)
			{
			    PlayerInfo[playerid][pLAt]=19029;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==24)
			{
			    PlayerInfo[playerid][pLAt]=19030;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==25)
			{
			    PlayerInfo[playerid][pLAt]=19031;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==26)
			{
			    PlayerInfo[playerid][pLAt]=19032;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==27)
			{
			    PlayerInfo[playerid][pLAt]=19033;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==28)
			{
			    PlayerInfo[playerid][pLAt]=19034;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
			if(listitem==29)
			{
			    PlayerInfo[playerid][pLAt]=19035;
			    PlayerInfo[playerid][At2Pos1]=0.1;
			    PlayerInfo[playerid][At2Pos2]=0.05;
			    PlayerInfo[playerid][At2Pos3]=0.0;
			    PlayerInfo[playerid][At2Rot1]=-15.0;
			    PlayerInfo[playerid][At2Rot2]=93.0;
			    PlayerInfo[playerid][At2Rot3]=105.0;
			    PlayerInfo[playerid][At2Scale1]=1;
			    PlayerInfo[playerid][At2Scale2]=1;
			    PlayerInfo[playerid][At2Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pLAt],2,PlayerInfo[playerid][At2Pos1],PlayerInfo[playerid][At2Pos2],PlayerInfo[playerid][At2Pos3],PlayerInfo[playerid][At2Rot1],PlayerInfo[playerid][At2Rot2],PlayerInfo[playerid][At2Rot3],PlayerInfo[playerid][At2Scale1],PlayerInfo[playerid][At2Scale2],PlayerInfo[playerid][At2Scale3]);
			}
         	SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1422.0349,-1472.0977,125.3672);
			SetPlayerCameraPos(playerid,1424.0555,-1474.3376,126.4898);
			SetPlayerCameraLookAt(playerid,1422.2266,-1472.2844,125.3672);
			SetPlayerFacingAngle(playerid,225.9319);

			SetPlayerVirtualWorld(playerid, playerid);
			TogglePlayerControllable(playerid,0);
			ToggleSetting[playerid]=1;
			AtSetting[playerid]=2;
		}
		if(!response)
		{
		    ShowPlayerDialog(playerid,DIALOG_15,DIALOG_STYLE_LIST,"악세사리","모자\n안경\n손\n마스크","확인","취소");
		}
	}

	if(dialogid==DIALOG_15+3)
	{
		if(!response)
		{
		    ShowPlayerDialog(playerid,DIALOG_15,DIALOG_STYLE_LIST,"악세사리","모자\n안경\n손\n마스크","확인","취소");
		}
		if(response)
	    {
		    if(listitem==0)
		    {
			    PlayerInfo[playerid][pRAt]=1210;
			    PlayerInfo[playerid][At3Pos1]=0.3;
			    PlayerInfo[playerid][At3Pos2]=0.1;
			    PlayerInfo[playerid][At3Pos3]=0.0;
			    PlayerInfo[playerid][At3Rot1]=0.0;
			    PlayerInfo[playerid][At3Rot2]=270.0;
			    PlayerInfo[playerid][At3Rot3]=0.0;
			    PlayerInfo[playerid][At3Scale1]=1;
			    PlayerInfo[playerid][At3Scale2]=1;
			    PlayerInfo[playerid][At3Scale3]=1;

	  			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
	 	    if(listitem==1)
			{
	        	ShowPlayerDialog(playerid,DIALOG_15+5,DIALOG_STYLE_LIST,"시계 목록","시계1\n시계2\n시계3\n시계4\n시계5\n시계6\n시계7\n시계8\n시계9\n시계10\n시계11\n시계12\n시계13\n시계14\n시계15","확인","취소");
			}
         	SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1422.0349,-1472.0977,125.3672);
			SetPlayerCameraPos(playerid,1424.0555,-1474.3376,126.4898);
			SetPlayerCameraLookAt(playerid,1422.2266,-1472.2844,125.3672);
			SetPlayerFacingAngle(playerid,225.9319);

			SetPlayerVirtualWorld(playerid, playerid);
			TogglePlayerControllable(playerid,0);
			ToggleSetting[playerid]=1;
			AtSetting[playerid]=3;
		}
	}

	if(dialogid==DIALOG_15+5)
	{
		if(!response)
		{
		    ShowPlayerDialog(playerid,DIALOG_15,DIALOG_STYLE_LIST,"악세사리","모자\n안경\n손\n마스크","확인","취소");
		}
	    if(response)
	    {
		    if(listitem==0)
			{
			    PlayerInfo[playerid][pRAt]=19039;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);
			}
		    if(listitem==1)
			{
			    PlayerInfo[playerid][pRAt]=19040;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);
			}
		    if(listitem==2)
			{
			    PlayerInfo[playerid][pRAt]=19041;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==3)
			{
			    PlayerInfo[playerid][pRAt]=19042;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==4)
			{
			    PlayerInfo[playerid][pRAt]=19043;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
	  	    if(listitem==5)
			{
			    PlayerInfo[playerid][pRAt]=19044;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==6)
			{
			    PlayerInfo[playerid][pRAt]=19045;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==7)
			{
			    PlayerInfo[playerid][pRAt]=19046;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==8)
			{
			    PlayerInfo[playerid][pRAt]=19047;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==9)
			{
			    PlayerInfo[playerid][pRAt]=19048;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==10)
			{
			    PlayerInfo[playerid][pRAt]=19049;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==11)
			{
			    PlayerInfo[playerid][pRAt]=19050;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==12)
			{
			    PlayerInfo[playerid][pRAt]=19051;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==13)
			{
			    PlayerInfo[playerid][pRAt]=19052;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);

			}
		    if(listitem==14)
			{
			    PlayerInfo[playerid][pRAt]=19053;
			    PlayerInfo[playerid][At3Pos1]=0;
			    PlayerInfo[playerid][At3Pos2]=-0.007722;
			    PlayerInfo[playerid][At3Pos3]=-0.011143;
			    PlayerInfo[playerid][At3Rot1]=9.279358;
			    PlayerInfo[playerid][At3Rot2]=270.517852;
			    PlayerInfo[playerid][At3Rot3]=190.637268;
			    PlayerInfo[playerid][At3Scale1]=1.000000;
			    PlayerInfo[playerid][At3Scale2]=1.000000;
			    PlayerInfo[playerid][At3Scale3]=1.000000;

	   			SetPlayerAttachedObject(playerid, 3, PlayerInfo[playerid][pRAt],5,PlayerInfo[playerid][At3Pos1],PlayerInfo[playerid][At3Pos2],PlayerInfo[playerid][At3Pos3],PlayerInfo[playerid][At3Rot1],PlayerInfo[playerid][At3Rot2],PlayerInfo[playerid][At3Rot3],PlayerInfo[playerid][At3Scale1],PlayerInfo[playerid][At3Scale2],PlayerInfo[playerid][At3Scale3]);
			}
         	SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1422.0349,-1472.0977,125.3672);
			SetPlayerCameraPos(playerid,1424.0555,-1474.3376,126.4898);
			SetPlayerCameraLookAt(playerid,1422.2266,-1472.2844,125.3672);
			SetPlayerFacingAngle(playerid,225.9319);

			SetPlayerVirtualWorld(playerid, playerid);
			TogglePlayerControllable(playerid,0);
			ToggleSetting[playerid]=1;
			AtSetting[playerid]=3;
		}
	}




	if(dialogid == 8899)
    {
        if(response)
        {
            if(listitem == 0)
            {

            //blue
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][vNeon1] = 1;

            }
            if(listitem == 1)
            {


             //red
                SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
                AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, 0xFFFFFFAA, "INFO : "#C_WHITE" 네온이 설치되었습니다.");
                PlayerInfo[playerid][vNeon2] = 1;


}
            if(listitem == 2)
            {


            //green
                  SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
                AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, 0xFFFFFFAA, "INFO : "#C_WHITE" 네온이 설치되었습니다.");
                PlayerInfo[playerid][vNeon3] = 1;


                }
            if(listitem == 3)
            {

            //white
                  SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
                AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, 0xFFFFFFAA, "INFO : "#C_WHITE" 네온이 설치되었습니다.");
                PlayerInfo[playerid][vNeon4] = 1;


}
            if(listitem == 4)
            {


            //pink
                  SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
                AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, 0xFFFFFFAA, "INFO : "#C_WHITE" 네온이 설치되었습니다.");
                PlayerInfo[playerid][vNeon5] = 1;


}
            if(listitem == 5)
            {


            //yellow
                   SetPVarInt(playerid, "Status", 1);
                SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
                SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
                AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                SendClientMessage(playerid, 0xFFFFFFAA, "INFO : "#C_WHITE" 네온이 설치되었습니다.");
                PlayerInfo[playerid][vNeon6] = 1;


}

	RefillNeon[playerid] = 999;
	RefillPrice[playerid] = 0;
	         }
	         else
	         {
	GiveMoney(RefillNeon[playerid], -RefillPrice[playerid]/2);
	GiveMoney(playerid, RefillPrice[playerid]);
	RefillNeon[playerid] = 999;
	RefillPrice[playerid] = 0;
         }
         }
         if(dialogid == 23460)
 		{
 	    if(response)
 	    {
			if(listitem == 0)
			{
   			DestroyObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            }
            if(listitem == 1)
            {
            DestroyObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            }
            if(listitem == 2)
            {
            DestroyObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            }
            if(listitem == 3)
            {
            DestroyObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            }
            if(listitem == 4)
            {
            DestroyObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            }
            if(listitem == 5)
            {
            DestroyObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            }
		}
	}
	if(dialogid == 23461)
	{
 	    if(response)
 	    {
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][vNeon1] == 0)
				{
                	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이 네온을 구매한적이 없습니다");
                }
                if(PlayerInfo[playerid][vNeon1] == 1)
				{
   				SetPVarInt(playerid, "Status", 1);
  	 			SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
            	SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
            	AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" 네온이 설치가 완료되었습니다.");
                }
			}
			if(listitem == 1)
			{
                if(PlayerInfo[playerid][vNeon2] == 0)
				{
                	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이 네온을 구매한적이 없습니다");
                }
                if(PlayerInfo[playerid][vNeon2] == 1)
				{
                	SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" 네온이 설치가 완료되었습니다.");
				}
			}
			if(listitem == 2)
			{
                if(PlayerInfo[playerid][vNeon3] == 0)
				{
                	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이 네온을 구매한적이 없습니다");
                }
                if(PlayerInfo[playerid][vNeon3] == 1)
				{
                	SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" 네온이 설치가 완료되었습니다.");
				}
			}
			if(listitem == 3)
			{
                if(PlayerInfo[playerid][vNeon4] == 0)
				{
                	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이 네온을 구매한적이 없습니다");
                }
                if(PlayerInfo[playerid][vNeon4] == 1)
				{
                	SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" 네온이 설치가 완료되었습니다.");
				}
			}
			if(listitem == 4)
			{
                if(PlayerInfo[playerid][vNeon5] == 0)
				{
                	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이 네온을 구매한적이 없습니다");
                }
                if(PlayerInfo[playerid][vNeon5] == 1)
				{
                	SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" 네온이 설치가 완료되었습니다.");
				}
			}
			if(listitem == 5)
			{
                if(PlayerInfo[playerid][vNeon6] == 0)
				{
                	SendClientMessage(playerid,COLOR_ERROR,"INFO : "#C_WHITE" 당신은 이 네온을 구매한적이 없습니다");
                }
                if(PlayerInfo[playerid][vNeon6] == 1)
				{
                	SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	SCM(playerid, 0xFFFFFFFF, "INFO : "#C_WHITE" 네온이 설치가 완료되었습니다.");
				}
			}
		}
	}
	if(dialogid == DIALOG_16)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	        	ShowPlayerDialog(playerid, DIALOG_16, DIALOG_STYLE_INPUT, "MDC","용의자의 이름 혹은 시민의 이름을 검색해주세요.", "찾기", "취소");
	        }
	        if(listitem == 1)
	        {
                ShowPlayerDialog(playerid, DIALOG_17, DIALOG_STYLE_INPUT, "Hello","용의자 혹은 시민의 차량 번호판을 검색해주세요. ", "찾기", "취소");
	        }
	        if(listitem == 2)
	        {
				if(gTeam[playerid] == 2 || IsACop(playerid))
				{
					new x;
					new string[158];
					SCM(playerid, COLOR_WHITE, "MDC : 수배자 명단");
					for(new i=0; i < M_P; i++) {
						if(IsPlayerConnected(i))
						{
							if(WantedLevel[i] > 1)
							{
								GetPlayerName(i, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "%s %s: %d", string,giveplayer,WantedLevel[i]);
								//[몇년/몇달/몇일] 용의자INFO : "#C_WHITE" - 수배이유(ex : 손넬죽임)
								x++;
								if(x > 3) {
									SCM(playerid, COLOR_WHITE, string);
									x = 0;
									format(string, sizeof(string), "");
								} else {
									format(string, sizeof(string), "%s, ", string);
								}
							}
						}
					}
					if(x <= 3 && x > 0) {
						string[strlen(string)-2] = '.';
						SCM(playerid, COLOR_WHITE, string);
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 (경찰/FBI/CIA)이 아닙니다");
				}
	        }
		}
	}
	//
 	if(dialogid == DIALOG_14)
	{
		if(response)
		{
			if(listitem == 0)
			{
				PlayerInfo[playerid][pOrigin]=1;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (한국)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 1)
			{
				PlayerInfo[playerid][pOrigin]=2;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (미국)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 2)
			{
				PlayerInfo[playerid][pOrigin]=3;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (중국)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 3)
			{
				PlayerInfo[playerid][pOrigin]=4;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (일본)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 4)
			{
				PlayerInfo[playerid][pOrigin]=5;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (프랑스)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 5)
			{
				PlayerInfo[playerid][pOrigin]=6;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (이탈리아)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 6)
			{
				PlayerInfo[playerid][pOrigin]=7;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (스페인)");
				GiveMoney(playerid, -50000);
			}
			if(listitem == 7)
			{
				PlayerInfo[playerid][pOrigin]=8;
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 국적이 변경 되었습니다 (러시아)");
				GiveMoney(playerid, -50000);
			}
		}
		return 1;
	}

	if(dialogid == NUMBERKEY)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, NUMBERKEY_2, DIALOG_STYLE_INPUT, "Password", "비밀번호를 입력해주세요.[숫자 4자리]", "입력", "취소");
			}
			if(listitem == 1)
			{
				new h=HouseNumber[playerid];
				new string[256];
				format(string, sizeof(string), "* %s 초인종을 누릅니다.", RPPlayerName(playerid));
				ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
				SendBellMessage(BuildingInfo[h][hExitX], BuildingInfo[h][hExitY], BuildingInfo[h][hExitZ]);
			}
		}
	}
	if(dialogid == NUMBERKEY_2)
	{
		if(response)
		{
			new pass=strval(inputtext);
			new h=HouseNumber[playerid];
			if(pass < 1000 || pass > 9999)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 비밀번호 오류!");
				return 1;
			}
			if(pass == BuildingInfo[h][hPass])
			{
				if(BuildingInfo[h][hLocked]==1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이 열렸습니다.");
					BuildingInfo[h][hLocked]=0;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집이 잠겼습니다.");
					BuildingInfo[h][hLocked]=1;
				}
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 비밀번호 오류!");
			}
		}
	}
//==============================================================================
	if(dialogid == DIALOG_1)//성별선택
	{
		if(response)
		{
			PlayerInfo[playerid][pSex]=1;
			PlayerInfo[playerid][pChar]=26;
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			ClearChatbox(playerid, 8);
			SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신이 선택하신 성별은 남성입니다.");
			SCM(playerid, COLOR_HINT, ""#C_WHITE "SERVER :"#C_WHITE" 당신이 플레이할 캐릭터의 나이를 선택해주십시오.");
			ShowPlayerDialog(playerid,DIALOG_2,DIALOG_STYLE_INPUT,"나이 설정","당신이 플레이할 캐릭터의 나이는 몇세입니까?","확인","취소");
		}
		else
		{
			PlayerInfo[playerid][pSex]=2;
			PlayerInfo[playerid][pChar]=263;
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			ClearChatbox(playerid, 8);
			SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신이 선택하신 성별은 여성입니다.");
			SCM(playerid, COLOR_HINT, ""#C_WHITE "SERVER :"#C_WHITE" 당신이 플레이할 캐릭터의 나이를 선택해주십시오.");
			ShowPlayerDialog(playerid,DIALOG_2,DIALOG_STYLE_INPUT,"나이 설정","당신이 플레이할 캐릭터의 나이는 몇세입니까?","확인","취소");
		}
	}
	//==============================================================================
	if(dialogid == DIALOG_2)//나이선택
	{
		if(response)
		{
			if(listitem == 0)//오류일때
			{
				ShowPlayerDialog(playerid,DIALOG_2,DIALOG_STYLE_INPUT,"나이 설정","당신이 플레이할 캐릭터의 나이는 몇세입니까?","확인","취소");
				return 1;
			}
			new age=strval(inputtext);
			PlayerInfo[playerid][pAge]=age;
			if(age< 1 || age > 90)
			{
			    SCM(playerid, COLOR_ERROR, ""#C_WHITE "SERVER :"#C_WHITE" 나이는 최대 1 ~ 90 세 까지 가능합니다.");
				ShowPlayerDialog(playerid,DIALOG_2,DIALOG_STYLE_INPUT,"계정 정보 입력","당신이 플레이할 캐릭터의 나이는 몇세입니까?","확인","취소");
			}
			new string[128];
			ClearChatbox(playerid, 8);
			format(string, sizeof(string), ""#C_WHITE "SERVER :"#C_WHITE" 당신의 나이는 %d세로 설정되었습니다",PlayerInfo[playerid][pAge]);
			SCM(playerid, COLOR_INFO, string);
			SCM(playerid, COLOR_HINT, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 캐릭터의 국적을 선택해주십시오.");
			ShowPlayerDialog(playerid,DIALOG_3,DIALOG_STYLE_LIST,"국적 설정","한국\n미국\n중국\n일본\n프랑스\n이탈리아\n스페인\n러시아","확인","취소");
		}
		else//취소할때
		{
			ShowPlayerDialog(playerid,DIALOG_2,DIALOG_STYLE_INPUT,"나이 설정","당신이 플레이할 캐릭터의 나이는 몇세입니까?","확인","취소");
			return 1;
		}
	}
	//==============================================================================
	if(dialogid == DIALOG_3)//성별선택
	{
		if(response)
		{
			if(listitem == 0)
			{
				PlayerInfo[playerid][pOrigin]=1;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 한국 입니다");
			}
			if(listitem == 1)
			{
				PlayerInfo[playerid][pOrigin]=2;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 미국 입니다");
			}
			if(listitem == 2)
			{
				PlayerInfo[playerid][pOrigin]=3;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 중국 입니다");
			}
			if(listitem == 3)
			{
				PlayerInfo[playerid][pOrigin]=4;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 일본 입니다");
			}
			if(listitem == 4)
			{
				PlayerInfo[playerid][pOrigin]=5;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 프랑스 입니다");
			}
			if(listitem == 5)
			{
				PlayerInfo[playerid][pOrigin]=6;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 이탈리아 입니다");
			}
			if(listitem == 6)
			{
				PlayerInfo[playerid][pOrigin]=7;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 스페인 입니다");
			}
			if(listitem == 7)
			{
				PlayerInfo[playerid][pOrigin]=8;
				SCM(playerid, COLOR_INFO, ""#C_WHITE "SERVER :"#C_WHITE" 당신의 국적은 러시아 입니다");
			}
			SCM(playerid, COLOR_INFO, " ");
			SCM(playerid, COLOR_SUC, ""#C_WHITE "SERVER :"#C_WHITE" 정보 입력 완료 .");
			TutTime[playerid] = 1;
			SetPlayerInterior(playerid,0);
			//SetTimerEx("dlqwkd3", 4000, false, "i", playerid);
		}
		else//취소했을때
		{
			ShowPlayerDialog(playerid,DIALOG_3,DIALOG_STYLE_LIST,"국적 설정","한국\n미국\n중국\n일본\n프랑스\n이탈리아","확인","취소");
			return 1;
		}
	}
if(dialogid == 2221)
	{
		if(response)
		{
			if(listitem == 0)
			{
			if(GetPlayerMoney(playerid) < 100)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그만한 돈이 없습니다");
			return 1;
			}
			ShowPlayerDialog(playerid,2222,DIALOG_STYLE_LIST,"주사위의 숫자를 고르세요. 맞추면 4배로 드립니다.","1\n2\n3\n4\n5\n6","확인","취소");
			battingmoney[playerid] = 1;
			GiveMoney(playerid, -100);
			}
			if(listitem == 1)
			{
			if(GetPlayerMoney(playerid) < 500)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그만한 돈이 없습니다");
			return 1;
			}
			ShowPlayerDialog(playerid,2222,DIALOG_STYLE_LIST,"주사위의 숫자를 고르세요. 맞추면 4배로 드립니다.","1\n2\n3\n4\n5\n6","확인","취소");
            battingmoney[playerid] = 2;
            GiveMoney(playerid, -500);
			}
			if(listitem == 2)
			{
			if(GetPlayerMoney(playerid) < 1000)
			{
			SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 그만한 돈이 없습니다");
			return 1;
			}
			ShowPlayerDialog(playerid,2222,DIALOG_STYLE_LIST,"주사위의 숫자를 고르세요. 맞추면 4배로 드립니다.","1\n2\n3\n4\n5\n6","확인","취소");
            battingmoney[playerid] = 3;
            GiveMoney(playerid, -1000);
			}//완료
		}
		return 1;
}

if(dialogid == 2222)
	{
		if(response)
		{
		new dice = random(6)+1;
			new string[256];
		    if(listitem == 0)
			{
			if(dice == 1)
			{
			if(battingmoney[playerid] == 1)
			{
			format(string, sizeof(string), "* %s 100달러를 걸었고, 500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 500);
			}
			else if(battingmoney[playerid] == 2)
			{
			format(string, sizeof(string), "* %s 500달러를 걸었고, 2500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 2500);
			}
			else if(battingmoney[playerid] == 3)
			{
			format(string, sizeof(string), "* %s 1000달러를 걸었고, 5000달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 5000);
			}
			return 1;
			}
			}
			else if(listitem == 1)
			{
			if(dice == 2)
			{
			if(battingmoney[playerid] == 1)
			{
			format(string, sizeof(string), "* %s 100달러를 걸었고, 500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 500);
			}
			else if(battingmoney[playerid] == 2)
			{
			format(string, sizeof(string), "* %s 500달러를 걸었고, 2500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 2500);
			}
			else if(battingmoney[playerid] == 3)
			{
			format(string, sizeof(string), "* %s 1000달러를 걸었고, 5000달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 5000);
			}
			return 1;
			}
			}
			else if(listitem == 2)
			{
			if(dice == 3)
			{
			if(battingmoney[playerid] == 1)
			{
			format(string, sizeof(string), "* %s 100달러를 걸었고, 500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 500);
			}
			else if(battingmoney[playerid] == 2)
			{
			format(string, sizeof(string), "* %s 500달러를 걸었고, 2500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 2500);
			}
			else if(battingmoney[playerid] == 3)
			{
			format(string, sizeof(string), "* %s 1000달러를 걸었고, 5000달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 5000);
			}
			return 1;
			}
			}
			else if(listitem == 3)
			{
			if(dice == 4)
			{
			if(battingmoney[playerid] == 1)
			{
			format(string, sizeof(string), "* %s 100달러를 걸었고, 500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 500);
			}
			else if(battingmoney[playerid] == 2)
			{
			format(string, sizeof(string), "* %s 500달러를 걸었고, 2500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 2500);
			}
			else if(battingmoney[playerid] == 3)
			{
			format(string, sizeof(string), "* %s 1000달러를 걸었고, 5000달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 5000);
			}
			return 1;
			}
			}
			else if(listitem == 4)
			{
			if(dice == 5)
			{
			if(battingmoney[playerid] == 1)
			{
			format(string, sizeof(string), "* %s 100달러를 걸었고, 500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 500);
			}
			else if(battingmoney[playerid] == 2)
			{
			format(string, sizeof(string), "* %s 500달러를 걸었고, 2500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 2500);
			}
			else if(battingmoney[playerid] == 3)
			{
			format(string, sizeof(string), "* %s 1000달러를 걸었고, 5000달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 5000);
			}
			return 1;
			}
			}
			else if(listitem == 5)
			{
			if(dice == 6)
			{
			if(battingmoney[playerid] == 1)
			{
			format(string, sizeof(string), "* %s 100달러를 걸었고, 500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 500);
			}
			else if(battingmoney[playerid] == 2)
			{
			format(string, sizeof(string), "* %s 500달러를 걸었고, 2500달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 2500);
			}
			else if(battingmoney[playerid] == 3)
			{
			format(string, sizeof(string), "* %s 1000달러를 걸었고, 5000달러를 받았습니다.", RPPlayerName(playerid));
			ProxDetector(5.0, playerid, string, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
			GiveMoney(playerid, 5000);
			}
			return 1;
			}
			}

		}
		return 1;
}

	//==============================================================================
	if(dialogid == DIALOG_4)
	{
		if(response)
		{
			if(listitem == 0)//택시기사 호출
			{
				if(TaxiDrivers < 1)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 죄송합니다. 현재 운임중인 택시가 없습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량 렌트는 (/렌트카)로 할 수있으며 항구주차장에 위치해있습니다.");
					return 0;
				}
				if(TransportDuty[playerid] > 0)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지금 택시를 호출하실수 없습니다");
					return 0;
				}
				new zone[MAX_ZONE_NAME];
				GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
				new string[128];
				format(string, sizeof(string), "INFO : "#C_WHITE" %s님이 콜택시를 요청합니다. (위치: %s) (/동의 택시)로 수락하세요", sendername, zone);
				SendFamilyMessage(10, COLOR_ERROR, string);
				TaxiCall = playerid;
				SCM(playerid, COLOR_SUC, "INFO : "#C_WHITE" 택시기사를 호출하였습니다 잠시만 기다려 주십시오");
			}
		}
		return 1;
	}

	if(dialogid == DIALOG_5)
	{
		if(response)
		{
			if(listitem == 0)//댈리스 시티
			{
				SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 1)//아크엔젤
			{
				SetPlayerPos(playerid, -2706.9822,217.2729,4.1797);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 2)//샌피에로
			{
				SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 3)//드모르간
			{
				SetPlayerPos(playerid, 122.9833,1917.7555,18.9924);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 4)//광고소
			{
				SetPlayerPos(playerid, 1773.5612,-1370.8578,15.7578);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 5)//싱글 드라이빙 스쿨
			{
				SetPlayerPos(playerid, -2054.3381,-195.9506,35.3274);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 6)//폐건물
			{
				SetPlayerPos(playerid, -2150.7200,-246.6872,36.5156);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 7)//항구
			{
				SetPlayerPos(playerid, 2526.0906,-2246.1951,13.5469);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 8)//광산
			{
				SetPlayerPos(playerid, 604.0355,880.7723,-42.9679);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 9)//바위산
			{
				SetPlayerPos(playerid, -2319.2358,-1639.6400,483.7031);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 10)//응가온천
			{
				SetPlayerPos(playerid, 1807.0411,-1888.6918,13.4091);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 11)//항구
			{
				SetPlayerPos(playerid, 2521.2507,-2233.3838,13.5469);
				SetPlayerInterior(playerid,0);
			}
			if(listitem == 12)//체육관
			{
				SetPlayerPos(playerid, 769.9870,4.9968,1000.7161);
				SetPlayerInterior(playerid,5);
			}
			if(listitem == 13)//시골
			{
				SetPlayerPos(playerid, 130.9785,-67.7380,1.5781);
				SetPlayerInterior(playerid,5);
			}
		}
		return 1;
	}
	//=======================================================
	if(dialogid == DIALOG_7)
	{
		new sendername_n[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername_n, sizeof(sendername_n));
		new string[450];
		if(response)
		{
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][Quest]==0)
				{
					format(string, 150,"Dear. %s\nHey Brother!\n네가 입국했다는 소식을 들었다\n지금당장 광장으로 와봐!\n \nFrom. Big-Smoke",sendername_n);
					ShowPlayerDialog(playerid,MSGBOX_NONE,DIALOG_STYLE_MSGBOX,"퀘스트 부과설명",string, "확인","취소");
				}
				if(PlayerInfo[playerid][Quest]==1)
				{
					format(string, 150,"Dear. %s\n이보게 아직 옷은 멀었는가?\n옷가게로가서 (/옷)을 입력해봐!\n잘 꾸미고 와라!\n \nFrom. Newbie Big-Smoke",sendername_n);
					ShowPlayerDialog(playerid,MSGBOX_NONE,DIALOG_STYLE_MSGBOX,"퀘스트 부과설명",string, "확인","취소");
				}
				if(PlayerInfo[playerid][Quest]==2)
				{
					format(string, 150,"Dear. %s\n너의 돈 보금자리가 주머니라 안타깝군\n은행에서 통장을 만들고와라!\n \nFrom. Newbie Big-Smoke",sendername_n);
					ShowPlayerDialog(playerid,MSGBOX_NONE,DIALOG_STYLE_MSGBOX,"퀘스트 부과설명",string, "확인","취소");
				}
				if(PlayerInfo[playerid][Quest]==3)
				{
					format(string, 150,"Dear. %s\n준비중이야~ 다음에 해보라구!\n \nFrom. Newbie Big-Smoke",sendername_n);
					ShowPlayerDialog(playerid,MSGBOX_NONE,DIALOG_STYLE_MSGBOX,"퀘스트 부과설명",string, "확인","취소");
				}
			}
		}
		return 1;
	}
	if(dialogid == 1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetMoney(playerid) <= 999)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 돈이 부족합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][rmsdbr] < 120)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 배우기엔 근육이 부족합니다 근육은 (120)이 필요합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pBoxing] == 0)
				{
					PlayerInfo[playerid][pBoxing] = 1;
					SCM(playerid, COLOR_INFO, "(정보) 돈을 지불하고 복싱을 배웠습니다 (/스타일)을 입력하세요");
					GiveMoney(playerid, -1000);
					PlayerUpdate();
					return 1;
				}
			}
			else if(listitem == 1)
			{
				if(GetMoney(playerid) <= 999)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 돈이 부족합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][rmsdbr] < 120)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 배우기엔 근육이 부족합니다 근육은 (120)이 필요합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pKungfu] == 0)
				{
					PlayerInfo[playerid][pKungfu] = 1;
					SCM(playerid, COLOR_INFO, "(정보) 돈을 지불하고 쿵후를 배웠습니다 (/스타일)을 입력하세요");
					GiveMoney(playerid, -1000);
					PlayerUpdate();
					return 1;
				}
			}
			else if(listitem == 2)
			{
				if(GetMoney(playerid) <= 999)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 돈이 부족합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][rmsdbr] < 120)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 배우기엔 근육이 부족합니다 근육은 (120)이 필요합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pTaek] == 0)
				{
					PlayerInfo[playerid][pTaek] = 1;
					SCM(playerid, COLOR_INFO, "(정보) 돈을 지불하고 태권도를 배웠습니다 (/스타일)을 입력하세요");
					GiveMoney(playerid, -1000);
					PlayerUpdate();
					return 1;
				}
			}
			else if(listitem == 3)
			{
				if(GetMoney(playerid) <= 999)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 돈이 부족합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][rmsdbr] < 150)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 배우기엔 근육이 부족합니다 근육은 (150)이 필요합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pGrabk] == 0)
				{
					PlayerInfo[playerid][pGrabk] = 1;
					SCM(playerid, COLOR_INFO, "(정보) 돈을 지불하고 그랩킥을 배웠습니다 (/스타일)을 입력하세요");
					GiveMoney(playerid, 400);
					PlayerUpdate();
					return 1;
				}
			}
			else if(listitem == 4)
			{
				if(GetMoney(playerid) <= 999)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 돈이 부족합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][rmsdbr] < 150)
				{
					SCM(playerid, COLOR_ERROR, "(에러) 배우기엔 근육이 부족합니다 근육은 (150)이 필요합니다.");
					return 1;
				}
				if(PlayerInfo[playerid][pEllbow] == 0)
				{
					PlayerInfo[playerid][pEllbow] = 1;
					SCM(playerid, COLOR_INFO, "(정보) 돈을 지불하고 엘보우를 배웠습니다 (/스타일)을 입력하세요");
					GiveMoney(playerid, 400);
					PlayerUpdate();
					return 1;
				}
			}
		}
	}
	if(dialogid == 3)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pCarLic] < 1)
				{
					if(GetMoney(playerid) > 99)
					{
						GiveMoney(playerid, -100);
						PlayerPlayMusic(playerid);
						SetPlayerPos(playerid,1114.8767,1341.3473,10.8203);
						SetPlayerVirtualWorld(playerid,0);
						DTCT[playerid] = 1;
						SetPlayerInterior(playerid, 0);
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운전면허 시험비로 돈 100달러를 가져갑니다.");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 운전시험을 보시려면 앞에보이는 파란색 차량을 타주세요.");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 한눈을 파시다간 벽과 부딛칠수있으니 주의 바랍니다.");
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 면허를 가지고 있습니다");
				}
			}

			if(listitem == 1)//대형면허 가격
			{
				if(PlayerInfo[playerid][peogudLic] < 1)
				{
					if(GetMoney(playerid) > 199)
					{
						GiveMoney(playerid, -200);
						SetPlayerInterior(playerid,3);
						GameTextForPlayer(playerid, "~r~Listen to the instruction",60,3);
						new spawn = random(9);
						switch(spawn)
						{
						case 0:SetPlayerPos(playerid,371.6124,195.2306,1014.7152);
						case 1:SetPlayerPos(playerid,373.5528,195.2322,1014.7152);
						case 2:SetPlayerPos(playerid,375.5457,195.2317,1014.7152);
						case 3:SetPlayerPos(playerid,379.8497,191.9068,1014.7152);
						case 4:SetPlayerPos(playerid,379.8491,189.8319,1014.7152);
						case 5:SetPlayerPos(playerid,379.8502,186.9656,1014.7152);
						case 6:SetPlayerPos(playerid,379.8463,184.8775,1014.7152);
						case 7:SetPlayerPos(playerid,379.8499,182.9168,1014.7152);
						case 8:SetPlayerPos(playerid,377.6015,180.6655,1014.7152);
						}
						eogud1(playerid);
						SetTimerEx("eogud2", 20000, 0, "d", playerid);
						SetTimerEx("eogud3", 40000, 0, "d", playerid);
						SetTimerEx("eogud4", 60000, 0, "d", playerid);
						SetTimerEx("eogud5", 80000, 0, "d", playerid);
						SetTimerEx("eogud6", 100000, 0, "d", playerid);
						SetTimerEx("eogud7", 120000, 0, "d", playerid);
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 면허를 가지고 있습니다");
				}
			}
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pFishLic] < 1)
				{
					if(GetMoney(playerid) > 149)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 낚시면허를 $150에 발급받으셨습니다");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" LVPD / FBI 는 낚시만 투잡으로 즐기실 수 있습니다.");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 낚시도구는 도구점에서 구매가 가능합니다.");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 1급수 바닷물에서 낚시가 가능합니다.");
						GiveMoney(playerid, -150);
						PlayerInfo[playerid][pFishLic] = 1;
						PlayerUpdate();
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 면허를 가지고 있습니다");
				}
			}
			if(listitem == 3)
			{
				if(PlayerInfo[playerid][pFlyLic] < 1)
				{
					if(GetMoney(playerid) > 4999)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 비행면허를 $5000에 발급받으셨습니다.");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 비행 주차는 건물 옥상이나 착륙장에서만 가능합니다. ");
						GiveMoney(playerid, -5000);
						PlayerInfo[playerid][pFlyLic] = 1;
						PlayerUpdate();
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 면허를 가지고 있습니다");
				}
			}
			if(listitem == 4)
			{
				if(PlayerInfo[playerid][pBoatLic] < 1)
				{
					if(GetMoney(playerid) > 2499)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 항해면허를 $2500에 발급받으셨습니다");
						GiveMoney(playerid, -2500);
						PlayerInfo[playerid][pBoatLic] = 1;
						PlayerUpdate();
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 이미 면허를 가지고 있습니다");
				}
			}
		}
	}
    if(dialogid == 26000)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, DIALOG_25, DIALOG_STYLE_LIST, "목록", "시청\n경찰서\n분수장\n은행\n방송국\n면허소\n병원\n주유소본점\n체육관\n교회\n대학교\n공항\n편의점1\n편의점2\n편의점3\n모텔\n시내\n옷가게\n도넛가게\n피자샵\n차량판매소\n도구점\n사진촬영소\n클럽\n렌트카\n농구장\n택배회사\n청소회사\n트럭회사\n노점회사\n농부회사\n밭\n교도소\n폐차장", "확인", "닫기");
			}
		}
	}
	if(dialogid == DIALOG_25)
	{
    	if(listitem == 0)//전자
		{
			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2195.8628,1677.2677,12.3672,10.0); // 체크포인트세팅 OK
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [시청]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 1)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2290.1050,2431.0547,10.8203,10.0); // 체크포인트세팅OK
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [경찰서]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 2)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2316.8254,2352.7297,17.7403,10.0); // 체크포인트세팅ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [분수장]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 3)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2474.4353,1023.4624,10.8203,10.0); // 체크포인트세팅 ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [은행]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 4)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1952.5834,1342.9934,15.3672,10.0); // 체크포인트세팅 OK
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [방송국]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 5)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1168.6001,1362.5911,10.9293,10.0); // 체크포인트세팅ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [면허소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 6)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2127.3735,2379.5562,10.8203,10.0); // 체크포인트세팅 ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [병원]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 7)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2138.2227,954.2325,10.7044,10.0); // 체크포인트세팅 ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [주유소 본점]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 8)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2473.9734,997.7219,14.2725,10.0); // 체크포인트세팅ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [체육관]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 9)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2232.8472,-1333.2278,23.9815,10.0); // 체크포인트세팅 내부없음
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [교회]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 10)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2238.1003,1285.5392,10.8203,10.0); // 체크포인트세팅o
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [대학교]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 11)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1674.0463,1447.9600,10.7837,10.0); // 체크포인트세팅 ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [공항]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 12)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2546.6387,1972.2493,10.8203,10.0); // 체크포인트세팅O
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [편의점1]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 13)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2452.3806,2064.4331,10.8203,10.0); // 체크포인트세팅O
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [편의점2]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 14)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1937.2456,2307.2346,10.8203,10.0); // 체크포인트세팅O
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [편의점3]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 15)//전자
		{
			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2015.1666,1106.4825,10.8203,10.0); // 체크포인트세팅o
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [모텔]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 16)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2057.8440,1072.1469,11.0988,10.0); // 체크포인트세팅 ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [시내]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 17)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2347.9897,2261.7397,8.1478,10.0); // 체크포인트세팅 O
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [옷가게]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 18)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2472.7322,2034.4108,11.0625,10.0); // 체크포인트세팅o
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [도넛가게]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 19)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2105.0800,-1806.7100,13.5500,10.0); // 체크포인트세팅o
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [피자샵]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 20)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2167.7834,982.8853,10.6799,10.0); // 체크포인트세팅o
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [차량판매소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 21)//전자
		{
   			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2441.5891,1722.4738,10.8203, 10.0);//체크포인트세팅 OK
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [도구점]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화 1367.1309,-1280.2826,13.5469
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 22)//전자
		{
			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2336.7437,1730.3838,10.8203, 10.0);//체크포인트세팅 내부 x
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [사진촬영소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화 1367.1309,-1280.2826,13.5469
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 23)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1835.77,-1682.4000,13.3800,10.0); // 체크포인트세팅 ok
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [클럽]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 24)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2142.7444,-1124.7827,25.4686,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [렌트카]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 25)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2782.3027,-2019.0826,13.5547,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [농구장]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 26)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1732.3517,-1273.5388,13.1542,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [택배회사]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 27)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2180.4624,-1987.1066,13.1451,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [청소회사]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 28)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2437.1460,-2114.0361,13.1421,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [트럭회사]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 29)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,1068.5936,-1295.9232,13.1438,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [노점회사]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 30)//전자
		{
		    ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,-377.0168,-1431.4742,25.3263,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [농부회사]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 31)//전자
		{
			ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,-256.3690,-1366.7371,9.8769, 10.0);//체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [밭]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화 1367.1309,-1280.2826,13.5469
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 32)//전자
		{
	   		ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,-2762.9919,-2608.4778,2.1773,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [교도소]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
		if(listitem == 33)//전자
		{
	   		ResetCheckPoint(playerid);
			SetPlayerCheckpoint(playerid,2203.3596,2474.3584,10.8203,10.0); // 체크포인트세팅
			SCM(playerid,COLOR_SUC,"(정보) 지도(미니맵) [폐차장]으로 목적지가 설정되었습니다");
			Navigation[playerid] = 1; // 네비게이션 활성화
			ckdnlcl(playerid);
			wleh(playerid);
			cjdthdlf(playerid);
			FindCP2[playerid] = 1;
		}
	}
	if(dialogid == DIALOG_9)
	{
		if(response)
		{
			if(listitem == 0)//전자
			{
  		 	ShowPlayerDialog(playerid,DIALOG_10,DIALOG_STYLE_LIST,"전자 제품","휴대폰개통($300)\n전화번호부($50)\n시계($100)\n구식CD플레이어[정품만 사용 가능함]($10)\n계산기($10)\n일회용카메라($50)\n붐박스[5000]","구매","취소");
			}
			if(listitem == 1)//소모
			{
				ShowPlayerDialog(playerid,DIALOG_11,DIALOG_STYLE_LIST,"소모 제품","담배($10)\n술($20)\n가스캔($50)\n밧줄($50)\n재갈($50)\n안대($50)","구매","취소");//피자 15달러고 체력 10 오를꺼고, 그렇게 할 예쩡.
			}
		}
 }

	if(dialogid == 80)
	{
		if(response)
		{
 			 new string[256];
			if(listitem == 0)//총기점
			{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 1500 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 1500);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 합법무기 Silenced Pistol을 구매하셨습니다.");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,23,35);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
			}
			if(listitem == 1)//총기점
			{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 2100 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 2100);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 합법무기 Shotgun을 구매하셨습니다.");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,25,25);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
			}
  			if(listitem == 2)//총기점
			{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 1500 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 1500);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 합법무기 Pistol을 구매하셨습니다.");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,22,70);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
			}
		}
	}

	if(dialogid == DIALOG_10)//전자
	{
		new string[256];
		if(response)
		{
			if(listitem == 0)
			{
				if(GetMoney(playerid) >= 500)
				{
					if(PlayerInfo[playerid][pTraderPerk] > 0)
					{
						new skill = 15 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 500 - price;
						GiveMoney(playerid, -payout);
						SBizzInfo[2][sbTill] += payout;
						ExtortionSBiz(2, payout);
					}
					else
					{
						GiveMoney(playerid, -500);
						SBizzInfo[2][sbTill] += 500;
						ExtortionSBiz(2, 100);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new randphone = 10000 + random(89999);
					PlayerInfo[playerid][pPnumber] = randphone;
					PlayerInfo[playerid][pSmart] = 1;
					format(string, sizeof(string), "SYSTEM :"#C_WHITE" 당신은 스마트폰을 구매했습니다. (/스탯)");
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_YELLOW, "SYSTEM :"#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 1)
			{
				if(GetMoney(playerid) >= 50)
				{
     				if(PlayerInfo[playerid][pPhoneBook] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 전화번호부를 가지고 있습니다");
						return 1;
					}
					if(PlayerInfo[playerid][pTraderPerk] > 0)
					{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 50 - price;
						GiveMoney(playerid, -payout);
						SBizzInfo[2][sbTill] += payout;
						ExtortionSBiz(2, payout);
						GameTextForPlayer(playerid, "~r~-$50", 5000, 1);
					}
					else
					{
						GiveMoney(playerid, -50);
						SBizzInfo[2][sbTill] += 50;
						ExtortionSBiz(2, 10);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pPhoneBook] = 1;
					format(string, sizeof(string), "INFO : "#C_WHITE" 전화번호부를 구입했습니다");
					SCM(playerid, COLOR_ERROR, string);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방의 번호를 (/번호)로 확인하신후 (/통화)를 이용해보세요");
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 2)
			{
				if (GetMoney(playerid) >= 100)
				{
					if(PlayerInfo[playerid][pWatch] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 시계를 가지고 있습니다");
						return 1;
					}
					GiveMoney(playerid, -100);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 시계를 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 현재 시각을 (/시간)으로 확인합니다");
					PlayerInfo[playerid][pWatch] = 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 3)
			{
				if (GetMoney(playerid) >= 10)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 25 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GiveMoney(playerid, -payout);
					}
					else
					{
						GiveMoney(playerid, -10);
					}
					if(gRadio[playerid] == 1)
					{
					 	SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 CD플레이어를 갖고 있습니다.");
					    return 1;
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "INFO : "#C_WHITE" CD플레이어를 구입했습니다.");
					SendClientMessage(playerid, COLOR_ERROR, string);
					SendClientMessage(playerid, COLOR_ERROR, "INFO : "#C_WHITE" (/음악)");
					gRadio[playerid] = 1;
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
		if(listitem == 4)
		{
			if (GetMoney(playerid) >= 10)
			{
				if (PlayerInfo[playerid][pabcdefg] == 0)
				{
					GiveMoney(playerid, -30);
					PlayerInfo[playerid][pabcdefg] += 1;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 계산기를 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 자세한 내용은 (/계산기)를 입력하십시오");
					PlayerUpdate();
				}
				else
				SCM(playerid, COLOR_ERROR, "ERRORE : 계산기를 이미 가지고계십니다.");
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
			}
		}
		if(listitem == 5)
		{
			if (GetMoney(playerid) >= 50)
			{
				GiveMoney(playerid, -50);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "INFO : "#C_WHITE" 일회용 카메라를 구입하셨습니다");
				SCM(playerid, COLOR_ERROR, string);
				SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 카메라로 화면을 보는도중 (X-확대)와 (Z-축소)를 사용해보세요");
				GiveWeapon(playerid, 43, 20);
				return 1;
			}
			else
			{
				SCM(playerid, COLOR_SERVER, "(정보) "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
			}
		}
		if(listitem == 6)
	    {
		    if(GetMoney(playerid) >= 5000)
		    {
		    	if(PlayerInfo[playerid][pLevel] < 3)
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 붐박스는 신용등급 '3' 이상만 가능합니다");
    		        PlayerInfo[playerid][pLily] = 0;
					return 1;
				}
		        GiveMoney(playerid,-5000);
		        format(string, sizeof(string), "(정보) "#C_WHITE" 붐박스를 구입했습니다. 사용법 [/붐박스]");
				SCM(playerid, COLOR_ERROR, string);
		        PlayerInfo[playerid][pLily] = 1;
			}
			else
			{
			    SCM(playerid,COLOR_SERVER, "(정보) "#C_WHITE" 당신은 그것을 살 돈이 충분하지 않습니다");
			    return 1;
			}
		}
	}
	else
	{
		ShowPlayerDialog(playerid,DIALOG_9,DIALOG_STYLE_LIST,"구매 목록","전자제품\n소모품","선택","취소");
	}
}

	if(dialogid == DIALOG_11)//소모
	{
		new string[256];
		if(response)
		{

			if(listitem == 0)
			{
				if (GetMoney(playerid) >= 10)
				{
					if(PlayerInfo[playerid][pCigarettes] >= 50)
					{
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 이미 %d개비의 담배가 있습니다.", PlayerInfo[playerid][pCigarettes]);
						SCM(playerid, COLOR_ERROR, string);
						return 1;
					}
					GiveMoney(playerid, -10);
					PlayerInfo[playerid][pCigarettes] += 20;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 한갑의 담배(20개입)를 구입하셨습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 담배는 (/담배)로 피울 수 있습니다.");
					PlayerUpdate();
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 1)
			{
				if (GetMoney(playerid) >= 20)
				{
					if(PlayerInfo[playerid][pLighter] >= 15)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 너무 많은 양의 술병을 가지고 있습니다");
						return 1;
					}
					GiveMoney(playerid, -20);
					PlayerInfo[playerid][pLighter] += 4;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 4병의 술을 구입하셨습니다.");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 술은 (/술)로 마실 수 있습니다.");
					PlayerUpdate();
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 2)
			{
				if (GetMoney(playerid) >= 50)
				{
				    if(PlayerInfo[playerid][pFuel] >= 5)
				    {
				        SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 가스캔을 5개 이상 소지를 하고 있습니다.");
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 더 이상의 가스캔은 구매할 수 없습니다.");
				        return 1;
				    }
					PlayerInfo[playerid][pFuel] += 1;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 차량에 (/연료)로 연료를 충전합니다");
					GiveMoney(playerid, -50);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 3)
			{
				if(GetMoney(playerid) >= 50)
				{
					if(PlayerInfo[playerid][pRope] >= 3)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밧줄은 최대 3개까지 소지할 수 있습니다");
						return 1;
					}
					GiveMoney(playerid, -50);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 밧줄을 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방을 (/줄)로 묶을수 있고 (/줄풀기)로 풀 수 있습니다.");
					PlayerInfo[playerid][pRope] += 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 4)
			{
				if(GetMoney(playerid) >= 50)
				{
					if(PlayerInfo[playerid][pShutupMouse] >= 3)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 재갈은 최대 3개까지 소지할 수 있습니다");
						return 1;
					}
					GiveMoney(playerid, -50);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 재갈을 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방을 (/입)으로 막을수 있고 (/입풀기)로 풀 수 있습니다");
					PlayerInfo[playerid][pShutupMouse] += 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 5)
			{
				if(GetMoney(playerid) >= 50)
				{
					if(PlayerInfo[playerid][pBandage] >= 3)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 안대는 최대 3개까지 소지할 수 있습니다");
						return 1;
					}
					GiveMoney(playerid, -50);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 안대를 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 상대방을 (/안대)로 눈을 가리고 (/안대풀기)로 풀 수 있습니다.");
					PlayerInfo[playerid][pBandage] += 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			ShowPlayerDialog(playerid,DIALOG_9,DIALOG_STYLE_LIST,"구매 목록","전자제품\n소모품","선택","취소");
		}
	}
	if(dialogid == DIALOG_12)//도구
	{
		new string[256];
		if(response)
		{
			if(listitem == 0)
			{
				if (GetMoney(playerid) >= 150)
				{
					if(PlayerInfo[playerid][pFishTool] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 낚시도구를 가지고 있습니다");
						return 1;
					}
					GiveMoney(playerid, -150);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 낚시도구를 구매하셨습니다");
					PlayerInfo[playerid][pFishTool] = 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 1)
			{
				if(GetMoney(playerid) >= 1)
				{
					if(PlayerInfo[playerid][pTraderPerk] > 0)
					{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 1 - price;
						GiveMoney(playerid, -payout);
						SBizzInfo[2][sbTill] += payout;
						ExtortionSBiz(2, payout);
					}
					else
					{
						GiveMoney(playerid, -1);
						SBizzInfo[2][sbTill] += 10;
						ExtortionSBiz(2, 10);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gDice[playerid] = 1;
					format(string, sizeof(string), "INFO : "#C_WHITE" 주사위를 구매했습니다. (/주사위)");
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 2)
			{
				if (GetMoney(playerid) >= 150)
				{
					if(PlayerInfo[playerid][pGabang] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 가방을 소유하고 있습니다");
						return 1;
					}
					GiveMoney(playerid, -150);
					PlayerInfo[playerid][pGabang] += 1;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 가방을 구매하셨습니다. (/가방)");
					PlayerUpdate();
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
			if(listitem == 3)
			{
				if (GetMoney(playerid) >= 33)
				{
					GiveMoney(playerid, -33);
					PlayerInfo[playerid][pAD] += 1;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 광고판을 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/광고판)으로 설치하신 후 (/광고판제거)로 제거합니다");
					PlayerUpdate();
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
					if(listitem == 4)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 50 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, -50);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 스프레이캔을 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,41,1000);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
			if(listitem == 5)
			{
				if (GetMoney(playerid) >= 1)
				{
					if(PlayerInfo[playerid][pTraderPerk] > 0)
					{
						new skill = 1 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GiveMoney(playerid, -payout);
					}
					else
					{
						GiveMoney(playerid, -10);
					}
					Condom[playerid] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "INFO : "#C_WHITE" 콘돔을 구매하셨습니다");
					SCM(playerid, COLOR_ERROR, string);
					return 1;
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
					if(listitem == 6)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 10 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, -100);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 알루미늄방망이를 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,5,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				if(listitem == 7)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 150 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 150);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 골프채를 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,2,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				if(listitem == 8)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 15 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 15);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 꽃");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,14,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
   					if(listitem == 9)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 100 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, -100);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 당구채를 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,7,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
				if(listitem == 10)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 50 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 50);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 당신은 삽을 구매하셨습니다.");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,6,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
						if(listitem == 11)
			{
				if(GetMoney(playerid) >= 250)
				{
					if(PlayerInfo[playerid][pRadio] != 0)
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 이미 무전기를 소유하고 있습니다");
						return 1;
					}
					GiveMoney(playerid, -250);
					PlayerInfo[playerid][pRadio] += 1;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 무전기를 구매하셨습니다");
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" (/주파수)를 설정하신 후 (/z)로 무전에 말을합니다");
					PlayerUpdate();
				}
				else
				{
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
				}
			}
				if(listitem == 12)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 50 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 50);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 일회용 너클을 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,1,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
 				if(listitem == 13)
				{
					if (GetMoney(playerid) >= 150)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 150 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 150);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 나이프를 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,4,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
 				if(listitem == 14)
				{
					if (GetMoney(playerid) >= 1)
					{
						if(PlayerInfo[playerid][pTraderPerk] > 0)
						{
							new skill = 1 / 100;
							new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
							new payout = 300 - price;
							GiveMoney(playerid, -payout);
						}
						else
						{
							GiveMoney(playerid, - 300);
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "INFO : "#C_WHITE" 카타나를 구매하셨습니다");
						SCM(playerid, COLOR_ERROR, string);
						GiveWeapon(playerid,8,1);
						return 1;
					}
					else
					{
						SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
					}
				}
			}
			if(listitem == 15)
			{
                if (GetMoney(playerid) >= 10)
				{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
	      		if(PlayerInfo[playerid][pCard] != 0)
				{
				SCM(playerid, COLOR_ERROR, " 당신은 이미 카드를 갖고 있습니다.");
				return 1;
				}
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GiveMoney(playerid, -payout);
					}
					else
					{
						GiveMoney(playerid, -10);
					}
					PlayerInfo[playerid][pCard] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "INFO : "#C_WHITE" 카드를 구매하셨습니다.");
					format(string, sizeof(string), "INFO : "#C_WHITE" (/카드)");
					SCM(playerid, COLOR_ERROR, string);
					return 1;
			}
			else
			{
				SCM(playerid, COLOR_WHITE, "INFO : "#C_WHITE" 당신은 당신은 지갑에 소지금이 부족합니다..");
			}
		}
		if(listitem == 16)
		{
			if (GetMoney(playerid) >= 100)
			{
				if(PlayerInfo[playerid][pTraderPerk] > 0)
				{
					new skill = 1 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 100 - price;
					GiveMoney(playerid, -payout);
				}
				else
				{
					GiveMoney(playerid, - 100);
				}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 지팡이를 구매하셨습니다.");
					GiveWeapon(playerid,15,1);
				return 1;
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
			}
		}
		if(listitem == 17)
		{
			if (GetMoney(playerid) >= 100)
			{
				if(PlayerInfo[playerid][pTraderPerk] > 0)
				{
					new skill = 1 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 100 - price;
					GiveMoney(playerid, -payout);
				}
				else
				{
					GiveMoney(playerid, - 100);
				}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 철근을 1000개를 구매하셨습니다. 철근으로 바리게이트를 설치할 수 있습니다.");
					PlayerInfo[playerid][pBaejin2] += 1000;//철근
				return 1;
			}
			else
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지갑에 소지금이 부족합니다.");
			}
		}
	}

	if(dialogid == 5)
	{
		if(response)
		{
		}
	}
	if(dialogid == 17)
	{ //번호등록\n번호삭제\n번호보기
		if(response)
		{
			if(listitem == 0)
			{
				new string[256];
				format(string, sizeof(string), "<1> %d(%s)\n<2> %d(%s)\n<3> %d(%s)\n<4> %d(%s)\n<5> %d(%s)", PlayerInfo[playerid][pPhoneB1], PlayerInfo[playerid][pPhoneN1], PlayerInfo[playerid][pPhoneB2], PlayerInfo[playerid][pPhoneN2], PlayerInfo[playerid][pPhoneB3], PlayerInfo[playerid][pPhoneN3], PlayerInfo[playerid][pPhoneB4], PlayerInfo[playerid][pPhoneN4], PlayerInfo[playerid][pPhoneB5], PlayerInfo[playerid][pPhoneN5]);
				ShowPlayerDialog(playerid, 18, DIALOG_STYLE_LIST, "번호 등록", string, "열기","닫기");
			}
			if(listitem == 1)
			{
				new string[256];
				format(string, sizeof(string), "<1> %d(%s)\n<2> %d(%s)\n<3> %d(%s)\n<4> %d(%s)\n<5> %d(%s)", PlayerInfo[playerid][pPhoneB1], PlayerInfo[playerid][pPhoneN1], PlayerInfo[playerid][pPhoneB2], PlayerInfo[playerid][pPhoneN2], PlayerInfo[playerid][pPhoneB3], PlayerInfo[playerid][pPhoneN3], PlayerInfo[playerid][pPhoneB4], PlayerInfo[playerid][pPhoneN4], PlayerInfo[playerid][pPhoneB5], PlayerInfo[playerid][pPhoneN5]);
				ShowPlayerDialog(playerid, 23, DIALOG_STYLE_LIST, "번호 삭제", string, "삭제","닫기");
			}
			if(listitem == 2)
			{
				new string[256];
				format(string, sizeof(string), "<1> %d(%s)\n<2> %d(%s)\n<3> %d(%s)\n<4> %d(%s)\n<5> %d(%s)", PlayerInfo[playerid][pPhoneB1], PlayerInfo[playerid][pPhoneN1], PlayerInfo[playerid][pPhoneB2], PlayerInfo[playerid][pPhoneN2], PlayerInfo[playerid][pPhoneB3], PlayerInfo[playerid][pPhoneN3], PlayerInfo[playerid][pPhoneB4], PlayerInfo[playerid][pPhoneN4], PlayerInfo[playerid][pPhoneB5], PlayerInfo[playerid][pPhoneN5]);
				ShowPlayerDialog(playerid, 25, DIALOG_STYLE_LIST, "번호 목록", string, "확인","닫기");
			}
		}
	}
	if(dialogid == 18)
	{ //번호등록
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pPhoneB1] == 0)
				{
					ShowPlayerDialog(playerid, 19, DIALOG_STYLE_INPUT, "번호 입력", "전화번호를 입력해주세요", "등록", "취소");
				}
				else
				{
					ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "번호 등록", "이미 번호가 등록되어있습니다", "확인", "뒤로");
				}
			}
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pPhoneB2] == 0)
				{
					ShowPlayerDialog(playerid, 20, DIALOG_STYLE_INPUT, "번호 입력", "전화번호를 입력해주세요", "등록", "취소");
				}
				else
				{
					ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "번호 등록", "이미 번호가 등록되어있습니다", "확인", "뒤로");
				}
			}
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pPhoneB3] == 0)
				{
					ShowPlayerDialog(playerid, 21, DIALOG_STYLE_INPUT, "번호 입력", "전화번호를 입력해주세요", "등록", "취소");
				}
				else
				{
					ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "번호 등록", "이미 번호가 등록되어있습니다", "확인", "뒤로");
				}
			}
			if(listitem == 3)
			{
				if(PlayerInfo[playerid][pPhoneB4] == 0)
				{
					ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT, "번호 입력", "전화번호를 입력해주세요", "등록", "취소");
				}
				else
				{
					ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "번호 등록", "이미 번호가 등록되어있습니다", "확인", "뒤로");
				}
			}
   			if(listitem == 4)
			{
				if(PlayerInfo[playerid][pPhoneB5] == 0)
				{
					ShowPlayerDialog(playerid, 50, DIALOG_STYLE_INPUT, "번호 입력", "전화번호를 입력해주세요", "등록", "취소");
				}
				else
				{
					ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "번호 등록", "이미 번호가 등록되어있습니다", "확인", "뒤로");
				}
			}
		}
	}
	if(dialogid == 19)
	{
		if(response)
		{
			PlayerInfo[playerid][pPhoneB1] = strval(inputtext);
			ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "이름 입력", "이름을 적어주세요", "확인", "닫기");
		}
	}
		if(dialogid == 49)
	{
		if(response)
		{
			PlayerInfo[playerid][pPhoneB4] = strval(inputtext);
			ShowPlayerDialog(playerid, 52, DIALOG_STYLE_INPUT, "이름 입력", "이름을 적어주세요", "확인", "닫기");
		}
	}
		if(dialogid == 50)
	{
		if(response)
		{
			PlayerInfo[playerid][pPhoneB5] = strval(inputtext);
			ShowPlayerDialog(playerid, 51, DIALOG_STYLE_INPUT, "이름 입력", "이름을 적어주세요", "확인", "닫기");
		}
	}
	if(dialogid == 26)
	{
		if(response)
		{
			if(strlen(inputtext))
			{
				new string[256];
				format(string, sizeof(string), "%s",inputtext);
				strmid(PlayerInfo[playerid][pPhoneN1], string, 0, strlen(string), 255);
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, "이름 등록", "이름이 등록되었습니다", "확인", "닫기");
			}
		}
	}
	if(dialogid == 20)
	{
		if(response)
		{
			PlayerInfo[playerid][pPhoneB2] = strval(inputtext);
			ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "이름 입력", "이름을 적어주세요", "확인", "닫기");
		}
	}
		if(dialogid == 51)
	{
		if(response)
		{
			if(strlen(inputtext))
			{
				new string[256];
				format(string, sizeof(string), "%s",inputtext);
				strmid(PlayerInfo[playerid][pPhoneN3], string, 0, strlen(string), 255);
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, "이름 등록", "이름이 등록되었습니다", "확인", "닫기");
			}
		}
	}
		if(dialogid == 52)
	{
		if(response)
		{
			if(strlen(inputtext))
			{
				new string[256];
				format(string, sizeof(string), "%s",inputtext);
				strmid(PlayerInfo[playerid][pPhoneN4], string, 0, strlen(string), 255);
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, "이름 등록", "이름이 등록되었습니다", "확인", "닫기");
			}
		}
	}
	if(dialogid == 27)
	{
		if(response)
		{
			if(strlen(inputtext))
			{
				new string[256];
				format(string, sizeof(string), "%s",inputtext);
				strmid(PlayerInfo[playerid][pPhoneN2], string, 0, strlen(string), 255);
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, "이름 등록", "이름이 등록되었습니다", "확인", "닫기");
			}
		}
	}
	if(dialogid == 21)
	{
		if(response)
		{
			PlayerInfo[playerid][pPhoneB3] = strval(inputtext);
			ShowPlayerDialog(playerid, 28, DIALOG_STYLE_INPUT, "이름 입력", "이름을 적어주세요", "확인", "닫기");
		}
	}
	if(dialogid == 28)
	{
		if(response)
		{
			if(strlen(inputtext))
			{
				new string[256];
				format(string, sizeof(string), "%s",inputtext);
				strmid(PlayerInfo[playerid][pPhoneN3], string, 0, strlen(string), 255);
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_MSGBOX, "이름 등록", "이름이 등록되었습니다", "확인", "닫기");
			}
		}
	}
	if(dialogid == 23)
	{
		if(response)
		{
			if(listitem == 0)
			{
				PlayerInfo[playerid][pPhoneB1] = 0;
				strmid(PlayerInfo[playerid][pPhoneN1], "", 0, strlen(""), 255);
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_MSGBOX, "번호 삭제", "번호 삭제가 완료되었습니다", "확인", "닫기");
			}
			if(listitem == 1)
			{
				PlayerInfo[playerid][pPhoneB2] = 0;
				strmid(PlayerInfo[playerid][pPhoneN2], "", 0, strlen(""), 255);
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_MSGBOX, "번호 삭제", "번호 삭제가 완료되었습니다", "확인", "닫기");
			}
			if(listitem == 2)
			{
				PlayerInfo[playerid][pPhoneB3] = 0;
				strmid(PlayerInfo[playerid][pPhoneN3], "", 0, strlen(""), 255);
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_MSGBOX, "번호 삭제", "번호 삭제가 완료되었습니다", "확인", "닫기");
			}
  			if(listitem == 3)
			{
				PlayerInfo[playerid][pPhoneB4] = 0;
				strmid(PlayerInfo[playerid][pPhoneN4], "", 0, strlen(""), 255);
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_MSGBOX, "번호 삭제", "번호 삭제가 완료되었습니다", "확인", "닫기");
			}
			if(listitem == 4)
			{
				PlayerInfo[playerid][pPhoneB5] = 0;
				strmid(PlayerInfo[playerid][pPhoneN5], "", 0, strlen(""), 255);
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_MSGBOX, "번호 삭제", "번호 삭제가 완료되었습니다", "확인", "닫기");
			}
		}
	}
	if(dialogid == 30)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[0][wMoney], WHInfo[0][wDrug], WHInfo[0][wMaterial]);
					ShowPlayerDialog(playerid, 31, DIALOG_STYLE_MSGBOX, "창고", string, "확인", "취소");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[1][wMoney], WHInfo[1][wDrug], WHInfo[1][wMaterial]);
					ShowPlayerDialog(playerid, 31, DIALOG_STYLE_MSGBOX, "창고", string, "확인", "취소");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[2][wMoney], WHInfo[2][wDrug], WHInfo[2][wMaterial]);
					ShowPlayerDialog(playerid, 31, DIALOG_STYLE_MSGBOX, "창고", string, "확인", "취소");
				}
			}
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[0][wMoney], WHInfo[0][wDrug], WHInfo[0][wMaterial]);
					ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "창고", string, "넣기", "취소");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[1][wMoney], WHInfo[1][wDrug], WHInfo[1][wMaterial]);
					ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "창고", string, "넣기", "취소");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[2][wMoney], WHInfo[2][wDrug], WHInfo[2][wMaterial]);
					ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "창고", string, "넣기", "취소");
				}
			}
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[0][wMoney], WHInfo[0][wDrug], WHInfo[0][wMaterial]);
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, "창고", string, "꺼내기", "취소");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[1][wMoney], WHInfo[1][wDrug], WHInfo[1][wMaterial]);
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, "창고", string, "꺼내기", "취소");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					new string[256];
					format(string, sizeof(string), "<돈> $%d\n<마약> $%d\n<총기재료> $%d\n", WHInfo[2][wMoney], WHInfo[2][wDrug], WHInfo[2][wMaterial]);
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, "창고", string, "꺼내기", "취소");
				}
			}
		}
	}
	if(dialogid == 32)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 33, DIALOG_STYLE_INPUT, "창고", "돈을 얼마나 넣으시겠습니까?", "넣기", "취소");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 34, DIALOG_STYLE_INPUT, "창고", "마약을 얼마나 넣으시겠습니까?", "넣기", "취소");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 35, DIALOG_STYLE_INPUT, "창고", "총기재료를 얼마나 넣으시겠습니까?", "넣기", "취소");
			}
		}
	}
	if(dialogid == 33)
	{
		if(response)
		{
			if(GetMoney(playerid) > strval(inputtext))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					WHInfo[0][wMoney] += strval(inputtext);
					GiveMoney(playerid, -strval(inputtext));
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					WHInfo[1][wMoney] += strval(inputtext);
					GiveMoney(playerid, -strval(inputtext));
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					WHInfo[2][wMoney] += strval(inputtext);
					GiveMoney(playerid, -strval(inputtext));
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "보관", "그 만큼을 가지고 있지 않습니다", "확인", "취소");
			}
		}
	}
	if(dialogid == 34)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pDrugs] > strval(inputtext))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					WHInfo[0][wDrug] += strval(inputtext);
					PlayerInfo[playerid][pDrugs] -= strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					WHInfo[1][wDrug] += strval(inputtext);
					PlayerInfo[playerid][pDrugs] -= strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					WHInfo[2][wDrug] += strval(inputtext);
					PlayerInfo[playerid][pDrugs] -= strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "보관", "그 만큼을 가지고 있지 않습니다", "확인", "취소");
			}
		}
	}
	if(dialogid == 35)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pMats] > strval(inputtext))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					WHInfo[0][wMaterial] += strval(inputtext);
					PlayerInfo[playerid][pMats] -= strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					WHInfo[1][wMaterial] += strval(inputtext);
					PlayerInfo[playerid][pMats] -= strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					WHInfo[2][wMaterial] += strval(inputtext);
					PlayerInfo[playerid][pMats] -= strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "보관", "그 만큼을 가지고 있지 않습니다", "확인", "취소");
			}
		}
	}
	if(dialogid == 36)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_INPUT, "창고", "돈을 얼마나 꺼내시겠습니까?", "넣기", "취소");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_INPUT, "창고", "마약을 얼마나 꺼내시겠습니까?", "넣기", "취소");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 39, DIALOG_STYLE_INPUT, "창고", "총기재료를 얼마나 꺼내시겠습니까?", "넣기", "취소");
			}
		}
	}
	if(dialogid == 37)
	{
		if(response)
		{
			if(GetMoney(playerid) > strval(inputtext))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					WHInfo[0][wMoney] -= strval(inputtext);
					GiveMoney(playerid, strval(inputtext));
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					WHInfo[1][wMoney] -= strval(inputtext);
					GiveMoney(playerid, strval(inputtext));
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					WHInfo[2][wMoney] -= strval(inputtext);
					GiveMoney(playerid, strval(inputtext));
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "보관", "그 만큼을 가지고 있지 않습니다", "확인", "취소");
			}
		}
	}
	if(dialogid == 38)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pDrugs] > strval(inputtext))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					WHInfo[0][wDrug] -= strval(inputtext);
					PlayerInfo[playerid][pDrugs] += strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					WHInfo[1][wDrug] -= strval(inputtext);
					PlayerInfo[playerid][pDrugs] += strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					WHInfo[2][wDrug] -= strval(inputtext);
					PlayerInfo[playerid][pDrugs] += strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "보관", "그 만큼을 가지고 있지 않습니다", "확인", "취소");
			}
		}
	}
	if(dialogid == 39)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pMats] > strval(inputtext))
			{
				if(PlayerInfo[playerid][pMember] == 6)
				{
					WHInfo[0][wMaterial] -= strval(inputtext);
					PlayerInfo[playerid][pMats] += strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pJob] == 5)
				{
					WHInfo[1][wMaterial] -= strval(inputtext);
					PlayerInfo[playerid][pMats] += strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
				else if(PlayerInfo[playerid][pMember] == 15)
				{
					WHInfo[2][wMaterial] -= strval(inputtext);
					PlayerInfo[playerid][pMats] += strval(inputtext);
					SaveWareHouse();
					ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "창고", "창고보기\n창고넣기\n창고빼기", "열기", "닫기");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_MSGBOX, "보관", "그 만큼을 가지고 있지 않습니다", "확인", "취소");
			}
		}
	}
	return 1;
}

forward dnltjdRmx(playerid);
public dnltjdRmx(playerid)
{
	SetPlayerPos(playerid,NellPos[0],NellPos[1],NellPos[2]);
	SetPlayerInterior(playerid,NellInte[playerid]);
	return 1;
}
	public SafeGivePlayerWeapon(plyid, weaponid, ammo)
	{
		return 1;
	}
public CheckGas()
{
	new string[256];
	for(new i=0;i<M_P;i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				if(IsMemberCar(i,GetPlayerVehicleID(i))!=3)
				{
					new vehicle = GetPlayerVehicleID(i);
					if(Gas[vehicle] >= 1)
					{
						if(Gas[vehicle] <= 10)
						{
							PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
							if(gGas[i] == 0) {
								GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Fuel is low",5000,3);
							}
						}
						if(gGas[i] == 1 && gSpeedo[i] != 2) {
							if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABmx(vehicle) || IsAHarvest(vehicle))
							{
							}
							else
							{
								format(string, sizeof(string), "~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Fuel:~g~ %d%",Gas[vehicle]);
							}
							GameTextForPlayer(i,string,20500,3); }
						if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABmx(vehicle) || !CarInfo[vehicle][cStarted])
						{
							Gas[vehicle]++;
						}
						Gas[vehicle]--;
					}
					else
					{
						NoFuel[i] = 1;
						SetPlayerFreeze(i, true, 2);
						TogglePlayerControllable(i, 0);
						GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~No fuel in Vehicle",1500,3);
					}
				}
			}
		}
	}
	return 1;
}
public Movingtime(playerid)
{
	SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
	SetPlayerInterior(playerid, PlayerInfo[playerid][pSaveinterior]);

	new tmp2[256];
	new playername2[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername2, sizeof(playername2));
	if(PlayerInfo[playerid][pSaveinterior] == 0)
	{
		if(PlayerInfo[playerid][pSavelocations] == 0)
		{
			if(PlayerInfo[playerid][pSavelocations2] == 0)
			{
				if(PlayerInfo[playerid][pSavelocations3] == 0)
				{
					PlayerPlaySound(playerid,1135, 0.0, 0.0, 0.0);
					format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~y~ %s", playername2);
					GameTextForPlayer(playerid, tmp2, 5000, 1);
					SetPlayerFreeze(playerid, false, 0);
					TogglePlayerControllable(playerid, 1);
					SetPlayerToTeamColor(playerid);
					return 1;
				}
			}
		}
	}
	SetPlayerInterior(playerid, PlayerInfo[playerid][pSaveinterior]);
	SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVworld]);
//	SetPlayerPos(playerid, PlayerInfo[playerid][pSavelocations],PlayerInfo[playerid][pSavelocations2],PlayerInfo[playerid][pSavelocations3]);
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]+0.5);

	PlayerPlaySound(playerid,1039, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_RED, "INFO : "#C_YELLOW" 계정 정보를 안전하게 불러왔습니다");
	new string[128];

	SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
	SetPlayerInterior(playerid, PlayerInfo[playerid][pSaveinterior]);
	SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVworld]);
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);

	format(string, sizeof(string), "서버에서 %s님의 계정파일을 정상적으 불러왔습니다\n즐거운 시간 되십시오", playername2);
	ShowPlayerDialog(playerid, MSGBOX_NONE, DIALOG_STYLE_MSGBOX, "로그인", string, "확인", "취소");
	format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~y~ %s", playername2);
	GameTextForPlayer(playerid, tmp2, 5000, 1);
	PlayerInfo[playerid][pSavelocations] = 0;
	PlayerInfo[playerid][pSavelocations2] = 0;
	PlayerInfo[playerid][pSavelocations3] = 0;
	PlayerInfo[playerid][pSaveinterior] = 0;
	PlayerInfo[playerid][pVworld] = 0;

	SetHealth(playerid, PlayerInfo[playerid][pHealth]);
	SetArmour(playerid, PlayerInfo[playerid][pArmour]);
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	SetPlayerToTeamColor(playerid);
	if(PlayerInfo[playerid][pJailed] == 3)// 혼수상태
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 지금 기절상태입니다. 지금은 말을하실수가 없습니다..");
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 의사가 도착하지 않다면 10분을 기다리셔야합니다. 사후RP는 논알로 처벌을 받을수있음을 알려드립니다.");
		SetHealth(playerid, 100);
		ResetPlayerWeapons(playerid);
		MedicCall = 999;
		PlayerInfo[playerid][pMuted] = 1;
		return 1;
	}
	if(PlayerInfo[playerid][pJailed] == 5)
		{
			ApplyAnimation(playerid,"CRACK","crckidle2",3.0,1,1,1,1,-1);
			SCM(playerid, COLOR_ERROR, "INFO : "#C_WHITE" 당신은 아직 쓰러져 아무런 행동을 할 수 없습니다.");
			format(string, sizeof(string), "INFO : "#C_WHITE" 남은 시간 (%d)초",PlayerInfo[playerid][pJailTime] );
			SCM(playerid, COLOR_HINT, string);
			return 0;
		}
	if(PlayerInfo[playerid][pJailed] == 2)// 드모르간
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerFreeze(playerid, true, 1);
		TogglePlayerControllable(playerid, 0);
		SetPlayerPos(playerid,274.7353,1816.5864,1.0078);
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 퇴소 판결이 나지 않았으므로 감옥으로 돌아갑니다.");
		return 1;
	}
	MovingTimeCheck[playerid]=true;
	PlayerSave[playerid]=true;
	SaveTurnOn[playerid]=true;
	return 1;
}

public RemoveAD(playerid)
{
	DestroyObject(ADInstall[playerid]);
	rhkdrhvks[playerid] = 0;
	rhkdslot1[playerid] = 0;
	Delete3DTextLabel(ADWInstall[playerid]);
	Delete3DTextLabel(ADWInstall12[playerid]);
	return 1;
}
public RemoveAD2(playerid)
{
	DestroyObject(ADInstall2[playerid]);
	rhkdrhvks[playerid] = 0;
	rhkdslot2[playerid] = 0;
	Delete3DTextLabel(ADWInstall2[playerid]);
	Delete3DTextLabel(ADWInstall22[playerid]);
	return 1;
}
public RemoveAD3(playerid)
{
	DestroyObject(ADInstall3[playerid]);
	rhkdrhvks[playerid] = 0;
	rhkdslot3[playerid] = 0;
	Delete3DTextLabel(ADWInstall3[playerid]);
	Delete3DTextLabel(ADWInstall23[playerid]);
	return 1;
}

public npchelp(playerid)
{
	for(new i = 0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!IsPlayerNPC(playerid))//npc가 아닐때
		    {

				new AFK[MAX_CHATBUBBLE_LENGTH+1];
		        if(!PlayerESC[i])
				{
					PlayerESC[i] = true;
				}
				else
				{
					format(AFK,MAX_CHATBUBBLE_LENGTH,"잠수중인 플레이어 입니다.");
					SetPlayerChatBubble(i,AFK,COLOR_ERROR,10.0,3000);
				}
				if(PlayerToPoint(2, i, 2074.8987,2403.5447,312.1950) || PlayerToPoint(2, i, 2074.8987,2403.5447,312.1951))
				{
					SCM(i, COLOR_ERROR,"INFO : "#C_WHITE" 관장 :  기술을 배우고싶다고 ? 나에게 배워보지 않을래?");
				}
			}
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
	    if(GetMoney(playerid)<=TransportCost[playerid])
		{
			if(GetVehicleModel(vehicleid) == 420 || GetVehicleModel(vehicleid) == 438 || GetVehicleModel(vehicleid) == 431)
			{
				SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 돈이 부족해서 차량에서 강제로 내려집니다");
				RemovePlayerFromVehicle(playerid);
			}
		}
	}
}
forward HeIsntJamsu(i);
public HeIsntJamsu(i)
{
    KillTimer(PlayerInfo[i][pTimer][0]);
	Sibsaki[i] = false;
	PlayerInfo[i][pTimer][0] = SetTimerEx("sibsaki", 600000, false, "d", i);
}

public tlehCool(playerid)
{
	tleh[playerid] = 0;
}
//======================================계산기
strtok_line(const string[], index)
{
	new length = strlen(string);

	new offset = index;
	new result[128];
	while ((index < length) && ((index - offset) < (sizeof(result) - 1)) && (string[index] > '\r'))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock IsDigit(ch)
{
	if (ch >= 0x30 && ch <= 0x39) return 1;
	else return 0;
}
stock operation(x,y,operand)
{
	new sum;
	switch (operand)
	{
		case '+' : sum = x+y;
		case '-' : sum = x-y;
		case '*' : sum = x*y;
		case '/' : sum = x/y;
		case '%' : sum = x%y;
		default : sum = 0;
	}
	return sum;
}

public TextPickup(model,type,Float:X,Float:Y,Float:Z,Close,message[])
{
	new string[128];
	AddStaticPickup(model,type,Float:X,Float:Y,Float:Z);
	format(string,sizeof(string),"%s",message);
	Create3DTextLabel(string,0x008080FF,Float:X,Float:Y,Float:Z+0.4,Close,0);
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510)
	{
	    new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
    	SetVehicleParamsEx(GetPlayerVehicleID(playerid), true, lights, alarm, doors, bonnet, boot, objective);
	}

    if(PlayerInfo[playerid][At1Scale1]>=2||PlayerInfo[playerid][At1Scale2]>=2||PlayerInfo[playerid][At1Scale2]>=2)
	{
	    PlayerInfo[playerid][At1Scale1]=2; PlayerInfo[playerid][At1Scale2]=2; PlayerInfo[playerid][At1Scale3]=2;
	}


	if(SaveTurnOn[playerid]==true)
	{
		SaveTurnOn[playerid]=false;
		SetTimerEx("SaveFix",10000,false,"i",playerid);
	}

	if(MovingTimeCheck[playerid]==true)
	{
		PlayerSave[playerid]=true;
	}


    if(Audioofnid[playerid] != 999)
	{
	    if(Audioonf[Audioofnid[playerid]] != 1)
	    {
    		for(new i = 0; i < MAX_AUDIOS; i ++)
	        {
	            Audio_Stop(playerid,i);
	        }
	        DestroyObject(Audioobj[playerid]);
	        Audioofn[playerid] = 0;
	        Audioofnid[playerid] = 999;
	        return 1;
	    }
	}
    for(new i = 0; i < GetMaxPlayers(); i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Audioonf[playerid] == 1)
			{
			    if(Audioobj[playerid] == playerid)
				{
				    GetPlayerPos(playerid, AudioX[playerid],AudioY[playerid],AudioZ[playerid]);
				}
			    if(IsPlayerInRangeOfPoint(i, MAX_AUDIOSRADI,AudioX[playerid],AudioY[playerid],AudioZ[playerid]))
				{
        			AudioTPC(playerid,i);
				}
			}
	    }
	}

	//==========================================================================
	if(ONOFF[playerid] == true)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid)==PLAYER_STATE_DRIVER)
		{
		    if(GetSpeed(playerid) > Limit[playerid])
		    {
				new Float:x,
				    Float:y,
				    Float:z;
				GetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z);
				SetVehicleVelocity(GetPlayerVehicleID(playerid),x*DELETE_VELOCITY,y*DELETE_VELOCITY,z*DELETE_VELOCITY);
		    }
		}
	}
    //----------------------------------------
    new Float:Health23;
	GetPlayerHealth(playerid, Health23);
	if(Health23 < Aero_LastHealth[playerid])
	{
		CallRemoteFunction("OnPlayerLoseHealth", "df", playerid, Aero_LastHealth[playerid] - Health23);
	}
	Aero_LastHealth[playerid] = Health23;
	//----------------------------------------
	//    new string[128];
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(gPlayerLogged[playerid] == 1)
	{
		if(PlayerESC[playerid] == true)
		{
			PlayerESC[playerid] = false;
		}
		if(Freeze[playerid] == 1)
		{
			TogglePlayerControllable(playerid, 0);
		}
		else if(Freeze[playerid] == 2)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				TogglePlayerControllable(playerid, 0);
			}
			else
			{
				SetPlayerFreeze(playerid, false, 0);
			}
		}
	}

	new Float:Health;
	new HealthString[15];
	GetPlayerHealth(playerid,Health);
	format(HealthString, 15, "       %d",floatround(Health));
	TextDrawSetString(HealthBar[playerid],HealthString);
	TextDrawShowForPlayer(playerid,HealthBar[playerid]);

	new Float:Armour;
	GetPlayerArmour(playerid,Armour);
	if(Armour > 0)
	{
		new ArmourString[15];
		format(ArmourString, 15, "       %d",floatround(Armour));
		TextDrawSetString(ArmourBar[playerid],ArmourString);
		TextDrawShowForPlayer(playerid,ArmourBar[playerid]);
	}
	else
	{
		TextDrawHideForPlayer(playerid,ArmourBar[playerid]);
	}

	if(IsPlayerInAnyVehicle(playerid))
	{

		new Float:VehHealth;
		new TrueVehHealth;
		new VehHealthString[15];

		GetVehicleHealth(GetPlayerVehicleID(playerid),VehHealth);
		TrueVehHealth = floatround(floatround(VehHealth - 250)/ 7.5);

		format(VehHealthString, 15, "       %d",floatround(TrueVehHealth));
		TextDrawSetString(VehHealthBar[playerid],VehHealthString);

		if (TrueVehHealth == -33)
		{
			TextDrawSetString(VehHealthBar[playerid],"     Dead");
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 1)
		{
			TextDrawSetString(VehHealthBar[playerid],"     Fire");
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 10)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~.");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 20)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~..");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 30)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~...");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 40)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~....");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 50)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~.....");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 60)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~......");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 70)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~.......");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 80)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~........");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 90)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~.........");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth < 100)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~..........");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}
		else if (TrueVehHealth == 100)
		{
			TextDrawSetString(VehHealthBox3[playerid],"~g~~h~..........");
			TextDrawShowForPlayer(playerid,VehHealthBox1[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox2[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBox3[playerid]);
			TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
		}

	}
	else
	{
		TextDrawHideForPlayer(playerid,VehHealthBox1[playerid]);
		TextDrawHideForPlayer(playerid,VehHealthBox2[playerid]);
		TextDrawHideForPlayer(playerid,VehHealthBox3[playerid]);
		TextDrawHideForPlayer(playerid,VehHealthBar[playerid]);
	}

	return 1;
}

forward SaveFix(playerid);
public SaveFix(playerid)
{
	MovingTimeCheck[playerid]=true;
	PlayerSave[playerid]=true;
	SCM(playerid,COLOR_ERROR,"[!] 게임이 자동 저장이 되었습니다. 즐거운 RP 되세요.");
}

public ATimer()
{
	new Hilton[128];
	if(Fuckingnell == 0)
	{
		Fuckingnell=1;
		format(Hilton, sizeof(Hilton), "hostname %s", SERVER1);
		SendRconCommand(Hilton);
		format(Hilton, sizeof(Hilton), "mapname %s", MAPNAME1);
		SendRconCommand(Hilton);
		return 1;
	}
	if(Fuckingnell == 1)
	{
		Fuckingnell=0;
		format(Hilton, sizeof(Hilton), "hostname %s", SERVER2);
		SendRconCommand(Hilton);
		format(Hilton, sizeof(Hilton), "mapname %s", MAPNAME2);
		SendRconCommand(Hilton);
		return 1;
	}
	return 1;
}

forward Float:GetDistanceBetweenCar(p1,carid);
public Float:GetDistanceBetweenCar(p1,carid)
{
	new Float:x11,Float:y11,Float:z11,Float:x22,Float:y22,Float:z22;
	if(!IsPlayerConnected(p1))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x11,y11,z11);
	GetVehiclePos(carid,x22,y22,z22);
	return floatsqroot(floatpower(floatabs(floatsub(x22,x11)),2)+floatpower(floatabs(floatsub(y22,y11)),2)+floatpower(floatabs(floatsub(z22,z11)),2));
}

forward BigBigLee(playerid);
public BigBigLee(playerid)
{
	if(IsACop(playerid)) { }
	else {
		new bilele[M_P];
		bilele[playerid] = 0;
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new string[128];
		new string2[128];
		new x_wep, xamm;
		GetPlayerWeaponData(playerid, 11, x_wep, xamm);
		if(x_wep == 44 && xamm > 0||x_wep == 45 && xamm > 0||x_wep == 46 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 9, x_wep, xamm);
		if(x_wep == 41 && xamm > 0||x_wep == 42 && xamm > 0||x_wep == 43 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 2, x_wep, xamm);
		if(x_wep == 22 && xamm > 0||x_wep == 23 && xamm > 0||x_wep == 24 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 3, x_wep, xamm);
		if(x_wep == 25 && xamm > 0||x_wep == 26 && xamm > 0||x_wep == 27 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 4, x_wep, xamm);
		if(x_wep == 29 && xamm > 0||x_wep == 28 && xamm > 0||x_wep == 32 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 5, x_wep, xamm);
		if(x_wep == 31 && xamm > 0 || x_wep == 30 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 6, x_wep, xamm);
		if(x_wep == 33 && xamm > 0||x_wep == 34 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 7, x_wep, xamm);
		if(x_wep == 35 && xamm > 0||x_wep == 36 && xamm > 0||x_wep == 37 && xamm > 0||x_wep == 38 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		GetPlayerWeaponData(playerid, 8, x_wep, xamm);
		if(x_wep == 17 && xamm > 0||x_wep == 18 && xamm > 0||x_wep == 39 && xamm > 0||x_wep == 16 && xamm > 0)
		{
			bilele[playerid] = 1;
		}
		if(bilele[playerid] == 1)
		{
			format(string, sizeof(string), "* Sound : %s BEEP BEEP BEEP !", RPPlayerName(playerid));
			ProxDetector(15.0, playerid, string, 0xDB7093FF,0xDB7093FF,0xDB7093FF,0xDB7093FF,0xDB7093FF);
			format(string2, sizeof(string2), "* %s 어딘가에 무기를 소지중인걸로 판명되었다", RPPlayerName(playerid));
			ProxDetector(15.0, playerid, string2, COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT,COLOR_ACT);
		}
	}
}

forward DrawPosition(playerid);
public DrawPosition(playerid)
{
	if(PlayerInfo[Drop[playerid]][pJailed] == 3 || PlayerCuffed[Drop[playerid]] == 2 || PlayerTied[Drop[playerid]] == 1)
	{
		if(Draw[playerid] == 1)
		{
			new Float:X, Float:Y, Float:Z;
			new Int = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(Drop[playerid], X, Y-1, Z);
			SetPlayerInterior(Drop[playerid], Int);
		}
	}
	else
	{
		Draw[playerid] = 0;
		Drop[playerid] = 0;
		DropGPlayer[Drop[playerid]] = 0;
	}
	return 1;
}

forward Delete3D(playerid);
public Delete3D(playerid)
{
	Delete3DTextLabel(Item1Nick[playerid]);
	Delete3DTextLabel(Quest_Newbie[playerid]);
	Delete3DTextLabel(playerlabel[playerid]);
}

forward DeleteItem(playerid);
public DeleteItem(playerid)
{
	Item_wkdwkr[playerid] = 0;
	Delete3D(playerid);
	DestroyObject(EvItem1[playerid]);
}
public djfflrl(playerid)//얼리기
{
	SetPlayerFreeze(playerid, true, 0);
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("shrdlrl", 3000, false, "i", playerid);
}

public shrdlrl(playerid)//녹이기
{
	SetPlayerFreeze(playerid, false, 0);
	TogglePlayerControllable(playerid, 1);
	PlayerIsNogada[playerid] = 1;
	NogadaWork[playerid]=1;
}

forward BackupChat(playerid);
public BackupChat(playerid)
{
	rlqhs5[playerid] = 0;
	rlqhs4[playerid] = 0;
	rlqhs2[playerid] = 0;
	rlqhs3[playerid] = 0;
	rlqhs1[playerid] = 0;
	rlqhs6[playerid] = 0;
	rlqhs7[playerid] = 0;
	rlqhs8[playerid] = 0;
	rlqhs9[playerid] = 0;
}

forward ResetCheckPoint(playerid);
public ResetCheckPoint(playerid)
{
	cjdtheasy[playerid] = 0;
	cjdthhard[playerid] = 0;
	tnrmagkwk[playerid] = 0;
	Truck[playerid] = 0;
	Navigation[playerid] = 0;
	cjdtheasy[playerid] = 0;
	cjdthhard[playerid] = 0;
	FindCP1[playerid] = 0;
	FindCP2[playerid] = 0;
	FindCP[playerid] = 0;
	DTCT[playerid] = 0;
	CP[playerid] = 0;
	MissionCheckpoint[playerid] = 0;
	TaxiCheck[playerid]=0;
}

forward ResetInfomation(playerid);
public ResetInfomation(playerid)
{
	Hide[playerid]=false;
	CreatedHouse[playerid]=999;
	for(new hc=0;hc<MAX_HVCAR;hc++)
	{
		PlayerVeh[playerid][hc]=0;
		strmid(PVSign[playerid][hc],"no",0,128,128);
		PVTowed[playerid][hc]=0;
	}
	GetPlayerName(playerid, BackupName[playerid], MAX_PLAYER_NAME);
	CarSeller[playerid]=999; HergiTimer[playerid] = 0; GPackage[playerid]=false;
	CarSellerPrice[playerid]=0; jilmuncool[playerid] = 0; SWAT[playerid]=false;
	CarSellerSlot[playerid]=0; ComeUser[playerid]=false; tkdwja_A[playerid]=0; fhem_A[playerid]=0;
	PCar[playerid]=false; UnknownPhoneNum[playerid]=false; Maske_A[playerid]=0; PlayerGam[playerid]=0;
	PlayerShoted[playerid] = 0; cmdlisten[playerid]=false; P_Cloth[playerid]=0; TaxiCheck[playerid]=0;
	gOoc[playerid]=1; PlayerInfo[playerid][pHouse] = 0; Baeyong[playerid]=0; Gamgiyong[playerid]=0; Playersmoke_V[playerid]=0;
	gActivePlayers[playerid]++; Say_Quest[playerid] = 0; PlayerInfo[playerid][pRentHouse]=0; Anim_Chat[playerid]=0;
	Item_wkdwkr[playerid] = 0; CCTV_A[playerid] = 0; my_skin[playerid] = 0; ShutupMan[playerid] = 0;
	Draw[playerid] = 0; Drop[playerid] = 0; wkaqhr_2[playerid] = 0; pizza_make[playerid] = 0;
	numplayers++; PlayerRunning[playerid]=0; PlayerInfo[playerid][pLine] = 0; PlayerInfo[playerid][pMuted] = 0;
	Dmdrmqtkdxo[playerid]=0; PlayerDmdrmq[playerid]=0; dmdrmqid[playerid]=0; giveDmdrmqtkdxo[playerid]=0; nicks[playerid] = "";
	SelectChar[playerid] = 0; HidePM[playerid] = 0; HidePM2[playerid] = 0; PhoneOnline[playerid] = 0;  alftnghkr[playerid] = 0; qkfl[playerid] = 0; qkdxks[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0;
	GettingJob[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; rhksdjqskin[playerid] = 0; rhksdjqheal[playerid] = 0; rhksdjqarmour[playerid] = 0;
	ApprovedLawyer[playerid] = 0; CallLawyer[playerid] = 0; WantLawyer[playerid] = 0; glock[playerid] = 0; beretta[playerid] = 0;
	KickPlayer[playerid] = 0; UsedFind[playerid] = 0; OwnOffer[playerid] = 0; OwnPrice[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; SpawnChange[playerid] = 1; tleh[playerid] = 0; PlayerInfo[playerid][Byeong] = 0;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0; ShotTime[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; tnflOffer[playerid] = 999; tnflPrice[playerid] = 0; tnflCar[playerid] = 0;
	TalkingLive[playerid] = 255; TalkingRadio[playerid] = 255; LiveOffer[playerid] = 999; RadioOffer[playerid] = 999; TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; RefillNeon[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0; Umju[playerid] = 0;
	DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0; OnCK[playerid] = 999; GettingCK[playerid] = 999;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; GotHit[playerid] = 0; Freeze[playerid] = 0;
	WantedPoints[playerid] = 0; GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; WantedLevel[playerid] = 0; tactical[playerid] = 0; swat[playerid] = 0; TestFishes[playerid] = 0;
	BoxWaitTime[playerid] = 0; SchoolSpawn[playerid] = 0; ChangePos2[playerid][1] = 0; rudrh[playerid] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; cnwjr[playerid] = 0; MechanicCallTime[playerid] = 0;
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; JobDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0; Dnumber[playerid] = 0; Dammo[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCount[playerid] = 0;
	TazerRes[playerid] = 0;
	for (new c=0; c<13; c++) ScriptWeapons[playerid][c] = 0; TuneVeh[playerid] = 0;
	ScriptWeaponsUpdated[playerid] = 0; HSell[playerid] = 0; HSellOffer[playerid] = 999; BSell[playerid] = 0; BSellOffer[playerid] = 999;
	gLastCar[playerid] = 0; FirstSpawn[playerid] = 1;
	gOoc[playerid] = 0; gNew[playerid] = 0; gNews[playerid] = 0; RentTimer[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0; oplisten[playerid] = 0; //cmdlisten[playerid] = 0;
	gSpeedo[playerid] = 2; gGas[playerid] = 1;
	rhkdslot1[playerid] = 0; rhkdslot2[playerid] = 0; rhkdslot3[playerid] = 0; rhkdrhvks[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0;
	gPlayerSpawned[playerid] = 0; dudrnck[playerid] = 0; dudrnck[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0; TutTime[playerid] = 0;
	gPlayerMission[playerid] = 0; cnwjreotkd[playerid] = 999; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999;
	GiveMoney(playerid, dollah);
	NoFuel[playerid] = 0;
	HireCar[playerid] = 299; GangCar[playerid] = 512; gPlayerAccount[playerid] = 0;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; FBION[playerid] = 0; hitmanON[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0; PlayerOnMission[playerid] = 0; MissionCheckpoint[playerid] = 0;
	WatchingTV[playerid] = 0; RlwjfTime[playerid] = 0; GunTime[playerid] = 0;
	Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	tactical[playerid] = 0; swat[playerid] = 0; Work[playerid] = 0;
	PizzaCallTime[playerid] = 0; bPizza[playerid] = 0; sPizza[playerid] = 0; FarmerVar[playerid] = 0; FarmerPickup[playerid][0] = 0; SmugglerWork[playerid] = 0; SmuggledDrugs[playerid] = 0; KnockedDown[playerid] = 0; UnidentifedCall[playerid] = 0;
	LicenseOffer[playerid] = 999; LicensePrice[playerid] = 0; LicenseType[playerid] = 0; UsingDrugs[playerid] = 0; AfterTutorial[playerid] = 0;
	BlindFold[playerid] = 0; PlayerIsSweeping[playerid] = 0; AdminDuty[playerid] = 0; PlayerNeedsHelp[playerid] = 0; AdminSpec[playerid] = 0; UsingSmokeAnim[playerid] = 0; ReduceTime[playerid] = 0;
	CreatingGun[playerid] = 0; CreatingGunAmmo[playerid] = 0; CreatingGunPrice[playerid] = 0; IsTakingGun[playerid] = 0; wkaqhrahem[playerid] = 0; Trytaze[playerid] = 0;
	InAFoodPlace[playerid] = 0; Carbuy[playerid] = 0; Carvalue[playerid] = 0; Navigation[playerid] = 0; wkaqhr[playerid] = 0; Microphone[playerid] = 0; PlayerIsSending[playerid] = 0; PlayerIsNogada[playerid] = 0; PlayerIsNogada2[playerid] = 0; PlayerIsTruck[playerid] = 0;
	PillOffer[playerid] = 999; PillPrice[playerid] = 0; ChangeColorOffer[playerid] = 999; ChangeColor1[playerid] = 999; ChangeColor2[playerid] = 999; ChangePrice[playerid]= 0;
	TuneOffer[playerid] = 999; TunePrice[playerid] = 0; TuneNumber[playerid] = 0; tkdwja_A[playerid] = 0; BegOffer[playerid] = 999; BegMoneys[playerid] = 0; PayOffer[playerid] = 999; PayMoneys[playerid] = 0; InviteOffer[playerid] = 999; InviteGroup[playerid] = 0; wnrdma[playerid] = 0;
	PlayerInfo[playerid][TongJang] = 0;
	PlayerInfo[playerid][Item1] = 0;
	PlayerInfo[playerid][Quest] = 0;
	PlayerInfo[playerid][Carkey] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pBaejin2] = 0;//철근이라유
	PlayerInfo[playerid][pNewbie] = 0;//뉴비도우미랴요
	PlayerInfo[playerid][noneon]=0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][rmsdbr] = 0;
	PlayerInfo[playerid][pExp] = 0;
    PlayerInfo[playerid][RentTime] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pabcdefg] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pFMember] = 255;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pJackSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	//PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
	PlayerInfo[playerid][pHealth] = 50.0;
	PlayerInfo[playerid][pPos_x] = 1612.3240;
	PlayerInfo[playerid][pPos_y] = -2330.1670;
	PlayerInfo[playerid][pPos_z] = 13.5469;
	PlayerInfo[playerid][pAmour] = 0.0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pModel] = 7;
	new randphone = 99999 + random(99999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPhousekey] = 255;
	PlayerInfo[playerid][pga] = 0.0;
	PlayerInfo[playerid][pga2] = 0.0;
	PlayerInfo[playerid][pGangKey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][peogudLic] = 0;
	PlayerInfo[playerid][dmdrmqLic] = 0;
	PlayerInfo[playerid][diedie] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pCityLic] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pCarTime2] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 0;
	PlayerInfo[playerid][pWatch] = 0;
	PlayerInfo[playerid][pgktehrm] = 0;
	PlayerInfo[playerid][pfkaus] = 0;
	PlayerInfo[playerid][pdkdltm] = 0;
	PlayerInfo[playerid][pSongpun] = 0;
	PlayerInfo[playerid][pCrashed] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pMissionNr] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pJu] = 0;
	PlayerInfo[playerid][pWarns2] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pVirWorld] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pRoadblock] = 0;
	PlayerInfo[playerid][pGabang] = 0;
	PlayerInfo[playerid][pSavelocations] = 0;
	PlayerInfo[playerid][pSavelocations2] = 0;
	PlayerInfo[playerid][pSavelocations3] = 0;
	PlayerInfo[playerid][pFishTool] = 0;
	strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote1s] = 0;
	strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote2s] = 0;
	strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote3s] = 0;
	strmid(PlayerInfo[playerid][pNote4], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote4s] = 0;
	strmid(PlayerInfo[playerid][pNote5], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote5s] = 0;
	PlayerInfo[playerid][pInvWeapon] = 0;
	PlayerInfo[playerid][pInvAmmo] = 0;
	PlayerInfo[playerid][pInvWeapon2] = 0;
	PlayerInfo[playerid][pInvAmmo2] = 0;
	PlayerInfo[playerid][pInvWeapon3] = 0;
	PlayerInfo[playerid][pInvAmmo3] = 0;
	PlayerInfo[playerid][pInvWeapon4] = 0;
	PlayerInfo[playerid][pInvAmmo4] = 0;
	PlayerInfo[playerid][pInvWeapon5] = 0;
	PlayerInfo[playerid][pInvAmmo5] = 0;
	PlayerInfo[playerid][pLighter] = 0;
	PlayerInfo[playerid][pCigarettes] = 0;
	PlayerInfo[playerid][pqntkd] = 0;
	PlayerInfo[playerid][pHideNumber] = 0;
	PlayerInfo[playerid][pSpeaker] = 0;
	PlayerInfo[playerid][pLocked] = 0;
	PlayerInfo[playerid][pAD] = 0;
	PlayerInfo[playerid][pBoxing] = 0;
	PlayerInfo[playerid][pKungfu] = 0;
	PlayerInfo[playerid][pTaek] = 0;
	PlayerInfo[playerid][pGrabk] = 0;
	PlayerInfo[playerid][pEllbow] = 0;
	PlayerInfo[playerid][pcModel] = 0;
	PlayerInfo[playerid][pcX] = 0;
	PlayerInfo[playerid][pcY] = 0;
	PlayerInfo[playerid][pcZ] = 0;
	PlayerInfo[playerid][pcAngle] = 0;
	PlayerInfo[playerid][pcColor1] = 0;
	PlayerInfo[playerid][pcColor2] = 0;
	PlayerInfo[playerid][pcLocked] = 0;
	PlayerInfo[playerid][pcOwned] = 0;
	PlayerInfo[playerid][pcPark] = 0;
	PlayerInfo[playerid][pcModel2] = 0;
	PlayerInfo[playerid][pcX2] = 0;
	PlayerInfo[playerid][pcY2] = 0;
	PlayerInfo[playerid][pcZ2] = 0;
	PlayerInfo[playerid][pcAngle2] = 0;
	PlayerInfo[playerid][pcColor12] = 0;
	PlayerInfo[playerid][pcColor22] = 0;
	PlayerInfo[playerid][pcLocked2] = 0;
	PlayerInfo[playerid][pcOwned2] = 0;
	PlayerInfo[playerid][pcPark2] = 0;
	PlayerInfo[playerid][pcSpo] = 0;
	PlayerInfo[playerid][pcHood] = 0;
	PlayerInfo[playerid][pcRoof] = 0;
	PlayerInfo[playerid][pcSideS] = 0;
	PlayerInfo[playerid][pcLamp] = 0;
	PlayerInfo[playerid][pcNitro] = 0;
	PlayerInfo[playerid][pcExh] = 0;
	PlayerInfo[playerid][pcWheel] = 0;
	PlayerInfo[playerid][pcStero] = 0;
	PlayerInfo[playerid][pcHyd] = 0;
	PlayerInfo[playerid][pcFBum] = 0;
	PlayerInfo[playerid][pcRbum] = 0;
	PlayerInfo[playerid][pcVentR] = 0;
	PlayerInfo[playerid][pcVentL] = 0;
	PlayerInfo[playerid][pcSpo2] = 0;
	PlayerInfo[playerid][pcHood2] = 0;
	PlayerInfo[playerid][pcRoof2] = 0;
	PlayerInfo[playerid][pcSideS2] = 0;
	PlayerInfo[playerid][pcLamp2] = 0;
	PlayerInfo[playerid][pcNitro2] = 0;
	PlayerInfo[playerid][pcExh2] = 0;
	PlayerInfo[playerid][pcWheel2] = 0;
	PlayerInfo[playerid][pcStero2] = 0;
	PlayerInfo[playerid][pcHyd2] = 0;
	PlayerInfo[playerid][pcFBum2] = 0;
	PlayerInfo[playerid][pcRbum2] = 0;
	PlayerInfo[playerid][pcVentR2] = 0;
	PlayerInfo[playerid][pcVentL2] = 0;
	PlayerInfo[playerid][pPhoneB1] = 0;
	PlayerInfo[playerid][pPhoneB2] = 0;
	PlayerInfo[playerid][pPhoneB3] = 0;
	strmid(PlayerInfo[playerid][pPhoneN1], "", 0, strlen(""), 255);
	strmid(PlayerInfo[playerid][pPhoneN2], "", 0, strlen(""), 255);
	strmid(PlayerInfo[playerid][pPhoneN3], "", 0, strlen(""), 255);
	gRadio[playerid] = 0;
	bandage[playerid] = 0;
	anwjs[playerid] = 0;
	rlqhs1[playerid] = 1;
	rlqhs2[playerid] = 0;
	rlqhs3[playerid] = 0;
	rlqhs4[playerid] = 0;
	rlqhs5[playerid] = 0;
	rlqhs6[playerid] = 0;
	rlqhs7[playerid] = 0;
	rlqhs8[playerid] = 0;
	rlqhs9[playerid] = 0;
	PlayerInfo[playerid][pCash] = 0;
	PlayerInfo[playerid][Cloth_1]=0;
	PlayerInfo[playerid][Cloth_2]=0;
	PlayerInfo[playerid][Cloth_3]=0;
	PlayerInfo[playerid][pGPS] = 0;
	PlayerInfo[playerid][pBandage] = 0;
	PlayerInfo[playerid][pBibun] = 0;
	DropGPlayer[playerid] = 0;
	RunnigHealth[playerid] = 0; HealthGage[playerid] = 0; NogadaHealth[playerid] = 0; NogadaGage[playerid] = 0;
	PlayerInfo[playerid][pPackage]=0;
	PlayerInfo[playerid][pHarvestMeal]=0;
	PlayerInfo[playerid][pMeal]=0;
	PlayerInfo[playerid][pGPS]=0;
}
stock GiveMoney(playerid, money)
{
	PlayerInfo[playerid][pCash] = PlayerInfo[playerid][pCash] + money;
	GivePlayerMoney(playerid, money);
}
stock ResetMoney(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
}
stock GetMoney(playerid)
{
	return PlayerInfo[playerid][pCash];
}
stock BizzMoney(playerid, money)//사업장머니
{
	new h = GetPlayerVirtualWorld(playerid)
	if(h != 0)
	{
	    BuildingInfo[h][hBank]-=money;
		SaveHouse(h);
    }
	PlayerInfo[playerid][pCash] = PlayerInfo[playerid][pCash] + money;
	GivePlayerMoney(playerid, money);
}
stock SetHealth(playerid, Float:health)
{
	SetPlayerHealth(playerid, health);
	PlayerInfo[playerid][pHealth]=health;
}
stock GiveHealth(playerid, Float:health)
{
	new Float:phealth;
	GetPlayerHealth(playerid, phealth);
	SetPlayerHealth(playerid, phealth+health);
	PlayerInfo[playerid][pHealth] = phealth+health;
	new Float:phealth2;
	GetPlayerHealth(playerid, phealth2);
	if(phealth2>100)
	{
	    SetPlayerHealth(playerid, 100);
		PlayerInfo[playerid][pHealth] = 100;
	}
}
stock SetArmour(playerid, Float:armour)
{
	SetPlayerArmour(playerid, armour);
	PlayerInfo[playerid][pAmour]=armour;
}
stock GiveArmour(playerid, Float:armour)
{
	new Float:parmour;
	GetPlayerArmour(playerid, parmour);
	SetPlayerArmour(playerid, parmour+armour);
	PlayerInfo[playerid][pAmour] = parmour+armour;
}

forward DieInfo(playerid);
public DieInfo(playerid)
{
	ResetPlayerWeapons(playerid);
	if(bag_weapon == 1)
	{
		PlayerInfo[playerid][pInvWeapon] = 0;
		PlayerInfo[playerid][pInvAmmo] = 0;
		PlayerInfo[playerid][pInvWeapon2] = 0;
		PlayerInfo[playerid][pInvAmmo2] = 0;
		PlayerInfo[playerid][pInvWeapon3] = 0;
		PlayerInfo[playerid][pInvAmmo3] = 0;
		PlayerInfo[playerid][pInvWeapon4] = 0;
		PlayerInfo[playerid][pInvAmmo4] = 0;
		PlayerInfo[playerid][pInvWeapon5] = 0;
		PlayerInfo[playerid][pInvAmmo5] = 0;
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 당신은 가방에 있던 무기를 잃습니다.");
	}
}

RespawnVehicle()
{
	new bool:used[MAX_VEHICLES] = { false, ... };
	for(new p; p<M_P; p++)
	{
		if(IsPlayerInAnyVehicle(p))
		{
			new veh = GetPlayerVehicleID(p);
			used[veh] = true;
		}
	}
	for(new v; v<MAX_VEHICLES; v++)
	{
		if(!used[v])
			{
			SetVehicleToRespawn(v);
			}
  	}

}
stock c_strcmp(string1[],string2[],bool:ignorecase=false,length=cellmax){
	if(length!=cellmax){string1[length]=EOS; string2[length]=EOS;}//길이제한이 있을경우 줄여준다.
	if(strlen(string1)==strlen(string2) && strfind(string1,string2,ignorecase)==0) return 1;//글자 길이가 똑같고, 해당 글자를 찾았을 때 리턴값 1을 돌려준다.
	return 0;//두 글자가 서로 다르다. 부정값을 돌려준다.
}
forward LoadVehicles(playerid,name[],type);
public LoadVehicles(playerid,name[],type)
{
	//	if(c_strcmp(name," ")==1){return 1;}
	new file[256];
	new string[256];
	new ve=0;
	format(file,sizeof(file),"Vehicles/%s.ini",name);
	if(type==1)
	{
		ve=CreateVehicle(dini_Int(file,"Model"),dini_Float(file,"X"),dini_Float(file,"Y"),dini_Float(file,"Z"),dini_Float(file,"Rot"),dini_Int(file,"Color1"),dini_Int(file,"Color2"),9999);
	}
	else if(type==2)
	{
		new Float:lvx,Float:lvy,Float:lvz;
		GetPlayerPos(playerid,lvx,lvy,lvz);
		ve=CreateVehicle(dini_Int(file,"Model"),lvx,lvy,lvz,-90,dini_Int(file,"Color1"),dini_Int(file,"Color2"),9999);
	}
	for(new hc=0;hc<MAX_HVCAR;hc++)
	{
		if(c_strcmp(PVSign[playerid][hc],"no")==0)
		{
			if(PlayerVeh[playerid][hc]==0)
			{
				PlayerVeh[playerid][hc]=ve;
				break;
			}
		}
	}
	VehicleInfo[ve][vModel]=dini_Int(file,"Model");
	VehicleInfo[ve][vOwnerPnumber] = PlayerInfo[playerid][pPnumber];
	format(string,sizeof(string),"%s",BackupName[playerid]);
	strmid(VehicleInfo[ve][vOwner],string,0,strlen(string),255);
	strmid(VehicleInfo[ve][vSign],name,0,strlen(name),128);
	VehicleInfo[ve][vPark_x]=dini_Float(file,"X");
	VehicleInfo[ve][vPark_y]=dini_Float(file,"Y");
	VehicleInfo[ve][vPark_z]=dini_Float(file,"Z");
	VehicleInfo[ve][vPark_r]=dini_Float(file,"Rot");
	VehicleInfo[ve][vHP]=dini_Float(file,"HP");SetVehicleHealth(ve,VehicleInfo[ve][vHP]);
	VehicleInfo[ve][vVir]=dini_Int(file,"VirtualWorld");SetVehicleVirtualWorld(ve,VehicleInfo[ve][vVir]);
	VehicleInfo[ve][vLock]=dini_Int(file,"Lock");
	VehicleInfo[ve][vAlarm]=dini_Int(file,"Alarm");
	VehicleInfo[ve][vGas]=dini_Int(file,"Gas");
	VehicleInfo[ve][vTowed]=dini_Int(file,"Towed");
	VehicleInfo[ve][vPlate]=dini_Int(file,"Plate");

	if(type==2)
	{
		VehicleInfo[ve][vTowed]=0;
	}
	VehicleInfo[ve][vAlarmOff]=dini_Int(file,"AlarmOff");
	VehicleInfo[ve][vColor1]=dini_Int(file,"Color1");
	VehicleInfo[ve][vColor2]=dini_Int(file,"Color2");
	VehicleInfo[ve][vPaintJob]=dini_Int(file,"PaintJob");
	for(new ce=0;ce<17;ce++)
	{
		format(string,sizeof(string),"TuneParts%d",ce);VehicleInfo[ve][vTune][ce] = dini_Int(file, string);
	}
	VehicleInfo[ve][vTrunkO]=dini_Int(file,"TrunkOpen");
	for(new tr = 0; tr < GMT(VehicleInfo[ve][vModel]); tr++)
	{
		format(string,sizeof(string),"%d_TrunkType",tr);VehicleInfo[ve][vTrunkType][tr] = dini_Int(file, string);
		format(string,sizeof(string),"%d_TrunkIn",tr);VehicleInfo[ve][vTrunk][tr] = dini_Int(file, string);
		format(string,sizeof(string),"%d_TrunkIn2",tr);VehicleInfo[ve][vTrunk2][tr] = dini_Int(file, string);
	}
	VehicleInfo[ve][vFaction]=dini_Int(file,"Faction");

	SetVehicleNumberPlate(ve,VehicleInfo[ve][vSign]);
	ChangeVehicleColor(ve,VehicleInfo[ve][vColor1],VehicleInfo[ve][vColor2]);
	ChangeVehiclePaintjob(ve,VehicleInfo[ve][vPaintJob]);

	if(type==1)
	{
		SetVehicleToRespawn(ve);
	}

}
//forward SaveVehicle(ve);
stock SaveVehicle(ve)
{
	new file[256];
	new string[256];
	format(file,sizeof(file),"Vehicles/%s.ini",VehicleInfo[ve][vSign]);
	dini_Create(file);
	dini_IntSet(file,"Model",VehicleInfo[ve][vModel]);
	dini_FloatSet(file,"X",VehicleInfo[ve][vPark_x]);
	dini_FloatSet(file,"Y",VehicleInfo[ve][vPark_y]);
	dini_FloatSet(file,"Z",VehicleInfo[ve][vPark_z]);
	dini_FloatSet(file,"Rot",VehicleInfo[ve][vPark_r]);
	dini_FloatSet(file,"HP",VehicleInfo[ve][vHP]);
	dini_IntSet(file,"VirtualWorld",VehicleInfo[ve][vVir]);
	dini_IntSet(file,"Lock",VehicleInfo[ve][vLock]);
	dini_IntSet(file,"Alarm",VehicleInfo[ve][vAlarm]);
	dini_IntSet(file,"Gas",VehicleInfo[ve][vGas]);
	dini_IntSet(file,"Towed",VehicleInfo[ve][vTowed]);
	dini_IntSet(file,"AlarmOff",VehicleInfo[ve][vAlarmOff]);
	dini_IntSet(file,"Color1",VehicleInfo[ve][vColor1]);
	dini_IntSet(file,"Color2",VehicleInfo[ve][vColor2]);
	dini_IntSet(file,"PaintJob",VehicleInfo[ve][vPaintJob]);
	for(new ce=0;ce<17;ce++)
	{
		VehicleInfo[ve][vTune][ce]=GetVehicleComponentInSlot(ve,ce);
		format(string,sizeof(string),"TuneParts%d",ce);dini_IntSet(file,string,VehicleInfo[ve][vTune][ce]);
	}
	dini_IntSet(file,"TrunkOpen",VehicleInfo[ve][vTrunkO]);
	for(new tr = 0; tr < GMT(VehicleInfo[ve][vModel]); tr++)
	{
		format(string,sizeof(string),"%d_TrunkType",tr);dini_IntSet(file, string,VehicleInfo[ve][vTrunkType][tr]);
		format(string,sizeof(string),"%d_TrunkIn",tr);dini_IntSet(file, string,VehicleInfo[ve][vTrunk][tr]);
		format(string,sizeof(string),"%d_TrunkIn2",tr);dini_IntSet(file, string,VehicleInfo[ve][vTrunk2][tr]);
	}
	dini_IntSet(file,"Faction",VehicleInfo[ve][vFaction]);
	return 1;
}
forward DeleteVehicle(ve);
public DeleteVehicle(ve)
{
	new file[256];
	format(file,sizeof(file),"Vehicles/%s.ini",VehicleInfo[ve][vSign]);
	dini_Remove(file);
	VehicleInfoReset(ve);
	DestroyVehicle(ve);
	return 1;
}
forward DestroyOVehicle(ve);
public DestroyOVehicle(ve)
{
	VehicleInfoReset(ve);
	DestroyVehicle(ve);
	return 1;
}
forward showcar(playerid,targetid,type);
public showcar(playerid,targetid,type)
{
	new text[256];
	new text2[64];
	new vehstyle[128];
	new string[256];
	new cstring[512];
	if(type==2)
	{
		SendClientMessage(targetid,COLOR_LIGHTBLUE,"|________보유차량________|");
	}
	for(new hc=0;hc<MAX_HVCAR;hc++)
	{
		if(c_strcmp(PVSign[playerid][hc],"no")==1)
		{
			text="없음";
		}
		else
		{
				new veh=PlayerVeh[playerid][hc];
				vehstyle="일반차";
				if(IsAirPlane(VehicleInfo[veh][vModel])){vehstyle="비행기";}
				else if(IsShip(VehicleInfo[veh][vModel])){vehstyle="배";}
				else if(IsBicycle(VehicleInfo[veh][vModel])){vehstyle="자전거";}
				else if(IsMotorcycle(VehicleInfo[veh][vModel])){vehstyle="바이크";}
				else if(IsTruck(VehicleInfo[veh][vModel])){vehstyle="트럭";}
				else if(IsTunableVehicle(VehicleInfo[veh][vModel])){vehstyle="슈퍼카";}
				if(VehicleInfo[PlayerVeh[playerid][hc]][vLock]>0){text2="잠김";}
				else if(VehicleInfo[PlayerVeh[playerid][hc]][vLock]<=0){text2="열림";}
				format(text,sizeof(text),"[차종] %s [번호판] %s [차량] %s [잠금] %s",vehstyle,PVSign[playerid][hc],GetVehicleName(PlayerVeh[playerid][hc]),text2);
		}
		format(string,sizeof(string),"[%d]  %s  \n",hc+1,text);
		if(type==1)strcat(cstring, string);
		else SendClientMessage(targetid,COLOR_ERROR,string);
	}
	//	if(type==1)ShowPlayerDialog(targetid, B_NONE, DIALOG_STYLE_MSGBOX, Namer(playerid), cstring, "확인", "종료");
}
forward LoadCarlist();
public LoadCarlist()
{
	new file[256];
	new string[256];
	format(file,sizeof(file),"Vehicles/allowlist.cfg");
	if(!dini_Exists(file))
	{
		dini_Create(file);
	}
	new text[64];
	for(new act=0;act<4;act++)
	{
		if(act==0){text="Car";}
		else if(act==1){text="Ship";}
		else if(act==2){text="Plane";}
		else if(act==3){text="Bicycle";}
		if(act==0)
		{
			for(new ac=0;ac<100;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);allowedcar[act][ac]=dini_Int(file,string);
				format(string,sizeof(string),"%d_%s_Price",ac,text);allowedprice[act][ac]=dini_Int(file,string);
			}
		}
		else if(act==1)
		{
			for(new ac=0;ac<15;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);allowedcar[act][ac]=dini_Int(file,string);
				format(string,sizeof(string),"%d_%s_Price",ac,text);allowedprice[act][ac]=dini_Int(file,string);
			}
		}
		else if(act==2)
		{
			for(new ac=0;ac<20;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);allowedcar[act][ac]=dini_Int(file,string);
				format(string,sizeof(string),"%d_%s_Price",ac,text);allowedprice[act][ac]=dini_Int(file,string);
			}
		}
		else if(act==3)
		{
			for(new ac=0;ac<3;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);allowedcar[act][ac]=dini_Int(file,string);
				format(string,sizeof(string),"%d_%s_Price",ac,text);allowedprice[act][ac]=dini_Int(file,string);
			}
		}
	}
}
forward SaveCarlist();
public SaveCarlist()
{
	new file[256];
	new string[256];
	format(file,sizeof(file),"Vehicles/allowlist.cfg");
	if(!dini_Exists(file))
	{
		dini_Create(file);
	}
	for(new act=0;act<4;act++)
	{
		new text[64];
		if(act==0){text="Car";}
		else if(act==1){text="Ship";}
		else if(act==2){text="Plane";}
		else if(act==3){text="Bicycle";}
		if(act==0)
		{
			for(new ac=0;ac<100;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);dini_IntSet(file,string,allowedcar[act][ac]);
				format(string,sizeof(string),"%d_%s_Price",ac,text);dini_IntSet(file,string,allowedprice[act][ac]);
			}
		}
		else if(act==1)
		{
			for(new ac=0;ac<15;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);dini_IntSet(file,string,allowedcar[act][ac]);
				format(string,sizeof(string),"%d_%s_Price",ac,text);dini_IntSet(file,string,allowedprice[act][ac]);
			}
		}
		else if(act==2)
		{
			for(new ac=0;ac<20;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);dini_IntSet(file,string,allowedcar[act][ac]);
				format(string,sizeof(string),"%d_%s_Price",ac,text);dini_IntSet(file,string,allowedprice[act][ac]);
			}
		}
		else if(act==3)
		{
			for(new ac=0;ac<3;ac++)
			{
				format(string,sizeof(string),"%d_%s_Allow",ac,text);dini_IntSet(file,string,allowedcar[act][ac]);
				format(string,sizeof(string),"%d_%s_Price",ac,text);dini_IntSet(file,string,allowedprice[act][ac]);
			}
		}
	}
}
forward showcarlist(playerid,page,type);
public showcarlist(playerid,page,type)
{
	new string[256];
	for(new bac=0;bac<100;bac++)
	{
		if(bac>=(page-1)*6&&bac<page*10)
		{
			if(allowedcar[type][bac]!=0)
			{
				format(string,sizeof(string)," %d. [이름] %s [가격] $%d",bac+1,GetVModelName(allowedcar[type][bac]),allowedprice[type][bac]);
				SendClientMessage(playerid,COLOR_ERROR,string);
			}
		}
	}
}
stock GetVModelName(modelid)
{
	new vn[50];
	format(vn,sizeof(vn),"%s",vNames[modelid-400]);
	return vn;
}
stock IsCarOwner(playerid,vid)
{
	for(new phcar=0;phcar<MAX_HVCAR;phcar++)
	{
		if(PlayerVeh[playerid][phcar]==vid)
		{
			return 1;
		}
	}
	return 0;
}
stock carslot(playerid,vid)
{
	for(new phcar=0;phcar<MAX_HVCAR;phcar++)
	{
		if(PlayerVeh[playerid][phcar]==vid)
		{
			return phcar;
		}
	}
	return 9999;
}
stock VehAmountCheck(playerid)
{
	new check=0;
	for(new v=1;v<MAX_VEHICLES;v++)
	{
		if(c_strcmp(VehicleInfo[v][vOwner],BackupName[playerid]))
		{
			check++;
		}
	}
	return check;
}
forward IsAtVehPlace(playerid);
public IsAtVehPlace(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,30.0,2105.4360,1019.3893,10.8203)) // 여길 옴길좌표로 수정.
	{
		return 0;
	}
	return 999;
}
CreateCarSign(ve)//차량번호판
{
	new string[3][4] = {"LOS", "SAN", "TOS"};
	new string2[256];
	new file[256];
	new ccs=0;
	while(ccs==0)
	{
		format(string2,sizeof(string2),"%s%d",string[0], 1000+random(8999) );
		SetVehicleNumberPlate(ve,string2);
		format(file, sizeof(file), "Vehicles/%s.ini", string2);
		if(!dini_Exists(file))
		{
			ccs=1;
			strmid(VehicleInfo[ve][vSign],string2,0,strlen(string2),128);
			strmid(VehicleInfo[ve][vPlate],string2,0,strlen(string2),128);
		}
	}
}
forward GetClosestVehicle(p1);
public GetClosestVehicle(p1)
{
	new Float:dis,Float:dis2,vehc;
	dis = 99999.99;
	for (new x=1;x<MAX_VEHICLES;x++)
	{
		dis2 = GetDistanceBetweenCar(p1,x);
		if(dis2 < dis && dis2 != -1.00)
		{
			dis = dis2;
			vehc = x;
		}

	}
	return vehc;
}
stock GMT(model)
{
	new MAXTRUNK;
	if(IsTruck(model))MAXTRUNK=10;
	else if(IsRV(model))MAXTRUNK=8;
	else if(IsMotorcycle(model))MAXTRUNK=1;
	else if(IsBicycle(model))MAXTRUNK=0;
	else if(IsShip(model))MAXTRUNK=9;
	else if(IsAirPlane(model))MAXTRUNK=9;
	else MAXTRUNK=5;
	return MAXTRUNK;
}
forward VehicleInfoReset(ve);
public VehicleInfoReset(ve)
{
	strmid(VehicleInfo[ve][vSign],"",0,128,128);
	strmid(VehicleInfo[ve][vPlate],"",0,128,128);
	VehicleInfo[ve][vModel]=0;
	VehicleInfo[ve][vPark_x]=0;
	VehicleInfo[ve][vPark_y]=0;
	VehicleInfo[ve][vPark_z]=0;
	VehicleInfo[ve][vPark_r]=0;
	VehicleInfo[ve][vVir]=0;
	VehicleInfo[ve][vTowed]=0;
	VehicleInfo[ve][vLock]=0;
	VehicleInfo[ve][vAlarm]=0;
	VehicleInfo[ve][vGas]=100;
	VehicleInfo[ve][vFaction]=0;
	for(new ce=0;ce<17;ce++)
	{
		VehicleInfo[ve][vTune][ce] = 0;
	}
	VehicleInfo[ve][vTrunkO]=0;
	for(new tr = 0; tr < MAX_TRUNKS; tr++)
	{
		VehicleInfo[ve][vTrunkType][tr] = 0;
		VehicleInfo[ve][vTrunk][tr] = 0;
	}
	VehicleInfo[ve][vOwnerPnumber] = 0;
	strmid(VehicleInfo[ve][vOwner],"No One",0,64,64);
	return 1;
}
//forward GetMemberName(member);
stock GetMemberName(member)
{
	new string[256];
	switch(member)
	{
	case 1: string="Las Venturas Police Department";
	case 2: string="F.B.I";
	case 3: string="CIA";
	case 4: string="E.M.T";
	case 5: string="Locotes";
	case 6: string="Capone Crime Family";
	case 7: string="대통령";
	case 8: string="Payday";
	case 9: string="C.N.N";
	case 10: string="LS-PCT";
	case 11: string="하이카";
	case 12: string="크립스";
	case 13: string="North Side Nortenos X4";
	case 14: string="야쿠자";
	case 15: string="三合會";
	case 16: string="Seviles";
	case 17: string="Bloodz";
	case 18: string="해태그룹";
	case 19: string=" T.F.O.A 9";
	case 20: string="LC HIT";
	case 21: string="LS Build Development";
	case 22: string="칠성파";
	case 23: string="동성로";
	case 24: string="NGS";
	case 25: string="大命會";
	case 26: string="교회";
	case 27: string="신[新]종로파";
	case 28: string="Niggia Detective Family";
	case 29: string="업타운";
	case 30: string="Mara Salvatrucha 13";
	case 31: string="대북파";
	case 32: string="정부용병";
	case 33: string="항공사";
	case 34: string="현대건설"
	case 35: string="요리사"
	case 36: string="델라스 대학교"
	case 37: string="Rece"
	default: string="없음";
	}
	return string;
}
//forwsard GetRankName(member, rank);
stock GetRankName(member, rank)
{
	new string[256];
	switch(member)
	{
	case 1:
		{
			switch(rank)
			{
			case 1: string="생도";
   			case 2: string="순경";
   			case 3: string="경장";
   			case 4: string="경사";
   			case 5: string="경위";
   			case 6: string="경감";
   			case 7: string="경정";
		 	case 8: string="총정";
   			case 9: string="부서장";
   			case 10: string="경무관";
   			case 11: string="치안감";
   			case 12: string="치안정감";
   			case 13: string="치안총감";
	 	 	default: string="생도";
			}
		}
	case 2:
		{
			switch(rank)
			{
			case 1: string="후보요원";//Traniee
			case 2: string="신입요원";
			case 3: string="대리인";
			case 4: string="잠복요원";
			case 5: string="특수요원";
			case 6: string="비밀요원";
			case 7: string="특급비밀요원";
			case 8: string="팀장";
			case 9: string="FBI부국장";
			case 10: string="FBI국장";
			default: string="후보요원"
			}
		}
	case 3:
		{
			switch(rank)
			{
			case 1: string="Agent";
			case 2: string="Elite Agent";
			case 3: string="Special Agent";
			case 4: string="Director of Operation";
			case 5: string="Director of Intelligence";
			case 6: string="Deputy Director of CIA";
			case 7: string="Director of CIA";
			default: string="Agent";
			}
		}
	case 4:
		{
			switch(rank)
			{
			case 1: string="의대학생";
			case 2: string="인턴";
			case 3: string="출동조원";
			case 4: string="출동팀장";
			case 5: string="수술조원";
			case 6: string="수술팀장";
			case 7: string="병원장";
			case 8: string="의료장관";
			default: string="의대학생";
			}
		}
	case 5:
		{
			switch(rank)
			{
			case 6: string="El Jefe";
			case 5: string="Right Hand";
			case 4: string="Vati Del Jefe";
			case 3: string="Soldado";
			case 2: string="Cholo";
			case 1: string="Guero";
			default: string="Guero";
			}
		}
	case 6:
		{
			switch(rank)
			{
			case 0: string="outsider";
			case 1: string="Assitant";
			case 2: string="Madeguy";
			case 3: string="Soldier";
			case 4: string="Caporegim";
			case 5: string="Capo";
			case 6: string="Consigliere";
			case 7: string="UnderBoss";
			case 8: string="Boss";
			default: string="Outsider";
			}
		}
	case 7:
		{
			switch(rank)
			{
			case 0: string="운전기사";
			case 1: string="비서";
			case 2: string="비서실장";
			case 3: string="경호원";
			case 4: string="경호실장";
			case 5: string="부서원";
			case 6: string="부서장";
			case 7: string="간부급";
			case 8: string="시의원";
			case 9: string="부통령";
			case 10: string="영부인";
			case 11: string="대통령";
			default: string="운전기사";
			}
		}
	case 8:
		{
			switch(rank)
			{
			case 1: string="Wolf";
			case 2: string="Dwayne";
			case 3: string="Daniel";
			case 4: string="Bruce";
			case 5: string="Kevin";
			case 6: string="Three X";
			default: string="Wolf";
			}
		}
	case 9:
		{
			switch(rank)
			{
			case 1: string="보조 기자";
			case 2: string="기자";
			case 3: string="정식 기자";
			case 4: string="앵커";
			case 5: string="본부장";
			case 6: string="생방송/라디오 DJ";
			case 7: string="부국장";
			case 8: string="국장";
			default: string="훈련생";
			}
		}
	case 10:
		{
			switch(rank)
			{
			case 1: string="훈련생";
			case 2: string="신입기사";
			case 3: string="모범기사";
			case 4: string="차량관리팀";
			case 5: string="직원관리팀";
			case 6: string="부사장";
			case 7: string="사장";
			default: string="훈련생";
			}
		}
	case 11:
		{
			switch(rank)
			{
				case 1: string="아르바이트사원";
				case 2: string="정식사원";
				case 3: string="베테랑사원";
				case 4: string="트레이너";
				case 5: string="매니저";
				case 6: string="부사장";
				case 7: string="사장";
				default: string="아르바이트사원";
			}
		}
 	case 12:
		{
			switch(rank)
			{
			case 10: string="Top Dawg";
			case 9: string="Right Hand";
			case 8: string="Warter House";
			case 7: string="Beak Head";
			case 6: string="O.T.G";
			case 5: string="T.G";
			case 4: string="Hustly";
			case 3: string="B.G";
			case 2: string="Callow";
			case 1: string="Outsider";
			default: string="Outsider";
			}
		}
 	case 13:
		{
			switch(rank)
			{
			case 5: string="Jefe";
			case 4: string="Both Hand";
			case 3: string="Pandillero";
			case 2: string="Soldado";
			case 1: string="Guero";
			default: string="Guero";
			}
		}
	case 14:
		{
			switch(rank)
			{
			case 1: string="고붕";
			case 2: string="교다이";
			case 3: string="와카슈";
			case 4: string="샤테이";
			case 5: string="샤테이가시라";
            case 6: string="와카가시라 호사";
            case 7: string="와카가시라";
            case 8: string="센세";
            case 9: string="카미쵸";
            case 10: string="오야붕";
            case 11: string="원로";
			default: string="고붕";
			}
		}
	case 15:
		{
			switch(rank)
			{
			case 1: string="양아치";
			case 2: string="남등룡";
			case 3: string="사구자";
			case 4: string="초혜";
			case 5: string="백지선";
			case 6: string="홍극";
			case 7: string="향처";
			case 8: string="향주";
			case 9: string="선처";
			case 10: string="선봉";
			case 11: string="부처";
			case 12: string="부산주";
			case 13: string="용두";
			case 14: string="원로";
			default: string="양아치";
			}
		}
	case 16:
		{
			switch(rank)
			{
			case 6: string="Top O.G";
			case 5: string="R.Hand";
			case 4: string="L.Hand";
			case 3: string="O.G";
			case 2: string="B.G";
			case 1: string="Crew";
			default: string="Crew";
				}
		}
	case 17:
		{
			switch(rank)
			{
			case 6: string="Top O.G";
			case 5: string="R.Hand";
			case 4: string="L.Hand";
			case 3: string="O.G";
			case 2: string="B.G";
			case 1: string="Crew";
			default: string="Crew";
			}
		}
	case 18:
		{
			switch(rank)
			{
			case 1: string="큰형님";
			case 2: string="작은형님";
			case 3: string="지부장";
			case 4: string="행동대장";
			case 5: string="조직원";
			default: string="양아치";
			}
		}
	case 19:
		{
			switch(rank)
			{
		   case 1: string="딱가리"
		   case 2: string="정식딱가리"
		   case 3: string="배태랑"
		   case 4: string="왼발"
		   case 5: string="오른발"
		   case 6: string="왼팔"
		   case 7: string="오른팔"
		   case 8: string="헤드"
		   
			}
		}
	case 20:
		{
			switch(rank)
			{
			case 0: string="총알받이";
			case 1: string="신참";
			case 2: string="돌격부";
			case 3: string="특수부";
			case 4: string="저격부";
			case 5: string="엘리트";
			case 6: string="엘리트";
			}
		}
	case 21:
		{
			switch(rank)
			{
			case 1: string="훈련생";
			case 2: string="직원";
			case 3: string="간부";
			case 4: string="부책임자";
			case 5: string="총책임자";
			default: string="훈련생";
			}
		}
		case 22:
		{
			switch(rank)
			{
			case 1: string="날라리";
			case 2: string="준조직원";
			case 3: string="조직원";
			case 4: string="행동대장";
			case 5: string="지부장";
			case 6: string="3성";
			case 7: string="2성";
			case 8: string="1성";
			default: string="딱갈이";
			}
		}
 		case 23:
		{
			switch(rank)
			{
			case 6: string="Top O.G";
			case 5: string="Double O.G";
			case 4: string="O.G";
			case 3: string="B.G";
			case 2: string="Crew";
			case 1: string="Outsider";
			default: string="Outsider";
			}
		}
		case 24:
		{
			switch(rank)
			{
			case 1: string="사원";
			case 2: string="상담가";
			case 3: string="경호원";
			case 4: string="이사";
			case 5: string="부회장";
			case 6: string="회장";
			default: string="사원";//
			}
		}
		case 25:
		{
			switch(rank)
			{
			case 1: string="건달";
			case 2: string="혈백";
			case 3: string="혈맹";
			case 4: string="혈주";
			case 5: string="주자";
			case 6: string="교자";
			case 7: string="시자";
			case 8: string="흑자";
			case 9: string="백자";
			case 10: string="도자";
			case 11: string="혈자";
			case 12: string="대혈자";
			default: string="건달";
			}
		}
		case 26:
		{
			switch(rank)
			{
			case 1: string="집사";
			case 2: string="권사";
			case 3: string="선교사";
			case 4: string="전도사";
			case 5: string="교육전도사";
			case 6: string="부목사";
			case 7: string="목사";
			case 8: string="원로목사";
			default: string="집사";
			}
		}
		case 27:
		{
			switch(rank)
			{
			case 1: string="외부인";
			case 2: string="신참";
			case 3: string="준조직원";
			case 4: string="조직원";
			case 5: string="행동대장";
			case 6: string="실장";
			case 7: string="지부장";
			case 8: string="명두";
			case 9: string="부두목";
			case 10: string="용두";
			case 11: string="원로";
			case 12: string="대원로";
			default: string="";
			}
		}
		case 28:
		{
			switch(rank)
			{
			case 1: string="Member";
			case 2: string="Special Agent";
			case 3: string="Under Boss";
			case 4: string="Boss";
			default: string="Out Sider";
			}
		}
		case 29:
		{
			switch(rank)
			{
			case 8: string="Top O.G";
			case 7: string="R.Hand";
			case 6: string="L.Hand";
			case 5: string="O.G";
			case 4: string="B.G";
			case 3: string="C.G";
  			case 2: string="Y.G";
   			case 1: string="T.G";
			default: string="Crew";
			}
		}
		case 30:
		{
			switch(rank)
			{
			case 1: string="Out Sider";
			case 2: string="Guerro";
			case 3: string="Vato";
			case 4: string="Left Hand";
			case 5: string="Right Hand";
			case 6: string="Street Leader";
			default: string="Out Sider";
			}
		}
		case 31:
		{
			switch(rank)
			{
			case 1: string="외부인";
			case 2: string="조직원";
			case 3: string="행동대장";
			case 4: string="지부장";
			case 5: string="왼팔";
			case 6: string="오른팔";
			case 7: string="두목";
			case 8: string="원로";
			default: string="외부인";
			}
		}
		case 32:
		{
			switch(rank)
			{
   			case 1: string="용병";
   			case 2: string="훈련용병";
   			case 3: string="초급용병";
   			case 4: string="정식용병";
		 	case 5: string="엘리트용병";
   			case 6: string="소대장";
   			case 7: string="중대장";
   			case 8: string="연대장";
   			case 9: string="대대장";
   			case 10: string="사령관";
	 	 	default: string="용병";
			}
		}
		case 33:
		{
			switch(rank)
			{
			case 1: string="훈련생";
			case 2: string="스튜어디스";
			case 3: string="공항관리자";
			case 4: string="출입국 관리자";
			case 5: string="관제사";
			case 6: string="부기장";
			case 7: string="기장";
			default: string="훈련생";
			}
		}
		case 34:
		{
			switch(rank)
			{
			case 1: string="인턴";
			case 2: string="모드기획부";
			case 3: string="모드관리부";
			case 4: string="모드편집부";
			case 5: string="IT팀장";
			case 6: string="IT부장";
			case 7: string="IT사장";
			default: string="인턴";
			}
		}
		case 35:
		{
			switch(rank)
			{
			case 1: string="인턴요리사";
			case 2: string="초급요리사";
			case 3: string="중급요리사";
			case 4: string="요리사";
			case 5: string="고급요리사";
			case 6: string="사장";
			default: string="구경온누리꾼";
			}
       	}
		case 36:
		{
			switch(rank)
			{
			case 1: string="기간제교수";
			case 2: string="인턴교수";
			case 3: string="정식교수";
			case 4: string="교수";
			default: string="기간제교수";
			}
		}
		case 37:
		{
			switch(rank)
			{
			case 1: string="4급 레이서";
			case 2: string="3급 레이서";
			case 3: string="2급 레이서";
			case 4: string="1급 레이서";
			default: string="초짜 레이서";
			}
		}
		case 38:
		{
			switch(rank)
			{
			case 1: string="인턴 교도관";
			case 2: string="기간 교도관";
			case 3: string="초급 교도관";
			case 4: string="중급 교도관";
			case 5: string="3급 교도관";
			case 6: string="2급 교도관";
			case 7: string="1급 교도관";
			default: string="임시교도관";
			}
		}
	}
	return string;
}
stock MGetRankName(rank)
{
				new string[256];
				for(new i=0;i<MAX_PLAYERS;i++)
				{
				if(PlayerInfo[i][pFMember] < 255)
				{
				switch(rank)
				{
			 		case 1:string=FamilyInfo[PlayerInfo[i][pFMember]][FamilyRankName1];
					case 2:string=FamilyInfo[PlayerInfo[i][pFMember]][FamilyRankName2];
					case 3:string=FamilyInfo[PlayerInfo[i][pFMember]][FamilyRankName3];
					case 4:string=FamilyInfo[PlayerInfo[i][pFMember]][FamilyRankName4];
					case 5:string=FamilyInfo[PlayerInfo[i][pFMember]][FamilyRankName5];
					case 6:string=FamilyInfo[PlayerInfo[i][pFMember]][FamilyRankName6];
					default:string="None";
				}
				}
				}
	return string;
}
forward IsMemberCar(playerid, carid);
public IsMemberCar(playerid, carid)
{
	new mem=PlayerInfo[playerid][pMember];
	new job=PlayerInfo[playerid][pJob];
	if(carid >= MCAR[99][0] && carid <= MCAR[99][1])
	{// 렌트차량 체크
		return 2;
	}
	if(carid >= JCAR[99][0] && carid <= JCAR[99][1])
	{// 스쿨차량 체크
		return 4;
	}
	if(job != 0)
	{// 직업차량 체크
		if(carid >= JCAR[job][0] && carid <= JCAR[job][1])
		{
			return 3;
		}
	}
	if(mem == 8)
	{
		if(carid >= MCAR[1][0] && carid <= MCAR[1][1])
		{
			return 1;
		}
		else if(carid >= MCAR[2][0] && carid <= MCAR[2][1])
		{
			return 1;
		}
		else if(carid >= MCAR[3][0] && carid <= MCAR[3][1])
		{
			return 1;
		}
		else if(carid >= MCAR[4][0] && carid <= MCAR[4][1])
		{
			return 1;
		}
	}
	if(mem != 0)
	{// 팩션차량 체크
		if(carid >= MCAR[mem][0] && carid <= MCAR[mem][1])
		{
			return 1;
					}
		else if(carid >= MCAR[19][0] && carid <= MCAR[19][1])
		{
			return 1;
		}
	}
	if(carid >= OCAR)
	{// 영구차량 체크
		return 5;
	}
	return 0;
}
stock GetName(playerid)
{
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, sizeof(pname));
	return pname;
}
forward LoadHouse();
public LoadHouse()
{
	new file[256], string[256];
	for(new h=1; h<MAX_BUILDING; h++)
	{
		format(file, sizeof(file), "House/%d.ini", h);
		BuildingInfo[h][hCreated]=dini_Int(file, "Created");
		BuildingInfo[h][hNum]=dini_Int(file, "Number");
		BuildingInfo[h][hPrice]=dini_Int(file, "Price");
		BuildingInfo[h][hOwned]=dini_Int(file, "Owned");
		strmid(BuildingInfo[h][hName], dini_Get(file, "Name"), 0, 30, 30);
		strmid(BuildingInfo[h][hOwner], dini_Get(file, "Owner"), 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
		BuildingInfo[h][hEnterX]=dini_Float(file, "EnterX");
		BuildingInfo[h][hEnterY]=dini_Float(file, "EnterY");
		BuildingInfo[h][hEnterZ]=dini_Float(file, "EnterZ");
		BuildingInfo[h][hEnterI]=dini_Int(file, "EnterI");
		BuildingInfo[h][hEnterW]=dini_Int(file, "EnterW");
		BuildingInfo[h][hExitX]=dini_Float(file, "ExitX");
		BuildingInfo[h][hExitY]=dini_Float(file, "ExitY");
		BuildingInfo[h][hExitZ]=dini_Float(file, "ExitZ");
		BuildingInfo[h][hExitI]=dini_Int(file, "ExitI");
		BuildingInfo[h][hExitW]=dini_Int(file, "ExitW");
		BuildingInfo[h][hRent]=dini_Int(file, "Rent");
		BuildingInfo[h][hRentPrice]=dini_Int(file, "RentPrice");
		BuildingInfo[h][hBank]=dini_Int(file, "Bank");
		BuildingInfo[h][hLocked]=dini_Int(file, "Locked");
		BuildingInfo[h][hType]=dini_Int(file, "Type");
		BuildingInfo[h][hNumberKey]=dini_Int(file, "NumberKey");
		BuildingInfo[h][hPass]=dini_Int(file, "Pass");
		for(new f=0; f<3; f++)
		{
			format(string, sizeof(string), "KeyPos_%d", f);
			BuildingInfo[h][hKeyPos][f]=dini_Float(file, string);
		}
	}
}
forward DeleteHouse(h);
public DeleteHouse(h)
{
	new file[256];
	format(file, sizeof(file), "House/%d.ini", h);
	dini_Remove(file);
	BuildingInfo[h][hCreated]=0;
	BuildingInfo[h][hNum]=0;
	BuildingInfo[h][hPrice]=0;
	BuildingInfo[h][hOwned]=0;
	strmid(BuildingInfo[h][hName], " ", 0, 30, 30);
	strmid(BuildingInfo[h][hOwner], " ", 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
	BuildingInfo[h][hEnterX]=0.0;
	BuildingInfo[h][hEnterY]=0.0;
	BuildingInfo[h][hEnterZ]=0.0;
	BuildingInfo[h][hEnterI]=0;
	BuildingInfo[h][hEnterW]=0;
	BuildingInfo[h][hExitX]=0.0;
	BuildingInfo[h][hExitY]=0.0;
	BuildingInfo[h][hExitZ]=0.0;
	BuildingInfo[h][hExitI]=0;
	BuildingInfo[h][hExitW]=0;
	BuildingInfo[h][hRent]=0;
	BuildingInfo[h][hRentPrice]=0;
	BuildingInfo[h][hBank]=0;
	BuildingInfo[h][hLocked]=0;
	BuildingInfo[h][hType]=0;
	BuildingInfo[h][hNumberKey]=0;
	BuildingInfo[h][hPass]=0;
	BuildingInfo[h][hKeyPos][0]=0.0;
	BuildingInfo[h][hKeyPos][1]=0.0;
	BuildingInfo[h][hKeyPos][2]=0.0;
	DestroyPickup(BuildingInfo[h][hPickupid]);
}
forward SaveHouse(h);
public SaveHouse(h)
{
	new file[256], string[256];
	format(file, sizeof(file), "House/%d.ini", h);
	dini_Create(file);
	dini_IntSet(file, "Created", BuildingInfo[h][hCreated]);
	dini_IntSet(file, "Number", BuildingInfo[h][hNum]);
	dini_IntSet(file, "Price", BuildingInfo[h][hPrice]);
	dini_IntSet(file, "Owned", BuildingInfo[h][hOwned]);
	dini_Set(file, "Name", BuildingInfo[h][hName]);
	dini_Set(file, "Owner", BuildingInfo[h][hOwner]);
	dini_FloatSet(file, "EnterX", BuildingInfo[h][hEnterX]);
	dini_FloatSet(file, "EnterY", BuildingInfo[h][hEnterY]);
	dini_FloatSet(file, "EnterZ", BuildingInfo[h][hEnterZ]);
	dini_IntSet(file, "EnterI", BuildingInfo[h][hEnterI]);
	dini_IntSet(file, "EnterW", BuildingInfo[h][hEnterW]);
	dini_FloatSet(file, "ExitX", BuildingInfo[h][hExitX]);
	dini_FloatSet(file, "ExitY", BuildingInfo[h][hExitY]);
	dini_FloatSet(file, "ExitZ", BuildingInfo[h][hExitZ]);
	dini_IntSet(file, "ExitI", BuildingInfo[h][hExitI]);
	dini_IntSet(file, "ExitW", BuildingInfo[h][hExitW]);
	dini_IntSet(file, "Rent", BuildingInfo[h][hRent]);
	dini_IntSet(file, "RentPrice", BuildingInfo[h][hRentPrice]);
	dini_IntSet(file, "Bank", BuildingInfo[h][hBank]);
	dini_IntSet(file, "Locked", BuildingInfo[h][hLocked]);
	dini_IntSet(file, "Type", BuildingInfo[h][hType]);
	dini_IntSet(file, "NumberKey", BuildingInfo[h][hNumberKey]);
	dini_IntSet(file, "Pass", BuildingInfo[h][hPass]);
	for(new f=0; f<3; f++)
	{
		format(string, sizeof(string), "KeyPos_%d", f);
		dini_FloatSet(file, string, BuildingInfo[h][hKeyPos][f]);
	}
}
forward ShowHouselist(playerid, targetid);
public ShowHouselist(playerid, targetid)
{
	new text[30], text2[30], string[256];
	if(PlayerInfo[playerid][pHouse] == 0)
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 집을 가지고 있지 않습니다.");
	}
	else
	{
		SCM(targetid ,COLOR_SUN, "━━━━━[집 목록]━━━━━");
		new h=PlayerInfo[playerid][pHouse];
		strmid(text, BuildingInfo[h][hName], 0, 30, 30);
		if(BuildingInfo[h][hLocked] == 0)
		{
			text2="열림";
		}
		else
		{
			text2="잠김";
		}
		format(string, sizeof(string), "[번호] %d [이름] %s [상태] %s", h, text, text2);
		SCM(targetid, COLOR_ERROR, string);
	}
}
forward ShowBuildlist(playerid, targetid);
public ShowBuildlist(playerid, targetid)
{
	new text[30], text2[30], string[256];
	if(PlayerInfo[playerid][pBuild] == 0)
	{
		SCM(playerid, COLOR_RED, "INFO : "#C_WHITE" 사업장을 가지고 있지 않습니다.");
	}
	else
	{
		SCM(targetid ,COLOR_SUN, "━━━━━[사업장 목록]━━━━━");
		new h=PlayerInfo[playerid][pBuild];
		strmid(text, BuildingInfo[h][hName], 0, 30, 30);
		if(BuildingInfo[h][hLocked] == 0)
		{
			text2="열림";
		}
		else
		{
			text2="잠김";
		}
		format(string, sizeof(string), "[번호] %d [이름] %s [상태] %s", h, text, text2);
		SCM(targetid, COLOR_ERROR, string);
	}
}

forward OnPlayerLoseHealth2(playerid, Float:lose);//이걸로드해가지고그래 고수내.
public OnPlayerLoseHealth2(playerid, Float:lose)
{
	for(new g=0;g<GetMaxPlayers();g++)if(IsPlayerConnected(g) && g!=playerid)
	{
	    if(IsPlayerAiming(g, playerid))return PlayerPlaySound(g, 1057, 0.0, 0.0, 0.0);
 	}
 	return true;
}

forward SpawnPlayerHospital(playerid);
public SpawnPlayerHospital(playerid)
{
	SpawnPlayer(playerid);//스폰시킨후에
	SetTimerEx("ttt222", 1500, false, "i", playerid);
}

forward ttt222(playerid);
public ttt222(playerid)
{
	TelePlayer(playerid,1172.9845,-1323.2927,15.3980,0);
//	TelePlayer(playerid,2029.4612,-1411.2273,16.9989,0);//호스피탈로..
}

forward TelePlayer(playerid,Float:X,Float:Y,Float:Z,Interior);
public TelePlayer(playerid,Float:X,Float:Y,Float:Z,Interior)//GTA2 자료실
{
	new MyVehicle=GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid)==PLAYER_STATE_ONFOOT) //플레이어가 걷고있으면 (차를 안타면)
	{
		SetPlayerPos(playerid,X,Y,Z); //몸만 옴긴다
	}
	else if(IsPlayerInAnyVehicle(playerid)&&GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) //차는 탔지만 운전자가아니면
	{
		SetPlayerPos(playerid,X,Y,Z); //차를안옴긴다 운전자가 아니기때문에
	}
	else if(IsPlayerInAnyVehicle(playerid)&&GetPlayerState(playerid)==PLAYER_STATE_DRIVER) //플레이어가 차운전자면
	{
		SetVehiclePos(MyVehicle,X,Y,Z); //차량을 옴긴다 운전자이기 때문에
		LinkVehicleToInterior(MyVehicle,Interior); //차량에 인테리어 링크를 건다
	}
	SetPlayerInterior(playerid,Interior); //마지막으로 플레이어의 인테리어도 바꿔준다
}

stock RPPlayerName (playerid)
{
	new playername[MAX_PLAYER_NAME];
	if(Hide[playerid])
	{
		playername="알수없음";
	}
	else
	{
		GetPlayerName(playerid, playername, sizeof(playername));
		new PlyName1 = strfind(playername,"_", true);
		if(PlyName1 != -1)
		{
			playername[PlyName1] = ' ';
		}
	}
	return playername;
}

forward SetPlayerFreeze(playerid, bool:freeze, type);
public SetPlayerFreeze(playerid, bool:freeze, type)
{
	if(freeze)
	{// 1: on foot 2: in vehicle
		if(type>2)
		{
			type=2;
		}
		Freeze[playerid]=type;
		TogglePlayerControllable(playerid, 0);
	}
	else
	{
		Freeze[playerid]=0;
		TogglePlayerControllable(playerid, 1);
	}
}
forward DestoryOBJ(id);
public DestoryOBJ(id)
{
	return DestroyObject(id);
}
forward FindNumber(num);
public FindNumber(num)
{
	for(new playerid=0; playerid<M_P; playerid++)
	{
		if(PlayerInfo[playerid][pPnumber] == num && num != 0)
		{
			return playerid;
		}
	}
	return -1;
}

forward LoadContract();
forward SaveContract();
public LoadContract()
{
	new string[256];
	new file[256];
	format(file, sizeof(file), "Contract.ini");
	for(new c=0; c<11; c++)
	{
		format(string, sizeof(string), "Name_%d", c);
		strmid(Contract[c][ctName], dini_Get(file, string), 0, MAX_PLAYER_NAME);
		format(string, sizeof(string), "Target_%d", c);
		strmid(Contract[c][ctTarget], dini_Get(file, string), 0, MAX_PLAYER_NAME);
		format(string, sizeof(string), "Price_%d", c);
		Contract[c][ctPrice]=dini_Int(file, string);
		format(string, sizeof(string), "Reason_%d", c);
		strmid(Contract[c][ctReason], dini_Get(file, string), 0, 256);
		Contract[c][ctID]=999;
	}
}
public SaveContract()
{
	new string[256];
	new file[256];
	format(file, sizeof(file), "Contract.ini");
	dini_Create(file);
	for(new c=0; c<11; c++)
	{
		format(string, sizeof(string), "Name_%d", c);
		dini_Set(file, string, Contract[c][ctName]);
		format(string, sizeof(string), "Target_%d", c);
		dini_Set(file, string, Contract[c][ctTarget]);
		format(string, sizeof(string), "Price_%d", c);
		dini_IntSet(file, string,Contract[c][ctPrice]);
		format(string, sizeof(string), "Reason_%d", c);
		dini_Set(file, string, Contract[c][ctReason]);
	}
}
forward ShowContract(playerid);
public ShowContract(playerid)
{
	new string[256];
	SCM(playerid, COLOR_ERROR, "__________|Contract INFO|__________");
	for(new c=1; c<11; c++)
	{
		if(Contract[c][ctID] != 999)
		{
			format(string, sizeof(string), "[%d] 의뢰인 : %s | 타겟 : %s | 가격 : %d | 사유 : %s", c, Contract[c][ctName], Contract[c][ctTarget], Contract[c][ctPrice], Contract[c][ctReason]);
			SCM(playerid, COLOR_ERROR, string);
		}
	}
}
forward DeleteContract(c);
public DeleteContract(c)
{
	strmid(Contract[c][ctName], "\0", 0, MAX_PLAYER_NAME);
	strmid(Contract[c][ctTarget], "\0", 0, MAX_PLAYER_NAME);
	Contract[c][ctPrice]=0;
	strmid(Contract[c][ctReason], "\0", 0, 256);
	Contract[c][ctID]=999;
	SaveContract();
}
forward NameTimers();
public NameTimers()
{
	for(new i = 0;i < M_P;i++)
	{
		if(IsPlayerConnected(i))
		{
			for(new q = 0;q < M_P;q++)
			{
				if(IsPlayerConnected(q))
				{
					new Float:p1x;
					new Float:p1y;
					new Float:p1z;
					new Float:p2x;
					new Float:p2y;
					new Float:p2z;
					GetPlayerPos(i,p1x,p1y,p1z);
					GetPlayerPos(q,p2x,p2y,p2z);
					if(GetPointDistanceToPointExMorph(p1x,p1y,p1z,p2x,p2y,p2z) < 5.0)//아니면 제작은 해둘까 ㄴㄴ 나중에하자 이게 시력하자햇던거고
					{
						if(Hide[i])
						{
							ShowPlayerNameTagForPlayer(q, i, false);//이거야 잠깐만 ㅇㅇ,
						}
						else
						{
							ShowPlayerNameTagForPlayer(q, i, true);//ㄱㄷ 원문좀보고 ㅇ 형 진짜 드래그할때 말쓰면안됌 그러면 컨트롤z해도 안돼
						}
					}
					else
     				{
						ShowPlayerNameTagForPlayer(i, q, false);//이래도 안돼면 하나씩 더 추가해야돼 일단 이걸로됫음
					}
				}
			}
		}
	}
}
forward HackTimer();
public HackTimer()
{
	for(new playerid=0; playerid<M_P; playerid++)
	{
		new Float:ph, Float:pa;
		GetPlayerHealth(playerid, ph);
		GetPlayerArmour(playerid, pa);
		if(PlayerInfo[playerid][pHealth] > ph)
		{
			PlayerInfo[playerid][pHealth] = ph;
		}
		if(PlayerInfo[playerid][pAmour] > pa)
		{
			PlayerInfo[playerid][pAmour] = pa;
		}
		if(PlayerInfo[playerid][pHealth] == 0.0)
		{
			PlayerInfo[playerid][pHealth] = 50.0;
		}
		SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
		SetPlayerArmour(playerid, PlayerInfo[playerid][pAmour]);
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	}
}
forward OpenHit();
public OpenHit()
{
	MoveObject(hit, 3343.607421875, -1579.0533447266, 7.6907320022583, 5.0);
	SetTimer("CloseHit", 10000, false);
}
forward CloseHit();
public CloseHit()
{
	MoveObject(hit, 3351.2248535156, -1543.5439453125, 7.6907320022583, 5.0);
}

forward MoveShip();
public MoveShip()
{
	SetTimer("BackShip", 100000, false);
	MoveObject(milsu, 2845.8142089844, -2593.4541015625, 0.6907320022583, 10.0);
	milsugun=true;
	SendJobMessage(6, COLOR_WHITE, "* 무전기 :밀수 하러오시게! 시간이없네! 발신자 : 125");
}
forward BackShip();
public BackShip()
{
	MoveObject(milsu, 3174.4167480469, -2595.8127441406, 0.99525451660156, 10.0);
	milsugun=false;
	for(new i=0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			BuyItem[i][0]=false;
			BuyItem[i][1]=false;
		}
	}
	SendJobMessage(6, COLOR_WHITE, "* 무전기 : 경찰이 온다고 하니 떠나겟네 발신자 : 125");
}
//
public AudioTP(playerid,targetid,num,vol) //
{
    if(IsPlayerConnected(playerid))
	{
		if(Audioonf[playerid] == 1)
		{
		    if(vol == 3)
		    {
		        if(targetid == playerid)
		        {
		            for(new i = 0; i < MAX_AUDIOS; i ++)
			        {
			            Audio_SetVolume(targetid,i,0);
			        }
			        return 1;
		        }
		        for(new i = 0; i < MAX_AUDIOS; i ++)
		        {
		            Audio_Stop(targetid,i);
		        }
		        Audioofn[targetid] = 0;
		        Audioofnid[targetid] = 999;
		        return 1;
		    }
	        if(Audioofn[targetid] == 0)
	        {
	            Audio_GetPosition(playerid, num);
	            Audioofnid[targetid] = playerid;
		        Audioofn[targetid] = 1;
            	Audio_Play(targetid, num, false, false, false);
            	Audio_SetPosition(targetid, num, Audiosec[playerid]);
			}
			for(new i = 0; i < MAX_AUDIOS; i ++)
			{
				Audio_SetVolume(targetid,i,vol);
			}
		}
	}
	return 1;
}
public AudioTPC(playerid,targetid) //
{
    if(IsPlayerConnected(playerid))
	{
		new radi = MAX_AUDIOSRADI;
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(targetid, oldposx, oldposy, oldposz);
		if(Audioobj[playerid] == playerid)
		{
		    GetPlayerPos(playerid, posx, posy, posz);
		}
		else
		{
			GetObjectPos(Audioobj[playerid], posx, posy, posz);
		}
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
		{
			AudioTP(playerid,targetid,Audiomusic[playerid],100);
		}
		else if (((tempposx < radi/12) && (tempposx > -radi/12)) && ((tempposy < radi/12) && (tempposy > -radi/12)) && ((tempposz < radi/12) && (tempposz > -radi/12)))
		{
			AudioTP(playerid,targetid,Audiomusic[playerid],90);
		}
		else if (((tempposx < radi/10) && (tempposx > -radi/10)) && ((tempposy < radi/10) && (tempposy > -radi/10)) && ((tempposz < radi/10) && (tempposz > -radi/10)))
		{
			AudioTP(playerid,targetid,Audiomusic[playerid],70);
		}
		else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
		{
			AudioTP(playerid,targetid,Audiomusic[playerid],50);
		}
		else if (((tempposx < radi/5) && (tempposx > -radi/5)) && ((tempposy < radi/5) && (tempposy > -radi/5)) && ((tempposz < radi/5) && (tempposz > -radi/5)))
		{
		    AudioTP(playerid,targetid,Audiomusic[playerid],37);
		}
		else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
		{
		    AudioTP(playerid,targetid,Audiomusic[playerid],20);
		}
		else if (((tempposx < radi/3) && (tempposx > -radi/3)) && ((tempposy < radi/3) && (tempposy > -radi/3)) && ((tempposz < radi/3) && (tempposz > -radi/3)))
		{
            AudioTP(playerid,targetid,Audiomusic[playerid],10);
		}
		else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
		{
            AudioTP(playerid,targetid,Audiomusic[playerid],7);
		}
		else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
		    AudioTP(playerid,targetid,Audiomusic[playerid],3);
		}
	}
	return 1;
}
public Audio_OnGetPosition(playerid, handleid, seconds)
{
	Audiosec[playerid] = seconds;
	return 1;
}

public LoadAudios()
{
	new arrCoords[MAX_AUDIOS][2048];
	new strFromFile2[2048];
	new File: file = fopen("Audios.cfg", io_read);
	if(file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		for(new i = 0; i < MAX_AUDIOS; i ++)
		{
			strmid(Audiosee[i], arrCoords[i], 0, strlen(arrCoords[i]), 255);
       	}
		fclose(file);
	}
	else
	{
		GameModeExit();
	}
	return 1;
}
//
forward SendBellMessage(Float:x, Float:y, Float:z);
public SendBellMessage(Float:x, Float:y, Float:z)
{
	for(new i=0; i<M_P; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerToPoint(50.0, i, x, y, z))
			{
				SCM(i, COLOR_ERROR, "INFO : "#C_WHITE" 누군가 초인종을 울립니다.");
			}
		}
	}
}
	public SaveTrunk()
	{
		new idx;
		new File: file2;
		idx = 1;
		while (idx < sizeof(CarInfo))
		{
			new coordsstring[256];
			format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
			vehTrunk[idx][1],
			vehTrunkAmmo[idx][1],
			vehTrunk[idx][2],
			vehTrunkAmmo[idx][2],
			vehTrunk[idx][3],
			vehTrunkAmmo[idx][3],
			vehTrunk[idx][4],
			vehTrunkAmmo[idx][4],
			vehTrunkCounter[idx],
			vehTrunkArmour[idx]);
			if(idx == 1)
			{
				file2 = fopen("trunk.cfg", io_write);
			}
			else
			{
				file2 = fopen("trunk.cfg", io_append);
			}
			fwrite(file2, coordsstring);
			idx++;
			fclose(file2);
		}
		return 1;
	}
	public UpmdelayTimer(playerid)
	{
		Upmdelay[playerid]=0;
	}

forward FuckOffCheater();//원래잇는거잖아 ㄴㄴ 그런데 원래꺼는 써겄어 원래꺼 볼래? 됏어
public FuckOffCheater()
{
	new string[128];
	new playerw,playera;
	for(new playerid=0; playerid<200;playerid++)
	{
		if(IsPlayerConnected(playerid))
		{
			for(new i=0;i<15;i++)
			{
				GetPlayerWeaponData(playerid,i,playerw,playera);
				if(!weapons[playerw][W_B][playerid])
				{
					if(!IsACop(playerid))
					{
						if(IsPlayerMenSon(playerw) != true&& playera >weapons[playerw][W_A][i] )
						{
							GetPlayerWeaponData(playerid,2,playerw,playera);
							if(playerw == 25)
							{
								ResetPlayerWeapons(playerid);
							}
							else
							{
								ResetPlayerWeapons(playerid);
								format(string, sizeof(string), "(관리자명령어) %s(%d)님 무기핵을 사용하였습니다.", RPPlayerName(playerid),playerid);
								ABroadCast(COLOR_ADMIN,string,1);

							}
						}
					}
				}
			}
		}
	}
}

forward BloodHack();
public BloodHack()// 체력핵방지
{
new i;
new Float:health;
for(i=0 ; i<MAX_PLAYERS ; i++)
{
if(!IsPlayerAdmin(i))
{
if(GetPlayerHealth(i, health) > 100)
{
Kick(i); // 킥
}
}
}
return 1;
}

public cv(model,Float:cx,Float:cy,Float:cz,Float:ca,co1,co2,string[],stco,Float:dist)
{
	new h1,Text3D:h2;
	//h1 = CreateVehicle(model,cx,cy,cz,ca,co1,co2,-1);
	h1 = AddStaticVehicleEx(model,cx,cy,cz,ca,co1,co2,-1);
	h2 = Create3DTextLabel(string,stco,0,-1,0,dist,0,0);
	Attach3DTextLabelToVehicle(h2,h1,0,1,0);
	return 1;
}

stock c_fwrite( File: handle, const string[] )
{
	for( new i = 0; i < strlen( string );i++ )
	fputchar( handle, string[i], false);
	return ;
}

stock NoJob(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		PI(playerid,pJob) = 0;
		PI(playerid,pMember) = 0;
		PI(playerid,pLeader) = 0;
		PI(playerid,pFMember) = 0;
 	    return 1;
 	}
	return 0;
}

forward Showtrunk(vehid,playerid);
public Showtrunk(vehid,playerid)
{
	new string[256];
    for(new c = 1; c < 4; c++)
	{
	    new itemname[100];
	   	SCM(playerid, COLOR_ERROR, "");
	    if(VehicleInfo[vehid][vTrunk][c] > 0){GetWeaponName(VehicleInfo[vehid][vTrunk][c], itemname, sizeof(itemname));}
	    else if(VehicleInfo[vehid][vTrunk][c] == -1){itemname="방탄복";}
	    else if(VehicleInfo[vehid][vTrunk][c] == -2){itemname="총기재료";}
	    else if(VehicleInfo[vehid][vTrunk][c] == -3){itemname="마약";}
		format(string, sizeof(string), "슬롯: [%d] 아이템: [%s] 수량: [%d]", c, itemname, VehicleInfo[vehid][vTrunk2][c]);
		SCM(playerid, COLOR_SERVER, string);
	}
	SCM(playerid, COLOR_ERROR, "");
	return 1;
}


stock PutRoadBlock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateObject(Object, x, y, z-0.2, 0, 0, Angle);
	        return 1;
  	    }
  	}
  	return 0;
}


stock DeleteAllRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
	  	    if(Roadblocks[i][sCreated] == 1)
	  	    {
	  	        Roadblocks[i][sCreated] = 0;
	            Roadblocks[i][sX] = 0.0;
	            Roadblocks[i][sY] = 0.0;
	            Roadblocks[i][sZ] = 0.0;
	            DestroyObject(Roadblocks[i][sObject]);
	  	    }
  	    }
	}
    return 0;
}

stock DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sX] = 0.0;
                Roadblocks[i][sY] = 0.0;
                Roadblocks[i][sZ] = 0.0;
                DestroyObject(Roadblocks[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

stock GetSpeed(playerid)
{
	new Float:vvv[3];
	GetVehicleVelocity(GetPlayerVehicleID(playerid),vvv[0],vvv[1],vvv[2]);
	return floatround(1.61*floatsqroot(floatpower(floatabs(vvv[0]), 2.0) + floatpower(floatabs(vvv[1]), 2.0) + floatpower(floatabs(vvv[2]), 2.0)) * 100.3);
}

stock IsPlayerFacingPoint(playerid, Float:dOffset, Float:pX, Float:pY, Float:pZ)
{
	#pragma unused pZ
	new
		Float:X,
		Float:Y,
		Float:Z,
		Float:pA,
		Float:ang;

	if(!IsPlayerConnected(playerid)) return 0;

	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, pA);

	if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);

	if(AngleInRangeOfAngle(-ang, pA, dOffset)) return true;

	return false;

}

stock IsPlayerFacingPlayer(playerid, targetid, Float:dOffset)
{

	new
		Float:pX,
		Float:pY,
		Float:pZ,
		Float:pA,
		Float:X,
		Float:Y,
		Float:Z,
		Float:ang;

	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;

	GetPlayerPos(targetid, pX, pY, pZ);
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, pA);

	if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);

	if(AngleInRangeOfAngle(-ang, pA, dOffset)) return true;

	return false;

}

stock AngleInRangeOfAngle(Float:a1, Float:a2, Float:range)
{

	a1 -= a2;
	if((a1 < range) && (a1 > -range)) return true;

	return false;

}

forward BallDown(playerid, Float:oldz);
public BallDown(playerid, Float:oldz)
{
    new Float:x, Float:y, Float:z;
	GetObjectPos(Ball, x, y, z);
	new Float:a;
	new Float:x2, Float:y2;
	GetPlayerPos(playerid, x2, y2, a);
	GetPlayerFacingAngle(playerid, a);
	x2 += (16 * floatsin(-a, degrees));
	y2 += (16 * floatcos(-a, degrees));
	MoveObject(Ball, x2, y2, oldz-0.8, 10.0+random(3));
	Baller = 999;
	ShootingBall = 0;
	BallBounce = 1;
	return 1;
}

forward BallDown2(playerid);
public BallDown2(playerid)
{
	MoveObject(Ball, 2795.5237,-2019.6152,13.5547-0.8, 10.0+random(3));
	Baller = 999;
	ShootingBall = 0;
	GameTextForPlayer(playerid, "~g~Canestro!", 3000, 3);
	BallBounce = 1;
	return 1;
}

forward BallDown3(playerid);
public BallDown3(playerid)
{
	MoveObject(Ball, 2768.3669,-2019.6644,13.5547-0.8, 10.0+random(3));
	Baller = 999;
	ShootingBall = 0;
	GameTextForPlayer(playerid, "~g~Canestro!", 3000, 3);
	BallBounce = 1;
	return 1;
}

forward BallDown4(playerid);
public BallDown4(playerid)
{
	MoveObject(Ball, 2795.5237+random(5),-2019.6152+random(5),13.5547-0.8, 10.0+random(3));
	Baller = 999;
	ShootingBall = 0;
	GameTextForPlayer(playerid, "~r~Mancato!", 3000, 3);
	BallBounce = 1;
	return 1;
}

forward BallDown5(playerid);
public BallDown5(playerid)
{
	MoveObject(Ball, 2768.3669+random(5),-2019.6644+random(5),13.5547-0.8, 10.0+random(3));
	Baller = 999;
	ShootingBall = 0;
	GameTextForPlayer(playerid, "~r~Mancato!", 3000, 3);
	BallBounce = 1;
	return 1;
}

forward ShootMiss(playerid);
public ShootMiss(playerid)
{
	MoveObject(Ball, 2794.9612+random(2), -2019.5415+random(2), 15.5075+random(2), 12.5+random(4));
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
	ShootingBall = 4;
	HavingBall[playerid] = 0;
	return 1;
}

forward ShootMiss2(playerid);
public ShootMiss2(playerid)
{
	MoveObject(Ball, 2768.6289+random(2),-2019.7227+random(2),15.6287+random(2), 12.5+random(4));
	ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
	ShootingBall = 5;
	HavingBall[playerid] = 0;
	return 1;
}

forward ClearAnim(playerid);
public ClearAnim(playerid)
{
	ClearAnimations(playerid);
	return 1;
}

GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if (GetPlayerVehicleID(playerid))
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
Toll_OpenToll(TollID,playerid)
{
	if(TollID == RichmanToll)
	{
		L_a_TollPerson[playerid][0] = RichmanToll;
		L_a_TollPerson[playerid][1] = (GetUnixTime() + 6);
        SetDynamicObjectRot(Richman, 0.000000, 0.000000, 23.81982421875);
	    SetDynamicObjectRot(Richman1, 0.000000, 0.000000, 214.37744140625);
	}

	else if(TollID == FlintToll)
	{
		L_a_TollPerson[playerid][0] = FlintToll;
		L_a_TollPerson[playerid][1] = (GetUnixTime() + 6);
	    SetDynamicObjectRot(Flint, 0.000000, 0.000000, 270.67565917969);
	    SetDynamicObjectRot(Flint1, 0.000000, 0.000000, 87.337799072266);
	}

	else if(TollID == LVToll)
	{
		L_a_TollPerson[playerid][0] = LVToll;
		L_a_TollPerson[playerid][1] = (GetUnixTime() + 6);
	    SetDynamicObjectRot(lv, 0.000000, 0.000000, 348.10229492188);
	    SetDynamicObjectRot(lv1, 0.000000, 0.000000, 169.43664550781);
	}
}

GetUnixTime()
{
    return gettime();
}
Toll_CloseToll(TollID)
{
	if(TollID == RichmanToll)
	{
        SetDynamicObjectRot(Richman, 0.000000, -90.000000, 23.81982421875);
	    SetDynamicObjectRot(Richman1, 0.000000, -90.000000, 214.37744140625);
	}
	else if(TollID == FlintToll)
	{
    	SetDynamicObjectRot(Flint, 0.000000, -90.000000, 270.67565917969);
    	SetDynamicObjectRot(Flint1,  0.000000, -90.000000, 87.337799072266);
	}
	else if(TollID == LVToll)
	{
    	SetDynamicObjectRot(lv, 0.000000, -90.000000, 348.10229492188);
    	SetDynamicObjectRot(lv1, 0.000000, -90.000000, 169.43664550781);
	}
}

